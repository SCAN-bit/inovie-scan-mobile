{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.INT32_MAX = undefined;\n  exports.deepEqual = deepEqual;\n  exports.hasProperty = hasProperty;\n  exports.isFabric = isFabric;\n  exports.isJestEnv = isJestEnv;\n  exports.isRemoteDebuggingEnabled = isRemoteDebuggingEnabled;\n  exports.tagMessage = tagMessage;\n  exports.toArray = toArray;\n  exports.withPrevAndCurrent = withPrevAndCurrent;\n  function toArray(object) {\n    if (!Array.isArray(object)) {\n      return [object];\n    }\n    return object;\n  }\n  function withPrevAndCurrent(array, mapFn) {\n    var previousArr = [null];\n    var currentArr = [...array];\n    var transformedArr = [];\n    currentArr.forEach((current, i) => {\n      // This type cast is fine and solves problem mentioned in https://github.com/software-mansion/react-native-gesture-handler/pull/2867 (namely that `previous` can be undefined).\n      // Unfortunately, linter on our CI does not allow this type of casting as it is unnecessary. To bypass that we use eslint-disable.\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n      var previous = previousArr[i];\n      var transformed = mapFn(previous, current);\n      previousArr.push(transformed);\n      transformedArr.push(transformed);\n    });\n    return transformedArr;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  function hasProperty(object, key) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n  }\n  function isJestEnv() {\n    // @ts-ignore Do not use `@types/node` because it will prioritise Node types over RN types which breaks the types (ex. setTimeout) in React Native projects.\n    return hasProperty(global, 'process') && !!process.env.JEST_WORKER_ID;\n  }\n  function tagMessage(msg) {\n    return `[react-native-gesture-handler] ${msg}`;\n  }\n\n  // Helper method to check whether Fabric is enabled, however global.nativeFabricUIManager\n  // may not be initialized before the first render\n  function isFabric() {\n    // @ts-expect-error nativeFabricUIManager is not yet included in the RN types\n    return !!global?.nativeFabricUIManager;\n  }\n  function isRemoteDebuggingEnabled() {\n    // react-native-reanimated checks if in remote debugging in the same way\n    // @ts-ignore global is available but node types are not included\n    var localGlobal = global;\n    return (!localGlobal.nativeCallSyncHook || !!localGlobal.__REMOTEDEV__) && !localGlobal.RN$Bridgeless;\n  }\n\n  /**\n   * Recursively compares two objects for deep equality.\n   *\n   * **Note:** This function does not support cyclic references.\n   *\n   * @param obj1 - The first object to compare.\n   * @param obj2 - The second object to compare.\n   * @returns `true` if the objects are deeply equal, `false` otherwise.\n   */\n  function deepEqual(obj1, obj2) {\n    if (obj1 === obj2) {\n      return true;\n    }\n    if (typeof obj1 !== 'object' || typeof obj2 !== 'object' || obj1 === null || obj2 === null) {\n      return false;\n    }\n    var keys1 = Object.keys(obj1);\n    var keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (var key of keys1) {\n      if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  var INT32_MAX = exports.INT32_MAX = 2147483647;\n});","lineCount":90,"map":[[14,2,1,7],[14,11,1,16,"toArray"],[14,18,1,23,"toArray"],[14,19,1,27,"object"],[14,25,1,42],[14,27,1,49],[15,4,2,2],[15,8,2,6],[15,9,2,7,"Array"],[15,14,2,12],[15,15,2,13,"isArray"],[15,22,2,20],[15,23,2,21,"object"],[15,29,2,27],[15,30,2,28],[15,32,2,30],[16,6,3,4],[16,13,3,11],[16,14,3,12,"object"],[16,20,3,18],[16,21,3,19],[17,4,4,2],[18,4,6,2],[18,11,6,9,"object"],[18,17,6,15],[19,2,7,0],[20,2,13,7],[20,11,13,16,"withPrevAndCurrent"],[20,29,13,34,"withPrevAndCurrent"],[20,30,14,2,"array"],[20,35,14,12],[20,37,15,2,"mapFn"],[20,42,15,48],[20,44,16,17],[21,4,17,2],[21,8,17,8,"previousArr"],[21,19,17,43],[21,22,17,46],[21,23,17,47],[21,27,17,51],[21,28,17,52],[22,4,18,2],[22,8,18,8,"currentArr"],[22,18,18,18],[22,21,18,21],[22,22,18,22],[22,25,18,25,"array"],[22,30,18,30],[22,31,18,31],[23,4,19,2],[23,8,19,8,"transformedArr"],[23,22,19,37],[23,25,19,40],[23,27,19,42],[24,4,20,2,"currentArr"],[24,14,20,12],[24,15,20,13,"forEach"],[24,22,20,20],[24,23,20,21],[24,24,20,22,"current"],[24,31,20,29],[24,33,20,31,"i"],[24,34,20,32],[24,39,20,37],[25,6,21,4],[26,6,22,4],[27,6,23,4],[28,6,24,4],[28,10,24,10,"previous"],[28,18,24,18],[28,21,24,21,"previousArr"],[28,32,24,32],[28,33,24,33,"i"],[28,34,24,34],[28,35,24,57],[29,6,25,4],[29,10,25,10,"transformed"],[29,21,25,21],[29,24,25,24,"mapFn"],[29,29,25,29],[29,30,25,30,"previous"],[29,38,25,38],[29,40,25,40,"current"],[29,47,25,47],[29,48,25,48],[30,6,26,4,"previousArr"],[30,17,26,15],[30,18,26,16,"push"],[30,22,26,20],[30,23,26,21,"transformed"],[30,34,26,32],[30,35,26,33],[31,6,27,4,"transformedArr"],[31,20,27,18],[31,21,27,19,"push"],[31,25,27,23],[31,26,27,24,"transformed"],[31,37,27,35],[31,38,27,36],[32,4,28,2],[32,5,28,3],[32,6,28,4],[33,4,29,2],[33,11,29,9,"transformedArr"],[33,25,29,23],[34,2,30,0],[36,2,32,0],[37,2,33,7],[37,11,33,16,"hasProperty"],[37,22,33,27,"hasProperty"],[37,23,33,28,"object"],[37,29,33,42],[37,31,33,44,"key"],[37,34,33,55],[37,36,33,57],[38,4,34,2],[38,11,34,9,"Object"],[38,17,34,15],[38,18,34,16,"prototype"],[38,27,34,25],[38,28,34,26,"hasOwnProperty"],[38,42,34,40],[38,43,34,41,"call"],[38,47,34,45],[38,48,34,46,"object"],[38,54,34,52],[38,56,34,54,"key"],[38,59,34,57],[38,60,34,58],[39,2,35,0],[40,2,37,7],[40,11,37,16,"isJestEnv"],[40,20,37,25,"isJestEnv"],[40,21,37,25],[40,23,37,37],[41,4,38,2],[42,4,39,2],[42,11,39,9,"hasProperty"],[42,22,39,20],[42,23,39,21,"global"],[42,29,39,27],[42,31,39,29],[42,40,39,38],[42,41,39,39],[42,45,39,43],[42,46,39,44],[42,47,39,45,"process"],[42,54,39,52],[42,55,39,53,"env"],[42,58,39,56],[42,59,39,57,"JEST_WORKER_ID"],[42,73,39,71],[43,2,40,0],[44,2,42,7],[44,11,42,16,"tagMessage"],[44,21,42,26,"tagMessage"],[44,22,42,27,"msg"],[44,25,42,38],[44,27,42,40],[45,4,43,2],[45,11,43,9],[45,45,43,43,"msg"],[45,48,43,46],[45,50,43,48],[46,2,44,0],[48,2,46,0],[49,2,47,0],[50,2,48,7],[50,11,48,16,"isFabric"],[50,19,48,24,"isFabric"],[50,20,48,24],[50,22,48,36],[51,4,49,2],[52,4,50,2],[52,11,50,9],[52,12,50,10],[52,13,50,11,"global"],[52,19,50,17],[52,21,50,19,"nativeFabricUIManager"],[52,42,50,40],[53,2,51,0],[54,2,53,7],[54,11,53,16,"isRemoteDebuggingEnabled"],[54,35,53,40,"isRemoteDebuggingEnabled"],[54,36,53,40],[54,38,53,52],[55,4,54,2],[56,4,55,2],[57,4,56,2],[57,8,56,8,"localGlobal"],[57,19,56,19],[57,22,56,22,"global"],[57,28,56,35],[58,4,57,2],[58,11,58,4],[58,12,58,5],[58,13,58,6,"localGlobal"],[58,24,58,17],[58,25,58,18,"nativeCallSyncHook"],[58,43,58,36],[58,47,58,40],[58,48,58,41],[58,49,58,42,"localGlobal"],[58,60,58,53],[58,61,58,54,"__REMOTEDEV__"],[58,74,58,67],[58,79,59,4],[58,80,59,5,"localGlobal"],[58,91,59,16],[58,92,59,17,"RN$Bridgeless"],[58,105,59,30],[59,2,61,0],[61,2,63,0],[62,0,64,0],[63,0,65,0],[64,0,66,0],[65,0,67,0],[66,0,68,0],[67,0,69,0],[68,0,70,0],[69,0,71,0],[70,2,72,7],[70,11,72,16,"deepEqual"],[70,20,72,25,"deepEqual"],[70,21,72,26,"obj1"],[70,25,72,35],[70,27,72,37,"obj2"],[70,31,72,46],[70,33,72,48],[71,4,73,2],[71,8,73,6,"obj1"],[71,12,73,10],[71,17,73,15,"obj2"],[71,21,73,19],[71,23,73,21],[72,6,74,4],[72,13,74,11],[72,17,74,15],[73,4,75,2],[74,4,77,2],[74,8,78,4],[74,15,78,11,"obj1"],[74,19,78,15],[74,24,78,20],[74,32,78,28],[74,36,79,4],[74,43,79,11,"obj2"],[74,47,79,15],[74,52,79,20],[74,60,79,28],[74,64,80,4,"obj1"],[74,68,80,8],[74,73,80,13],[74,77,80,17],[74,81,81,4,"obj2"],[74,85,81,8],[74,90,81,13],[74,94,81,17],[74,96,82,4],[75,6,83,4],[75,13,83,11],[75,18,83,16],[76,4,84,2],[77,4,86,2],[77,8,86,8,"keys1"],[77,13,86,13],[77,16,86,16,"Object"],[77,22,86,22],[77,23,86,23,"keys"],[77,27,86,27],[77,28,86,28,"obj1"],[77,32,86,32],[77,33,86,33],[78,4,87,2],[78,8,87,8,"keys2"],[78,13,87,13],[78,16,87,16,"Object"],[78,22,87,22],[78,23,87,23,"keys"],[78,27,87,27],[78,28,87,28,"obj2"],[78,32,87,32],[78,33,87,33],[79,4,89,2],[79,8,89,6,"keys1"],[79,13,89,11],[79,14,89,12,"length"],[79,20,89,18],[79,25,89,23,"keys2"],[79,30,89,28],[79,31,89,29,"length"],[79,37,89,35],[79,39,89,37],[80,6,90,4],[80,13,90,11],[80,18,90,16],[81,4,91,2],[82,4,93,2],[82,9,93,7],[82,13,93,13,"key"],[82,16,93,16],[82,20,93,20,"keys1"],[82,25,93,25],[82,27,93,27],[83,6,94,4],[83,10,94,8],[83,11,94,9,"keys2"],[83,16,94,14],[83,17,94,15,"includes"],[83,25,94,23],[83,26,94,24,"key"],[83,29,94,27],[83,30,94,28],[83,34,94,32],[83,35,94,33,"deepEqual"],[83,44,94,42],[83,45,94,43,"obj1"],[83,49,94,47],[83,50,94,48,"key"],[83,53,94,51],[83,54,94,52],[83,56,94,54,"obj2"],[83,60,94,58],[83,61,94,59,"key"],[83,64,94,62],[83,65,94,63],[83,66,94,64],[83,68,94,66],[84,8,95,6],[84,15,95,13],[84,20,95,18],[85,6,96,4],[86,4,97,2],[87,4,99,2],[87,11,99,9],[87,15,99,13],[88,2,100,0],[89,2,102,7],[89,6,102,13,"INT32_MAX"],[89,15,102,22],[89,18,102,22,"exports"],[89,25,102,22],[89,26,102,22,"INT32_MAX"],[89,35,102,22],[89,48,102,36],[90,0,102,37],[90,3]],"functionMap":{"names":["<global>","toArray","withPrevAndCurrent","currentArr.forEach$argument_0","hasProperty","isJestEnv","tagMessage","isFabric","isRemoteDebuggingEnabled","deepEqual"],"mappings":"AAA,OC;CDM;OEM;qBCO;GDQ;CFE;OIG;CJE;OKE;CLG;OME;CNE;OOI;CPG;OQE;CRQ;OSW;CT4B"}},"type":"js/module"}]}