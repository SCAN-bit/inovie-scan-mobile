{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":544,"column":0,"index":18954}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":544,"column":0,"index":18954}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":544,"column":0,"index":18954}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":544,"column":0,"index":18954}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":544,"column":0,"index":18954}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":544,"column":0,"index":18954}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react-native","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":7,"column":22,"index":133}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":8,"column":0,"index":134},"end":{"line":8,"column":66,"index":200}}],"key":"vmRYEuFc/HGKqlBRho945FzOchk="}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":9,"column":0,"index":201},"end":{"line":9,"column":63,"index":264}}],"key":"rPPmo2MLpjENsDg3Ww924PhFl60="}},{"name":"../State","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}}],"key":"Q8nOM11Vuvfos2IZ/lO9FOcbk+g="}},{"name":"./handlersRegistry","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":11,"column":0,"index":299},"end":{"line":11,"column":79,"index":378}}],"key":"uUSwkNM2LATozp8YVz2n0Z5NN80="}},{"name":"./getNextHandlerTag","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":12,"column":0,"index":379},"end":{"line":12,"column":56,"index":435}}],"key":"v3eA4aozTEnL6g0DCmxSBxnkAlg="}},{"name":"./utils","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":19,"column":0,"index":549},"end":{"line":19,"column":80,"index":629}}],"key":"FH4oXkS7WdR5kG0v+Eku8TWcu80="}},{"name":"../utils","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":21,"column":0,"index":670},"end":{"line":21,"column":70,"index":740}}],"key":"wnEVYE0exYilYcCniP5DP5xdv08="}},{"name":"../ActionType","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":22,"column":0,"index":741},"end":{"line":22,"column":43,"index":784}}],"key":"LmEMEJoPv7O/xrjLPCSpnXXLsmw="}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":23,"column":0,"index":785},"end":{"line":23,"column":64,"index":849}}],"key":"wCWp40DPaNOojL98kp8kbUGtKUU="}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":24,"column":0,"index":850},"end":{"line":24,"column":77,"index":927}}],"key":"b0tOsb2A94qxSbRbtD/BktBFznI="}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":25,"column":0,"index":928},"end":{"line":25,"column":55,"index":983}}],"key":"TTQQP3RHvuVHAscADKbtBNLPyaU="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":544,"column":0,"index":18954}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2]));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(_dependencyMap[3]));\n  var _getPrototypeOf2 = _interopRequireDefault(require(_dependencyMap[4]));\n  var _inherits2 = _interopRequireDefault(require(_dependencyMap[5]));\n  var React = _interopRequireWildcard(require(_dependencyMap[6]));\n  var _reactNative = require(_dependencyMap[7]);\n  var _customDirectEventTypes = require(_dependencyMap[8]);\n  var _RNGestureHandlerModule = _interopRequireDefault(require(_dependencyMap[9]));\n  var _State = require(_dependencyMap[10]);\n  var _handlersRegistry = require(_dependencyMap[11]);\n  var _getNextHandlerTag = require(_dependencyMap[12]);\n  var _utils = require(_dependencyMap[13]);\n  var _utils2 = require(_dependencyMap[14]);\n  var _ActionType = require(_dependencyMap[15]);\n  var _PressabilityDebugView = require(_dependencyMap[16]);\n  var _GestureHandlerRootViewContext = _interopRequireDefault(require(_dependencyMap[17]));\n  var _ghQueueMicrotask = require(_dependencyMap[18]);\n  var _jsxRuntime = require(_dependencyMap[19]);\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); }\n  var UIManagerAny = _reactNative.UIManager;\n  _customDirectEventTypes.customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  var customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  var customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    },\n    // When using React Native Gesture Handler for Animated.event with useNativeDriver: true\n    // on Android with Fabric enabled, the native part still sends the native events to JS\n    // but prefixed with \"top\". We cannot simply rename the events above so they are prefixed\n    // with \"top\" instead of \"on\" because in such case Animated.events would not be registered.\n    // That's why we need to register another pair of event names.\n    // The incoming events will be queued but never handled.\n    // Without this piece of code below, you'll get the following JS error:\n    // Unsupported top level event type \"topOnGestureHandlerEvent\" dispatched\n    ...((0, _utils2.isFabric)() && true && customGHEventsConfigFabricAndroid)\n  };\n\n  // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n  UIManagerAny.genericDirectEventTypes = {\n    ...UIManagerAny.genericDirectEventTypes,\n    ...customGHEventsConfig\n  };\n  // In newer versions of RN the `genericDirectEventTypes` is located in the object\n  // returned by UIManager.getViewManagerConfig('getConstants') or in older RN UIManager.getConstants(), we need to add it there as well to make\n  // it compatible with RN 61+\n  var UIManagerConstants = UIManagerAny.getViewManagerConfig?.('getConstants') ?? UIManagerAny.getConstants?.();\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = {\n      ...UIManagerConstants.genericDirectEventTypes,\n      ...customGHEventsConfig\n    };\n  }\n\n  // Wrap JS responder calls and notify gesture handler manager\n  var _UIManagerAny$setJSRe = UIManagerAny.setJSResponder,\n    oldSetJSResponder = _UIManagerAny$setJSRe === undefined ? () => {\n      // no-op\n    } : _UIManagerAny$setJSRe,\n    _UIManagerAny$clearJS = UIManagerAny.clearJSResponder,\n    oldClearJSResponder = _UIManagerAny$clearJS === undefined ? () => {\n      // no-op\n    } : _UIManagerAny$clearJS;\n  UIManagerAny.setJSResponder = (tag, blockNativeResponder) => {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = () => {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  var allowTouches = true;\n  var DEV_ON_ANDROID = false;\n  // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    var extract = refs => {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(r => r && r.current === null);\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  var stateToPropMappings = {\n    [_State.State.UNDETERMINED]: undefined,\n    [_State.State.BEGAN]: 'onBegan',\n    [_State.State.FAILED]: 'onFailed',\n    [_State.State.CANCELLED]: 'onCancelled',\n    [_State.State.ACTIVE]: 'onActivated',\n    [_State.State.END]: 'onEnded'\n  };\n\n  // TODO(TS) fix event types\n\n  var UNRESOLVED_REFS_RETRY_LIMIT = 1;\n\n  // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n  function createHandler(_ref) {\n    var name = _ref.name,\n      _ref$allowedProps = _ref.allowedProps,\n      allowedProps = _ref$allowedProps === undefined ? [] : _ref$allowedProps,\n      _ref$config = _ref.config,\n      config = _ref$config === undefined ? {} : _ref$config,\n      transformProps = _ref.transformProps,\n      _ref$customNativeProp = _ref.customNativeProps,\n      customNativeProps = _ref$customNativeProp === undefined ? [] : _ref$customNativeProp;\n    var Handler = /*#__PURE__*/function (_React$Component) {\n      function Handler(props) {\n        var _this;\n        (0, _classCallCheck2.default)(this, Handler);\n        _this = _callSuper(this, Handler, [props]);\n        _this.onGestureHandlerEvent = event => {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onGestureEvent === 'function') {\n              _this.props.onGestureEvent?.(event);\n            }\n          } else {\n            _this.props.onGestureHandlerEvent?.(event);\n          }\n        };\n        // TODO(TS) - make sure this is right type for event\n        _this.onGestureHandlerStateChange = event => {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onHandlerStateChange === 'function') {\n              _this.props.onHandlerStateChange?.(event);\n            }\n            var state = event.nativeEvent.state;\n            var stateEventName = stateToPropMappings[state];\n            var eventHandler = stateEventName && _this.props[stateEventName];\n            if (eventHandler && typeof eventHandler === 'function') {\n              eventHandler(event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange?.(event);\n          }\n        };\n        _this.refHandler = node => {\n          _this.viewNode = node;\n          var child = React.Children.only(_this.props.children);\n          // TODO(TS) fix ref type\n          var ref = child.ref;\n          if (ref !== null) {\n            if (typeof ref === 'function') {\n              ref(node);\n            } else {\n              ref.current = node;\n            }\n          }\n        };\n        _this.createGestureHandler = newConfig => {\n          _this.config = newConfig;\n          _RNGestureHandlerModule.default.createGestureHandler(name, _this.handlerTag, newConfig);\n        };\n        _this.attachGestureHandler = newViewTag => {\n          _this.viewTag = newViewTag;\n          {\n            (0, _handlersRegistry.registerOldGestureHandler)(_this.handlerTag, {\n              onGestureEvent: _this.onGestureHandlerEvent,\n              onGestureStateChange: _this.onGestureHandlerStateChange\n            });\n            var actionType = (() => {\n              var onGestureEvent = _this.props?.onGestureEvent;\n              var isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n              var onHandlerStateChange = _this.props?.onHandlerStateChange;\n              var isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n              var isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n              if (isReanimatedHandler) {\n                // Reanimated worklet\n                return _ActionType.ActionType.REANIMATED_WORKLET;\n              } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n                // Animated.event with useNativeDriver: true\n                return _ActionType.ActionType.NATIVE_ANIMATED_EVENT;\n              } else {\n                // JS callback or Animated.event with useNativeDriver: false\n                return _ActionType.ActionType.JS_FUNCTION_OLD_API;\n              }\n            })();\n            _RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, actionType);\n          }\n          (0, _utils.scheduleFlushOperations)();\n        };\n        _this.updateGestureHandler = newConfig => {\n          _this.config = newConfig;\n          _RNGestureHandlerModule.default.updateGestureHandler(_this.handlerTag, newConfig);\n          (0, _utils.scheduleFlushOperations)();\n        };\n        _this.handlerTag = (0, _getNextHandlerTag.getNextHandlerTag)();\n        _this.config = {};\n        _this.propsRef = /*#__PURE__*/React.createRef();\n        _this.isMountedRef = /*#__PURE__*/React.createRef();\n        _this.state = {\n          allowTouches\n        };\n        if (props.id) {\n          if (_handlersRegistry.handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _handlersRegistry.handlerIDToTag[props.id] = _this.handlerTag;\n        }\n        return _this;\n      }\n      (0, _inherits2.default)(Handler, _React$Component);\n      return (0, _createClass2.default)(Handler, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var props = this.props;\n          this.isMountedRef.current = true;\n          if (hasUnresolvedRefs(props)) {\n            // If there are unresolved refs (e.g. \".current\" has not yet been set)\n            // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n            // _update method that will try to update native handler props using\n            // queueMicrotask. This makes it so update() function gets called after all\n            // react components are mounted and we expect the missing ref object to\n            // be resolved by then.\n            (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n              this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          this.createGestureHandler((0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config));\n          this.attachGestureHandler((0, _utils.findNodeHandle)(this.viewNode)); // TODO(TS) - check if this can be null\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = (0, _utils.findNodeHandle)(this.viewNode);\n          if (this.viewTag !== viewTag) {\n            this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n          }\n          this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          this.inspectorToggleListener?.remove();\n          this.isMountedRef.current = false;\n          _RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n          (0, _utils.scheduleFlushOperations)();\n          // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n          var handlerID = this.props.id;\n          if (handlerID) {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete _handlersRegistry.handlerIDToTag[handlerID];\n          }\n        }\n      }, {\n        key: \"update\",\n        value: function update(remainingTries) {\n          if (!this.isMountedRef.current) {\n            return;\n          }\n          var props = this.props;\n\n          // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n          // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n          // again is easy enough fix.\n          if (hasUnresolvedRefs(props) && remainingTries > 0) {\n            (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n              this.update(remainingTries - 1);\n            });\n          } else {\n            var newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config);\n            if (!(0, _utils2.deepEqual)(this.config, newConfig)) {\n              this.updateGestureHandler(newConfig);\n            }\n          }\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = {\n            ...this.props,\n            ...updates\n          };\n          var newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [...allowedProps, ...customNativeProps], config);\n          this.updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var gestureEventHandler = this.onGestureHandlerEvent;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props = this.props,\n            onGestureEvent = _this$props.onGestureEvent,\n            onGestureHandlerEvent = _this$props.onGestureHandlerEvent;\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureEventHandler = onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var gestureStateEventHandler = this.onGestureHandlerStateChange;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props2 = this.props,\n            onHandlerStateChange = _this$props2.onHandlerStateChange,\n            onGestureHandlerStateChange = _this$props2.onGestureHandlerStateChange;\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureStateEventHandler = onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var events = {\n            onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n            onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n          };\n          this.propsRef.current = events;\n          var child = null;\n          try {\n            child = React.Children.only(this.props.children);\n          } catch (e) {\n            throw new Error((0, _utils2.tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n          }\n          var grandChildren = child.props.children;\n          return /*#__PURE__*/React.cloneElement(child, {\n            ref: this.refHandler,\n            collapsable: false,\n            ...((0, _utils2.isJestEnv)() ? {\n              handlerType: name,\n              handlerTag: this.handlerTag,\n              enabled: this.props.enabled\n            } : {}),\n            testID: this.props.testID ?? child.props.testID,\n            ...events\n          }, grandChildren);\n        }\n      }]);\n    }(React.Component);\n    Handler.displayName = name;\n    Handler.contextType = _GestureHandlerRootViewContext.default;\n    return Handler;\n  }\n});","lineCount":374,"map":[[12,2,1,0],[12,6,1,0,"React"],[12,11,1,0],[12,14,1,0,"_interopRequireWildcard"],[12,37,1,0],[12,38,1,0,"require"],[12,45,1,0],[12,46,1,0,"_dependencyMap"],[12,60,1,0],[13,2,2,0],[13,6,2,0,"_reactNative"],[13,18,2,0],[13,21,2,0,"require"],[13,28,2,0],[13,29,2,0,"_dependencyMap"],[13,43,2,0],[14,2,8,0],[14,6,8,0,"_customDirectEventTypes"],[14,29,8,0],[14,32,8,0,"require"],[14,39,8,0],[14,40,8,0,"_dependencyMap"],[14,54,8,0],[15,2,9,0],[15,6,9,0,"_RNGestureHandlerModule"],[15,29,9,0],[15,32,9,0,"_interopRequireDefault"],[15,54,9,0],[15,55,9,0,"require"],[15,62,9,0],[15,63,9,0,"_dependencyMap"],[15,77,9,0],[16,2,10,0],[16,6,10,0,"_State"],[16,12,10,0],[16,15,10,0,"require"],[16,22,10,0],[16,23,10,0,"_dependencyMap"],[16,37,10,0],[17,2,11,0],[17,6,11,0,"_handlersRegistry"],[17,23,11,0],[17,26,11,0,"require"],[17,33,11,0],[17,34,11,0,"_dependencyMap"],[17,48,11,0],[18,2,12,0],[18,6,12,0,"_getNextHandlerTag"],[18,24,12,0],[18,27,12,0,"require"],[18,34,12,0],[18,35,12,0,"_dependencyMap"],[18,49,12,0],[19,2,19,0],[19,6,19,0,"_utils"],[19,12,19,0],[19,15,19,0,"require"],[19,22,19,0],[19,23,19,0,"_dependencyMap"],[19,37,19,0],[20,2,21,0],[20,6,21,0,"_utils2"],[20,13,21,0],[20,16,21,0,"require"],[20,23,21,0],[20,24,21,0,"_dependencyMap"],[20,38,21,0],[21,2,22,0],[21,6,22,0,"_ActionType"],[21,17,22,0],[21,20,22,0,"require"],[21,27,22,0],[21,28,22,0,"_dependencyMap"],[21,42,22,0],[22,2,23,0],[22,6,23,0,"_PressabilityDebugView"],[22,28,23,0],[22,31,23,0,"require"],[22,38,23,0],[22,39,23,0,"_dependencyMap"],[22,53,23,0],[23,2,24,0],[23,6,24,0,"_GestureHandlerRootViewContext"],[23,36,24,0],[23,39,24,0,"_interopRequireDefault"],[23,61,24,0],[23,62,24,0,"require"],[23,69,24,0],[23,70,24,0,"_dependencyMap"],[23,84,24,0],[24,2,25,0],[24,6,25,0,"_ghQueueMicrotask"],[24,23,25,0],[24,26,25,0,"require"],[24,33,25,0],[24,34,25,0,"_dependencyMap"],[24,48,25,0],[25,2,25,55],[25,6,25,55,"_jsxRuntime"],[25,17,25,55],[25,20,25,55,"require"],[25,27,25,55],[25,28,25,55,"_dependencyMap"],[25,42,25,55],[26,2,25,55],[26,11,25,55,"_interopRequireWildcard"],[26,35,25,55,"e"],[26,36,25,55],[26,38,25,55,"t"],[26,39,25,55],[26,68,25,55,"WeakMap"],[26,75,25,55],[26,81,25,55,"r"],[26,82,25,55],[26,89,25,55,"WeakMap"],[26,96,25,55],[26,100,25,55,"n"],[26,101,25,55],[26,108,25,55,"WeakMap"],[26,115,25,55],[26,127,25,55,"_interopRequireWildcard"],[26,150,25,55],[26,162,25,55,"_interopRequireWildcard"],[26,163,25,55,"e"],[26,164,25,55],[26,166,25,55,"t"],[26,167,25,55],[26,176,25,55,"t"],[26,177,25,55],[26,181,25,55,"e"],[26,182,25,55],[26,186,25,55,"e"],[26,187,25,55],[26,188,25,55,"__esModule"],[26,198,25,55],[26,207,25,55,"e"],[26,208,25,55],[26,214,25,55,"o"],[26,215,25,55],[26,217,25,55,"i"],[26,218,25,55],[26,220,25,55,"f"],[26,221,25,55],[26,226,25,55,"__proto__"],[26,235,25,55],[26,243,25,55,"default"],[26,250,25,55],[26,252,25,55,"e"],[26,253,25,55],[26,270,25,55,"e"],[26,271,25,55],[26,294,25,55,"e"],[26,295,25,55],[26,320,25,55,"e"],[26,321,25,55],[26,330,25,55,"f"],[26,331,25,55],[26,337,25,55,"o"],[26,338,25,55],[26,341,25,55,"t"],[26,342,25,55],[26,345,25,55,"n"],[26,346,25,55],[26,349,25,55,"r"],[26,350,25,55],[26,358,25,55,"o"],[26,359,25,55],[26,360,25,55,"has"],[26,363,25,55],[26,364,25,55,"e"],[26,365,25,55],[26,375,25,55,"o"],[26,376,25,55],[26,377,25,55,"get"],[26,380,25,55],[26,381,25,55,"e"],[26,382,25,55],[26,385,25,55,"o"],[26,386,25,55],[26,387,25,55,"set"],[26,390,25,55],[26,391,25,55,"e"],[26,392,25,55],[26,394,25,55,"f"],[26,395,25,55],[26,409,25,55,"_t"],[26,411,25,55],[26,415,25,55,"e"],[26,416,25,55],[26,432,25,55,"_t"],[26,434,25,55],[26,441,25,55,"hasOwnProperty"],[26,455,25,55],[26,456,25,55,"call"],[26,460,25,55],[26,461,25,55,"e"],[26,462,25,55],[26,464,25,55,"_t"],[26,466,25,55],[26,473,25,55,"i"],[26,474,25,55],[26,478,25,55,"o"],[26,479,25,55],[26,482,25,55,"Object"],[26,488,25,55],[26,489,25,55,"defineProperty"],[26,503,25,55],[26,508,25,55,"Object"],[26,514,25,55],[26,515,25,55,"getOwnPropertyDescriptor"],[26,539,25,55],[26,540,25,55,"e"],[26,541,25,55],[26,543,25,55,"_t"],[26,545,25,55],[26,552,25,55,"i"],[26,553,25,55],[26,554,25,55,"get"],[26,557,25,55],[26,561,25,55,"i"],[26,562,25,55],[26,563,25,55,"set"],[26,566,25,55],[26,570,25,55,"o"],[26,571,25,55],[26,572,25,55,"f"],[26,573,25,55],[26,575,25,55,"_t"],[26,577,25,55],[26,579,25,55,"i"],[26,580,25,55],[26,584,25,55,"f"],[26,585,25,55],[26,586,25,55,"_t"],[26,588,25,55],[26,592,25,55,"e"],[26,593,25,55],[26,594,25,55,"_t"],[26,596,25,55],[26,607,25,55,"f"],[26,608,25,55],[26,613,25,55,"e"],[26,614,25,55],[26,616,25,55,"t"],[26,617,25,55],[27,2,25,55],[27,11,25,55,"_callSuper"],[27,22,25,55,"t"],[27,23,25,55],[27,25,25,55,"o"],[27,26,25,55],[27,28,25,55,"e"],[27,29,25,55],[27,40,25,55,"o"],[27,41,25,55],[27,48,25,55,"_getPrototypeOf2"],[27,64,25,55],[27,65,25,55,"default"],[27,72,25,55],[27,74,25,55,"o"],[27,75,25,55],[27,82,25,55,"_possibleConstructorReturn2"],[27,109,25,55],[27,110,25,55,"default"],[27,117,25,55],[27,119,25,55,"t"],[27,120,25,55],[27,122,25,55,"_isNativeReflectConstruct"],[27,147,25,55],[27,152,25,55,"Reflect"],[27,159,25,55],[27,160,25,55,"construct"],[27,169,25,55],[27,170,25,55,"o"],[27,171,25,55],[27,173,25,55,"e"],[27,174,25,55],[27,186,25,55,"_getPrototypeOf2"],[27,202,25,55],[27,203,25,55,"default"],[27,210,25,55],[27,212,25,55,"t"],[27,213,25,55],[27,215,25,55,"constructor"],[27,226,25,55],[27,230,25,55,"o"],[27,231,25,55],[27,232,25,55,"apply"],[27,237,25,55],[27,238,25,55,"t"],[27,239,25,55],[27,241,25,55,"e"],[27,242,25,55],[28,2,25,55],[28,11,25,55,"_isNativeReflectConstruct"],[28,37,25,55],[28,51,25,55,"t"],[28,52,25,55],[28,56,25,55,"Boolean"],[28,63,25,55],[28,64,25,55,"prototype"],[28,73,25,55],[28,74,25,55,"valueOf"],[28,81,25,55],[28,82,25,55,"call"],[28,86,25,55],[28,87,25,55,"Reflect"],[28,94,25,55],[28,95,25,55,"construct"],[28,104,25,55],[28,105,25,55,"Boolean"],[28,112,25,55],[28,145,25,55,"t"],[28,146,25,55],[28,159,25,55,"_isNativeReflectConstruct"],[28,184,25,55],[28,196,25,55,"_isNativeReflectConstruct"],[28,197,25,55],[28,210,25,55,"t"],[28,211,25,55],[29,2,27,0],[29,6,27,6,"UIManagerAny"],[29,18,27,18],[29,21,27,21,"UIManager"],[29,43,27,37],[30,2,29,0,"customDirectEventTypes"],[30,48,29,22],[30,49,29,23,"topGestureHandlerEvent"],[30,71,29,45],[30,74,29,48],[31,4,30,2,"registrationName"],[31,20,30,18],[31,22,30,20],[32,2,31,0],[32,3,31,1],[33,2,33,0],[33,6,33,6,"customGHEventsConfigFabricAndroid"],[33,39,33,39],[33,42,33,42],[34,4,34,2,"topOnGestureHandlerEvent"],[34,28,34,26],[34,30,34,28],[35,6,34,30,"registrationName"],[35,22,34,46],[35,24,34,48],[36,4,34,72],[36,5,34,73],[37,4,35,2,"topOnGestureHandlerStateChange"],[37,34,35,32],[37,36,35,34],[38,6,36,4,"registrationName"],[38,22,36,20],[38,24,36,22],[39,4,37,2],[40,2,38,0],[40,3,38,1],[41,2,40,0],[41,6,40,6,"customGHEventsConfig"],[41,26,40,26],[41,29,40,29],[42,4,41,2,"onGestureHandlerEvent"],[42,25,41,23],[42,27,41,25],[43,6,41,27,"registrationName"],[43,22,41,43],[43,24,41,45],[44,4,41,69],[44,5,41,70],[45,4,42,2,"onGestureHandlerStateChange"],[45,31,42,29],[45,33,42,31],[46,6,43,4,"registrationName"],[46,22,43,20],[46,24,43,22],[47,4,44,2],[47,5,44,3],[48,4,46,2],[49,4,47,2],[50,4,48,2],[51,4,49,2],[52,4,50,2],[53,4,51,2],[54,4,52,2],[55,4,53,2],[56,4,54,2],[56,8,54,6],[56,12,54,6,"isFabric"],[56,28,54,14],[56,30,54,15],[56,31,54,16],[56,39,55,29],[56,43,56,4,"customGHEventsConfigFabricAndroid"],[56,76,56,37],[57,2,57,0],[57,3,57,1],[59,2,59,0],[60,2,60,0],[61,2,61,0],[62,2,62,0],[63,2,63,0,"UIManagerAny"],[63,14,63,12],[63,15,63,13,"genericDirectEventTypes"],[63,38,63,36],[63,41,63,39],[64,4,64,2],[64,7,64,5,"UIManagerAny"],[64,19,64,17],[64,20,64,18,"genericDirectEventTypes"],[64,43,64,41],[65,4,65,2],[65,7,65,5,"customGHEventsConfig"],[66,2,66,0],[66,3,66,1],[67,2,67,0],[68,2,68,0],[69,2,69,0],[70,2,70,0],[70,6,70,6,"UIManagerConstants"],[70,24,70,24],[70,27,71,2,"UIManagerAny"],[70,39,71,14],[70,40,71,15,"getViewManagerConfig"],[70,60,71,35],[70,63,71,38],[70,77,71,52],[70,78,71,53],[70,82,72,2,"UIManagerAny"],[70,94,72,14],[70,95,72,15,"getConstants"],[70,107,72,27],[70,110,72,30],[70,111,72,31],[71,2,74,0],[71,6,74,4,"UIManagerConstants"],[71,24,74,22],[71,26,74,24],[72,4,75,2,"UIManagerConstants"],[72,22,75,20],[72,23,75,21,"genericDirectEventTypes"],[72,46,75,44],[72,49,75,47],[73,6,76,4],[73,9,76,7,"UIManagerConstants"],[73,27,76,25],[73,28,76,26,"genericDirectEventTypes"],[73,51,76,49],[74,6,77,4],[74,9,77,7,"customGHEventsConfig"],[75,4,78,2],[75,5,78,3],[76,2,79,0],[78,2,81,0],[79,2,82,0],[79,6,82,0,"_UIManagerAny$setJSRe"],[79,27,82,0],[79,30,89,4,"UIManagerAny"],[79,42,89,16],[79,43,83,2,"setJSResponder"],[79,57,83,16],[80,4,83,18,"oldSetJSResponder"],[80,21,83,35],[80,24,83,35,"_UIManagerAny$setJSRe"],[80,45,83,35],[80,50,83,35,"undefined"],[80,59,83,35],[80,62,83,38],[80,68,83,44],[81,6,84,4],[82,4,84,4],[82,5,85,3],[82,8,85,3,"_UIManagerAny$setJSRe"],[82,29,85,3],[83,4,85,3,"_UIManagerAny$clearJS"],[83,25,85,3],[83,28,89,4,"UIManagerAny"],[83,40,89,16],[83,41,86,2,"clearJSResponder"],[83,57,86,18],[84,4,86,20,"oldClearJSResponder"],[84,23,86,39],[84,26,86,39,"_UIManagerAny$clearJS"],[84,47,86,39],[84,52,86,39,"undefined"],[84,61,86,39],[84,64,86,42],[84,70,86,48],[85,6,87,4],[86,4,87,4],[86,5,88,3],[86,8,88,3,"_UIManagerAny$clearJS"],[86,29,88,3],[87,2,90,0,"UIManagerAny"],[87,14,90,12],[87,15,90,13,"setJSResponder"],[87,29,90,27],[87,32,90,30],[87,33,90,31,"tag"],[87,36,90,42],[87,38,90,44,"blockNativeResponder"],[87,58,90,73],[87,63,90,78],[88,4,91,2,"RNGestureHandlerModule"],[88,35,91,24],[88,36,91,25,"handleSetJSResponder"],[88,56,91,45],[88,57,91,46,"tag"],[88,60,91,49],[88,62,91,51,"blockNativeResponder"],[88,82,91,71],[88,83,91,72],[89,4,92,2,"oldSetJSResponder"],[89,21,92,19],[89,22,92,20,"tag"],[89,25,92,23],[89,27,92,25,"blockNativeResponder"],[89,47,92,45],[89,48,92,46],[90,2,93,0],[90,3,93,1],[91,2,94,0,"UIManagerAny"],[91,14,94,12],[91,15,94,13,"clearJSResponder"],[91,31,94,29],[91,34,94,32],[91,40,94,38],[92,4,95,2,"RNGestureHandlerModule"],[92,35,95,24],[92,36,95,25,"handleClearJSResponder"],[92,58,95,47],[92,59,95,48],[92,60,95,49],[93,4,96,2,"oldClearJSResponder"],[93,23,96,21],[93,24,96,22],[93,25,96,23],[94,2,97,0],[94,3,97,1],[95,2,99,0],[95,6,99,4,"allowTouches"],[95,18,99,16],[95,21,99,19],[95,25,99,23],[96,2,100,0],[96,6,100,6,"DEV_ON_ANDROID"],[96,20,100,20],[96,28,100,59],[97,2,101,0],[98,2,102,0],[100,2,112,0],[100,11,112,9,"hasUnresolvedRefs"],[100,28,112,26,"hasUnresolvedRefs"],[100,29,113,2,"props"],[100,34,113,24],[100,36,114,2],[101,4,115,2],[102,4,116,2],[102,8,116,8,"extract"],[102,15,116,15],[102,18,116,19,"refs"],[102,22,116,36],[102,26,116,41],[103,6,117,4],[103,10,117,8],[103,11,117,9,"Array"],[103,16,117,14],[103,17,117,15,"isArray"],[103,24,117,22],[103,25,117,23,"refs"],[103,29,117,27],[103,30,117,28],[103,32,117,30],[104,8,118,6],[104,15,118,13,"refs"],[104,19,118,17],[104,23,118,21,"refs"],[104,27,118,25],[104,28,118,26,"current"],[104,35,118,33],[104,40,118,38],[104,44,118,42],[105,6,119,4],[106,6,120,4],[106,13,120,11,"refs"],[106,17,120,15],[106,18,120,16,"some"],[106,22,120,20],[106,23,120,22,"r"],[106,24,120,23],[106,28,120,28,"r"],[106,29,120,29],[106,33,120,33,"r"],[106,34,120,34],[106,35,120,35,"current"],[106,42,120,42],[106,47,120,47],[106,51,120,51],[106,52,120,52],[107,4,121,2],[107,5,121,3],[108,4,122,2],[108,11,122,9,"extract"],[108,18,122,16],[108,19,122,17,"props"],[108,24,122,22],[108,25,122,23],[108,47,122,45],[108,48,122,46],[108,49,122,47],[108,53,122,51,"extract"],[108,60,122,58],[108,61,122,59,"props"],[108,66,122,64],[108,67,122,65],[108,76,122,74],[108,77,122,75],[108,78,122,76],[109,2,123,0],[110,2,125,0],[110,6,125,6,"stateToPropMappings"],[110,25,125,25],[110,28,125,28],[111,4,126,2],[111,5,126,3,"State"],[111,17,126,8],[111,18,126,9,"UNDETERMINED"],[111,30,126,21],[111,33,126,24,"undefined"],[111,42,126,33],[112,4,127,2],[112,5,127,3,"State"],[112,17,127,8],[112,18,127,9,"BEGAN"],[112,23,127,14],[112,26,127,17],[112,35,127,26],[113,4,128,2],[113,5,128,3,"State"],[113,17,128,8],[113,18,128,9,"FAILED"],[113,24,128,15],[113,27,128,18],[113,37,128,28],[114,4,129,2],[114,5,129,3,"State"],[114,17,129,8],[114,18,129,9,"CANCELLED"],[114,27,129,18],[114,30,129,21],[114,43,129,34],[115,4,130,2],[115,5,130,3,"State"],[115,17,130,8],[115,18,130,9,"ACTIVE"],[115,24,130,15],[115,27,130,18],[115,40,130,31],[116,4,131,2],[116,5,131,3,"State"],[116,17,131,8],[116,18,131,9,"END"],[116,21,131,12],[116,24,131,15],[117,2,132,0],[117,3,132,10],[119,2,143,0],[121,2,157,0],[121,6,157,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[121,33,157,33],[121,36,157,36],[121,37,157,37],[123,2,159,0],[124,2,160,15],[124,11,160,24,"createHandler"],[124,24,160,37,"createHandler"],[124,25,160,37,"_ref"],[124,29,160,37],[124,31,169,76],[125,4,169,76],[125,8,164,2,"name"],[125,12,164,6],[125,15,164,6,"_ref"],[125,19,164,6],[125,20,164,2,"name"],[125,24,164,6],[126,6,164,6,"_ref$allowedProps"],[126,23,164,6],[126,26,164,6,"_ref"],[126,30,164,6],[126,31,165,2,"allowedProps"],[126,43,165,14],[127,6,165,2,"allowedProps"],[127,18,165,14],[127,21,165,14,"_ref$allowedProps"],[127,38,165,14],[127,43,165,14,"undefined"],[127,52,165,14],[127,55,165,17],[127,57,165,19],[127,60,165,19,"_ref$allowedProps"],[127,77,165,19],[128,6,165,19,"_ref$config"],[128,17,165,19],[128,20,165,19,"_ref"],[128,24,165,19],[128,25,166,2,"config"],[128,31,166,8],[129,6,166,2,"config"],[129,12,166,8],[129,15,166,8,"_ref$config"],[129,26,166,8],[129,31,166,8,"undefined"],[129,40,166,8],[129,43,166,11],[129,44,166,12],[129,45,166,13],[129,48,166,13,"_ref$config"],[129,59,166,13],[130,6,167,2,"transformProps"],[130,20,167,16],[130,23,167,16,"_ref"],[130,27,167,16],[130,28,167,2,"transformProps"],[130,42,167,16],[131,6,167,16,"_ref$customNativeProp"],[131,27,167,16],[131,30,167,16,"_ref"],[131,34,167,16],[131,35,168,2,"customNativeProps"],[131,52,168,19],[132,6,168,2,"customNativeProps"],[132,23,168,19],[132,26,168,19,"_ref$customNativeProp"],[132,47,168,19],[132,52,168,19,"undefined"],[132,61,168,19],[132,64,168,22],[132,66,168,24],[132,69,168,24,"_ref$customNativeProp"],[132,90,168,24],[133,4,168,24],[133,8,173,8,"Handler"],[133,15,173,15],[133,41,173,15,"_React$Component"],[133,57,173,15],[134,6,188,4],[134,15,188,4,"Handler"],[134,23,188,16,"props"],[134,28,188,48],[134,30,188,50],[135,8,188,50],[135,12,188,50,"_this"],[135,17,188,50],[136,8,188,50],[136,12,188,50,"_classCallCheck2"],[136,28,188,50],[136,29,188,50,"default"],[136,36,188,50],[136,44,188,50,"Handler"],[136,51,188,50],[137,8,189,6,"_this"],[137,13,189,6],[137,16,189,6,"_callSuper"],[137,26,189,6],[137,33,189,6,"Handler"],[137,40,189,6],[137,43,189,12,"props"],[137,48,189,17],[138,8,189,19,"_this"],[138,13,189,19],[138,14,260,12,"onGestureHandlerEvent"],[138,35,260,33],[138,38,260,37,"event"],[138,43,260,59],[138,47,260,64],[139,10,261,6],[139,14,261,10,"event"],[139,19,261,15],[139,20,261,16,"nativeEvent"],[139,31,261,27],[139,32,261,28,"handlerTag"],[139,42,261,38],[139,47,261,43,"_this"],[139,52,261,43],[139,53,261,48,"handlerTag"],[139,63,261,58],[139,65,261,60],[140,12,262,8],[140,16,262,12],[140,23,262,19,"_this"],[140,28,262,19],[140,29,262,24,"props"],[140,34,262,29],[140,35,262,30,"onGestureEvent"],[140,49,262,44],[140,54,262,49],[140,64,262,59],[140,66,262,61],[141,14,263,10,"_this"],[141,19,263,10],[141,20,263,15,"props"],[141,25,263,20],[141,26,263,21,"onGestureEvent"],[141,40,263,35],[141,43,263,38,"event"],[141,48,263,43],[141,49,263,44],[142,12,264,8],[143,10,265,6],[143,11,265,7],[143,17,265,13],[144,12,266,8,"_this"],[144,17,266,8],[144,18,266,13,"props"],[144,23,266,18],[144,24,266,19,"onGestureHandlerEvent"],[144,45,266,40],[144,48,266,43,"event"],[144,53,266,48],[144,54,266,49],[145,10,267,6],[146,8,268,4],[146,9,268,5],[147,8,270,4],[148,8,270,4,"_this"],[148,13,270,4],[148,14,271,12,"onGestureHandlerStateChange"],[148,41,271,39],[148,44,272,6,"event"],[148,49,272,39],[148,53,273,9],[149,10,274,6],[149,14,274,10,"event"],[149,19,274,15],[149,20,274,16,"nativeEvent"],[149,31,274,27],[149,32,274,28,"handlerTag"],[149,42,274,38],[149,47,274,43,"_this"],[149,52,274,43],[149,53,274,48,"handlerTag"],[149,63,274,58],[149,65,274,60],[150,12,275,8],[150,16,275,12],[150,23,275,19,"_this"],[150,28,275,19],[150,29,275,24,"props"],[150,34,275,29],[150,35,275,30,"onHandlerStateChange"],[150,55,275,50],[150,60,275,55],[150,70,275,65],[150,72,275,67],[151,14,276,10,"_this"],[151,19,276,10],[151,20,276,15,"props"],[151,25,276,20],[151,26,276,21,"onHandlerStateChange"],[151,46,276,41],[151,49,276,44,"event"],[151,54,276,49],[151,55,276,50],[152,12,277,8],[153,12,279,8],[153,16,279,14,"state"],[153,21,279,42],[153,24,279,45,"event"],[153,29,279,50],[153,30,279,51,"nativeEvent"],[153,41,279,62],[153,42,279,63,"state"],[153,47,279,68],[154,12,280,8],[154,16,280,14,"stateEventName"],[154,30,280,28],[154,33,280,31,"stateToPropMappings"],[154,52,280,50],[154,53,280,51,"state"],[154,58,280,56],[154,59,280,57],[155,12,281,8],[155,16,281,14,"eventHandler"],[155,28,281,26],[155,31,281,29,"stateEventName"],[155,45,281,43],[155,49,281,47,"_this"],[155,54,281,47],[155,55,281,52,"props"],[155,60,281,57],[155,61,281,58,"stateEventName"],[155,75,281,72],[155,76,281,73],[156,12,282,8],[156,16,282,12,"eventHandler"],[156,28,282,24],[156,32,282,28],[156,39,282,35,"eventHandler"],[156,51,282,47],[156,56,282,52],[156,66,282,62],[156,68,282,64],[157,14,283,10,"eventHandler"],[157,26,283,22],[157,27,283,23,"event"],[157,32,283,28],[157,33,283,29],[158,12,284,8],[159,10,285,6],[159,11,285,7],[159,17,285,13],[160,12,286,8,"_this"],[160,17,286,8],[160,18,286,13,"props"],[160,23,286,18],[160,24,286,19,"onGestureHandlerStateChange"],[160,51,286,46],[160,54,286,49,"event"],[160,59,286,54],[160,60,286,55],[161,10,287,6],[162,8,288,4],[162,9,288,5],[163,8,288,5,"_this"],[163,13,288,5],[163,14,290,12,"refHandler"],[163,24,290,22],[163,27,290,26,"node"],[163,31,290,35],[163,35,290,40],[164,10,291,6,"_this"],[164,15,291,6],[164,16,291,11,"viewNode"],[164,24,291,19],[164,27,291,22,"node"],[164,31,291,26],[165,10,293,6],[165,14,293,12,"child"],[165,19,293,17],[165,22,293,20,"React"],[165,27,293,25],[165,28,293,26,"Children"],[165,36,293,34],[165,37,293,35,"only"],[165,41,293,39],[165,42,293,40,"_this"],[165,47,293,40],[165,48,293,45,"props"],[165,53,293,50],[165,54,293,51,"children"],[165,62,293,59],[165,63,293,60],[166,10,294,6],[167,10,295,6],[167,14,295,14,"ref"],[167,17,295,17],[167,20,295,27,"child"],[167,25,295,32],[167,26,295,14,"ref"],[167,29,295,17],[168,10,296,6],[168,14,296,10,"ref"],[168,17,296,13],[168,22,296,18],[168,26,296,22],[168,28,296,24],[169,12,297,8],[169,16,297,12],[169,23,297,19,"ref"],[169,26,297,22],[169,31,297,27],[169,41,297,37],[169,43,297,39],[170,14,298,10,"ref"],[170,17,298,13],[170,18,298,14,"node"],[170,22,298,18],[170,23,298,19],[171,12,299,8],[171,13,299,9],[171,19,299,15],[172,14,300,10,"ref"],[172,17,300,13],[172,18,300,14,"current"],[172,25,300,21],[172,28,300,24,"node"],[172,32,300,28],[173,12,301,8],[174,10,302,6],[175,8,303,4],[175,9,303,5],[176,8,303,5,"_this"],[176,13,303,5],[176,14,305,12,"createGestureHandler"],[176,34,305,32],[176,37,306,6,"newConfig"],[176,46,306,50],[176,50,307,9],[177,10,308,6,"_this"],[177,15,308,6],[177,16,308,11,"config"],[177,22,308,17],[177,25,308,20,"newConfig"],[177,34,308,29],[178,10,310,6,"RNGestureHandlerModule"],[178,41,310,28],[178,42,310,29,"createGestureHandler"],[178,62,310,49],[178,63,311,8,"name"],[178,67,311,12],[178,69,312,8,"_this"],[178,74,312,8],[178,75,312,13,"handlerTag"],[178,85,312,23],[178,87,313,8,"newConfig"],[178,96,314,6],[178,97,314,7],[179,8,315,4],[179,9,315,5],[180,8,315,5,"_this"],[180,13,315,5],[180,14,317,12,"attachGestureHandler"],[180,34,317,32],[180,37,317,36,"newViewTag"],[180,47,317,54],[180,51,317,59],[181,10,318,6,"_this"],[181,15,318,6],[181,16,318,11,"viewTag"],[181,23,318,18],[181,26,318,21,"newViewTag"],[181,36,318,31],[182,10,330,13],[183,12,331,8],[183,16,331,8,"registerOldGestureHandler"],[183,59,331,33],[183,61,331,34,"_this"],[183,66,331,34],[183,67,331,39,"handlerTag"],[183,77,331,49],[183,79,331,51],[184,14,332,10,"onGestureEvent"],[184,28,332,24],[184,30,332,26,"_this"],[184,35,332,26],[184,36,332,31,"onGestureHandlerEvent"],[184,57,332,52],[185,14,333,10,"onGestureStateChange"],[185,34,333,30],[185,36,333,32,"_this"],[185,41,333,32],[185,42,333,37,"onGestureHandlerStateChange"],[186,12,334,8],[186,13,334,9],[186,14,334,10],[187,12,336,8],[187,16,336,14,"actionType"],[187,26,336,24],[187,29,336,27],[187,30,336,28],[187,36,336,34],[188,14,337,10],[188,18,337,16,"onGestureEvent"],[188,32,337,30],[188,35,337,33,"_this"],[188,40,337,33],[188,41,337,38,"props"],[188,46,337,43],[188,48,337,45,"onGestureEvent"],[188,62,337,59],[189,14,338,10],[189,18,338,16,"isGestureHandlerWorklet"],[189,41,338,39],[189,44,339,12,"onGestureEvent"],[189,58,339,26],[189,63,340,13],[189,72,340,22],[189,76,340,26,"onGestureEvent"],[189,90,340,40],[189,94,341,14],[189,115,341,35],[189,119,341,39,"onGestureEvent"],[189,133,341,53],[189,134,341,54],[190,14,342,10],[190,18,342,16,"onHandlerStateChange"],[190,38,342,36],[190,41,342,39,"_this"],[190,46,342,39],[190,47,342,44,"props"],[190,52,342,49],[190,54,342,51,"onHandlerStateChange"],[190,74,342,71],[191,14,343,10],[191,18,343,16,"isStateChangeHandlerWorklet"],[191,45,343,43],[191,48,344,12,"onHandlerStateChange"],[191,68,344,32],[191,73,345,13],[191,82,345,22],[191,86,345,26,"onHandlerStateChange"],[191,106,345,46],[191,110,346,14],[191,131,346,35],[191,135,346,39,"onHandlerStateChange"],[191,155,346,59],[191,156,346,60],[192,14,347,10],[192,18,347,16,"isReanimatedHandler"],[192,37,347,35],[192,40,348,12,"isGestureHandlerWorklet"],[192,63,348,35],[192,67,348,39,"isStateChangeHandlerWorklet"],[192,94,348,66],[193,14,349,10],[193,18,349,14,"isReanimatedHandler"],[193,37,349,33],[193,39,349,35],[194,16,350,12],[195,16,351,12],[195,23,351,19,"ActionType"],[195,45,351,29],[195,46,351,30,"REANIMATED_WORKLET"],[195,64,351,48],[196,14,352,10],[196,15,352,11],[196,21,352,17],[196,25,352,21,"onGestureEvent"],[196,39,352,35],[196,43,352,39],[196,55,352,51],[196,59,352,55,"onGestureEvent"],[196,73,352,69],[196,75,352,71],[197,16,353,12],[198,16,354,12],[198,23,354,19,"ActionType"],[198,45,354,29],[198,46,354,30,"NATIVE_ANIMATED_EVENT"],[198,67,354,51],[199,14,355,10],[199,15,355,11],[199,21,355,17],[200,16,356,12],[201,16,357,12],[201,23,357,19,"ActionType"],[201,45,357,29],[201,46,357,30,"JS_FUNCTION_OLD_API"],[201,65,357,49],[202,14,358,10],[203,12,359,8],[203,13,359,9],[203,15,359,11],[203,16,359,12],[204,12,361,8,"RNGestureHandlerModule"],[204,43,361,30],[204,44,361,31,"attachGestureHandler"],[204,64,361,51],[204,65,362,10,"_this"],[204,70,362,10],[204,71,362,15,"handlerTag"],[204,81,362,25],[204,83,363,10,"newViewTag"],[204,93,363,20],[204,95,364,10,"actionType"],[204,105,365,8],[204,106,365,9],[205,10,366,6],[206,10,368,6],[206,14,368,6,"scheduleFlushOperations"],[206,44,368,29],[206,46,368,30],[206,47,368,31],[207,8,369,4],[207,9,369,5],[208,8,369,5,"_this"],[208,13,369,5],[208,14,371,12,"updateGestureHandler"],[208,34,371,32],[208,37,372,6,"newConfig"],[208,46,372,50],[208,50,373,9],[209,10,374,6,"_this"],[209,15,374,6],[209,16,374,11,"config"],[209,22,374,17],[209,25,374,20,"newConfig"],[209,34,374,29],[210,10,376,6,"RNGestureHandlerModule"],[210,41,376,28],[210,42,376,29,"updateGestureHandler"],[210,62,376,49],[210,63,376,50,"_this"],[210,68,376,50],[210,69,376,55,"handlerTag"],[210,79,376,65],[210,81,376,67,"newConfig"],[210,90,376,76],[210,91,376,77],[211,10,377,6],[211,14,377,6,"scheduleFlushOperations"],[211,44,377,29],[211,46,377,30],[211,47,377,31],[212,8,378,4],[212,9,378,5],[213,8,190,6,"_this"],[213,13,190,6],[213,14,190,11,"handlerTag"],[213,24,190,21],[213,27,190,24],[213,31,190,24,"getNextHandlerTag"],[213,67,190,41],[213,69,190,42],[213,70,190,43],[214,8,191,6,"_this"],[214,13,191,6],[214,14,191,11,"config"],[214,20,191,17],[214,23,191,20],[214,24,191,21],[214,25,191,22],[215,8,192,6,"_this"],[215,13,192,6],[215,14,192,11,"propsRef"],[215,22,192,19],[215,38,192,22,"React"],[215,43,192,27],[215,44,192,28,"createRef"],[215,53,192,37],[215,54,192,38],[215,55,192,39],[216,8,193,6,"_this"],[216,13,193,6],[216,14,193,11,"isMountedRef"],[216,26,193,23],[216,42,193,26,"React"],[216,47,193,31],[216,48,193,32,"createRef"],[216,57,193,41],[216,58,193,42],[216,59,193,43],[217,8,194,6,"_this"],[217,13,194,6],[217,14,194,11,"state"],[217,19,194,16],[217,22,194,19],[218,10,194,21,"allowTouches"],[219,8,194,34],[219,9,194,35],[220,8,195,6],[220,12,195,10,"props"],[220,17,195,15],[220,18,195,16,"id"],[220,20,195,18],[220,22,195,20],[221,10,196,8],[221,14,196,12,"handlerIDToTag"],[221,46,196,26],[221,47,196,27,"props"],[221,52,196,32],[221,53,196,33,"id"],[221,55,196,35],[221,56,196,36],[221,61,196,41,"undefined"],[221,70,196,50],[221,72,196,52],[222,12,197,10],[222,18,197,16],[222,22,197,20,"Error"],[222,27,197,25],[222,28,197,26],[222,48,197,46,"props"],[222,53,197,51],[222,54,197,52,"id"],[222,56,197,54],[222,78,197,76],[222,79,197,77],[223,10,198,8],[224,10,199,8,"handlerIDToTag"],[224,42,199,22],[224,43,199,23,"props"],[224,48,199,28],[224,49,199,29,"id"],[224,51,199,31],[224,52,199,32],[224,55,199,35,"_this"],[224,60,199,35],[224,61,199,40,"handlerTag"],[224,71,199,50],[225,8,200,6],[226,8,200,7],[226,15,200,7,"_this"],[226,20,200,7],[227,6,201,4],[228,6,201,5],[228,10,201,5,"_inherits2"],[228,20,201,5],[228,21,201,5,"default"],[228,28,201,5],[228,30,201,5,"Handler"],[228,37,201,5],[228,39,201,5,"_React$Component"],[228,55,201,5],[229,6,201,5],[229,17,201,5,"_createClass2"],[229,30,201,5],[229,31,201,5,"default"],[229,38,201,5],[229,40,201,5,"Handler"],[229,47,201,5],[230,8,201,5,"key"],[230,11,201,5],[231,8,201,5,"value"],[231,13,201,5],[231,15,203,4],[231,24,203,4,"componentDidMount"],[231,41,203,21,"componentDidMount"],[231,42,203,21],[231,44,203,24],[232,10,204,6],[232,14,204,12,"props"],[232,19,204,34],[232,22,204,37],[232,26,204,41],[232,27,204,42,"props"],[232,32,204,47],[233,10,205,6],[233,14,205,10],[233,15,205,11,"isMountedRef"],[233,27,205,23],[233,28,205,24,"current"],[233,35,205,31],[233,38,205,34],[233,42,205,38],[234,10,216,6],[234,14,216,10,"hasUnresolvedRefs"],[234,31,216,27],[234,32,216,28,"props"],[234,37,216,33],[234,38,216,34],[234,40,216,36],[235,12,217,8],[236,12,218,8],[237,12,219,8],[238,12,220,8],[239,12,221,8],[240,12,222,8],[241,12,223,8],[241,16,223,8,"ghQueueMicrotask"],[241,50,223,24],[241,52,223,25],[241,58,223,31],[242,14,224,10],[242,18,224,14],[242,19,224,15,"update"],[242,25,224,21],[242,26,224,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[242,53,224,49],[242,54,224,50],[243,12,225,8],[243,13,225,9],[243,14,225,10],[244,10,226,6],[245,10,228,6],[245,14,228,10],[245,15,228,11,"createGestureHandler"],[245,35,228,31],[245,36,229,8],[245,40,229,8,"filterConfig"],[245,59,229,20],[245,61,230,10,"transformProps"],[245,75,230,24],[245,78,230,27,"transformProps"],[245,92,230,41],[245,93,230,42],[245,97,230,46],[245,98,230,47,"props"],[245,103,230,52],[245,104,230,53],[245,107,230,56],[245,111,230,60],[245,112,230,61,"props"],[245,117,230,66],[245,119,231,10],[245,120,231,11],[245,123,231,14,"allowedProps"],[245,135,231,26],[245,137,231,28],[245,140,231,31,"customNativeProps"],[245,157,231,48],[245,158,231,49],[245,160,232,10,"config"],[245,166,233,8],[245,167,234,6],[245,168,234,7],[246,10,236,6],[246,14,236,10],[246,15,236,11,"attachGestureHandler"],[246,35,236,31],[246,36,236,32],[246,40,236,32,"findNodeHandle"],[246,61,236,46],[246,63,236,47],[246,67,236,51],[246,68,236,52,"viewNode"],[246,76,236,60],[246,77,236,71],[246,78,236,72],[246,79,236,73],[246,80,236,74],[247,8,237,4],[248,6,237,5],[249,8,237,5,"key"],[249,11,237,5],[250,8,237,5,"value"],[250,13,237,5],[250,15,239,4],[250,24,239,4,"componentDidUpdate"],[250,42,239,22,"componentDidUpdate"],[250,43,239,22],[250,45,239,25],[251,10,240,6],[251,14,240,12,"viewTag"],[251,21,240,19],[251,24,240,22],[251,28,240,22,"findNodeHandle"],[251,49,240,36],[251,51,240,37],[251,55,240,41],[251,56,240,42,"viewNode"],[251,64,240,50],[251,65,240,51],[252,10,241,6],[252,14,241,10],[252,18,241,14],[252,19,241,15,"viewTag"],[252,26,241,22],[252,31,241,27,"viewTag"],[252,38,241,34],[252,40,241,36],[253,12,242,8],[253,16,242,12],[253,17,242,13,"attachGestureHandler"],[253,37,242,33],[253,38,242,34,"viewTag"],[253,45,242,51],[253,46,242,52],[253,47,242,53],[253,48,242,54],[254,10,243,6],[255,10,244,6],[255,14,244,10],[255,15,244,11,"update"],[255,21,244,17],[255,22,244,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[255,49,244,45],[255,50,244,46],[256,8,245,4],[257,6,245,5],[258,8,245,5,"key"],[258,11,245,5],[259,8,245,5,"value"],[259,13,245,5],[259,15,247,4],[259,24,247,4,"componentWillUnmount"],[259,44,247,24,"componentWillUnmount"],[259,45,247,24],[259,47,247,27],[260,10,248,6],[260,14,248,10],[260,15,248,11,"inspectorToggleListener"],[260,38,248,34],[260,40,248,36,"remove"],[260,46,248,42],[260,47,248,43],[260,48,248,44],[261,10,249,6],[261,14,249,10],[261,15,249,11,"isMountedRef"],[261,27,249,23],[261,28,249,24,"current"],[261,35,249,31],[261,38,249,34],[261,43,249,39],[262,10,250,6,"RNGestureHandlerModule"],[262,41,250,28],[262,42,250,29,"dropGestureHandler"],[262,60,250,47],[262,61,250,48],[262,65,250,52],[262,66,250,53,"handlerTag"],[262,76,250,63],[262,77,250,64],[263,10,251,6],[263,14,251,6,"scheduleFlushOperations"],[263,44,251,29],[263,46,251,30],[263,47,251,31],[264,10,252,6],[265,10,253,6],[265,14,253,12,"handlerID"],[265,23,253,41],[265,26,253,44],[265,30,253,48],[265,31,253,49,"props"],[265,36,253,54],[265,37,253,55,"id"],[265,39,253,57],[266,10,254,6],[266,14,254,10,"handlerID"],[266,23,254,19],[266,25,254,21],[267,12,255,8],[268,12,256,8],[268,19,256,15,"handlerIDToTag"],[268,51,256,29],[268,52,256,30,"handlerID"],[268,61,256,39],[268,62,256,40],[269,10,257,6],[270,8,258,4],[271,6,258,5],[272,8,258,5,"key"],[272,11,258,5],[273,8,258,5,"value"],[273,13,258,5],[273,15,380,4],[273,24,380,12,"update"],[273,30,380,18,"update"],[273,31,380,19,"remainingTries"],[273,45,380,41],[273,47,380,43],[274,10,381,6],[274,14,381,10],[274,15,381,11],[274,19,381,15],[274,20,381,16,"isMountedRef"],[274,32,381,28],[274,33,381,29,"current"],[274,40,381,36],[274,42,381,38],[275,12,382,8],[276,10,383,6],[277,10,385,6],[277,14,385,12,"props"],[277,19,385,34],[277,22,385,37],[277,26,385,41],[277,27,385,42,"props"],[277,32,385,47],[279,10,387,6],[280,10,388,6],[281,10,389,6],[282,10,390,6],[282,14,390,10,"hasUnresolvedRefs"],[282,31,390,27],[282,32,390,28,"props"],[282,37,390,33],[282,38,390,34],[282,42,390,38,"remainingTries"],[282,56,390,52],[282,59,390,55],[282,60,390,56],[282,62,390,58],[283,12,391,8],[283,16,391,8,"ghQueueMicrotask"],[283,50,391,24],[283,52,391,25],[283,58,391,31],[284,14,392,10],[284,18,392,14],[284,19,392,15,"update"],[284,25,392,21],[284,26,392,22,"remainingTries"],[284,40,392,36],[284,43,392,39],[284,44,392,40],[284,45,392,41],[285,12,393,8],[285,13,393,9],[285,14,393,10],[286,10,394,6],[286,11,394,7],[286,17,394,13],[287,12,395,8],[287,16,395,14,"newConfig"],[287,25,395,23],[287,28,395,26],[287,32,395,26,"filterConfig"],[287,51,395,38],[287,53,396,10,"transformProps"],[287,67,396,24],[287,70,396,27,"transformProps"],[287,84,396,41],[287,85,396,42],[287,89,396,46],[287,90,396,47,"props"],[287,95,396,52],[287,96,396,53],[287,99,396,56],[287,103,396,60],[287,104,396,61,"props"],[287,109,396,66],[287,111,397,10],[287,112,397,11],[287,115,397,14,"allowedProps"],[287,127,397,26],[287,129,397,28],[287,132,397,31,"customNativeProps"],[287,149,397,48],[287,150,397,49],[287,152,398,10,"config"],[287,158,399,8],[287,159,399,9],[288,12,400,8],[288,16,400,12],[288,17,400,13],[288,21,400,13,"deepEqual"],[288,38,400,22],[288,40,400,23],[288,44,400,27],[288,45,400,28,"config"],[288,51,400,34],[288,53,400,36,"newConfig"],[288,62,400,45],[288,63,400,46],[288,65,400,48],[289,14,401,10],[289,18,401,14],[289,19,401,15,"updateGestureHandler"],[289,39,401,35],[289,40,401,36,"newConfig"],[289,49,401,45],[289,50,401,46],[290,12,402,8],[291,10,403,6],[292,8,404,4],[293,6,404,5],[294,8,404,5,"key"],[294,11,404,5],[295,8,404,5,"value"],[295,13,404,5],[295,15,406,4],[295,24,406,4,"setNativeProps"],[295,38,406,18,"setNativeProps"],[295,39,406,19,"updates"],[295,46,406,31],[295,48,406,33],[296,10,407,6],[296,14,407,12,"mergedProps"],[296,25,407,23],[296,28,407,26],[297,12,407,28],[297,15,407,31],[297,19,407,35],[297,20,407,36,"props"],[297,25,407,41],[298,12,407,43],[298,15,407,46,"updates"],[299,10,407,54],[299,11,407,55],[300,10,408,6],[300,14,408,12,"newConfig"],[300,23,408,21],[300,26,408,24],[300,30,408,24,"filterConfig"],[300,49,408,36],[300,51,409,8,"transformProps"],[300,65,409,22],[300,68,409,25,"transformProps"],[300,82,409,39],[300,83,409,40,"mergedProps"],[300,94,409,51],[300,95,409,52],[300,98,409,55,"mergedProps"],[300,109,409,66],[300,111,410,8],[300,112,410,9],[300,115,410,12,"allowedProps"],[300,127,410,24],[300,129,410,26],[300,132,410,29,"customNativeProps"],[300,149,410,46],[300,150,410,47],[300,152,411,8,"config"],[300,158,412,6],[300,159,412,7],[301,10,413,6],[301,14,413,10],[301,15,413,11,"updateGestureHandler"],[301,35,413,31],[301,36,413,32,"newConfig"],[301,45,413,41],[301,46,413,42],[302,8,414,4],[303,6,414,5],[304,8,414,5,"key"],[304,11,414,5],[305,8,414,5,"value"],[305,13,414,5],[305,15,416,4],[305,24,416,4,"render"],[305,30,416,10,"render"],[305,31,416,10],[305,33,416,13],[306,10,424,6],[306,14,424,10,"gestureEventHandler"],[306,33,424,29],[306,36,424,32],[306,40,424,36],[306,41,424,37,"onGestureHandlerEvent"],[306,62,424,58],[307,10,425,6],[309,10,430,6],[309,14,430,6,"_this$props"],[309,25,430,6],[309,28,431,8],[309,32,431,12],[309,33,431,13,"props"],[309,38,431,18],[310,12,430,14,"onGestureEvent"],[310,26,430,28],[310,29,430,28,"_this$props"],[310,40,430,28],[310,41,430,14,"onGestureEvent"],[310,55,430,28],[311,12,430,30,"onGestureHandlerEvent"],[311,33,430,51],[311,36,430,51,"_this$props"],[311,47,430,51],[311,48,430,30,"onGestureHandlerEvent"],[311,69,430,51],[312,10,432,6],[312,14,432,10,"onGestureEvent"],[312,28,432,24],[312,32,432,28],[312,39,432,35,"onGestureEvent"],[312,53,432,49],[312,58,432,54],[312,68,432,64],[312,70,432,66],[313,12,433,8],[314,12,434,8],[315,12,435,8],[316,12,436,8],[316,16,436,12,"onGestureHandlerEvent"],[316,37,436,33],[316,39,436,35],[317,14,437,10],[317,20,437,16],[317,24,437,20,"Error"],[317,29,437,25],[317,30,438,12],[317,103,439,10],[317,104,439,11],[318,12,440,8],[319,12,441,8,"gestureEventHandler"],[319,31,441,27],[319,34,441,30,"onGestureEvent"],[319,48,441,44],[320,10,442,6],[320,11,442,7],[320,17,442,13],[321,12,443,8],[321,16,444,10,"onGestureHandlerEvent"],[321,37,444,31],[321,41,445,10],[321,48,445,17,"onGestureHandlerEvent"],[321,69,445,38],[321,74,445,43],[321,84,445,53],[321,86,446,10],[322,14,447,10],[322,20,447,16],[322,24,447,20,"Error"],[322,29,447,25],[322,30,448,12],[322,103,449,10],[322,104,449,11],[323,12,450,8],[324,10,451,6],[325,10,453,6],[325,14,453,10,"gestureStateEventHandler"],[325,38,453,34],[325,41,453,37],[325,45,453,41],[325,46,453,42,"onGestureHandlerStateChange"],[325,73,453,69],[326,10,454,6],[328,10,459,6],[328,14,459,6,"_this$props2"],[328,26,459,6],[328,29,462,40],[328,33,462,44],[328,34,462,45,"props"],[328,39,462,50],[329,12,460,8,"onHandlerStateChange"],[329,32,460,28],[329,35,460,28,"_this$props2"],[329,47,460,28],[329,48,460,8,"onHandlerStateChange"],[329,68,460,28],[330,12,461,8,"onGestureHandlerStateChange"],[330,39,461,35],[330,42,461,35,"_this$props2"],[330,54,461,35],[330,55,461,8,"onGestureHandlerStateChange"],[330,82,461,35],[331,10,463,6],[331,14,463,10,"onHandlerStateChange"],[331,34,463,30],[331,38,463,34],[331,45,463,41,"onHandlerStateChange"],[331,65,463,61],[331,70,463,66],[331,80,463,76],[331,82,463,78],[332,12,464,8],[333,12,465,8],[334,12,466,8],[335,12,467,8],[335,16,467,12,"onGestureHandlerStateChange"],[335,43,467,39],[335,45,467,41],[336,14,468,10],[336,20,468,16],[336,24,468,20,"Error"],[336,29,468,25],[336,30,469,12],[336,103,470,10],[336,104,470,11],[337,12,471,8],[338,12,472,8,"gestureStateEventHandler"],[338,36,472,32],[338,39,472,35,"onHandlerStateChange"],[338,59,472,55],[339,10,473,6],[339,11,473,7],[339,17,473,13],[340,12,474,8],[340,16,475,10,"onGestureHandlerStateChange"],[340,43,475,37],[340,47,476,10],[340,54,476,17,"onGestureHandlerStateChange"],[340,81,476,44],[340,86,476,49],[340,96,476,59],[340,98,477,10],[341,14,478,10],[341,20,478,16],[341,24,478,20,"Error"],[341,29,478,25],[341,30,479,12],[341,103,480,10],[341,104,480,11],[342,12,481,8],[343,10,482,6],[344,10,483,6],[344,14,483,12,"events"],[344,20,483,18],[344,23,483,21],[345,12,484,8,"onGestureHandlerEvent"],[345,33,484,29],[345,35,484,31],[345,39,484,35],[345,40,484,36,"state"],[345,45,484,41],[345,46,484,42,"allowTouches"],[345,58,484,54],[345,61,485,12,"gestureEventHandler"],[345,80,485,31],[345,83,486,12,"undefined"],[345,92,486,21],[346,12,487,8,"onGestureHandlerStateChange"],[346,39,487,35],[346,41,487,37],[346,45,487,41],[346,46,487,42,"state"],[346,51,487,47],[346,52,487,48,"allowTouches"],[346,64,487,60],[346,67,488,12,"gestureStateEventHandler"],[346,91,488,36],[346,94,489,12,"undefined"],[347,10,490,6],[347,11,490,7],[348,10,492,6],[348,14,492,10],[348,15,492,11,"propsRef"],[348,23,492,19],[348,24,492,20,"current"],[348,31,492,27],[348,34,492,30,"events"],[348,40,492,36],[349,10,494,6],[349,14,494,10,"child"],[349,19,494,20],[349,22,494,23],[349,26,494,27],[350,10,495,6],[350,14,495,10],[351,12,496,8,"child"],[351,17,496,13],[351,20,496,16,"React"],[351,25,496,21],[351,26,496,22,"Children"],[351,34,496,30],[351,35,496,31,"only"],[351,39,496,35],[351,40,496,36],[351,44,496,40],[351,45,496,41,"props"],[351,50,496,46],[351,51,496,47,"children"],[351,59,496,55],[351,60,496,56],[352,10,497,6],[352,11,497,7],[352,12,497,8],[352,19,497,15,"e"],[352,20,497,16],[352,22,497,18],[353,12,498,8],[353,18,498,14],[353,22,498,18,"Error"],[353,27,498,23],[353,28,499,10],[353,32,499,10,"tagMessage"],[353,50,499,20],[353,52,500,12],[353,55,500,15,"name"],[353,59,500,19],[353,215,501,10],[353,216,502,8],[353,217,502,9],[354,10,503,6],[355,10,505,6],[355,14,505,10,"grandChildren"],[355,27,505,23],[355,30,505,26,"child"],[355,35,505,31],[355,36,505,32,"props"],[355,41,505,37],[355,42,505,38,"children"],[355,50,505,46],[356,10,523,6],[356,30,523,13,"React"],[356,35,523,18],[356,36,523,19,"cloneElement"],[356,48,523,31],[356,49,524,8,"child"],[356,54,524,13],[356,56,525,8],[357,12,526,10,"ref"],[357,15,526,13],[357,17,526,15],[357,21,526,19],[357,22,526,20,"refHandler"],[357,32,526,30],[358,12,527,10,"collapsable"],[358,23,527,21],[358,25,527,23],[358,30,527,28],[359,12,528,10],[359,16,528,14],[359,20,528,14,"isJestEnv"],[359,37,528,23],[359,39,528,24],[359,40,528,25],[359,43,529,14],[360,14,530,16,"handlerType"],[360,25,530,27],[360,27,530,29,"name"],[360,31,530,33],[361,14,531,16,"handlerTag"],[361,24,531,26],[361,26,531,28],[361,30,531,32],[361,31,531,33,"handlerTag"],[361,41,531,43],[362,14,532,16,"enabled"],[362,21,532,23],[362,23,532,25],[362,27,532,29],[362,28,532,30,"props"],[362,33,532,35],[362,34,532,36,"enabled"],[363,12,533,14],[363,13,533,15],[363,16,534,14],[363,17,534,15],[363,18,534,16],[363,19,534,17],[364,12,535,10,"testID"],[364,18,535,16],[364,20,535,18],[364,24,535,22],[364,25,535,23,"props"],[364,30,535,28],[364,31,535,29,"testID"],[364,37,535,35],[364,41,535,39,"child"],[364,46,535,44],[364,47,535,45,"props"],[364,52,535,50],[364,53,535,51,"testID"],[364,59,535,57],[365,12,536,10],[365,15,536,13,"events"],[366,10,537,8],[366,11,537,9],[366,13,538,8,"grandChildren"],[366,26,539,6],[366,27,539,7],[367,8,540,4],[368,6,540,5],[369,4,540,5],[369,6,173,24,"React"],[369,11,173,29],[369,12,173,30,"Component"],[369,21,173,39],[370,4,173,8,"Handler"],[370,11,173,15],[370,12,177,11,"displayName"],[370,23,177,22],[370,26,177,25,"name"],[370,30,177,29],[371,4,173,8,"Handler"],[371,11,173,15],[371,12,178,11,"contextType"],[371,23,178,22],[371,26,178,25,"GestureHandlerRootViewContext"],[371,64,178,54],[372,4,542,2],[372,11,542,9,"Handler"],[372,18,542,16],[373,2,543,0],[374,0,543,1],[374,3]],"functionMap":{"names":["<global>","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#componentDidMount","setState$argument_0","ghQueueMicrotask$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#onGestureHandlerEvent","Handler#onGestureHandlerStateChange","Handler#refHandler","Handler#createGestureHandler","Handler#attachGestureHandler","Handler#updateGestureHandler","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;sCCkF;GDE;0CCC;GDE;8BEE;CFG;gCGC;CHG;2DIO;GJE;AKM;kBCI;qBCI,8BD;GDC;CLE;eQqC;ECa;ICe;KDa;IEE;UPO;0BQC,yBR;WOE;yBEU;SFE;KFY;IKE;KLM;IME;KNW;oCOE;KPQ;0CQG;KRiB;yBSE;KTa;mCUE;KVU;mCWE;4BnBmB;SmBuB;KXU;mCYE;KZO;IaE;yBTW;SSE;KbW;IcE;KdQ;IeE;Kf4H;GDC;CRE"}},"type":"js/module"}]}