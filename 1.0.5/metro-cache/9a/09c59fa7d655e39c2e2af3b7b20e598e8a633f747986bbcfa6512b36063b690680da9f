{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":178,"column":44,"index":8108}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":178,"column":44,"index":8108}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"../lib/constants","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":12,"column":20,"index":778},"end":{"line":12,"column":47,"index":805}}],"key":"HT/jlD5Hw6QLES2u+Jic3byF3pI="}},{"name":"../lib/errors","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":17,"index":824},"end":{"line":13,"column":41,"index":848}}],"key":"AaylMm75Ll8R4EdO82EiG2MnWxo="}},{"name":"../lib/fetch","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":14,"column":16,"index":866},"end":{"line":14,"column":39,"index":889}}],"key":"gq4d1d8cEf60Z9gIEga4EJaVdvo="}},{"name":"../lib/helpers","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":15,"column":18,"index":909},"end":{"line":15,"column":43,"index":934}}],"key":"Qui0Pd1l+7y+SOwxU35wutG9oJs="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _classCallCheck = require(_dependencyMap[0]);\n  var _createClass = require(_dependencyMap[1]);\n  var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P ? value : new P(function (resolve) {\n        resolve(value);\n      });\n    }\n    return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var constants_1 = require(_dependencyMap[2]);\n  var errors_1 = require(_dependencyMap[3]);\n  var fetch_1 = require(_dependencyMap[4]);\n  var helpers_1 = require(_dependencyMap[5]);\n  var StorageBucketApi = /*#__PURE__*/function () {\n    function StorageBucketApi(url) {\n      var headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var fetch = arguments.length > 2 ? arguments[2] : undefined;\n      var opts = arguments.length > 3 ? arguments[3] : undefined;\n      _classCallCheck(this, StorageBucketApi);\n      var baseUrl = new URL(url);\n      // if legacy uri is used, replace with new storage host (disables request buffering to allow > 50GB uploads)\n      // \"project-ref.supabase.co\" becomes \"project-ref.storage.supabase.co\"\n      if (opts === null || opts === undefined ? undefined : opts.useNewHostname) {\n        var isSupabaseHost = /supabase\\.(co|in|red)$/.test(baseUrl.hostname);\n        if (isSupabaseHost && !baseUrl.hostname.includes('storage.supabase.')) {\n          baseUrl.hostname = baseUrl.hostname.replace('supabase.', 'storage.supabase.');\n        }\n      }\n      this.url = baseUrl.href;\n      this.headers = Object.assign(Object.assign({}, constants_1.DEFAULT_HEADERS), headers);\n      this.fetch = (0, helpers_1.resolveFetch)(fetch);\n    }\n    /**\n     * Retrieves the details of all Storage buckets within an existing project.\n     */\n    return _createClass(StorageBucketApi, [{\n      key: \"listBuckets\",\n      value: function listBuckets() {\n        return __awaiter(this, undefined, undefined, function* () {\n          try {\n            var data = yield (0, fetch_1.get)(this.fetch, `${this.url}/bucket`, {\n              headers: this.headers\n            });\n            return {\n              data,\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isStorageError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n      }\n      /**\n       * Retrieves the details of an existing Storage bucket.\n       *\n       * @param id The unique identifier of the bucket you would like to retrieve.\n       */\n    }, {\n      key: \"getBucket\",\n      value: function getBucket(id) {\n        return __awaiter(this, undefined, undefined, function* () {\n          try {\n            var data = yield (0, fetch_1.get)(this.fetch, `${this.url}/bucket/${id}`, {\n              headers: this.headers\n            });\n            return {\n              data,\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isStorageError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n      }\n      /**\n       * Creates a new Storage bucket\n       *\n       * @param id A unique identifier for the bucket you are creating.\n       * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.\n       * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n       * The global file size limit takes precedence over this value.\n       * The default value is null, which doesn't set a per bucket file size limit.\n       * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n       * The default value is null, which allows files with all mime types to be uploaded.\n       * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n       * @returns newly created bucket id\n       * @param options.type (private-beta) specifies the bucket type. see `BucketType` for more details.\n       *   - default bucket type is `STANDARD`\n       */\n    }, {\n      key: \"createBucket\",\n      value: function createBucket(id) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n          public: false\n        };\n        return __awaiter(this, undefined, undefined, function* () {\n          try {\n            var data = yield (0, fetch_1.post)(this.fetch, `${this.url}/bucket`, {\n              id,\n              name: id,\n              type: options.type,\n              public: options.public,\n              file_size_limit: options.fileSizeLimit,\n              allowed_mime_types: options.allowedMimeTypes\n            }, {\n              headers: this.headers\n            });\n            return {\n              data,\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isStorageError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n      }\n      /**\n       * Updates a Storage bucket\n       *\n       * @param id A unique identifier for the bucket you are updating.\n       * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.\n       * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n       * The global file size limit takes precedence over this value.\n       * The default value is null, which doesn't set a per bucket file size limit.\n       * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n       * The default value is null, which allows files with all mime types to be uploaded.\n       * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n       */\n    }, {\n      key: \"updateBucket\",\n      value: function updateBucket(id, options) {\n        return __awaiter(this, undefined, undefined, function* () {\n          try {\n            var data = yield (0, fetch_1.put)(this.fetch, `${this.url}/bucket/${id}`, {\n              id,\n              name: id,\n              public: options.public,\n              file_size_limit: options.fileSizeLimit,\n              allowed_mime_types: options.allowedMimeTypes\n            }, {\n              headers: this.headers\n            });\n            return {\n              data,\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isStorageError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n      }\n      /**\n       * Removes all objects inside a single bucket.\n       *\n       * @param id The unique identifier of the bucket you would like to empty.\n       */\n    }, {\n      key: \"emptyBucket\",\n      value: function emptyBucket(id) {\n        return __awaiter(this, undefined, undefined, function* () {\n          try {\n            var data = yield (0, fetch_1.post)(this.fetch, `${this.url}/bucket/${id}/empty`, {}, {\n              headers: this.headers\n            });\n            return {\n              data,\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isStorageError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n      }\n      /**\n       * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n       * You must first `empty()` the bucket.\n       *\n       * @param id The unique identifier of the bucket you would like to delete.\n       */\n    }, {\n      key: \"deleteBucket\",\n      value: function deleteBucket(id) {\n        return __awaiter(this, undefined, undefined, function* () {\n          try {\n            var data = yield (0, fetch_1.remove)(this.fetch, `${this.url}/bucket/${id}`, {}, {\n              headers: this.headers\n            });\n            return {\n              data,\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isStorageError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n      }\n    }]);\n  }();\n  exports.default = StorageBucketApi;\n});","lineCount":262,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_classCallCheck"],[4,21,1,13],[4,24,1,13,"require"],[4,31,1,13],[4,32,1,13,"_dependencyMap"],[4,46,1,13],[5,2,1,13],[5,6,1,13,"_createClass"],[5,18,1,13],[5,21,1,13,"require"],[5,28,1,13],[5,29,1,13,"_dependencyMap"],[5,43,1,13],[6,2,2,0],[6,6,2,4,"__awaiter"],[6,15,2,13],[6,18,2,17],[6,22,2,21],[6,26,2,25],[6,30,2,29],[6,31,2,30,"__awaiter"],[6,40,2,39],[6,44,2,44],[6,54,2,54,"thisArg"],[6,61,2,61],[6,63,2,63,"_arguments"],[6,73,2,73],[6,75,2,75,"P"],[6,76,2,76],[6,78,2,78,"generator"],[6,87,2,87],[6,89,2,89],[7,4,3,4],[7,13,3,13,"adopt"],[7,18,3,18,"adopt"],[7,19,3,19,"value"],[7,24,3,24],[7,26,3,26],[8,6,3,28],[8,13,3,35,"value"],[8,18,3,40],[8,30,3,52,"P"],[8,31,3,53],[8,34,3,56,"value"],[8,39,3,61],[8,42,3,64],[8,46,3,68,"P"],[8,47,3,69],[8,48,3,70],[8,58,3,80,"resolve"],[8,65,3,87],[8,67,3,89],[9,8,3,91,"resolve"],[9,15,3,98],[9,16,3,99,"value"],[9,21,3,104],[9,22,3,105],[10,6,3,107],[10,7,3,108],[10,8,3,109],[11,4,3,111],[12,4,4,4],[12,11,4,11],[12,16,4,16,"P"],[12,17,4,17],[12,22,4,22,"P"],[12,23,4,23],[12,26,4,26,"Promise"],[12,33,4,33],[12,34,4,34],[12,36,4,36],[12,46,4,46,"resolve"],[12,53,4,53],[12,55,4,55,"reject"],[12,61,4,61],[12,63,4,63],[13,6,5,8],[13,15,5,17,"fulfilled"],[13,24,5,26,"fulfilled"],[13,25,5,27,"value"],[13,30,5,32],[13,32,5,34],[14,8,5,36],[14,12,5,40],[15,10,5,42,"step"],[15,14,5,46],[15,15,5,47,"generator"],[15,24,5,56],[15,25,5,57,"next"],[15,29,5,61],[15,30,5,62,"value"],[15,35,5,67],[15,36,5,68],[15,37,5,69],[16,8,5,71],[16,9,5,72],[16,10,5,73],[16,17,5,80,"e"],[16,18,5,81],[16,20,5,83],[17,10,5,85,"reject"],[17,16,5,91],[17,17,5,92,"e"],[17,18,5,93],[17,19,5,94],[18,8,5,96],[19,6,5,98],[20,6,6,8],[20,15,6,17,"rejected"],[20,23,6,25,"rejected"],[20,24,6,26,"value"],[20,29,6,31],[20,31,6,33],[21,8,6,35],[21,12,6,39],[22,10,6,41,"step"],[22,14,6,45],[22,15,6,46,"generator"],[22,24,6,55],[22,25,6,56],[22,32,6,63],[22,33,6,64],[22,34,6,65,"value"],[22,39,6,70],[22,40,6,71],[22,41,6,72],[23,8,6,74],[23,9,6,75],[23,10,6,76],[23,17,6,83,"e"],[23,18,6,84],[23,20,6,86],[24,10,6,88,"reject"],[24,16,6,94],[24,17,6,95,"e"],[24,18,6,96],[24,19,6,97],[25,8,6,99],[26,6,6,101],[27,6,7,8],[27,15,7,17,"step"],[27,19,7,21,"step"],[27,20,7,22,"result"],[27,26,7,28],[27,28,7,30],[28,8,7,32,"result"],[28,14,7,38],[28,15,7,39,"done"],[28,19,7,43],[28,22,7,46,"resolve"],[28,29,7,53],[28,30,7,54,"result"],[28,36,7,60],[28,37,7,61,"value"],[28,42,7,66],[28,43,7,67],[28,46,7,70,"adopt"],[28,51,7,75],[28,52,7,76,"result"],[28,58,7,82],[28,59,7,83,"value"],[28,64,7,88],[28,65,7,89],[28,66,7,90,"then"],[28,70,7,94],[28,71,7,95,"fulfilled"],[28,80,7,104],[28,82,7,106,"rejected"],[28,90,7,114],[28,91,7,115],[29,6,7,117],[30,6,8,8,"step"],[30,10,8,12],[30,11,8,13],[30,12,8,14,"generator"],[30,21,8,23],[30,24,8,26,"generator"],[30,33,8,35],[30,34,8,36,"apply"],[30,39,8,41],[30,40,8,42,"thisArg"],[30,47,8,49],[30,49,8,51,"_arguments"],[30,59,8,61],[30,63,8,65],[30,65,8,67],[30,66,8,68],[30,68,8,70,"next"],[30,72,8,74],[30,73,8,75],[30,74,8,76],[30,75,8,77],[31,4,9,4],[31,5,9,5],[31,6,9,6],[32,2,10,0],[32,3,10,1],[33,2,11,0,"Object"],[33,8,11,6],[33,9,11,7,"defineProperty"],[33,23,11,21],[33,24,11,22,"exports"],[33,31,11,29],[33,33,11,31],[33,45,11,43],[33,47,11,45],[34,4,11,47,"value"],[34,9,11,52],[34,11,11,54],[35,2,11,59],[35,3,11,60],[35,4,11,61],[36,2,12,0],[36,6,12,6,"constants_1"],[36,17,12,17],[36,20,12,20,"require"],[36,27,12,27],[36,28,12,27,"_dependencyMap"],[36,42,12,27],[36,45,12,46],[36,46,12,47],[37,2,13,0],[37,6,13,6,"errors_1"],[37,14,13,14],[37,17,13,17,"require"],[37,24,13,24],[37,25,13,24,"_dependencyMap"],[37,39,13,24],[37,42,13,40],[37,43,13,41],[38,2,14,0],[38,6,14,6,"fetch_1"],[38,13,14,13],[38,16,14,16,"require"],[38,23,14,23],[38,24,14,23,"_dependencyMap"],[38,38,14,23],[38,41,14,38],[38,42,14,39],[39,2,15,0],[39,6,15,6,"helpers_1"],[39,15,15,15],[39,18,15,18,"require"],[39,25,15,25],[39,26,15,25,"_dependencyMap"],[39,40,15,25],[39,43,15,42],[39,44,15,43],[40,2,15,44],[40,6,16,6,"StorageBucketApi"],[40,22,16,22],[41,4,17,4],[41,13,17,4,"StorageBucketApi"],[41,30,17,16,"url"],[41,33,17,19],[41,35,17,48],[42,6,17,48],[42,10,17,21,"headers"],[42,17,17,28],[42,20,17,28,"arguments"],[42,29,17,28],[42,30,17,28,"length"],[42,36,17,28],[42,44,17,28,"arguments"],[42,53,17,28],[42,61,17,28,"undefined"],[42,70,17,28],[42,73,17,28,"arguments"],[42,82,17,28],[42,88,17,31],[42,89,17,32],[42,90,17,33],[43,6,17,33],[43,10,17,35,"fetch"],[43,15,17,40],[43,18,17,40,"arguments"],[43,27,17,40],[43,28,17,40,"length"],[43,34,17,40],[43,41,17,40,"arguments"],[43,50,17,40],[43,56,17,40,"undefined"],[43,65,17,40],[44,6,17,40],[44,10,17,42,"opts"],[44,14,17,46],[44,17,17,46,"arguments"],[44,26,17,46],[44,27,17,46,"length"],[44,33,17,46],[44,40,17,46,"arguments"],[44,49,17,46],[44,55,17,46,"undefined"],[44,64,17,46],[45,6,17,46,"_classCallCheck"],[45,21,17,46],[45,28,17,46,"StorageBucketApi"],[45,44,17,46],[46,6,18,8],[46,10,18,14,"baseUrl"],[46,17,18,21],[46,20,18,24],[46,24,18,28,"URL"],[46,27,18,31],[46,28,18,32,"url"],[46,31,18,35],[46,32,18,36],[47,6,19,8],[48,6,20,8],[49,6,21,8],[49,10,21,12,"opts"],[49,14,21,16],[49,19,21,21],[49,23,21,25],[49,27,21,29,"opts"],[49,31,21,33],[49,36,21,33,"undefined"],[49,45,21,44],[49,48,21,44,"undefined"],[49,57,21,44],[49,60,21,56,"opts"],[49,64,21,60],[49,65,21,61,"useNewHostname"],[49,79,21,75],[49,81,21,77],[50,8,22,12],[50,12,22,18,"isSupabaseHost"],[50,26,22,32],[50,29,22,35],[50,53,22,59],[50,54,22,60,"test"],[50,58,22,64],[50,59,22,65,"baseUrl"],[50,66,22,72],[50,67,22,73,"hostname"],[50,75,22,81],[50,76,22,82],[51,8,23,12],[51,12,23,16,"isSupabaseHost"],[51,26,23,30],[51,30,23,34],[51,31,23,35,"baseUrl"],[51,38,23,42],[51,39,23,43,"hostname"],[51,47,23,51],[51,48,23,52,"includes"],[51,56,23,60],[51,57,23,61],[51,76,23,80],[51,77,23,81],[51,79,23,83],[52,10,24,16,"baseUrl"],[52,17,24,23],[52,18,24,24,"hostname"],[52,26,24,32],[52,29,24,35,"baseUrl"],[52,36,24,42],[52,37,24,43,"hostname"],[52,45,24,51],[52,46,24,52,"replace"],[52,53,24,59],[52,54,24,60],[52,65,24,71],[52,67,24,73],[52,86,24,92],[52,87,24,93],[53,8,25,12],[54,6,26,8],[55,6,27,8],[55,10,27,12],[55,11,27,13,"url"],[55,14,27,16],[55,17,27,19,"baseUrl"],[55,24,27,26],[55,25,27,27,"href"],[55,29,27,31],[56,6,28,8],[56,10,28,12],[56,11,28,13,"headers"],[56,18,28,20],[56,21,28,23,"Object"],[56,27,28,29],[56,28,28,30,"assign"],[56,34,28,36],[56,35,28,37,"Object"],[56,41,28,43],[56,42,28,44,"assign"],[56,48,28,50],[56,49,28,51],[56,50,28,52],[56,51,28,53],[56,53,28,55,"constants_1"],[56,64,28,66],[56,65,28,67,"DEFAULT_HEADERS"],[56,80,28,82],[56,81,28,83],[56,83,28,85,"headers"],[56,90,28,92],[56,91,28,93],[57,6,29,8],[57,10,29,12],[57,11,29,13,"fetch"],[57,16,29,18],[57,19,29,21],[57,20,29,22],[57,21,29,23],[57,23,29,25,"helpers_1"],[57,32,29,34],[57,33,29,35,"resolveFetch"],[57,45,29,47],[57,47,29,49,"fetch"],[57,52,29,54],[57,53,29,55],[58,4,30,4],[59,4,31,4],[60,0,32,0],[61,0,33,0],[62,4,31,4],[62,11,31,4,"_createClass"],[62,23,31,4],[62,24,31,4,"StorageBucketApi"],[62,40,31,4],[63,6,31,4,"key"],[63,9,31,4],[64,6,31,4,"value"],[64,11,31,4],[64,13,34,4],[64,22,34,4,"listBuckets"],[64,33,34,15,"listBuckets"],[64,34,34,15],[64,36,34,18],[65,8,35,8],[65,15,35,15,"__awaiter"],[65,24,35,24],[65,25,35,25],[65,29,35,29],[65,31,35,29,"undefined"],[65,40,35,29],[65,42,35,29,"undefined"],[65,51,35,29],[65,53,35,47],[65,66,35,60],[66,10,36,12],[66,14,36,16],[67,12,37,16],[67,16,37,22,"data"],[67,20,37,26],[67,23,37,29],[67,29,37,35],[67,30,37,36],[67,31,37,37],[67,33,37,39,"fetch_1"],[67,40,37,46],[67,41,37,47,"get"],[67,44,37,50],[67,46,37,52],[67,50,37,56],[67,51,37,57,"fetch"],[67,56,37,62],[67,58,37,64],[67,61,37,67],[67,65,37,71],[67,66,37,72,"url"],[67,69,37,75],[67,78,37,84],[67,80,37,86],[68,14,37,88,"headers"],[68,21,37,95],[68,23,37,97],[68,27,37,101],[68,28,37,102,"headers"],[69,12,37,110],[69,13,37,111],[69,14,37,112],[70,12,38,16],[70,19,38,23],[71,14,38,25,"data"],[71,18,38,29],[72,14,38,31,"error"],[72,19,38,36],[72,21,38,38],[73,12,38,43],[73,13,38,44],[74,10,39,12],[74,11,39,13],[74,12,40,12],[74,19,40,19,"error"],[74,24,40,24],[74,26,40,26],[75,12,41,16],[75,16,41,20],[75,17,41,21],[75,18,41,22],[75,20,41,24,"errors_1"],[75,28,41,32],[75,29,41,33,"isStorageError"],[75,43,41,47],[75,45,41,49,"error"],[75,50,41,54],[75,51,41,55],[75,53,41,57],[76,14,42,20],[76,21,42,27],[77,16,42,29,"data"],[77,20,42,33],[77,22,42,35],[77,26,42,39],[78,16,42,41,"error"],[79,14,42,47],[79,15,42,48],[80,12,43,16],[81,12,44,16],[81,18,44,22,"error"],[81,23,44,27],[82,10,45,12],[83,8,46,8],[83,9,46,9],[83,10,46,10],[84,6,47,4],[85,6,48,4],[86,0,49,0],[87,0,50,0],[88,0,51,0],[89,0,52,0],[90,4,48,4],[91,6,48,4,"key"],[91,9,48,4],[92,6,48,4,"value"],[92,11,48,4],[92,13,53,4],[92,22,53,4,"getBucket"],[92,31,53,13,"getBucket"],[92,32,53,14,"id"],[92,34,53,16],[92,36,53,18],[93,8,54,8],[93,15,54,15,"__awaiter"],[93,24,54,24],[93,25,54,25],[93,29,54,29],[93,31,54,29,"undefined"],[93,40,54,29],[93,42,54,29,"undefined"],[93,51,54,29],[93,53,54,47],[93,66,54,60],[94,10,55,12],[94,14,55,16],[95,12,56,16],[95,16,56,22,"data"],[95,20,56,26],[95,23,56,29],[95,29,56,35],[95,30,56,36],[95,31,56,37],[95,33,56,39,"fetch_1"],[95,40,56,46],[95,41,56,47,"get"],[95,44,56,50],[95,46,56,52],[95,50,56,56],[95,51,56,57,"fetch"],[95,56,56,62],[95,58,56,64],[95,61,56,67],[95,65,56,71],[95,66,56,72,"url"],[95,69,56,75],[95,80,56,86,"id"],[95,82,56,88],[95,84,56,90],[95,86,56,92],[96,14,56,94,"headers"],[96,21,56,101],[96,23,56,103],[96,27,56,107],[96,28,56,108,"headers"],[97,12,56,116],[97,13,56,117],[97,14,56,118],[98,12,57,16],[98,19,57,23],[99,14,57,25,"data"],[99,18,57,29],[100,14,57,31,"error"],[100,19,57,36],[100,21,57,38],[101,12,57,43],[101,13,57,44],[102,10,58,12],[102,11,58,13],[102,12,59,12],[102,19,59,19,"error"],[102,24,59,24],[102,26,59,26],[103,12,60,16],[103,16,60,20],[103,17,60,21],[103,18,60,22],[103,20,60,24,"errors_1"],[103,28,60,32],[103,29,60,33,"isStorageError"],[103,43,60,47],[103,45,60,49,"error"],[103,50,60,54],[103,51,60,55],[103,53,60,57],[104,14,61,20],[104,21,61,27],[105,16,61,29,"data"],[105,20,61,33],[105,22,61,35],[105,26,61,39],[106,16,61,41,"error"],[107,14,61,47],[107,15,61,48],[108,12,62,16],[109,12,63,16],[109,18,63,22,"error"],[109,23,63,27],[110,10,64,12],[111,8,65,8],[111,9,65,9],[111,10,65,10],[112,6,66,4],[113,6,67,4],[114,0,68,0],[115,0,69,0],[116,0,70,0],[117,0,71,0],[118,0,72,0],[119,0,73,0],[120,0,74,0],[121,0,75,0],[122,0,76,0],[123,0,77,0],[124,0,78,0],[125,0,79,0],[126,0,80,0],[127,0,81,0],[128,4,67,4],[129,6,67,4,"key"],[129,9,67,4],[130,6,67,4,"value"],[130,11,67,4],[130,13,82,4],[130,22,82,4,"createBucket"],[130,34,82,16,"createBucket"],[130,35,82,17,"id"],[130,37,82,19],[130,39,84,7],[131,8,84,7],[131,12,82,21,"options"],[131,19,82,28],[131,22,82,28,"arguments"],[131,31,82,28],[131,32,82,28,"length"],[131,38,82,28],[131,46,82,28,"arguments"],[131,55,82,28],[131,63,82,28,"undefined"],[131,72,82,28],[131,75,82,28,"arguments"],[131,84,82,28],[131,90,82,31],[132,10,83,8,"public"],[132,16,83,14],[132,18,83,16],[133,8,84,4],[133,9,84,5],[134,8,85,8],[134,15,85,15,"__awaiter"],[134,24,85,24],[134,25,85,25],[134,29,85,29],[134,31,85,29,"undefined"],[134,40,85,29],[134,42,85,29,"undefined"],[134,51,85,29],[134,53,85,47],[134,66,85,60],[135,10,86,12],[135,14,86,16],[136,12,87,16],[136,16,87,22,"data"],[136,20,87,26],[136,23,87,29],[136,29,87,35],[136,30,87,36],[136,31,87,37],[136,33,87,39,"fetch_1"],[136,40,87,46],[136,41,87,47,"post"],[136,45,87,51],[136,47,87,53],[136,51,87,57],[136,52,87,58,"fetch"],[136,57,87,63],[136,59,87,65],[136,62,87,68],[136,66,87,72],[136,67,87,73,"url"],[136,70,87,76],[136,79,87,85],[136,81,87,87],[137,14,88,20,"id"],[137,16,88,22],[138,14,89,20,"name"],[138,18,89,24],[138,20,89,26,"id"],[138,22,89,28],[139,14,90,20,"type"],[139,18,90,24],[139,20,90,26,"options"],[139,27,90,33],[139,28,90,34,"type"],[139,32,90,38],[140,14,91,20,"public"],[140,20,91,26],[140,22,91,28,"options"],[140,29,91,35],[140,30,91,36,"public"],[140,36,91,42],[141,14,92,20,"file_size_limit"],[141,29,92,35],[141,31,92,37,"options"],[141,38,92,44],[141,39,92,45,"fileSizeLimit"],[141,52,92,58],[142,14,93,20,"allowed_mime_types"],[142,32,93,38],[142,34,93,40,"options"],[142,41,93,47],[142,42,93,48,"allowedMimeTypes"],[143,12,94,16],[143,13,94,17],[143,15,94,19],[144,14,94,21,"headers"],[144,21,94,28],[144,23,94,30],[144,27,94,34],[144,28,94,35,"headers"],[145,12,94,43],[145,13,94,44],[145,14,94,45],[146,12,95,16],[146,19,95,23],[147,14,95,25,"data"],[147,18,95,29],[148,14,95,31,"error"],[148,19,95,36],[148,21,95,38],[149,12,95,43],[149,13,95,44],[150,10,96,12],[150,11,96,13],[150,12,97,12],[150,19,97,19,"error"],[150,24,97,24],[150,26,97,26],[151,12,98,16],[151,16,98,20],[151,17,98,21],[151,18,98,22],[151,20,98,24,"errors_1"],[151,28,98,32],[151,29,98,33,"isStorageError"],[151,43,98,47],[151,45,98,49,"error"],[151,50,98,54],[151,51,98,55],[151,53,98,57],[152,14,99,20],[152,21,99,27],[153,16,99,29,"data"],[153,20,99,33],[153,22,99,35],[153,26,99,39],[154,16,99,41,"error"],[155,14,99,47],[155,15,99,48],[156,12,100,16],[157,12,101,16],[157,18,101,22,"error"],[157,23,101,27],[158,10,102,12],[159,8,103,8],[159,9,103,9],[159,10,103,10],[160,6,104,4],[161,6,105,4],[162,0,106,0],[163,0,107,0],[164,0,108,0],[165,0,109,0],[166,0,110,0],[167,0,111,0],[168,0,112,0],[169,0,113,0],[170,0,114,0],[171,0,115,0],[172,0,116,0],[173,4,105,4],[174,6,105,4,"key"],[174,9,105,4],[175,6,105,4,"value"],[175,11,105,4],[175,13,117,4],[175,22,117,4,"updateBucket"],[175,34,117,16,"updateBucket"],[175,35,117,17,"id"],[175,37,117,19],[175,39,117,21,"options"],[175,46,117,28],[175,48,117,30],[176,8,118,8],[176,15,118,15,"__awaiter"],[176,24,118,24],[176,25,118,25],[176,29,118,29],[176,31,118,29,"undefined"],[176,40,118,29],[176,42,118,29,"undefined"],[176,51,118,29],[176,53,118,47],[176,66,118,60],[177,10,119,12],[177,14,119,16],[178,12,120,16],[178,16,120,22,"data"],[178,20,120,26],[178,23,120,29],[178,29,120,35],[178,30,120,36],[178,31,120,37],[178,33,120,39,"fetch_1"],[178,40,120,46],[178,41,120,47,"put"],[178,44,120,50],[178,46,120,52],[178,50,120,56],[178,51,120,57,"fetch"],[178,56,120,62],[178,58,120,64],[178,61,120,67],[178,65,120,71],[178,66,120,72,"url"],[178,69,120,75],[178,80,120,86,"id"],[178,82,120,88],[178,84,120,90],[178,86,120,92],[179,14,121,20,"id"],[179,16,121,22],[180,14,122,20,"name"],[180,18,122,24],[180,20,122,26,"id"],[180,22,122,28],[181,14,123,20,"public"],[181,20,123,26],[181,22,123,28,"options"],[181,29,123,35],[181,30,123,36,"public"],[181,36,123,42],[182,14,124,20,"file_size_limit"],[182,29,124,35],[182,31,124,37,"options"],[182,38,124,44],[182,39,124,45,"fileSizeLimit"],[182,52,124,58],[183,14,125,20,"allowed_mime_types"],[183,32,125,38],[183,34,125,40,"options"],[183,41,125,47],[183,42,125,48,"allowedMimeTypes"],[184,12,126,16],[184,13,126,17],[184,15,126,19],[185,14,126,21,"headers"],[185,21,126,28],[185,23,126,30],[185,27,126,34],[185,28,126,35,"headers"],[186,12,126,43],[186,13,126,44],[186,14,126,45],[187,12,127,16],[187,19,127,23],[188,14,127,25,"data"],[188,18,127,29],[189,14,127,31,"error"],[189,19,127,36],[189,21,127,38],[190,12,127,43],[190,13,127,44],[191,10,128,12],[191,11,128,13],[191,12,129,12],[191,19,129,19,"error"],[191,24,129,24],[191,26,129,26],[192,12,130,16],[192,16,130,20],[192,17,130,21],[192,18,130,22],[192,20,130,24,"errors_1"],[192,28,130,32],[192,29,130,33,"isStorageError"],[192,43,130,47],[192,45,130,49,"error"],[192,50,130,54],[192,51,130,55],[192,53,130,57],[193,14,131,20],[193,21,131,27],[194,16,131,29,"data"],[194,20,131,33],[194,22,131,35],[194,26,131,39],[195,16,131,41,"error"],[196,14,131,47],[196,15,131,48],[197,12,132,16],[198,12,133,16],[198,18,133,22,"error"],[198,23,133,27],[199,10,134,12],[200,8,135,8],[200,9,135,9],[200,10,135,10],[201,6,136,4],[202,6,137,4],[203,0,138,0],[204,0,139,0],[205,0,140,0],[206,0,141,0],[207,4,137,4],[208,6,137,4,"key"],[208,9,137,4],[209,6,137,4,"value"],[209,11,137,4],[209,13,142,4],[209,22,142,4,"emptyBucket"],[209,33,142,15,"emptyBucket"],[209,34,142,16,"id"],[209,36,142,18],[209,38,142,20],[210,8,143,8],[210,15,143,15,"__awaiter"],[210,24,143,24],[210,25,143,25],[210,29,143,29],[210,31,143,29,"undefined"],[210,40,143,29],[210,42,143,29,"undefined"],[210,51,143,29],[210,53,143,47],[210,66,143,60],[211,10,144,12],[211,14,144,16],[212,12,145,16],[212,16,145,22,"data"],[212,20,145,26],[212,23,145,29],[212,29,145,35],[212,30,145,36],[212,31,145,37],[212,33,145,39,"fetch_1"],[212,40,145,46],[212,41,145,47,"post"],[212,45,145,51],[212,47,145,53],[212,51,145,57],[212,52,145,58,"fetch"],[212,57,145,63],[212,59,145,65],[212,62,145,68],[212,66,145,72],[212,67,145,73,"url"],[212,70,145,76],[212,81,145,87,"id"],[212,83,145,89],[212,91,145,97],[212,93,145,99],[212,94,145,100],[212,95,145,101],[212,97,145,103],[213,14,145,105,"headers"],[213,21,145,112],[213,23,145,114],[213,27,145,118],[213,28,145,119,"headers"],[214,12,145,127],[214,13,145,128],[214,14,145,129],[215,12,146,16],[215,19,146,23],[216,14,146,25,"data"],[216,18,146,29],[217,14,146,31,"error"],[217,19,146,36],[217,21,146,38],[218,12,146,43],[218,13,146,44],[219,10,147,12],[219,11,147,13],[219,12,148,12],[219,19,148,19,"error"],[219,24,148,24],[219,26,148,26],[220,12,149,16],[220,16,149,20],[220,17,149,21],[220,18,149,22],[220,20,149,24,"errors_1"],[220,28,149,32],[220,29,149,33,"isStorageError"],[220,43,149,47],[220,45,149,49,"error"],[220,50,149,54],[220,51,149,55],[220,53,149,57],[221,14,150,20],[221,21,150,27],[222,16,150,29,"data"],[222,20,150,33],[222,22,150,35],[222,26,150,39],[223,16,150,41,"error"],[224,14,150,47],[224,15,150,48],[225,12,151,16],[226,12,152,16],[226,18,152,22,"error"],[226,23,152,27],[227,10,153,12],[228,8,154,8],[228,9,154,9],[228,10,154,10],[229,6,155,4],[230,6,156,4],[231,0,157,0],[232,0,158,0],[233,0,159,0],[234,0,160,0],[235,0,161,0],[236,4,156,4],[237,6,156,4,"key"],[237,9,156,4],[238,6,156,4,"value"],[238,11,156,4],[238,13,162,4],[238,22,162,4,"deleteBucket"],[238,34,162,16,"deleteBucket"],[238,35,162,17,"id"],[238,37,162,19],[238,39,162,21],[239,8,163,8],[239,15,163,15,"__awaiter"],[239,24,163,24],[239,25,163,25],[239,29,163,29],[239,31,163,29,"undefined"],[239,40,163,29],[239,42,163,29,"undefined"],[239,51,163,29],[239,53,163,47],[239,66,163,60],[240,10,164,12],[240,14,164,16],[241,12,165,16],[241,16,165,22,"data"],[241,20,165,26],[241,23,165,29],[241,29,165,35],[241,30,165,36],[241,31,165,37],[241,33,165,39,"fetch_1"],[241,40,165,46],[241,41,165,47,"remove"],[241,47,165,53],[241,49,165,55],[241,53,165,59],[241,54,165,60,"fetch"],[241,59,165,65],[241,61,165,67],[241,64,165,70],[241,68,165,74],[241,69,165,75,"url"],[241,72,165,78],[241,83,165,89,"id"],[241,85,165,91],[241,87,165,93],[241,89,165,95],[241,90,165,96],[241,91,165,97],[241,93,165,99],[242,14,165,101,"headers"],[242,21,165,108],[242,23,165,110],[242,27,165,114],[242,28,165,115,"headers"],[243,12,165,123],[243,13,165,124],[243,14,165,125],[244,12,166,16],[244,19,166,23],[245,14,166,25,"data"],[245,18,166,29],[246,14,166,31,"error"],[246,19,166,36],[246,21,166,38],[247,12,166,43],[247,13,166,44],[248,10,167,12],[248,11,167,13],[248,12,168,12],[248,19,168,19,"error"],[248,24,168,24],[248,26,168,26],[249,12,169,16],[249,16,169,20],[249,17,169,21],[249,18,169,22],[249,20,169,24,"errors_1"],[249,28,169,32],[249,29,169,33,"isStorageError"],[249,43,169,47],[249,45,169,49,"error"],[249,50,169,54],[249,51,169,55],[249,53,169,57],[250,14,170,20],[250,21,170,27],[251,16,170,29,"data"],[251,20,170,33],[251,22,170,35],[251,26,170,39],[252,16,170,41,"error"],[253,14,170,47],[253,15,170,48],[254,12,171,16],[255,12,172,16],[255,18,172,22,"error"],[255,23,172,27],[256,10,173,12],[257,8,174,8],[257,9,174,9],[257,10,174,10],[258,6,175,4],[259,4,175,5],[260,2,175,5],[261,2,177,0,"exports"],[261,9,177,7],[261,10,177,8,"default"],[261,17,177,15],[261,20,177,18,"StorageBucketApi"],[261,36,177,34],[262,0,177,35],[262,3]],"functionMap":{"names":["<global>","<anonymous>","adopt","P$argument_0","fulfilled","rejected","step","StorageBucketApi","constructor","listBuckets","__awaiter$argument_3","getBucket","createBucket","updateBucket","emptyBucket","deleteBucket"],"mappings":"AAA;4CCC;ICC,kEC,sCD,ID;QGE,2FH;QIC,8FJ;QKC,8GL;CDG;AOM;ICC;KDa;IEI;+CCC;SDW;KFC;IIM;+CDC;SCW;KJC;IKgB;+CFG;SEkB;KLC;IMa;+CHC;SGiB;KNC;IOM;+CJC;SIW;KPC;IQO;+CLC;SKW;KRC;CPC"}},"type":"js/module"}]}