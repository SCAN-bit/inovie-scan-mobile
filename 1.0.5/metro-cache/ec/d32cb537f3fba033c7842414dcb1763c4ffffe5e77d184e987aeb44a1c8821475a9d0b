{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0},"end":{"line":133,"column":1}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"../EventEmitter/NativeEventEmitter","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":15,"column":0},"end":{"line":15,"column":68}}],"key":"FxUYVDH3eq4FUmUOIfY0RLK75tc="}},{"name":"../vendor/emitter/EventEmitter","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":16,"column":0},"end":{"line":16,"column":58}}],"key":"fgDwi/IrVIcBdLV47qHthWsoTIw="}},{"name":"./DebugEnvironment","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":17,"column":0},"end":{"line":17,"column":52}}],"key":"rJ3BuYWWqKfZRHwUK4ElYs1eRYE="}},{"name":"invariant","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":18,"column":0},"end":{"line":18,"column":34}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}},{"name":"./NativeAppearance","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":44,"column":27},"end":{"line":44,"column":56}}],"key":"8Htu4QwBJG6Bf3/qWr43Wso5eM4="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.addChangeListener = addChangeListener;\n  exports.getColorScheme = getColorScheme;\n  exports.setColorScheme = setColorScheme;\n  var _NativeEventEmitter = _interopRequireDefault(require(_dependencyMap[1]));\n  var _EventEmitter = _interopRequireDefault(require(_dependencyMap[2]));\n  var _DebugEnvironment = require(_dependencyMap[3]);\n  var _invariant = _interopRequireDefault(require(_dependencyMap[4]));\n  var lazyState;\n  function getState() {\n    if (lazyState != null) {\n      return lazyState;\n    }\n    var eventEmitter = new _EventEmitter.default();\n    var NativeAppearance = require(_dependencyMap[5]).default;\n    if (NativeAppearance == null) {\n      lazyState = {\n        NativeAppearance: null,\n        appearance: null,\n        eventEmitter\n      };\n    } else {\n      var state = {\n        NativeAppearance,\n        appearance: null,\n        eventEmitter\n      };\n      new _NativeEventEmitter.default(NativeAppearance).addListener('appearanceChanged', newAppearance => {\n        state.appearance = {\n          colorScheme: toColorScheme(newAppearance.colorScheme)\n        };\n        eventEmitter.emit('change', state.appearance);\n      });\n      lazyState = state;\n    }\n    return lazyState;\n  }\n  function getColorScheme() {\n    var colorScheme = null;\n    var state = getState();\n    var NativeAppearance = state.NativeAppearance;\n    if (NativeAppearance != null) {\n      if (state.appearance == null) {\n        state.appearance = {\n          colorScheme: toColorScheme(NativeAppearance.getColorScheme())\n        };\n      }\n      colorScheme = state.appearance.colorScheme;\n    }\n    return colorScheme;\n  }\n  function setColorScheme(colorScheme) {\n    var state = getState();\n    var NativeAppearance = state.NativeAppearance;\n    if (NativeAppearance != null) {\n      NativeAppearance.setColorScheme(colorScheme ?? 'unspecified');\n      state.appearance = {\n        colorScheme: toColorScheme(NativeAppearance.getColorScheme())\n      };\n    }\n  }\n  function addChangeListener(listener) {\n    var _getState = getState(),\n      eventEmitter = _getState.eventEmitter;\n    return eventEmitter.addListener('change', listener);\n  }\n  function toColorScheme(colorScheme) {\n    (0, _invariant.default)(colorScheme === 'dark' || colorScheme === 'light' || colorScheme == null, \"Unrecognized color scheme. Did you mean 'dark', 'light' or null?\");\n    return colorScheme;\n  }\n});","lineCount":75,"map":[[9,2,15,0],[9,6,15,0,"_NativeEventEmitter"],[9,25,15,0],[9,28,15,0,"_interopRequireDefault"],[9,50,15,0],[9,51,15,0,"require"],[9,58,15,0],[9,59,15,0,"_dependencyMap"],[9,73,15,0],[10,2,16,0],[10,6,16,0,"_EventEmitter"],[10,19,16,0],[10,22,16,0,"_interopRequireDefault"],[10,44,16,0],[10,45,16,0,"require"],[10,52,16,0],[10,53,16,0,"_dependencyMap"],[10,67,16,0],[11,2,17,0],[11,6,17,0,"_DebugEnvironment"],[11,23,17,0],[11,26,17,0,"require"],[11,33,17,0],[11,34,17,0,"_dependencyMap"],[11,48,17,0],[12,2,18,0],[12,6,18,0,"_invariant"],[12,16,18,0],[12,19,18,0,"_interopRequireDefault"],[12,41,18,0],[12,42,18,0,"require"],[12,49,18,0],[12,50,18,0,"_dependencyMap"],[12,64,18,0],[13,2,24,0],[13,6,24,4,"lazyState"],[13,15,33,1],[14,2,38,0],[14,11,38,9,"getState"],[14,19,38,17,"getState"],[14,20,38,17],[14,22,38,53],[15,4,39,2],[15,8,39,6,"lazyState"],[15,17,39,15],[15,21,39,19],[15,25,39,23],[15,27,39,25],[16,6,40,4],[16,13,40,11,"lazyState"],[16,22,40,20],[17,4,41,2],[18,4,42,2],[18,8,42,8,"eventEmitter"],[18,20,42,20],[18,23,42,23],[18,27,42,27,"EventEmitter"],[18,48,42,39],[18,49,42,64],[18,50,42,65],[19,4,44,2],[19,8,44,8,"NativeAppearance"],[19,24,44,24],[19,27,44,27,"require"],[19,34,44,34],[19,35,44,34,"_dependencyMap"],[19,49,44,34],[19,52,44,55],[19,53,44,56],[19,54,44,57,"default"],[19,61,44,64],[20,4,45,2],[20,8,45,6,"NativeAppearance"],[20,24,45,22],[20,28,45,26],[20,32,45,30],[20,34,45,32],[21,6,47,4,"lazyState"],[21,15,47,13],[21,18,47,16],[22,8,48,6,"NativeAppearance"],[22,24,48,22],[22,26,48,24],[22,30,48,28],[23,8,49,6,"appearance"],[23,18,49,16],[23,20,49,18],[23,24,49,22],[24,8,50,6,"eventEmitter"],[25,6,51,4],[25,7,51,5],[26,4,52,2],[26,5,52,3],[26,11,52,9],[27,6,53,4],[27,10,53,10,"state"],[27,15,53,48],[27,18,53,51],[28,8,54,6,"NativeAppearance"],[28,24,54,22],[29,8,55,6,"appearance"],[29,18,55,16],[29,20,55,18],[29,24,55,22],[30,8,56,6,"eventEmitter"],[31,6,57,4],[31,7,57,5],[32,6,58,4],[32,10,58,8,"NativeEventEmitter"],[32,37,58,26],[32,38,60,7,"NativeAppearance"],[32,54,60,23],[32,55,60,24],[32,56,60,25,"addListener"],[32,67,60,36],[32,68,60,37],[32,87,60,56],[32,89,60,58,"newAppearance"],[32,102,60,71],[32,106,60,75],[33,8,61,6,"state"],[33,13,61,11],[33,14,61,12,"appearance"],[33,24,61,22],[33,27,61,25],[34,10,62,8,"colorScheme"],[34,21,62,19],[34,23,62,21,"toColorScheme"],[34,36,62,34],[34,37,62,35,"newAppearance"],[34,50,62,48],[34,51,62,49,"colorScheme"],[34,62,62,60],[35,8,63,6],[35,9,63,7],[36,8,64,6,"eventEmitter"],[36,20,64,18],[36,21,64,19,"emit"],[36,25,64,23],[36,26,64,24],[36,34,64,32],[36,36,64,34,"state"],[36,41,64,39],[36,42,64,40,"appearance"],[36,52,64,50],[36,53,64,51],[37,6,65,4],[37,7,65,5],[37,8,65,6],[38,6,66,4,"lazyState"],[38,15,66,13],[38,18,66,16,"state"],[38,23,66,21],[39,4,67,2],[40,4,68,2],[40,11,68,9,"lazyState"],[40,20,68,18],[41,2,69,0],[42,2,76,7],[42,11,76,16,"getColorScheme"],[42,25,76,30,"getColorScheme"],[42,26,76,30],[42,28,76,51],[43,4,84,2],[43,8,84,6,"colorScheme"],[43,19,84,17],[43,22,84,20],[43,26,84,24],[44,4,85,2],[44,8,85,8,"state"],[44,13,85,13],[44,16,85,16,"getState"],[44,24,85,24],[44,25,85,25],[44,26,85,26],[45,4,86,2],[45,8,86,9,"NativeAppearance"],[45,24,86,25],[45,27,86,29,"state"],[45,32,86,34],[45,33,86,9,"NativeAppearance"],[45,49,86,25],[46,4,87,2],[46,8,87,6,"NativeAppearance"],[46,24,87,22],[46,28,87,26],[46,32,87,30],[46,34,87,32],[47,6,88,4],[47,10,88,8,"state"],[47,15,88,13],[47,16,88,14,"appearance"],[47,26,88,24],[47,30,88,28],[47,34,88,32],[47,36,88,34],[48,8,91,6,"state"],[48,13,91,11],[48,14,91,12,"appearance"],[48,24,91,22],[48,27,91,25],[49,10,92,8,"colorScheme"],[49,21,92,19],[49,23,92,21,"toColorScheme"],[49,36,92,34],[49,37,92,35,"NativeAppearance"],[49,53,92,51],[49,54,92,52,"getColorScheme"],[49,68,92,66],[49,69,92,67],[49,70,92,68],[50,8,93,6],[50,9,93,7],[51,6,94,4],[52,6,95,4,"colorScheme"],[52,17,95,15],[52,20,95,18,"state"],[52,25,95,23],[52,26,95,24,"appearance"],[52,36,95,34],[52,37,95,35,"colorScheme"],[52,48,95,46],[53,4,96,2],[54,4,97,2],[54,11,97,9,"colorScheme"],[54,22,97,20],[55,2,98,0],[56,2,103,7],[56,11,103,16,"setColorScheme"],[56,25,103,30,"setColorScheme"],[56,26,103,31,"colorScheme"],[56,37,103,60],[56,39,103,68],[57,4,104,2],[57,8,104,8,"state"],[57,13,104,13],[57,16,104,16,"getState"],[57,24,104,24],[57,25,104,25],[57,26,104,26],[58,4,105,2],[58,8,105,9,"NativeAppearance"],[58,24,105,25],[58,27,105,29,"state"],[58,32,105,34],[58,33,105,9,"NativeAppearance"],[58,49,105,25],[59,4,106,2],[59,8,106,6,"NativeAppearance"],[59,24,106,22],[59,28,106,26],[59,32,106,30],[59,34,106,32],[60,6,107,4,"NativeAppearance"],[60,22,107,20],[60,23,107,21,"setColorScheme"],[60,37,107,35],[60,38,107,36,"colorScheme"],[60,49,107,47],[60,53,107,51],[60,66,107,64],[60,67,107,65],[61,6,108,4,"state"],[61,11,108,9],[61,12,108,10,"appearance"],[61,22,108,20],[61,25,108,23],[62,8,109,6,"colorScheme"],[62,19,109,17],[62,21,109,19,"toColorScheme"],[62,34,109,32],[62,35,109,33,"NativeAppearance"],[62,51,109,49],[62,52,109,50,"getColorScheme"],[62,66,109,64],[62,67,109,65],[62,68,109,66],[63,6,110,4],[63,7,110,5],[64,4,111,2],[65,2,112,0],[66,2,117,7],[66,11,117,16,"addChangeListener"],[66,28,117,33,"addChangeListener"],[66,29,118,2,"listener"],[66,37,118,53],[66,39,119,21],[67,4,120,2],[67,8,120,2,"_getState"],[67,17,120,2],[67,20,120,25,"getState"],[67,28,120,33],[67,29,120,34],[67,30,120,35],[68,6,120,9,"eventEmitter"],[68,18,120,21],[68,21,120,21,"_getState"],[68,30,120,21],[68,31,120,9,"eventEmitter"],[68,43,120,21],[69,4,121,2],[69,11,121,9,"eventEmitter"],[69,23,121,21],[69,24,121,22,"addListener"],[69,35,121,33],[69,36,121,34],[69,44,121,42],[69,46,121,44,"listener"],[69,54,121,52],[69,55,121,53],[70,2,122,0],[71,2,127,0],[71,11,127,9,"toColorScheme"],[71,24,127,22,"toColorScheme"],[71,25,127,23,"colorScheme"],[71,36,127,43],[71,38,127,63],[72,4,128,2],[72,8,128,2,"invariant"],[72,26,128,11],[72,28,129,4,"colorScheme"],[72,39,129,15],[72,44,129,20],[72,50,129,26],[72,54,129,30,"colorScheme"],[72,65,129,41],[72,70,129,46],[72,77,129,53],[72,81,129,57,"colorScheme"],[72,92,129,68],[72,96,129,72],[72,100,129,76],[72,102,130,4],[72,168,131,2],[72,169,131,3],[73,4,132,2],[73,11,132,9,"colorScheme"],[73,22,132,20],[74,2,133,0],[75,0,133,1],[75,3]],"functionMap":{"names":["<global>","getState","NativeEventEmitter.addListener$argument_1","getColorScheme","setColorScheme","addChangeListener","toColorScheme"],"mappings":"AAA;ACqC;0DCsB;KDK;CDI;OGO;CHsB;OIK;CJS;OKK;CLK;AMK"}},"type":"js/module"}]}