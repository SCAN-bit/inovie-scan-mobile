{"dependencies":[{"name":"../Utilities/stringifySafe","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":22},"end":{"line":13,"column":59}}],"key":"rU1vicaS7v4RsnlAku6ieUUv8yY="}},{"name":"invariant","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":14,"column":18},"end":{"line":14,"column":38}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var stringifySafe = require(_dependencyMap[0]).default;\n  var invariant = require(_dependencyMap[1]);\n  function processTransform(transform) {\n    if (typeof transform === 'string') {\n      var regex = new RegExp(/(\\w+)\\(([^)]+)\\)/g);\n      var transformArray = [];\n      var matches;\n      while (matches = regex.exec(transform)) {\n        var _getKeyAndValueFromCS = _getKeyAndValueFromCSSTransform(matches[1], matches[2]),\n          _key = _getKeyAndValueFromCS.key,\n          value = _getKeyAndValueFromCS.value;\n        if (value !== undefined) {\n          transformArray.push({\n            [_key]: value\n          });\n        }\n      }\n      transform = transformArray;\n    }\n    return transform;\n  }\n  var _getKeyAndValueFromCSSTransform = (key, args) => {\n    var argsWithUnitsRegex = new RegExp(/([+-]?\\d+(\\.\\d+)?)([a-zA-Z]+|%)?/g);\n    switch (key) {\n      case 'matrix':\n        return {\n          key,\n          value: args.match(/[+-]?\\d+(\\.\\d+)?/g)?.map(Number)\n        };\n      case 'translate':\n      case 'translate3d':\n        var parsedArgs = [];\n        var missingUnitOfMeasurement = false;\n        var matches;\n        while (matches = argsWithUnitsRegex.exec(args)) {\n          var _value = Number(matches[1]);\n          var _unitOfMeasurement = matches[3];\n          if (_value !== 0 && !_unitOfMeasurement) {\n            missingUnitOfMeasurement = true;\n          }\n          if (_unitOfMeasurement === '%') {\n            parsedArgs.push(`${_value}%`);\n          } else {\n            parsedArgs.push(_value);\n          }\n        }\n        if (parsedArgs?.length === 1) {\n          parsedArgs.push(0);\n        }\n        return {\n          key: 'translate',\n          value: parsedArgs\n        };\n      case 'translateX':\n      case 'translateY':\n      case 'perspective':\n        var argMatches = argsWithUnitsRegex.exec(args);\n        if (!argMatches?.length) {\n          return {\n            key,\n            value: undefined\n          };\n        }\n        var value = Number(argMatches[1]);\n        var unitOfMeasurement = argMatches[3];\n        return {\n          key,\n          value\n        };\n      default:\n        return {\n          key,\n          value: !isNaN(args) ? Number(args) : args\n        };\n    }\n  };\n  module.exports = processTransform;\n});","lineCount":81,"map":[[2,2,11,0],[2,14,11,12],[4,2,13,0],[4,6,13,6,"stringifySafe"],[4,19,13,19],[4,22,13,22,"require"],[4,29,13,29],[4,30,13,29,"_dependencyMap"],[4,44,13,29],[4,47,13,58],[4,48,13,59],[4,49,13,60,"default"],[4,56,13,67],[5,2,14,0],[5,6,14,6,"invariant"],[5,15,14,15],[5,18,14,18,"require"],[5,25,14,25],[5,26,14,25,"_dependencyMap"],[5,40,14,25],[5,43,14,37],[5,44,14,38],[6,2,24,0],[6,11,24,9,"processTransform"],[6,27,24,25,"processTransform"],[6,28,25,2,"transform"],[6,37,25,35],[6,39,26,33],[7,4,27,2],[7,8,27,6],[7,15,27,13,"transform"],[7,24,27,22],[7,29,27,27],[7,37,27,35],[7,39,27,37],[8,6,28,4],[8,10,28,10,"regex"],[8,15,28,15],[8,18,28,18],[8,22,28,22,"RegExp"],[8,28,28,28],[8,29,28,29],[8,48,28,48],[8,49,28,49],[9,6,29,4],[9,10,29,8,"transformArray"],[9,24,29,37],[9,27,29,40],[9,29,29,42],[10,6,30,4],[10,10,30,8,"matches"],[10,17,30,15],[11,6,32,4],[11,13,32,12,"matches"],[11,20,32,19],[11,23,32,22,"regex"],[11,28,32,27],[11,29,32,28,"exec"],[11,33,32,32],[11,34,32,33,"transform"],[11,43,32,42],[11,44,32,43],[11,46,32,46],[12,8,33,6],[12,12,33,6,"_getKeyAndValueFromCS"],[12,33,33,6],[12,36,33,27,"_getKeyAndValueFromCSSTransform"],[12,67,33,58],[12,68,34,8,"matches"],[12,75,34,15],[12,76,34,16],[12,77,34,17],[12,78,34,18],[12,80,35,8,"matches"],[12,87,35,15],[12,88,35,16],[12,89,35,17],[12,90,36,6],[12,91,36,7],[13,10,33,13,"key"],[13,14,33,16],[13,17,33,16,"_getKeyAndValueFromCS"],[13,38,33,16],[13,39,33,13,"key"],[13,42,33,16],[14,10,33,18,"value"],[14,15,33,23],[14,18,33,23,"_getKeyAndValueFromCS"],[14,39,33,23],[14,40,33,18,"value"],[14,45,33,23],[15,8,38,6],[15,12,38,10,"value"],[15,17,38,15],[15,22,38,20,"undefined"],[15,31,38,29],[15,33,38,31],[16,10,39,8,"transformArray"],[16,24,39,22],[16,25,39,23,"push"],[16,29,39,27],[16,30,39,28],[17,12,39,29],[17,13,39,30,"key"],[17,17,39,33],[17,20,39,36,"value"],[18,10,39,41],[18,11,39,42],[18,12,39,43],[19,8,40,6],[20,6,41,4],[21,6,42,4,"transform"],[21,15,42,13],[21,18,42,16,"transformArray"],[21,32,42,30],[22,4,43,2],[23,4,49,2],[23,11,49,9,"transform"],[23,20,49,18],[24,2,50,0],[25,2,52,0],[25,6,52,6,"_getKeyAndValueFromCSSTransform"],[25,37,71,68],[25,40,71,71,"_getKeyAndValueFromCSSTransform"],[25,41,72,2,"key"],[25,44,72,5],[25,46,73,2,"args"],[25,50,73,6],[25,55,74,5],[26,4,75,2],[26,8,75,8,"argsWithUnitsRegex"],[26,26,75,26],[26,29,75,29],[26,33,75,33,"RegExp"],[26,39,75,39],[26,40,75,40],[26,75,75,75],[26,76,75,76],[27,4,77,2],[27,12,77,10,"key"],[27,15,77,13],[28,6,78,4],[28,11,78,9],[28,19,78,17],[29,8,79,6],[29,15,79,13],[30,10,79,14,"key"],[30,13,79,17],[31,10,79,19,"value"],[31,15,79,24],[31,17,79,26,"args"],[31,21,79,30],[31,22,79,31,"match"],[31,27,79,36],[31,28,79,37],[31,47,79,56],[31,48,79,57],[31,50,79,59,"map"],[31,53,79,62],[31,54,79,63,"Number"],[31,60,79,69],[32,8,79,70],[32,9,79,71],[33,6,80,4],[33,11,80,9],[33,22,80,20],[34,6,81,4],[34,11,81,9],[34,24,81,22],[35,8,82,6],[35,12,82,12,"parsedArgs"],[35,22,82,22],[35,25,82,25],[35,27,82,27],[36,8,83,6],[36,12,83,10,"missingUnitOfMeasurement"],[36,36,83,34],[36,39,83,37],[36,44,83,42],[37,8,85,6],[37,12,85,10,"matches"],[37,19,85,17],[38,8,86,6],[38,15,86,14,"matches"],[38,22,86,21],[38,25,86,24,"argsWithUnitsRegex"],[38,43,86,42],[38,44,86,43,"exec"],[38,48,86,47],[38,49,86,48,"args"],[38,53,86,52],[38,54,86,53],[38,56,86,56],[39,10,87,8],[39,14,87,14,"value"],[39,20,87,19],[39,23,87,22,"Number"],[39,29,87,28],[39,30,87,29,"matches"],[39,37,87,36],[39,38,87,37],[39,39,87,38],[39,40,87,39],[39,41,87,40],[40,10,88,8],[40,14,88,14,"unitOfMeasurement"],[40,32,88,31],[40,35,88,34,"matches"],[40,42,88,41],[40,43,88,42],[40,44,88,43],[40,45,88,44],[41,10,90,8],[41,14,90,12,"value"],[41,20,90,17],[41,25,90,22],[41,26,90,23],[41,30,90,27],[41,31,90,28,"unitOfMeasurement"],[41,49,90,45],[41,51,90,47],[42,12,91,10,"missingUnitOfMeasurement"],[42,36,91,34],[42,39,91,37],[42,43,91,41],[43,10,92,8],[44,10,94,8],[44,14,94,12,"unitOfMeasurement"],[44,32,94,29],[44,37,94,34],[44,40,94,37],[44,42,94,39],[45,12,95,10,"parsedArgs"],[45,22,95,20],[45,23,95,21,"push"],[45,27,95,25],[45,28,95,26],[45,31,95,29,"value"],[45,37,95,34],[45,40,95,37],[45,41,95,38],[46,10,96,8],[46,11,96,9],[46,17,96,15],[47,12,97,10,"parsedArgs"],[47,22,97,20],[47,23,97,21,"push"],[47,27,97,25],[47,28,97,26,"value"],[47,34,97,31],[47,35,97,32],[48,10,98,8],[49,8,99,6],[50,8,125,6],[50,12,125,10,"parsedArgs"],[50,22,125,20],[50,24,125,22,"length"],[50,30,125,28],[50,35,125,33],[50,36,125,34],[50,38,125,36],[51,10,126,8,"parsedArgs"],[51,20,126,18],[51,21,126,19,"push"],[51,25,126,23],[51,26,126,24],[51,27,126,25],[51,28,126,26],[52,8,127,6],[53,8,129,6],[53,15,129,13],[54,10,129,14,"key"],[54,13,129,17],[54,15,129,19],[54,26,129,30],[55,10,129,32,"value"],[55,15,129,37],[55,17,129,39,"parsedArgs"],[56,8,129,49],[56,9,129,50],[57,6,130,4],[57,11,130,9],[57,23,130,21],[58,6,131,4],[58,11,131,9],[58,23,131,21],[59,6,132,4],[59,11,132,9],[59,24,132,22],[60,8,133,6],[60,12,133,12,"argMatches"],[60,22,133,22],[60,25,133,25,"argsWithUnitsRegex"],[60,43,133,43],[60,44,133,44,"exec"],[60,48,133,48],[60,49,133,49,"args"],[60,53,133,53],[60,54,133,54],[61,8,135,6],[61,12,135,10],[61,13,135,11,"argMatches"],[61,23,135,21],[61,25,135,23,"length"],[61,31,135,29],[61,33,135,31],[62,10,136,8],[62,17,136,15],[63,12,136,16,"key"],[63,15,136,19],[64,12,136,21,"value"],[64,17,136,26],[64,19,136,28,"undefined"],[65,10,136,37],[65,11,136,38],[66,8,137,6],[67,8,139,6],[67,12,139,12,"value"],[67,17,139,17],[67,20,139,20,"Number"],[67,26,139,26],[67,27,139,27,"argMatches"],[67,37,139,37],[67,38,139,38],[67,39,139,39],[67,40,139,40],[67,41,139,41],[68,8,140,6],[68,12,140,12,"unitOfMeasurement"],[68,29,140,29],[68,32,140,32,"argMatches"],[68,42,140,42],[68,43,140,43],[68,44,140,44],[68,45,140,45],[69,8,150,6],[69,15,150,13],[70,10,150,14,"key"],[70,13,150,17],[71,10,150,19,"value"],[72,8,150,24],[72,9,150,25],[73,6,152,4],[74,8,153,6],[74,15,153,13],[75,10,153,14,"key"],[75,13,153,17],[76,10,153,19,"value"],[76,15,153,24],[76,17,153,26],[76,18,153,27,"isNaN"],[76,23,153,32],[76,24,153,33,"args"],[76,28,153,37],[76,29,153,38],[76,32,153,41,"Number"],[76,38,153,47],[76,39,153,48,"args"],[76,43,153,52],[76,44,153,53],[76,47,153,56,"args"],[77,8,153,60],[77,9,153,61],[78,4,154,2],[79,2,155,0],[79,3,155,1],[80,2,294,0,"module"],[80,8,294,6],[80,9,294,7,"exports"],[80,16,294,14],[80,19,294,17,"processTransform"],[80,35,294,33],[81,0,294,34],[81,3]],"functionMap":{"names":["<global>","processTransform","_getKeyAndValueFromCSSTransform","_validateTransforms","transform.forEach$argument_0","_validateTransform"],"mappings":"AAA;ACuB;CD0B;uEEqB;CFoF;AGE;oBCC;GDU;CHC;AKE;CLyH"}},"type":"js/module"}]}