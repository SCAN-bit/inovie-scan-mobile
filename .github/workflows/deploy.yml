# GitHub Actions - Build et Release APK Mobile
name: ðŸš€ Build & Release APK

on:
  push:
    branches: [ main ]
    # Se dÃ©clenche sur tous les pushes vers main

jobs:
  # ðŸ“± Build & Release APK (automatique)
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Setup Gradle
        run: |
          cd android
          chmod +x gradlew
          # Force Gradle 8.7 - Remove any existing Gradle cache first
          rm -rf ~/.gradle/wrapper/dists/gradle-8.10.2-*
          sed -i 's/gradle-.*-all.zip/gradle-8.7-all.zip/g' gradle/wrapper/gradle-wrapper.properties
          # Force Kotlin 1.9.25 - Remove existing and add new
          sed -i '/kotlin.version/d' gradle.properties
          sed -i '/android.suppressKotlinVersionCompatibilityCheck/d' gradle.properties
          echo "kotlin.version=1.9.25" >> gradle.properties
          echo "android.suppressKotlinVersionCompatibilityCheck=true" >> gradle.properties
          # Force suppression of Kotlin version check in build.gradle
          sed -i 's/kotlinVersion = .*/kotlinVersion = "1.9.25"/g' build.gradle
          # Add system property to suppress Kotlin version check
          echo "systemProp.kotlin.version=1.9.25" >> gradle.properties
          # Verify the changes
          echo "=== gradle.properties content ==="
          cat gradle.properties
        
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
        
      - name: Install Node.js dependencies
        run: |
          npm install
          
      - name: Pre-build setup
        run: |
          # CrÃ©er les dossiers nÃ©cessaires
          mkdir -p android/build/generated/autolinking
          mkdir -p android/app/build/generated
          
          # GÃ©nÃ©rer le fichier autolinking.json complet avec packageName
          cat > android/build/generated/autolinking/autolinking.json << 'EOF'
          {
            "reactNativePath": "../node_modules/react-native",
            "project": {
              "android": {
                "packageName": "SCAN.mobile",
                "sourceDir": "../android/app",
                "appName": "SCAN"
              }
            },
            "dependencies": {}
          }
          EOF
          
          # Corriger la configuration du splash screen pour Android 12+
          # Ajouter la dÃ©pendance splash screen dans build.gradle
          sed -i '/dependencies {/a\    implementation "androidx.core:core-splashscreen:1.0.1"' android/app/build.gradle
          
          # CrÃ©er MainActivity.kt corrigÃ©
          cat > android/app/src/main/java/SCAN/mobile/MainActivity.kt << 'EOF'
          package SCAN.mobile
          
          import android.os.Build
          import android.os.Bundle
          
          import com.facebook.react.ReactActivity
          import com.facebook.react.ReactActivityDelegate
          import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.fabricEnabled
          import com.facebook.react.defaults.DefaultReactActivityDelegate
          
          class MainActivity : ReactActivity() {
            override fun onCreate(savedInstanceState: Bundle?) {
              super.onCreate(savedInstanceState)
            }
          
            override fun getMainComponentName(): String = "main"
          
            override fun createReactActivityDelegate(): ReactActivityDelegate {
              return DefaultReactActivityDelegate(
                  this,
                  mainComponentName,
                  fabricEnabled
              )
            }
          
            override fun invokeDefaultOnBackPressed() {
                if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.R) {
                    if (!moveTaskToBack(false)) {
                        super.invokeDefaultOnBackPressed()
                    }
                    return
                }
                super.invokeDefaultOnBackPressed()
            }
          }
          EOF
          
          # CrÃ©er MainApplication.kt corrigÃ©
          cat > android/app/src/main/java/SCAN/mobile/MainApplication.kt << 'EOF'
          package SCAN.mobile
          
          import android.app.Application
          import android.content.res.Configuration
          
          import com.facebook.react.PackageList
          import com.facebook.react.ReactApplication
          import com.facebook.react.ReactNativeHost
          import com.facebook.react.ReactPackage
          import com.facebook.react.defaults.DefaultReactNativeHost
          import com.facebook.soloader.SoLoader
          
          class MainApplication : Application(), ReactApplication {
          
            override val reactNativeHost: ReactNativeHost = object : DefaultReactNativeHost(this) {
              override fun getPackages(): List<ReactPackage> {
                val packages = PackageList(this).packages
                return packages
              }
          
              override fun getJSMainModuleName(): String = ".expo/.virtual-metro-entry"
              override fun getUseDeveloperSupport(): Boolean = BuildConfig.DEBUG
              override val isNewArchEnabled: Boolean = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED
              override val isHermesEnabled: Boolean = BuildConfig.IS_HERMES_ENABLED
            }
          
            override fun onCreate() {
              super.onCreate()
              SoLoader.init(this, false)
            }
          
            override fun onConfigurationChanged(newConfig: Configuration) {
              super.onConfigurationChanged(newConfig)
            }
          }
          EOF
          
      - name: Build APK
        run: |
          cd android
          chmod +x gradlew
          ./gradlew assembleRelease
          
      - name: Get version from file
        id: version
        run: echo "version=$(cat version.txt)" >> $GITHUB_OUTPUT
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: "Version ${{ steps.version.outputs.version }}"
          body: |
            ðŸš€ Nouvelle version automatique
            
            ðŸ“± **APK Android :** TÃ©lÃ©chargez directement
            
            ### Changements :
            - Voir commits rÃ©cents pour les dÃ©tails
            
          files: |
            android/app/build/outputs/apk/release/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
