# GitHub Actions - Build et Release APK Mobile
name: ðŸš€ Build & Release APK

on:
  push:
    branches: [ main ]
    # Se dÃ©clenche sur tous les pushes vers main

jobs:
  # ðŸ“± Build & Release APK (automatique)
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Setup Gradle
        run: |
          cd android
          chmod +x gradlew
          # Force Gradle 8.7 - Remove any existing Gradle cache first
          rm -rf ~/.gradle/wrapper/dists/gradle-8.10.2-*
          sed -i 's/gradle-.*-all.zip/gradle-8.7-all.zip/g' gradle/wrapper/gradle-wrapper.properties
          # Force Kotlin 1.9.25 - Remove existing and add new
          sed -i '/kotlin.version/d' gradle.properties
          sed -i '/android.suppressKotlinVersionCompatibilityCheck/d' gradle.properties
          echo "kotlin.version=1.9.25" >> gradle.properties
          echo "android.suppressKotlinVersionCompatibilityCheck=true" >> gradle.properties
          # Force suppression of Kotlin version check in build.gradle
          sed -i 's/kotlinVersion = .*/kotlinVersion = "1.9.25"/g' build.gradle
          # Add system property to suppress Kotlin version check
          echo "systemProp.kotlin.version=1.9.25" >> gradle.properties
          # Verify the changes
          echo "=== gradle.properties content ==="
          cat gradle.properties
        
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
        
      - name: Install Node.js dependencies
        run: |
          npm install
          
      - name: Pre-build setup
        run: |
          # CrÃ©er les dossiers nÃ©cessaires
          mkdir -p android/build/generated/autolinking
          mkdir -p android/app/build/generated
          
          # GÃ©nÃ©rer le fichier autolinking.json complet avec packageName
          cat > android/build/generated/autolinking/autolinking.json << 'EOF'
          {
            "reactNativePath": "../node_modules/react-native",
            "project": {
              "android": {
                "packageName": "SCAN.mobile",
                "sourceDir": "../android/app",
                "appName": "SCAN"
              }
            },
            "dependencies": {}
          }
          EOF
          
          # Corriger la configuration du splash screen pour Android 12+
          # Ajouter la dÃ©pendance splash screen dans build.gradle
          sed -i '/dependencies {/a\    implementation "androidx.core:core-splashscreen:1.0.1"' android/app/build.gradle
          
          # Supprimer les anciens fichiers Kotlin s'ils existent
          rm -f android/app/src/main/java/SCAN/mobile/MainActivity.kt
          rm -f android/app/src/main/java/SCAN/mobile/MainApplication.kt
          
          # CrÃ©er MainActivity.java avec Java + JSC
          cat > android/app/src/main/java/SCAN/mobile/MainActivity.java << 'EOF'
          package SCAN.mobile;
          
          import android.os.Build;
          import android.os.Bundle;
          
          import com.facebook.react.ReactActivity;
          import com.facebook.react.ReactActivityDelegate;
          import com.facebook.react.defaults.DefaultReactActivityDelegate;
          
          public class MainActivity extends ReactActivity {
            @Override
            protected void onCreate(Bundle savedInstanceState) {
              super.onCreate(savedInstanceState);
            }
          
            @Override
            protected String getMainComponentName() {
              return "main";
            }
          
            @Override
            protected ReactActivityDelegate createReactActivityDelegate() {
              return new DefaultReactActivityDelegate(
                  this,
                  getMainComponentName(),
                  false // isNewArchitectureEnabled
              );
            }
          
            @Override
            public void invokeDefaultOnBackPressed() {
                if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.R) {
                    if (!moveTaskToBack(false)) {
                        super.invokeDefaultOnBackPressed();
                    }
                    return;
                }
                super.invokeDefaultOnBackPressed();
            }
          }
          EOF
          
          # CrÃ©er MainApplication.java avec Java + JSC
          cat > android/app/src/main/java/SCAN/mobile/MainApplication.java << 'EOF'
          package SCAN.mobile;
          
          import android.app.Application;
          import android.content.res.Configuration;
          
          import com.facebook.react.PackageList;
          import com.facebook.react.ReactApplication;
          import com.facebook.react.ReactNativeHost;
          import com.facebook.react.ReactPackage;
          import com.facebook.react.defaults.DefaultReactNativeHost;
          import com.facebook.soloader.SoLoader;
          
          import java.util.List;
          
          public class MainApplication extends Application implements ReactApplication {
          
            private final ReactNativeHost mReactNativeHost = new DefaultReactNativeHost(this) {
              @Override
              public boolean getUseDeveloperSupport() {
                return BuildConfig.DEBUG;
              }
          
              @Override
              protected List<ReactPackage> getPackages() {
                @SuppressWarnings("UnnecessaryLocalVariable")
                List<ReactPackage> packages = new PackageList(this).getPackages();
                return packages;
              }
          
              @Override
              protected String getJSMainModuleName() {
                return ".expo/.virtual-metro-entry";
              }
          
              @Override
              public boolean isNewArchEnabled() {
                return false;
              }
          
              @Override
              public Boolean isHermesEnabled() {
                return false;
              }
            };
          
            @Override
            public ReactNativeHost getReactNativeHost() {
              return mReactNativeHost;
            }
          
            @Override
            public void onCreate() {
              super.onCreate();
              SoLoader.init(this, false);
            }
          
            @Override
            public void onConfigurationChanged(Configuration newConfig) {
              super.onConfigurationChanged(newConfig);
            }
          }
          EOF
          
          # Garder Expo SDK 52 et React Native 0.75.4
          # Pas de changement de versions - garder la config qui fonctionne en web
          
          # DÃ©sactiver TOUS les moteurs JavaScript natifs
          echo "hermesEnabled=false" >> android/gradle.properties
          echo "android.enableHermes=false" >> android/gradle.properties
          echo "android.enableJSC=false" >> android/gradle.properties
          echo "android.enableDefaultJSExecutor=true" >> android/gradle.properties
          
          # Ne pas ajouter de dÃ©pendances JavaScript natives
          
          # Forcer la gÃ©nÃ©ration des modules Expo
          npx expo install --fix
          
      - name: Build APK
        run: |
          cd android
          chmod +x gradlew
          ./gradlew assembleRelease
          
          # Renommer l'APK avec version et build number
          VERSION_CODE=$(grep '"versionCode"' ../app.json | sed 's/.*: *\([0-9]*\).*/\1/')
          VERSION_NAME=$(grep '"version"' ../app.json | sed 's/.*: *"\([^"]*\)".*/\1/')
          NEW_NAME="SCAN-v${VERSION_NAME}-build${VERSION_CODE}.apk"
          cp app/build/outputs/apk/release/app-release.apk app/build/outputs/apk/release/${NEW_NAME}
          echo "APK renommÃ©: ${NEW_NAME}"
          
      - name: Get version from app.json
        id: version
        run: |
          VERSION_CODE=$(grep '"versionCode"' app.json | sed 's/.*: *\([0-9]*\).*/\1/')
          VERSION_NAME=$(grep '"version"' app.json | sed 's/.*: *"\([^"]*\)".*/\1/')
          echo "version=${VERSION_NAME}-build${VERSION_CODE}" >> $GITHUB_OUTPUT
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: "Version ${{ steps.version.outputs.version }}"
          body: |
            ðŸš€ Nouvelle version automatique
            
            ðŸ“± **APK Android :** TÃ©lÃ©chargez directement
            
            ### Changements :
            - Voir commits rÃ©cents pour les dÃ©tails
            
          files: |
            android/app/build/outputs/apk/release/SCAN-v*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
