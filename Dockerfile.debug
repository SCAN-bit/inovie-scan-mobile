# Dockerfile pour APK debug rapide
FROM node:18-slim

# Installer dépendances système
RUN apt-get update && apt-get install -y \
    openjdk-17-jdk \
    curl \
    unzip \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Variables Java
ENV JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64

# Variables Android SDK
ENV ANDROID_HOME=/opt/android-sdk
ENV ANDROID_SDK_ROOT=/opt/android-sdk
ENV PATH=${PATH}:${ANDROID_HOME}/cmdline-tools/latest/bin:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/build-tools/34.0.0

# Installer Android SDK minimal pour debug
RUN mkdir -p ${ANDROID_HOME} && \
    curl -o sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip && \
    unzip sdk-tools.zip -d ${ANDROID_HOME} && \
    mv ${ANDROID_HOME}/cmdline-tools ${ANDROID_HOME}/cmdline-tools-temp && \
    mkdir -p ${ANDROID_HOME}/cmdline-tools/latest && \
    mv ${ANDROID_HOME}/cmdline-tools-temp/* ${ANDROID_HOME}/cmdline-tools/latest/ && \
    rm -rf sdk-tools.zip ${ANDROID_HOME}/cmdline-tools-temp && \
    yes | ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --licenses && \
    ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager \
    "platform-tools" \
    "platforms;android-34" \
    "build-tools;34.0.0"

# Variables optimisées pour debug (plus rapide)
ENV GRADLE_OPTS="-Dorg.gradle.jvmargs=-Xmx2g -Dorg.gradle.daemon=false"

WORKDIR /app

# Copier et installer dépendances
COPY package*.json app.json eas.json ./
RUN npm ci

# Copier le code source
COPY . .

# Nettoyer et prebuild Android
RUN rm -rf android || true
RUN npx expo prebuild --platform android --clean

# Build APK debug
WORKDIR /app/android
RUN ./gradlew assembleDebug --no-daemon

# Vérifier l'APK debug
RUN ls -la app/build/outputs/apk/debug/ && \
    echo "✅ APK debug créé : $(ls -la app/build/outputs/apk/debug/app-debug.apk)"

CMD ["echo", "APK debug prêt dans app/build/outputs/apk/debug/"] 