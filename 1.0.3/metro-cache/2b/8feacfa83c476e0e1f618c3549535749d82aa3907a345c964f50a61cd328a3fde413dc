{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":213,"column":0,"index":6071}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":213,"column":0,"index":6071}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":10,"column":0,"index":204},"end":{"line":10,"column":55,"index":259}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react-native","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":11,"column":0,"index":260},"end":{"line":11,"column":38,"index":298}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"./internal/defaultConfiguration","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":12,"column":0,"index":299},"end":{"line":12,"column":68,"index":367}}],"key":"Q+EHYDa3DcqdFVSg04IGBOEjhcw="}},{"name":"./internal/nativeInterface","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":0,"index":368},"end":{"line":13,"column":57,"index":425}}],"key":"OP10h8xyCBLDwctlA5RW/tE//Fc="}},{"name":"./internal/state","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":14,"column":0,"index":426},"end":{"line":14,"column":37,"index":463}}],"key":"FgeQ1qcKXWVJ2jJ4fWamK0nvHh8="}},{"name":"./internal/types","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":15,"column":0,"index":464},"end":{"line":15,"column":42,"index":506}}],"key":"4Ol5Xshq2K63QIL4rwuf7cXLdg4="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _exportNames = {\n    configure: true,\n    fetch: true,\n    refresh: true,\n    addEventListener: true,\n    useNetInfo: true,\n    useNetInfoInstance: true\n  };\n  exports.addEventListener = addEventListener;\n  exports.configure = configure;\n  exports.default = undefined;\n  exports.fetch = fetch;\n  exports.refresh = refresh;\n  exports.useNetInfo = useNetInfo;\n  exports.useNetInfoInstance = useNetInfoInstance;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _react = require(_dependencyMap[2]);\n  var _reactNative = require(_dependencyMap[3]);\n  var _defaultConfiguration = _interopRequireDefault(require(_dependencyMap[4]));\n  var _nativeInterface = _interopRequireDefault(require(_dependencyMap[5]));\n  var _state2 = _interopRequireDefault(require(_dependencyMap[6]));\n  var Types = _interopRequireWildcard(require(_dependencyMap[7]));\n  Object.keys(Types).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === Types[key]) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function () {\n        return Types[key];\n      }\n    });\n  });\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  /**\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   */\n\n  // Stores the currently used configuration\n  var _configuration = _defaultConfiguration.default;\n\n  // Stores the singleton reference to the state manager\n  var _state = null;\n  var createState = () => {\n    return new _state2.default(_configuration);\n  };\n\n  // Track ongoing requests\n  var isRequestInProgress = false;\n  var requestQueue = [];\n\n  /**\n   * Configures the library with the given configuration. Note that calling this will stop all\n   * previously added listeners from being called again. It is best to call this right when your\n   * application is started to avoid issues. The configuration sets up a global singleton instance.\n   *\n   * @param configuration The new configuration to set.\n   */\n  function configure(configuration) {\n    _configuration = {\n      ..._defaultConfiguration.default,\n      ...configuration\n    };\n    if (_state) {\n      _state.tearDown();\n      _state = createState();\n    }\n  }\n\n  /**\n   * Returns a `Promise` that resolves to a `NetInfoState` object.\n   * This function operates on the global singleton instance configured using `configure()`\n   *\n   * @param [requestedInterface] interface from which to obtain the information\n   *\n   * @returns A Promise which contains the current connection state.\n   */\n  function fetch(requestedInterface) {\n    if (!_state) {\n      _state = createState();\n    }\n    return _state.latest(requestedInterface);\n  }\n\n  /**\n   * Force-refreshes the internal state of the global singleton managed by this library.\n   *\n   * @returns A Promise which contains the updated connection state.\n   */\n  function refresh() {\n    if (!_state) {\n      _state = createState();\n    }\n\n    // If a request is already in progress, return a promise that will resolve when the current request finishes\n    if (isRequestInProgress) {\n      return new Promise(resolve => {\n        requestQueue.push(resolve);\n      });\n    }\n    isRequestInProgress = true;\n    return _state._fetchCurrentState().then(result => {\n      requestQueue.forEach(resolve => resolve(result));\n      requestQueue = [];\n      return result;\n    }).finally(() => {\n      isRequestInProgress = false;\n    });\n  }\n\n  /**\n   * Subscribe to the global singleton's connection information. The callback is called with a parameter of type\n   * [`NetInfoState`](README.md#netinfostate) whenever the connection state changes. Your listener\n   * will be called with the latest information soon after you subscribe and then with any\n   * subsequent changes afterwards. You should not assume that the listener is called in the same\n   * way across devices or platforms.\n   *\n   * @param listener The listener which is called when the network state changes.\n   *\n   * @returns A function which can be called to unsubscribe.\n   */\n  function addEventListener(listener) {\n    if (!_state) {\n      _state = createState();\n    }\n    _state.add(listener);\n    return () => {\n      _state && _state.remove(listener);\n    };\n  }\n\n  /**\n   * A React Hook into this library's singleton which updates when the connection state changes.\n   *\n   * @param {Partial<Types.NetInfoConfiguration>} configuration - Configure the isolated network checker managed by this hook\n   *\n   * @returns The connection state.\n   */\n  function useNetInfo(configuration) {\n    if (configuration) {\n      configure(configuration);\n    }\n    var _useState = (0, _react.useState)({\n        type: Types.NetInfoStateType.unknown,\n        isConnected: null,\n        isInternetReachable: null,\n        details: null\n      }),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      netInfo = _useState2[0],\n      setNetInfo = _useState2[1];\n    (0, _react.useEffect)(() => {\n      var unsubscribe = addEventListener(setNetInfo);\n      return () => unsubscribe();\n    }, []);\n    return netInfo;\n  }\n\n  /**\n   * A React Hook which manages an isolated instance of the network info manager.\n   * This is not a hook into a singleton shared state. NetInfo.configure, NetInfo.addEventListener,\n   * NetInfo.fetch, NetInfo.refresh are performed on a global singleton and have no affect on this hook.\n   * @param {boolean} isPaused - Pause the internal network checks.\n   * @param {Partial<Types.NetInfoConfiguration>} configuration - Configure the isolated network checker managed by this hook\n   *\n   * @returns the netInfo state and a refresh function\n   */\n  function useNetInfoInstance() {\n    var isPaused = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var configuration = arguments.length > 1 ? arguments[1] : undefined;\n    var _useState3 = (0, _react.useState)(),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      networkInfoManager = _useState4[0],\n      setNetworkInfoManager = _useState4[1];\n    var _useState5 = (0, _react.useState)({\n        type: Types.NetInfoStateType.unknown,\n        isConnected: null,\n        isInternetReachable: null,\n        details: null\n      }),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      netInfo = _useState6[0],\n      setNetInfo = _useState6[1];\n    (0, _react.useEffect)(() => {\n      if (isPaused) {\n        return;\n      }\n      var config = {\n        ..._defaultConfiguration.default,\n        ...configuration\n      };\n      var state = new _state2.default(config);\n      setNetworkInfoManager(state);\n      state.add(setNetInfo);\n      return state.tearDown;\n    }, [isPaused, configuration]);\n    var refresh = (0, _react.useCallback)(() => {\n      if (networkInfoManager && !isRequestInProgress) {\n        isRequestInProgress = true;\n        networkInfoManager._fetchCurrentState().finally(() => {\n          isRequestInProgress = false;\n        });\n      }\n    }, [networkInfoManager]);\n    return {\n      netInfo,\n      refresh\n    };\n  }\n  var _default = exports.default = {\n    configure,\n    fetch,\n    refresh,\n    addEventListener,\n    useNetInfo,\n    useNetInfoInstance\n  };\n});","lineCount":228,"map":[[22,2,10,0],[22,6,10,0,"_react"],[22,12,10,0],[22,15,10,0,"require"],[22,22,10,0],[22,23,10,0,"_dependencyMap"],[22,37,10,0],[23,2,11,0],[23,6,11,0,"_reactNative"],[23,18,11,0],[23,21,11,0,"require"],[23,28,11,0],[23,29,11,0,"_dependencyMap"],[23,43,11,0],[24,2,12,0],[24,6,12,0,"_defaultConfiguration"],[24,27,12,0],[24,30,12,0,"_interopRequireDefault"],[24,52,12,0],[24,53,12,0,"require"],[24,60,12,0],[24,61,12,0,"_dependencyMap"],[24,75,12,0],[25,2,13,0],[25,6,13,0,"_nativeInterface"],[25,22,13,0],[25,25,13,0,"_interopRequireDefault"],[25,47,13,0],[25,48,13,0,"require"],[25,55,13,0],[25,56,13,0,"_dependencyMap"],[25,70,13,0],[26,2,14,0],[26,6,14,0,"_state2"],[26,13,14,0],[26,16,14,0,"_interopRequireDefault"],[26,38,14,0],[26,39,14,0,"require"],[26,46,14,0],[26,47,14,0,"_dependencyMap"],[26,61,14,0],[27,2,15,0],[27,6,15,0,"Types"],[27,11,15,0],[27,14,15,0,"_interopRequireWildcard"],[27,37,15,0],[27,38,15,0,"require"],[27,45,15,0],[27,46,15,0,"_dependencyMap"],[27,60,15,0],[28,2,203,0,"Object"],[28,8,203,0],[28,9,203,0,"keys"],[28,13,203,0],[28,14,203,0,"Types"],[28,19,203,0],[28,21,203,0,"forEach"],[28,28,203,0],[28,39,203,0,"key"],[28,42,203,0],[29,4,203,0],[29,8,203,0,"key"],[29,11,203,0],[29,29,203,0,"key"],[29,32,203,0],[30,4,203,0],[30,8,203,0,"Object"],[30,14,203,0],[30,15,203,0,"prototype"],[30,24,203,0],[30,25,203,0,"hasOwnProperty"],[30,39,203,0],[30,40,203,0,"call"],[30,44,203,0],[30,45,203,0,"_exportNames"],[30,57,203,0],[30,59,203,0,"key"],[30,62,203,0],[31,4,203,0],[31,8,203,0,"key"],[31,11,203,0],[31,15,203,0,"exports"],[31,22,203,0],[31,26,203,0,"exports"],[31,33,203,0],[31,34,203,0,"key"],[31,37,203,0],[31,43,203,0,"Types"],[31,48,203,0],[31,49,203,0,"key"],[31,52,203,0],[32,4,203,0,"Object"],[32,10,203,0],[32,11,203,0,"defineProperty"],[32,25,203,0],[32,26,203,0,"exports"],[32,33,203,0],[32,35,203,0,"key"],[32,38,203,0],[33,6,203,0,"enumerable"],[33,16,203,0],[34,6,203,0,"get"],[34,9,203,0],[34,20,203,0,"get"],[34,21,203,0],[35,8,203,0],[35,15,203,0,"Types"],[35,20,203,0],[35,21,203,0,"key"],[35,24,203,0],[36,6,203,0],[37,4,203,0],[38,2,203,0],[39,2,203,33],[39,11,203,33,"_interopRequireWildcard"],[39,35,203,33,"e"],[39,36,203,33],[39,38,203,33,"t"],[39,39,203,33],[39,68,203,33,"WeakMap"],[39,75,203,33],[39,81,203,33,"r"],[39,82,203,33],[39,89,203,33,"WeakMap"],[39,96,203,33],[39,100,203,33,"n"],[39,101,203,33],[39,108,203,33,"WeakMap"],[39,115,203,33],[39,127,203,33,"_interopRequireWildcard"],[39,150,203,33],[39,162,203,33,"_interopRequireWildcard"],[39,163,203,33,"e"],[39,164,203,33],[39,166,203,33,"t"],[39,167,203,33],[39,176,203,33,"t"],[39,177,203,33],[39,181,203,33,"e"],[39,182,203,33],[39,186,203,33,"e"],[39,187,203,33],[39,188,203,33,"__esModule"],[39,198,203,33],[39,207,203,33,"e"],[39,208,203,33],[39,214,203,33,"o"],[39,215,203,33],[39,217,203,33,"i"],[39,218,203,33],[39,220,203,33,"f"],[39,221,203,33],[39,226,203,33,"__proto__"],[39,235,203,33],[39,243,203,33,"default"],[39,250,203,33],[39,252,203,33,"e"],[39,253,203,33],[39,270,203,33,"e"],[39,271,203,33],[39,294,203,33,"e"],[39,295,203,33],[39,320,203,33,"e"],[39,321,203,33],[39,330,203,33,"f"],[39,331,203,33],[39,337,203,33,"o"],[39,338,203,33],[39,341,203,33,"t"],[39,342,203,33],[39,345,203,33,"n"],[39,346,203,33],[39,349,203,33,"r"],[39,350,203,33],[39,358,203,33,"o"],[39,359,203,33],[39,360,203,33,"has"],[39,363,203,33],[39,364,203,33,"e"],[39,365,203,33],[39,375,203,33,"o"],[39,376,203,33],[39,377,203,33,"get"],[39,380,203,33],[39,381,203,33,"e"],[39,382,203,33],[39,385,203,33,"o"],[39,386,203,33],[39,387,203,33,"set"],[39,390,203,33],[39,391,203,33,"e"],[39,392,203,33],[39,394,203,33,"f"],[39,395,203,33],[39,409,203,33,"_t"],[39,411,203,33],[39,415,203,33,"e"],[39,416,203,33],[39,432,203,33,"_t"],[39,434,203,33],[39,441,203,33,"hasOwnProperty"],[39,455,203,33],[39,456,203,33,"call"],[39,460,203,33],[39,461,203,33,"e"],[39,462,203,33],[39,464,203,33,"_t"],[39,466,203,33],[39,473,203,33,"i"],[39,474,203,33],[39,478,203,33,"o"],[39,479,203,33],[39,482,203,33,"Object"],[39,488,203,33],[39,489,203,33,"defineProperty"],[39,503,203,33],[39,508,203,33,"Object"],[39,514,203,33],[39,515,203,33,"getOwnPropertyDescriptor"],[39,539,203,33],[39,540,203,33,"e"],[39,541,203,33],[39,543,203,33,"_t"],[39,545,203,33],[39,552,203,33,"i"],[39,553,203,33],[39,554,203,33,"get"],[39,557,203,33],[39,561,203,33,"i"],[39,562,203,33],[39,563,203,33,"set"],[39,566,203,33],[39,570,203,33,"o"],[39,571,203,33],[39,572,203,33,"f"],[39,573,203,33],[39,575,203,33,"_t"],[39,577,203,33],[39,579,203,33,"i"],[39,580,203,33],[39,584,203,33,"f"],[39,585,203,33],[39,586,203,33,"_t"],[39,588,203,33],[39,592,203,33,"e"],[39,593,203,33],[39,594,203,33,"_t"],[39,596,203,33],[39,607,203,33,"f"],[39,608,203,33],[39,613,203,33,"e"],[39,614,203,33],[39,616,203,33,"t"],[39,617,203,33],[40,2,1,0],[41,0,2,0],[42,0,3,0],[43,0,4,0],[44,0,5,0],[45,0,6,0],[46,0,7,0],[47,0,8,0],[49,2,17,0],[50,2,18,0],[50,6,18,4,"_configuration"],[50,20,18,18],[50,23,18,21,"DEFAULT_CONFIGURATION"],[50,52,18,42],[52,2,20,0],[53,2,21,0],[53,6,21,4,"_state"],[53,12,21,24],[53,15,21,27],[53,19,21,31],[54,2,22,0],[54,6,22,6,"createState"],[54,17,22,17],[54,20,22,20,"createState"],[54,21,22,20],[54,26,22,33],[55,4,23,2],[55,11,23,9],[55,15,23,13,"State"],[55,30,23,18],[55,31,23,19,"_configuration"],[55,45,23,33],[55,46,23,34],[56,2,24,0],[56,3,24,1],[58,2,26,0],[59,2,27,0],[59,6,27,4,"isRequestInProgress"],[59,25,27,23],[59,28,27,26],[59,33,27,31],[60,2,28,0],[60,6,28,4,"requestQueue"],[60,18,28,57],[60,21,28,60],[60,23,28,62],[62,2,30,0],[63,0,31,0],[64,0,32,0],[65,0,33,0],[66,0,34,0],[67,0,35,0],[68,0,36,0],[69,2,37,7],[69,11,37,16,"configure"],[69,20,37,25,"configure"],[69,21,38,2,"configuration"],[69,34,38,52],[69,36,39,8],[70,4,40,2,"_configuration"],[70,18,40,16],[70,21,40,19],[71,6,41,4],[71,9,41,7,"DEFAULT_CONFIGURATION"],[71,38,41,28],[72,6,42,4],[72,9,42,7,"configuration"],[73,4,43,2],[73,5,43,3],[74,4,45,2],[74,8,45,6,"_state"],[74,14,45,12],[74,16,45,14],[75,6,46,4,"_state"],[75,12,46,10],[75,13,46,11,"tearDown"],[75,21,46,19],[75,22,46,20],[75,23,46,21],[76,6,47,4,"_state"],[76,12,47,10],[76,15,47,13,"createState"],[76,26,47,24],[76,27,47,25],[76,28,47,26],[77,4,48,2],[78,2,53,0],[80,2,55,0],[81,0,56,0],[82,0,57,0],[83,0,58,0],[84,0,59,0],[85,0,60,0],[86,0,61,0],[87,0,62,0],[88,2,63,7],[88,11,63,16,"fetch"],[88,16,63,21,"fetch"],[88,17,64,2,"requestedInterface"],[88,35,64,29],[88,37,65,31],[89,4,66,2],[89,8,66,6],[89,9,66,7,"_state"],[89,15,66,13],[89,17,66,15],[90,6,67,4,"_state"],[90,12,67,10],[90,15,67,13,"createState"],[90,26,67,24],[90,27,67,25],[90,28,67,26],[91,4,68,2],[92,4,69,2],[92,11,69,9,"_state"],[92,17,69,15],[92,18,69,16,"latest"],[92,24,69,22],[92,25,69,23,"requestedInterface"],[92,43,69,41],[92,44,69,42],[93,2,70,0],[95,2,72,0],[96,0,73,0],[97,0,74,0],[98,0,75,0],[99,0,76,0],[100,2,77,7],[100,11,77,16,"refresh"],[100,18,77,23,"refresh"],[100,19,77,23],[100,21,77,55],[101,4,78,2],[101,8,78,6],[101,9,78,7,"_state"],[101,15,78,13],[101,17,78,15],[102,6,79,4,"_state"],[102,12,79,10],[102,15,79,13,"createState"],[102,26,79,24],[102,27,79,25],[102,28,79,26],[103,4,80,2],[105,4,82,1],[106,4,83,2],[106,8,83,6,"isRequestInProgress"],[106,27,83,25],[106,29,83,27],[107,6,84,4],[107,13,84,11],[107,17,84,15,"Promise"],[107,24,84,22],[107,25,84,24,"resolve"],[107,32,84,31],[107,36,84,36],[108,8,85,6,"requestQueue"],[108,20,85,18],[108,21,85,19,"push"],[108,25,85,23],[108,26,85,24,"resolve"],[108,33,85,31],[108,34,85,32],[109,6,86,4],[109,7,86,5],[109,8,86,6],[110,4,87,2],[111,4,89,2,"isRequestInProgress"],[111,23,89,21],[111,26,89,24],[111,30,89,28],[112,4,91,2],[112,11,91,9,"_state"],[112,17,91,15],[112,18,91,16,"_fetchCurrentState"],[112,36,91,34],[112,37,91,35],[112,38,91,36],[112,39,91,37,"then"],[112,43,91,41],[112,44,91,43,"result"],[112,50,91,49],[112,54,91,54],[113,6,92,4,"requestQueue"],[113,18,92,16],[113,19,92,17,"forEach"],[113,26,92,24],[113,27,92,26,"resolve"],[113,34,92,33],[113,38,92,38,"resolve"],[113,45,92,45],[113,46,92,46,"result"],[113,52,92,52],[113,53,92,53],[113,54,92,54],[114,6,93,4,"requestQueue"],[114,18,93,16],[114,21,93,19],[114,23,93,21],[115,6,94,4],[115,13,94,11,"result"],[115,19,94,17],[116,4,95,2],[116,5,95,3],[116,6,95,4],[116,7,95,5,"finally"],[116,14,95,12],[116,15,95,13],[116,21,95,19],[117,6,96,4,"isRequestInProgress"],[117,25,96,23],[117,28,96,26],[117,33,96,31],[118,4,97,2],[118,5,97,3],[118,6,97,4],[119,2,98,0],[121,2,100,0],[122,0,101,0],[123,0,102,0],[124,0,103,0],[125,0,104,0],[126,0,105,0],[127,0,106,0],[128,0,107,0],[129,0,108,0],[130,0,109,0],[131,0,110,0],[132,2,111,7],[132,11,111,16,"addEventListener"],[132,27,111,32,"addEventListener"],[132,28,112,2,"listener"],[132,36,112,38],[132,38,113,29],[133,4,114,2],[133,8,114,6],[133,9,114,7,"_state"],[133,15,114,13],[133,17,114,15],[134,6,115,4,"_state"],[134,12,115,10],[134,15,115,13,"createState"],[134,26,115,24],[134,27,115,25],[134,28,115,26],[135,4,116,2],[136,4,118,2,"_state"],[136,10,118,8],[136,11,118,9,"add"],[136,14,118,12],[136,15,118,13,"listener"],[136,23,118,21],[136,24,118,22],[137,4,119,2],[137,11,119,9],[137,17,119,21],[138,6,120,4,"_state"],[138,12,120,10],[138,16,120,14,"_state"],[138,22,120,20],[138,23,120,21,"remove"],[138,29,120,27],[138,30,120,28,"listener"],[138,38,120,36],[138,39,120,37],[139,4,121,2],[139,5,121,3],[140,2,122,0],[142,2,124,0],[143,0,125,0],[144,0,126,0],[145,0,127,0],[146,0,128,0],[147,0,129,0],[148,0,130,0],[149,2,131,7],[149,11,131,16,"useNetInfo"],[149,21,131,26,"useNetInfo"],[149,22,132,2,"configuration"],[149,35,132,53],[149,37,133,22],[150,4,134,2],[150,8,134,6,"configuration"],[150,21,134,19],[150,23,134,21],[151,6,135,4,"configure"],[151,15,135,13],[151,16,135,14,"configuration"],[151,29,135,27],[151,30,135,28],[152,4,136,2],[153,4,138,2],[153,8,138,2,"_useState"],[153,17,138,2],[153,20,138,32],[153,24,138,32,"useState"],[153,39,138,40],[153,41,138,61],[154,8,139,4,"type"],[154,12,139,8],[154,14,139,10,"Types"],[154,19,139,15],[154,20,139,16,"NetInfoStateType"],[154,36,139,32],[154,37,139,33,"unknown"],[154,44,139,40],[155,8,140,4,"isConnected"],[155,19,140,15],[155,21,140,17],[155,25,140,21],[156,8,141,4,"isInternetReachable"],[156,27,141,23],[156,29,141,25],[156,33,141,29],[157,8,142,4,"details"],[157,15,142,11],[157,17,142,13],[158,6,143,2],[158,7,143,3],[158,8,143,4],[159,6,143,4,"_useState2"],[159,16,143,4],[159,23,143,4,"_slicedToArray2"],[159,38,143,4],[159,39,143,4,"default"],[159,46,143,4],[159,48,143,4,"_useState"],[159,57,143,4],[160,6,138,9,"netInfo"],[160,13,138,16],[160,16,138,16,"_useState2"],[160,26,138,16],[161,6,138,18,"setNetInfo"],[161,16,138,28],[161,19,138,28,"_useState2"],[161,29,138,28],[162,4,145,2],[162,8,145,2,"useEffect"],[162,24,145,11],[162,26,145,12],[162,32,145,32],[163,6,146,4],[163,10,146,10,"unsubscribe"],[163,21,146,21],[163,24,146,24,"addEventListener"],[163,40,146,40],[163,41,146,41,"setNetInfo"],[163,51,146,51],[163,52,146,52],[164,6,147,4],[164,13,147,11],[164,19,147,17,"unsubscribe"],[164,30,147,28],[164,31,147,29],[164,32,147,30],[165,4,148,2],[165,5,148,3],[165,7,148,5],[165,9,148,7],[165,10,148,8],[166,4,150,2],[166,11,150,9,"netInfo"],[166,18,150,16],[167,2,151,0],[169,2,153,0],[170,0,154,0],[171,0,155,0],[172,0,156,0],[173,0,157,0],[174,0,158,0],[175,0,159,0],[176,0,160,0],[177,0,161,0],[178,2,162,7],[178,11,162,16,"useNetInfoInstance"],[178,29,162,34,"useNetInfoInstance"],[178,30,162,34],[178,32,165,2],[179,4,165,2],[179,8,163,2,"isPaused"],[179,16,163,10],[179,19,163,10,"arguments"],[179,28,163,10],[179,29,163,10,"length"],[179,35,163,10],[179,43,163,10,"arguments"],[179,52,163,10],[179,60,163,10,"undefined"],[179,69,163,10],[179,72,163,10,"arguments"],[179,81,163,10],[179,87,163,13],[179,92,163,18],[180,4,163,18],[180,8,164,2,"configuration"],[180,21,164,53],[180,24,164,53,"arguments"],[180,33,164,53],[180,34,164,53,"length"],[180,40,164,53],[180,47,164,53,"arguments"],[180,56,164,53],[180,62,164,53,"undefined"],[180,71,164,53],[181,4,166,2],[181,8,166,2,"_useState3"],[181,18,166,2],[181,21,166,54],[181,25,166,54,"useState"],[181,40,166,62],[181,42,166,70],[181,43,166,71],[182,6,166,71,"_useState4"],[182,16,166,71],[182,23,166,71,"_slicedToArray2"],[182,38,166,71],[182,39,166,71,"default"],[182,46,166,71],[182,48,166,71,"_useState3"],[182,58,166,71],[183,6,166,9,"networkInfoManager"],[183,24,166,27],[183,27,166,27,"_useState4"],[183,37,166,27],[184,6,166,29,"setNetworkInfoManager"],[184,27,166,50],[184,30,166,50,"_useState4"],[184,40,166,50],[185,4,167,2],[185,8,167,2,"_useState5"],[185,18,167,2],[185,21,167,32],[185,25,167,32,"useState"],[185,40,167,40],[185,42,167,61],[186,8,168,4,"type"],[186,12,168,8],[186,14,168,10,"Types"],[186,19,168,15],[186,20,168,16,"NetInfoStateType"],[186,36,168,32],[186,37,168,33,"unknown"],[186,44,168,40],[187,8,169,4,"isConnected"],[187,19,169,15],[187,21,169,17],[187,25,169,21],[188,8,170,4,"isInternetReachable"],[188,27,170,23],[188,29,170,25],[188,33,170,29],[189,8,171,4,"details"],[189,15,171,11],[189,17,171,13],[190,6,172,2],[190,7,172,3],[190,8,172,4],[191,6,172,4,"_useState6"],[191,16,172,4],[191,23,172,4,"_slicedToArray2"],[191,38,172,4],[191,39,172,4,"default"],[191,46,172,4],[191,48,172,4,"_useState5"],[191,58,172,4],[192,6,167,9,"netInfo"],[192,13,167,16],[192,16,167,16,"_useState6"],[192,26,167,16],[193,6,167,18,"setNetInfo"],[193,16,167,28],[193,19,167,28,"_useState6"],[193,29,167,28],[194,4,174,2],[194,8,174,2,"useEffect"],[194,24,174,11],[194,26,174,12],[194,32,174,18],[195,6,175,4],[195,10,175,8,"isPaused"],[195,18,175,16],[195,20,175,18],[196,8,176,6],[197,6,177,4],[198,6,178,4],[198,10,178,10,"config"],[198,16,178,16],[198,19,178,19],[199,8,179,6],[199,11,179,9,"DEFAULT_CONFIGURATION"],[199,40,179,30],[200,8,180,6],[200,11,180,9,"configuration"],[201,6,181,4],[201,7,181,5],[202,6,182,4],[202,10,182,10,"state"],[202,15,182,15],[202,18,182,18],[202,22,182,22,"State"],[202,37,182,27],[202,38,182,28,"config"],[202,44,182,34],[202,45,182,35],[203,6,183,4,"setNetworkInfoManager"],[203,27,183,25],[203,28,183,26,"state"],[203,33,183,31],[203,34,183,32],[204,6,184,4,"state"],[204,11,184,9],[204,12,184,10,"add"],[204,15,184,13],[204,16,184,14,"setNetInfo"],[204,26,184,24],[204,27,184,25],[205,6,185,4],[205,13,185,11,"state"],[205,18,185,16],[205,19,185,17,"tearDown"],[205,27,185,25],[206,4,186,2],[206,5,186,3],[206,7,186,5],[206,8,186,6,"isPaused"],[206,16,186,14],[206,18,186,16,"configuration"],[206,31,186,29],[206,32,186,30],[206,33,186,31],[207,4,188,2],[207,8,188,8,"refresh"],[207,15,188,15],[207,18,188,18],[207,22,188,18,"useCallback"],[207,40,188,29],[207,42,188,30],[207,48,188,36],[208,6,189,4],[208,10,189,8,"networkInfoManager"],[208,28,189,26],[208,32,189,30],[208,33,189,31,"isRequestInProgress"],[208,52,189,50],[208,54,189,52],[209,8,190,6,"isRequestInProgress"],[209,27,190,25],[209,30,190,28],[209,34,190,32],[210,8,191,6,"networkInfoManager"],[210,26,191,24],[210,27,191,25,"_fetchCurrentState"],[210,45,191,43],[210,46,191,44],[210,47,191,45],[210,48,191,46,"finally"],[210,55,191,53],[210,56,191,54],[210,62,191,60],[211,10,192,8,"isRequestInProgress"],[211,29,192,27],[211,32,192,30],[211,37,192,35],[212,8,193,6],[212,9,193,7],[212,10,193,8],[213,6,194,4],[214,4,195,2],[214,5,195,3],[214,7,195,5],[214,8,195,6,"networkInfoManager"],[214,26,195,24],[214,27,195,25],[214,28,195,26],[215,4,197,2],[215,11,197,9],[216,6,198,4,"netInfo"],[216,13,198,11],[217,6,199,4,"refresh"],[218,4,200,2],[218,5,200,3],[219,2,201,0],[220,2,201,1],[220,6,201,1,"_default"],[220,14,201,1],[220,17,201,1,"exports"],[220,24,201,1],[220,25,201,1,"default"],[220,32,201,1],[220,35,205,15],[221,4,206,2,"configure"],[221,13,206,11],[222,4,207,2,"fetch"],[222,9,207,7],[223,4,208,2,"refresh"],[223,11,208,9],[224,4,209,2,"addEventListener"],[224,20,209,18],[225,4,210,2,"useNetInfo"],[225,14,210,12],[226,4,211,2,"useNetInfoInstance"],[227,2,212,0],[227,3,212,1],[228,0,212,1],[228,3]],"functionMap":{"names":["<global>","createState","configure","fetch","refresh","Promise$argument_0","_state._fetchCurrentState.then$argument_0","requestQueue.forEach$argument_0","_state._fetchCurrentState.then._finally$argument_0","addEventListener","<anonymous>","useNetInfo","useEffect$argument_0","useNetInfoInstance","networkInfoManager._fetchCurrentState._finally$argument_0"],"mappings":"AAA;oBCqB;CDE;OEa;CFgB;OGU;CHO;OIO;uBCO;KDE;0CEK;yBCC,4BD;GFG,UI;GJE;CJC;OSa;SCQ;GDE;CTC;OWS;YCc;WFE,mBE;GDC;CXG;OaW;YDY;GCY;8BTE;sDUG;OVE;GSE;CbM"}},"type":"js/module"}]}