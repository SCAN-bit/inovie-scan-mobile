{"dependencies":[{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":43,"index":43}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react-native","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":44},"end":{"line":2,"column":46,"index":90}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"./attachHandlers","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":11,"column":0,"index":285},"end":{"line":11,"column":50,"index":335}}],"key":"b8wD84KUGY/q9kMUmSd+LI7/yNo="}},{"name":"./updateHandlers","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":12,"column":0,"index":336},"end":{"line":12,"column":50,"index":386}}],"key":"p5KOhg5va3ZI3GHiQMeBZK129ZE="}},{"name":"./needsToReattach","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":0,"index":387},"end":{"line":13,"column":52,"index":439}}],"key":"mgNkYSxrMXFFkG7i/iwmrGbQ9dk="}},{"name":"./dropHandlers","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":14,"column":0,"index":440},"end":{"line":14,"column":46,"index":486}}],"key":"J2CEcGP+aeTR5csjHj20zISlGO0="}},{"name":"./utils","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":15,"column":0,"index":487},"end":{"line":15,"column":67,"index":554}}],"key":"FH4oXkS7WdR5kG0v+Eku8TWcu80="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useDetectorUpdater = useDetectorUpdater;\n  var _react = require(_dependencyMap[0]);\n  var _reactNative = require(_dependencyMap[1]);\n  var _attachHandlers = require(_dependencyMap[2]);\n  var _updateHandlers = require(_dependencyMap[3]);\n  var _needsToReattach = require(_dependencyMap[4]);\n  var _dropHandlers = require(_dependencyMap[5]);\n  var _utils = require(_dependencyMap[6]);\n  // Returns a function that's responsible for updating the attached gestures\n  // If the view has changed, it will reattach the handlers to the new view\n  // If the view remains the same, it will update the handlers with the new config\n  function useDetectorUpdater(state, preparedGesture, gesturesToAttach, gestureConfig, webEventHandlersRef) {\n    var forceRender = (0, _utils.useForceRender)();\n    var updateAttachedGestures = (0, _react.useCallback)(\n    // skipConfigUpdate is used to prevent unnecessary updates when only checking if the view has changed\n    skipConfigUpdate => {\n      // If the underlying view has changed we need to reattach handlers to the new view\n      var viewTag = (0, _reactNative.findNodeHandle)(state.viewRef);\n      var didUnderlyingViewChange = viewTag !== state.previousViewTag;\n      if (didUnderlyingViewChange || (0, _needsToReattach.needsToReattach)(preparedGesture, gesturesToAttach)) {\n        (0, _utils.validateDetectorChildren)(state.viewRef);\n        (0, _dropHandlers.dropHandlers)(preparedGesture);\n        (0, _attachHandlers.attachHandlers)({\n          preparedGesture,\n          gestureConfig,\n          gesturesToAttach,\n          webEventHandlersRef,\n          viewTag\n        });\n        if (didUnderlyingViewChange) {\n          state.previousViewTag = viewTag;\n          state.forceRebuildReanimatedEvent = true;\n          forceRender();\n        }\n      } else if (!skipConfigUpdate) {\n        (0, _updateHandlers.updateHandlers)(preparedGesture, gestureConfig, gesturesToAttach);\n      }\n    }, [forceRender, gestureConfig, gesturesToAttach, preparedGesture, state, webEventHandlersRef]);\n    return updateAttachedGestures;\n  }\n});","lineCount":45,"map":[[6,2,1,0],[6,6,1,0,"_react"],[6,12,1,0],[6,15,1,0,"require"],[6,22,1,0],[6,23,1,0,"_dependencyMap"],[6,37,1,0],[7,2,2,0],[7,6,2,0,"_reactNative"],[7,18,2,0],[7,21,2,0,"require"],[7,28,2,0],[7,29,2,0,"_dependencyMap"],[7,43,2,0],[8,2,11,0],[8,6,11,0,"_attachHandlers"],[8,21,11,0],[8,24,11,0,"require"],[8,31,11,0],[8,32,11,0,"_dependencyMap"],[8,46,11,0],[9,2,12,0],[9,6,12,0,"_updateHandlers"],[9,21,12,0],[9,24,12,0,"require"],[9,31,12,0],[9,32,12,0,"_dependencyMap"],[9,46,12,0],[10,2,13,0],[10,6,13,0,"_needsToReattach"],[10,22,13,0],[10,25,13,0,"require"],[10,32,13,0],[10,33,13,0,"_dependencyMap"],[10,47,13,0],[11,2,14,0],[11,6,14,0,"_dropHandlers"],[11,19,14,0],[11,22,14,0,"require"],[11,29,14,0],[11,30,14,0,"_dependencyMap"],[11,44,14,0],[12,2,15,0],[12,6,15,0,"_utils"],[12,12,15,0],[12,15,15,0,"require"],[12,22,15,0],[12,23,15,0,"_dependencyMap"],[12,37,15,0],[13,2,17,0],[14,2,18,0],[15,2,19,0],[16,2,20,7],[16,11,20,16,"useDetectorUpdater"],[16,29,20,34,"useDetectorUpdater"],[16,30,21,2,"state"],[16,35,21,29],[16,37,22,2,"preparedGesture"],[16,52,22,39],[16,54,23,2,"gesturesToAttach"],[16,70,23,33],[16,72,24,2,"gestureConfig"],[16,85,24,46],[16,87,25,2,"webEventHandlersRef"],[16,106,25,55],[16,108,26,2],[17,4,27,2],[17,8,27,8,"forceRender"],[17,19,27,19],[17,22,27,22],[17,26,27,22,"useForceRender"],[17,47,27,36],[17,49,27,37],[17,50,27,38],[18,4,28,2],[18,8,28,8,"updateAttachedGestures"],[18,30,28,30],[18,33,28,33],[18,37,28,33,"useCallback"],[18,55,28,44],[19,4,29,4],[20,4,30,5,"skipConfigUpdate"],[20,20,30,31],[20,24,30,36],[21,6,31,6],[22,6,32,6],[22,10,32,12,"viewTag"],[22,17,32,19],[22,20,32,22],[22,24,32,22,"findNodeHandle"],[22,51,32,36],[22,53,32,37,"state"],[22,58,32,42],[22,59,32,43,"viewRef"],[22,66,32,50],[22,67,32,61],[23,6,33,6],[23,10,33,12,"didUnderlyingViewChange"],[23,33,33,35],[23,36,33,38,"viewTag"],[23,43,33,45],[23,48,33,50,"state"],[23,53,33,55],[23,54,33,56,"previousViewTag"],[23,69,33,71],[24,6,35,6],[24,10,36,8,"didUnderlyingViewChange"],[24,33,36,31],[24,37,37,8],[24,41,37,8,"needsToReattach"],[24,73,37,23],[24,75,37,24,"preparedGesture"],[24,90,37,39],[24,92,37,41,"gesturesToAttach"],[24,108,37,57],[24,109,37,58],[24,111,38,8],[25,8,39,8],[25,12,39,8,"validateDetectorChildren"],[25,43,39,32],[25,45,39,33,"state"],[25,50,39,38],[25,51,39,39,"viewRef"],[25,58,39,46],[25,59,39,47],[26,8,40,8],[26,12,40,8,"dropHandlers"],[26,38,40,20],[26,40,40,21,"preparedGesture"],[26,55,40,36],[26,56,40,37],[27,8,41,8],[27,12,41,8,"attachHandlers"],[27,42,41,22],[27,44,41,23],[28,10,42,10,"preparedGesture"],[28,25,42,25],[29,10,43,10,"gestureConfig"],[29,23,43,23],[30,10,44,10,"gesturesToAttach"],[30,26,44,26],[31,10,45,10,"webEventHandlersRef"],[31,29,45,29],[32,10,46,10,"viewTag"],[33,8,47,8],[33,9,47,9],[33,10,47,10],[34,8,49,8],[34,12,49,12,"didUnderlyingViewChange"],[34,35,49,35],[34,37,49,37],[35,10,50,10,"state"],[35,15,50,15],[35,16,50,16,"previousViewTag"],[35,31,50,31],[35,34,50,34,"viewTag"],[35,41,50,41],[36,10,51,10,"state"],[36,15,51,15],[36,16,51,16,"forceRebuildReanimatedEvent"],[36,43,51,43],[36,46,51,46],[36,50,51,50],[37,10,52,10,"forceRender"],[37,21,52,21],[37,22,52,22],[37,23,52,23],[38,8,53,8],[39,6,54,6],[39,7,54,7],[39,13,54,13],[39,17,54,17],[39,18,54,18,"skipConfigUpdate"],[39,34,54,34],[39,36,54,36],[40,8,55,8],[40,12,55,8,"updateHandlers"],[40,42,55,22],[40,44,55,23,"preparedGesture"],[40,59,55,38],[40,61,55,40,"gestureConfig"],[40,74,55,53],[40,76,55,55,"gesturesToAttach"],[40,92,55,71],[40,93,55,72],[41,6,56,6],[42,4,57,4],[42,5,57,5],[42,7,58,4],[42,8,59,6,"forceRender"],[42,19,59,17],[42,21,60,6,"gestureConfig"],[42,34,60,19],[42,36,61,6,"gesturesToAttach"],[42,52,61,22],[42,54,62,6,"preparedGesture"],[42,69,62,21],[42,71,63,6,"state"],[42,76,63,11],[42,78,64,6,"webEventHandlersRef"],[42,97,64,25],[42,98,66,2],[42,99,66,3],[43,4,68,2],[43,11,68,9,"updateAttachedGestures"],[43,33,68,31],[44,2,69,0],[45,0,69,1],[45,3]],"functionMap":{"names":["<global>","useDetectorUpdater","updateAttachedGestures"],"mappings":"AAA;OCmB;ICU;KD2B;CDY"}},"type":"js/module"}]}