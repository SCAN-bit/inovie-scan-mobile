# Dockerfile pour tester la production Android avec APK complet
FROM node:18-slim

# Installer les d√©pendances syst√®me n√©cessaires
RUN apt-get update && apt-get install -y \
    openjdk-17-jdk \
    curl \
    unzip \
    git \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Variables d'environnement Java
ENV JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64

# Variables d'environnement Android SDK
ENV ANDROID_HOME=/opt/android-sdk
ENV ANDROID_SDK_ROOT=/opt/android-sdk
ENV PATH=${PATH}:${ANDROID_HOME}/cmdline-tools/latest/bin:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/build-tools/34.0.0

# Installer Android SDK complet
RUN mkdir -p ${ANDROID_HOME} && \
    curl -o sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip && \
    unzip sdk-tools.zip -d ${ANDROID_HOME} && \
    mv ${ANDROID_HOME}/cmdline-tools ${ANDROID_HOME}/cmdline-tools-temp && \
    mkdir -p ${ANDROID_HOME}/cmdline-tools/latest && \
    mv ${ANDROID_HOME}/cmdline-tools-temp/* ${ANDROID_HOME}/cmdline-tools/latest/ && \
    rm -rf sdk-tools.zip ${ANDROID_HOME}/cmdline-tools-temp

# Accepter les licences et installer tous les outils Android pour production
RUN yes | ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --licenses && \
    ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager \
    "platform-tools" \
    "platforms;android-34" \
    "build-tools;34.0.0" \
    "extras;android;m2repository" \
    "extras;google;m2repository"

# Variables d'environnement pour optimiser les builds Gradle
ENV JAVA_OPTS="-Xmx4g -XX:MaxMetaspaceSize=1g"
ENV GRADLE_OPTS="-Dorg.gradle.jvmargs=-Xmx4g -Dorg.gradle.daemon=false"

WORKDIR /app

# Copier les fichiers de configuration
COPY package*.json ./
COPY app.json ./
COPY eas.json ./

# Installer les d√©pendances
RUN npm ci

# Copier le code source
COPY . .

# Test prebuild complet pour Android (nettoyage d'abord)
RUN rm -rf android || true
RUN npx expo prebuild --platform android --clean

# V√©rifier la structure Android g√©n√©r√©e
RUN echo "üìÅ V√©rification de la structure Android..." && \
    ls -la android/ && \
    ls -la android/app/src/main/

# Test de build APK de production
WORKDIR /app/android
RUN echo "üî® Construction de l'APK de production..." && \
    ./gradlew assembleRelease --no-daemon --stacktrace

# V√©rifier que l'APK a √©t√© cr√©√©
RUN echo "üì¶ V√©rification de l'APK cr√©√©..." && \
    ls -la app/build/outputs/apk/release/ && \
    echo "‚úÖ APK de production cr√©√© avec succ√®s !"

# Analyser la taille de l'APK
RUN APK_SIZE=$(du -h app/build/outputs/apk/release/app-release.apk | cut -f1) && \
    echo "üìä Taille de l'APK: $APK_SIZE" && \
    echo "‚úÖ Test de production Android termin√© avec succ√®s !"

CMD ["echo", "APK de production pr√™t dans app/build/outputs/apk/release/"] 