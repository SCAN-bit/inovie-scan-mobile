{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0},"end":{"line":212,"column":31}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"./BatchedBridge","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":15,"column":22},"end":{"line":15,"column":48}}],"key":"XuO47KMtTKxjZq4wCgiYZw5LEdc="}},{"name":"invariant","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":16,"column":18},"end":{"line":16,"column":38}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}},{"name":"../Utilities/defineLazyObjectProperty","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":189,"column":35},"end":{"line":189,"column":83}}],"key":"OJsVdDpUUvLcTX9jWYrm24RC9kE="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _slicedToArray = require(_dependencyMap[0]);\n  var BatchedBridge = require(_dependencyMap[1]);\n  var invariant = require(_dependencyMap[2]);\n  function genModule(config, moduleID) {\n    if (!config) {\n      return null;\n    }\n    var _config = _slicedToArray(config, 5),\n      moduleName = _config[0],\n      constants = _config[1],\n      methods = _config[2],\n      promiseMethods = _config[3],\n      syncMethods = _config[4];\n    invariant(!moduleName.startsWith('RCT') && !moduleName.startsWith('RK'), \"Module name prefixes should've been stripped by the native side but wasn't for \" + moduleName);\n    if (!constants && !methods) {\n      return {\n        name: moduleName\n      };\n    }\n    var module = {};\n    methods && methods.forEach((methodName, methodID) => {\n      var isPromise = promiseMethods && arrayContains(promiseMethods, methodID) || false;\n      var isSync = syncMethods && arrayContains(syncMethods, methodID) || false;\n      invariant(!isPromise || !isSync, 'Cannot have a method that is both async and a sync hook');\n      var methodType = isPromise ? 'promise' : isSync ? 'sync' : 'async';\n      module[methodName] = genMethod(moduleID, methodID, methodType);\n    });\n    Object.assign(module, constants);\n    if (module.getConstants == null) {\n      module.getConstants = () => constants || Object.freeze({});\n    } else {\n      console.warn(`Unable to define method 'getConstants()' on NativeModule '${moduleName}'. NativeModule '${moduleName}' already has a constant or method called 'getConstants'. Please remove it.`);\n    }\n    return {\n      name: moduleName,\n      module\n    };\n  }\n  global.__fbGenNativeModule = genModule;\n  function loadModule(name, moduleID) {\n    invariant(global.nativeRequireModuleConfig, \"Can't lazily create module without nativeRequireModuleConfig\");\n    var config = global.nativeRequireModuleConfig(name);\n    var info = genModule(config, moduleID);\n    return info && info.module;\n  }\n  function genMethod(moduleID, methodID, type) {\n    var fn = null;\n    if (type === 'promise') {\n      fn = function promiseMethodWrapper() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        var enqueueingFrameError = new Error();\n        return new Promise((resolve, reject) => {\n          BatchedBridge.enqueueNativeCall(moduleID, methodID, args, data => resolve(data), errorData => reject(updateErrorWithErrorData(errorData, enqueueingFrameError)));\n        });\n      };\n    } else {\n      fn = function nonPromiseMethodWrapper() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n        var lastArg = args.length > 0 ? args[args.length - 1] : null;\n        var secondLastArg = args.length > 1 ? args[args.length - 2] : null;\n        var hasSuccessCallback = typeof lastArg === 'function';\n        var hasErrorCallback = typeof secondLastArg === 'function';\n        hasErrorCallback && invariant(hasSuccessCallback, 'Cannot have a non-function arg after a function arg.');\n        var onSuccess = hasSuccessCallback ? lastArg : null;\n        var onFail = hasErrorCallback ? secondLastArg : null;\n        var callbackCount = hasSuccessCallback + hasErrorCallback;\n        var newArgs = args.slice(0, args.length - callbackCount);\n        if (type === 'sync') {\n          return BatchedBridge.callNativeSyncHook(moduleID, methodID, newArgs, onFail, onSuccess);\n        } else {\n          BatchedBridge.enqueueNativeCall(moduleID, methodID, newArgs, onFail, onSuccess);\n        }\n      };\n    }\n    fn.type = type;\n    return fn;\n  }\n  function arrayContains(array, value) {\n    return array.indexOf(value) !== -1;\n  }\n  function updateErrorWithErrorData(errorData, error) {\n    return Object.assign(error, errorData || {});\n  }\n  var NativeModules = {};\n  if (global.nativeModuleProxy) {\n    NativeModules = global.nativeModuleProxy;\n  } else {\n    var bridgeConfig = global.__fbBatchedBridgeConfig;\n    invariant(bridgeConfig, '__fbBatchedBridgeConfig is not set, cannot invoke native modules');\n    var defineLazyObjectProperty = require(_dependencyMap[3]);\n    (bridgeConfig.remoteModuleConfig || []).forEach((config, moduleID) => {\n      var info = genModule(config, moduleID);\n      if (!info) {\n        return;\n      }\n      if (info.module) {\n        NativeModules[info.name] = info.module;\n      } else {\n        defineLazyObjectProperty(NativeModules, info.name, {\n          get: () => loadModule(info.name, moduleID)\n        });\n      }\n    });\n  }\n  module.exports = NativeModules;\n});","lineCount":113,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13],[4,6,11,13,"_slicedToArray"],[4,20,11,13],[4,23,11,13,"require"],[4,30,11,13],[4,31,11,13,"_dependencyMap"],[4,45,11,13],[5,2,15,0],[5,6,15,6,"BatchedBridge"],[5,19,15,19],[5,22,15,22,"require"],[5,29,15,29],[5,30,15,29,"_dependencyMap"],[5,44,15,29],[5,47,15,47],[5,48,15,48],[6,2,16,0],[6,6,16,6,"invariant"],[6,15,16,15],[6,18,16,18,"require"],[6,25,16,25],[6,26,16,25,"_dependencyMap"],[6,40,16,25],[6,43,16,37],[6,44,16,38],[7,2,28,0],[7,11,28,9,"genModule"],[7,20,28,18,"genModule"],[7,21,29,2,"config"],[7,27,29,23],[7,29,30,2,"moduleID"],[7,37,30,18],[7,39,35,2],[8,4,36,2],[8,8,36,6],[8,9,36,7,"config"],[8,15,36,13],[8,17,36,15],[9,6,37,4],[9,13,37,11],[9,17,37,15],[10,4,38,2],[11,4,40,2],[11,8,40,2,"_config"],[11,15,40,2],[11,18,40,2,"_slicedToArray"],[11,32,40,2],[11,33,40,72,"config"],[11,39,40,78],[12,6,40,9,"moduleName"],[12,16,40,19],[12,19,40,19,"_config"],[12,26,40,19],[13,6,40,21,"constants"],[13,15,40,30],[13,18,40,30,"_config"],[13,25,40,30],[14,6,40,32,"methods"],[14,13,40,39],[14,16,40,39,"_config"],[14,23,40,39],[15,6,40,41,"promiseMethods"],[15,20,40,55],[15,23,40,55,"_config"],[15,30,40,55],[16,6,40,57,"syncMethods"],[16,17,40,68],[16,20,40,68,"_config"],[16,27,40,68],[17,4,41,2,"invariant"],[17,13,41,11],[17,14,42,4],[17,15,42,5,"moduleName"],[17,25,42,15],[17,26,42,16,"startsWith"],[17,36,42,26],[17,37,42,27],[17,42,42,32],[17,43,42,33],[17,47,42,37],[17,48,42,38,"moduleName"],[17,58,42,48],[17,59,42,49,"startsWith"],[17,69,42,59],[17,70,42,60],[17,74,42,64],[17,75,42,65],[17,77,43,4],[17,161,45,6,"moduleName"],[17,171,46,2],[17,172,46,3],[18,4,48,2],[18,8,48,6],[18,9,48,7,"constants"],[18,18,48,16],[18,22,48,20],[18,23,48,21,"methods"],[18,30,48,28],[18,32,48,30],[19,6,50,4],[19,13,50,11],[20,8,50,12,"name"],[20,12,50,16],[20,14,50,18,"moduleName"],[21,6,50,28],[21,7,50,29],[22,4,51,2],[23,4,53,2],[23,8,53,8,"module"],[23,14,53,33],[23,17,53,36],[23,18,53,37],[23,19,53,38],[24,4,54,2,"methods"],[24,11,54,9],[24,15,55,4,"methods"],[24,22,55,11],[24,23,55,12,"forEach"],[24,30,55,19],[24,31,55,20],[24,32,55,21,"methodName"],[24,42,55,31],[24,44,55,33,"methodID"],[24,52,55,41],[24,57,55,46],[25,6,56,6],[25,10,56,12,"isPromise"],[25,19,56,21],[25,22,57,9,"promiseMethods"],[25,36,57,23],[25,40,57,27,"arrayContains"],[25,53,57,40],[25,54,57,41,"promiseMethods"],[25,68,57,55],[25,70,57,57,"methodID"],[25,78,57,65],[25,79,57,66],[25,83,57,71],[25,88,57,76],[26,6,58,6],[26,10,58,12,"isSync"],[26,16,58,18],[26,19,59,9,"syncMethods"],[26,30,59,20],[26,34,59,24,"arrayContains"],[26,47,59,37],[26,48,59,38,"syncMethods"],[26,59,59,49],[26,61,59,51,"methodID"],[26,69,59,59],[26,70,59,60],[26,74,59,65],[26,79,59,70],[27,6,60,6,"invariant"],[27,15,60,15],[27,16,61,8],[27,17,61,9,"isPromise"],[27,26,61,18],[27,30,61,22],[27,31,61,23,"isSync"],[27,37,61,29],[27,39,62,8],[27,96,63,6],[27,97,63,7],[28,6,64,6],[28,10,64,12,"methodType"],[28,20,64,22],[28,23,64,25,"isPromise"],[28,32,64,34],[28,35,64,37],[28,44,64,46],[28,47,64,49,"isSync"],[28,53,64,55],[28,56,64,58],[28,62,64,64],[28,65,64,67],[28,72,64,74],[29,6,65,6,"module"],[29,12,65,12],[29,13,65,13,"methodName"],[29,23,65,23],[29,24,65,24],[29,27,65,27,"genMethod"],[29,36,65,36],[29,37,65,37,"moduleID"],[29,45,65,45],[29,47,65,47,"methodID"],[29,55,65,55],[29,57,65,57,"methodType"],[29,67,65,67],[29,68,65,68],[30,4,66,4],[30,5,66,5],[30,6,66,6],[31,4,68,2,"Object"],[31,10,68,8],[31,11,68,9,"assign"],[31,17,68,15],[31,18,68,16,"module"],[31,24,68,22],[31,26,68,24,"constants"],[31,35,68,33],[31,36,68,34],[32,4,70,2],[32,8,70,6,"module"],[32,14,70,12],[32,15,70,13,"getConstants"],[32,27,70,25],[32,31,70,29],[32,35,70,33],[32,37,70,35],[33,6,71,4,"module"],[33,12,71,10],[33,13,71,11,"getConstants"],[33,25,71,23],[33,28,71,26],[33,34,71,32,"constants"],[33,43,71,41],[33,47,71,45,"Object"],[33,53,71,51],[33,54,71,52,"freeze"],[33,60,71,58],[33,61,71,59],[33,62,71,60],[33,63,71,61],[33,64,71,62],[34,4,72,2],[34,5,72,3],[34,11,72,9],[35,6,73,4,"console"],[35,13,73,11],[35,14,73,12,"warn"],[35,18,73,16],[35,19,74,6],[35,80,74,67,"moduleName"],[35,90,74,77],[35,110,74,97,"moduleName"],[35,120,74,107],[35,197,75,4],[35,198,75,5],[36,4,76,2],[37,4,82,2],[37,11,82,9],[38,6,82,10,"name"],[38,10,82,14],[38,12,82,16,"moduleName"],[38,22,82,26],[39,6,82,28,"module"],[40,4,82,34],[40,5,82,35],[41,2,83,0],[42,2,86,0,"global"],[42,8,86,6],[42,9,86,7,"__fbGenNativeModule"],[42,28,86,26],[42,31,86,29,"genModule"],[42,40,86,38],[43,2,88,0],[43,11,88,9,"loadModule"],[43,21,88,19,"loadModule"],[43,22,88,20,"name"],[43,26,88,32],[43,28,88,34,"moduleID"],[43,36,88,50],[43,38,88,60],[44,4,89,2,"invariant"],[44,13,89,11],[44,14,90,4,"global"],[44,20,90,10],[44,21,90,11,"nativeRequireModuleConfig"],[44,46,90,36],[44,48,91,4],[44,110,92,2],[44,111,92,3],[45,4,93,2],[45,8,93,8,"config"],[45,14,93,14],[45,17,93,17,"global"],[45,23,93,23],[45,24,93,24,"nativeRequireModuleConfig"],[45,49,93,49],[45,50,93,50,"name"],[45,54,93,54],[45,55,93,55],[46,4,94,2],[46,8,94,8,"info"],[46,12,94,12],[46,15,94,15,"genModule"],[46,24,94,24],[46,25,94,25,"config"],[46,31,94,31],[46,33,94,33,"moduleID"],[46,41,94,41],[46,42,94,42],[47,4,95,2],[47,11,95,9,"info"],[47,15,95,13],[47,19,95,17,"info"],[47,23,95,21],[47,24,95,22,"module"],[47,30,95,28],[48,2,96,0],[49,2,98,0],[49,11,98,9,"genMethod"],[49,20,98,18,"genMethod"],[49,21,98,19,"moduleID"],[49,29,98,35],[49,31,98,37,"methodID"],[49,39,98,53],[49,41,98,55,"type"],[49,45,98,71],[49,47,98,73],[50,4,99,2],[50,8,99,6,"fn"],[50,10,99,8],[50,13,99,11],[50,17,99,15],[51,4,100,2],[51,8,100,6,"type"],[51,12,100,10],[51,17,100,15],[51,26,100,24],[51,28,100,26],[52,6,101,4,"fn"],[52,8,101,6],[52,11,101,9],[52,20,101,18,"promiseMethodWrapper"],[52,40,101,38,"promiseMethodWrapper"],[52,41,101,38],[52,43,101,62],[53,8,101,62],[53,17,101,62,"_len"],[53,21,101,62],[53,24,101,62,"arguments"],[53,33,101,62],[53,34,101,62,"length"],[53,40,101,62],[53,42,101,42,"args"],[53,46,101,46],[53,53,101,46,"Array"],[53,58,101,46],[53,59,101,46,"_len"],[53,63,101,46],[53,66,101,46,"_key"],[53,70,101,46],[53,76,101,46,"_key"],[53,80,101,46],[53,83,101,46,"_len"],[53,87,101,46],[53,89,101,46,"_key"],[53,93,101,46],[54,10,101,42,"args"],[54,14,101,46],[54,15,101,46,"_key"],[54,19,101,46],[54,23,101,46,"arguments"],[54,32,101,46],[54,33,101,46,"_key"],[54,37,101,46],[55,8,101,46],[56,8,106,6],[56,12,106,12,"enqueueingFrameError"],[56,32,106,47],[56,35,106,50],[56,39,106,54,"Error"],[56,44,106,59],[56,45,106,60],[56,46,106,61],[57,8,107,6],[57,15,107,13],[57,19,107,17,"Promise"],[57,26,107,24],[57,27,107,25],[57,28,107,26,"resolve"],[57,35,107,33],[57,37,107,35,"reject"],[57,43,107,41],[57,48,107,46],[58,10,108,8,"BatchedBridge"],[58,23,108,21],[58,24,108,22,"enqueueNativeCall"],[58,41,108,39],[58,42,109,10,"moduleID"],[58,50,109,18],[58,52,110,10,"methodID"],[58,60,110,18],[58,62,111,10,"args"],[58,66,111,14],[58,68,112,10,"data"],[58,72,112,14],[58,76,112,18,"resolve"],[58,83,112,25],[58,84,112,26,"data"],[58,88,112,30],[58,89,112,31],[58,91,113,10,"errorData"],[58,100,113,19],[58,104,114,12,"reject"],[58,110,114,18],[58,111,115,14,"updateErrorWithErrorData"],[58,135,115,38],[58,136,116,17,"errorData"],[58,145,116,26],[58,147,117,16,"enqueueingFrameError"],[58,167,118,14],[58,168,119,12],[58,169,120,8],[58,170,120,9],[59,8,121,6],[59,9,121,7],[59,10,121,8],[60,6,122,4],[60,7,122,5],[61,4,123,2],[61,5,123,3],[61,11,123,9],[62,6,124,4,"fn"],[62,8,124,6],[62,11,124,9],[62,20,124,18,"nonPromiseMethodWrapper"],[62,43,124,41,"nonPromiseMethodWrapper"],[62,44,124,41],[62,46,124,65],[63,8,124,65],[63,17,124,65,"_len2"],[63,22,124,65],[63,25,124,65,"arguments"],[63,34,124,65],[63,35,124,65,"length"],[63,41,124,65],[63,43,124,45,"args"],[63,47,124,49],[63,54,124,49,"Array"],[63,59,124,49],[63,60,124,49,"_len2"],[63,65,124,49],[63,68,124,49,"_key2"],[63,73,124,49],[63,79,124,49,"_key2"],[63,84,124,49],[63,87,124,49,"_len2"],[63,92,124,49],[63,94,124,49,"_key2"],[63,99,124,49],[64,10,124,45,"args"],[64,14,124,49],[64,15,124,49,"_key2"],[64,20,124,49],[64,24,124,49,"arguments"],[64,33,124,49],[64,34,124,49,"_key2"],[64,39,124,49],[65,8,124,49],[66,8,125,6],[66,12,125,12,"lastArg"],[66,19,125,19],[66,22,125,22,"args"],[66,26,125,26],[66,27,125,27,"length"],[66,33,125,33],[66,36,125,36],[66,37,125,37],[66,40,125,40,"args"],[66,44,125,44],[66,45,125,45,"args"],[66,49,125,49],[66,50,125,50,"length"],[66,56,125,56],[66,59,125,59],[66,60,125,60],[66,61,125,61],[66,64,125,64],[66,68,125,68],[67,8,126,6],[67,12,126,12,"secondLastArg"],[67,25,126,25],[67,28,126,28,"args"],[67,32,126,32],[67,33,126,33,"length"],[67,39,126,39],[67,42,126,42],[67,43,126,43],[67,46,126,46,"args"],[67,50,126,50],[67,51,126,51,"args"],[67,55,126,55],[67,56,126,56,"length"],[67,62,126,62],[67,65,126,65],[67,66,126,66],[67,67,126,67],[67,70,126,70],[67,74,126,74],[68,8,127,6],[68,12,127,12,"hasSuccessCallback"],[68,30,127,30],[68,33,127,33],[68,40,127,40,"lastArg"],[68,47,127,47],[68,52,127,52],[68,62,127,62],[69,8,128,6],[69,12,128,12,"hasErrorCallback"],[69,28,128,28],[69,31,128,31],[69,38,128,38,"secondLastArg"],[69,51,128,51],[69,56,128,56],[69,66,128,66],[70,8,129,6,"hasErrorCallback"],[70,24,129,22],[70,28,130,8,"invariant"],[70,37,130,17],[70,38,131,10,"hasSuccessCallback"],[70,56,131,28],[70,58,132,10],[70,112,133,8],[70,113,133,9],[71,8,135,6],[71,12,135,12,"onSuccess"],[71,21,135,39],[71,24,135,42,"hasSuccessCallback"],[71,42,135,60],[71,45,135,63,"lastArg"],[71,52,135,70],[71,55,135,73],[71,59,135,77],[72,8,137,6],[72,12,137,12,"onFail"],[72,18,137,36],[72,21,137,39,"hasErrorCallback"],[72,37,137,55],[72,40,137,58,"secondLastArg"],[72,53,137,71],[72,56,137,74],[72,60,137,78],[73,8,139,6],[73,12,139,12,"callbackCount"],[73,25,139,25],[73,28,139,28,"hasSuccessCallback"],[73,46,139,46],[73,49,139,49,"hasErrorCallback"],[73,65,139,65],[74,8,140,6],[74,12,140,12,"newArgs"],[74,19,140,19],[74,22,140,22,"args"],[74,26,140,26],[74,27,140,27,"slice"],[74,32,140,32],[74,33,140,33],[74,34,140,34],[74,36,140,36,"args"],[74,40,140,40],[74,41,140,41,"length"],[74,47,140,47],[74,50,140,50,"callbackCount"],[74,63,140,63],[74,64,140,64],[75,8,141,6],[75,12,141,10,"type"],[75,16,141,14],[75,21,141,19],[75,27,141,25],[75,29,141,27],[76,10,142,8],[76,17,142,15,"BatchedBridge"],[76,30,142,28],[76,31,142,29,"callNativeSyncHook"],[76,49,142,47],[76,50,143,10,"moduleID"],[76,58,143,18],[76,60,144,10,"methodID"],[76,68,144,18],[76,70,145,10,"newArgs"],[76,77,145,17],[76,79,146,10,"onFail"],[76,85,146,16],[76,87,147,10,"onSuccess"],[76,96,148,8],[76,97,148,9],[77,8,149,6],[77,9,149,7],[77,15,149,13],[78,10,150,8,"BatchedBridge"],[78,23,150,21],[78,24,150,22,"enqueueNativeCall"],[78,41,150,39],[78,42,151,10,"moduleID"],[78,50,151,18],[78,52,152,10,"methodID"],[78,60,152,18],[78,62,153,10,"newArgs"],[78,69,153,17],[78,71,154,10,"onFail"],[78,77,154,16],[78,79,155,10,"onSuccess"],[78,88,156,8],[78,89,156,9],[79,8,157,6],[80,6,158,4],[80,7,158,5],[81,4,159,2],[82,4,161,2,"fn"],[82,6,161,4],[82,7,161,5,"type"],[82,11,161,9],[82,14,161,12,"type"],[82,18,161,16],[83,4,162,2],[83,11,162,9,"fn"],[83,13,162,11],[84,2,163,0],[85,2,165,0],[85,11,165,9,"arrayContains"],[85,24,165,22,"arrayContains"],[85,25,165,26,"array"],[85,30,165,50],[85,32,165,52,"value"],[85,37,165,60],[85,39,165,71],[86,4,166,2],[86,11,166,9,"array"],[86,16,166,14],[86,17,166,15,"indexOf"],[86,24,166,22],[86,25,166,23,"value"],[86,30,166,28],[86,31,166,29],[86,38,166,36],[87,2,167,0],[88,2,169,0],[88,11,169,9,"updateErrorWithErrorData"],[88,35,169,33,"updateErrorWithErrorData"],[88,36,170,2,"errorData"],[88,45,170,35],[88,47,171,2,"error"],[88,52,171,22],[88,54,172,17],[89,4,176,2],[89,11,176,9,"Object"],[89,17,176,15],[89,18,176,16,"assign"],[89,24,176,22],[89,25,176,23,"error"],[89,30,176,28],[89,32,176,30,"errorData"],[89,41,176,39],[89,45,176,43],[89,46,176,44],[89,47,176,45],[89,48,176,46],[90,2,177,0],[91,2,179,0],[91,6,179,4,"NativeModules"],[91,19,179,58],[91,22,179,61],[91,23,179,62],[91,24,179,63],[92,2,180,0],[92,6,180,4,"global"],[92,12,180,10],[92,13,180,11,"nativeModuleProxy"],[92,30,180,28],[92,32,180,30],[93,4,181,2,"NativeModules"],[93,17,181,15],[93,20,181,18,"global"],[93,26,181,24],[93,27,181,25,"nativeModuleProxy"],[93,44,181,42],[94,2,182,0],[94,3,182,1],[94,9,182,7],[95,4,183,2],[95,8,183,8,"bridgeConfig"],[95,20,183,20],[95,23,183,23,"global"],[95,29,183,29],[95,30,183,30,"__fbBatchedBridgeConfig"],[95,53,183,53],[96,4,184,2,"invariant"],[96,13,184,11],[96,14,185,4,"bridgeConfig"],[96,26,185,16],[96,28,186,4],[96,94,187,2],[96,95,187,3],[97,4,189,2],[97,8,189,8,"defineLazyObjectProperty"],[97,32,189,32],[97,35,189,35,"require"],[97,42,189,42],[97,43,189,42,"_dependencyMap"],[97,57,189,42],[97,60,189,82],[97,61,189,83],[98,4,190,2],[98,5,190,3,"bridgeConfig"],[98,17,190,15],[98,18,190,16,"remoteModuleConfig"],[98,36,190,34],[98,40,190,38],[98,42,190,40],[98,44,190,42,"forEach"],[98,51,190,49],[98,52,191,4],[98,53,191,5,"config"],[98,59,191,25],[98,61,191,27,"moduleID"],[98,69,191,43],[98,74,191,48],[99,6,194,6],[99,10,194,12,"info"],[99,14,194,16],[99,17,194,19,"genModule"],[99,26,194,28],[99,27,194,29,"config"],[99,33,194,35],[99,35,194,37,"moduleID"],[99,43,194,45],[99,44,194,46],[100,6,195,6],[100,10,195,10],[100,11,195,11,"info"],[100,15,195,15],[100,17,195,17],[101,8,196,8],[102,6,197,6],[103,6,199,6],[103,10,199,10,"info"],[103,14,199,14],[103,15,199,15,"module"],[103,21,199,21],[103,23,199,23],[104,8,200,8,"NativeModules"],[104,21,200,21],[104,22,200,22,"info"],[104,26,200,26],[104,27,200,27,"name"],[104,31,200,31],[104,32,200,32],[104,35,200,35,"info"],[104,39,200,39],[104,40,200,40,"module"],[104,46,200,46],[105,6,201,6],[105,7,201,7],[105,13,203,11],[106,8,204,8,"defineLazyObjectProperty"],[106,32,204,32],[106,33,204,33,"NativeModules"],[106,46,204,46],[106,48,204,48,"info"],[106,52,204,52],[106,53,204,53,"name"],[106,57,204,57],[106,59,204,59],[107,10,205,10,"get"],[107,13,205,13],[107,15,205,15,"get"],[107,16,205,15],[107,21,205,21,"loadModule"],[107,31,205,31],[107,32,205,32,"info"],[107,36,205,36],[107,37,205,37,"name"],[107,41,205,41],[107,43,205,43,"moduleID"],[107,51,205,51],[108,8,206,8],[108,9,206,9],[108,10,206,10],[109,6,207,6],[110,4,208,4],[110,5,209,2],[110,6,209,3],[111,2,210,0],[112,2,212,0,"module"],[112,8,212,6],[112,9,212,7,"exports"],[112,16,212,14],[112,19,212,17,"NativeModules"],[112,32,212,30],[113,0,212,31],[113,3]],"functionMap":{"names":["<global>","genModule","methods.forEach$argument_0","module.getConstants","loadModule","genMethod","promiseMethodWrapper","Promise$argument_0","BatchedBridge.enqueueNativeCall$argument_3","BatchedBridge.enqueueNativeCall$argument_4","nonPromiseMethodWrapper","arrayContains","updateErrorWithErrorData","forEach$argument_0","defineLazyObjectProperty$argument_2.get"],"mappings":"AAA;AC2B;oBC2B;KDW;0BEK,oCF;CDY;AIK;CJQ;AKE;SCG;yBCM;UCK,qBD;UEC;aFM;ODE;KDC;SKE;KLkC;CLK;AWE;CXE;AYE;CZQ;Iac;eCc,qCD;KbG"}},"type":"js/module"}]}