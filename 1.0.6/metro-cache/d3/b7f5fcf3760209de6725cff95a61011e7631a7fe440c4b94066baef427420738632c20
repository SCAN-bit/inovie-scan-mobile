{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":410,"column":0,"index":16997}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":410,"column":0,"index":16997}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":410,"column":0,"index":16997}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":410,"column":0,"index":16997}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":410,"column":0,"index":16997}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@firebase/util","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":42,"index":42}}],"key":"E1TkBF0412Fgmp0WXPMAjAx5mio="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Provider = exports.ComponentContainer = exports.Component = undefined;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[2]));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[3]));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[4]));\n  var _util = require(_dependencyMap[5]);\n  /**\r\n   * Component for service name T, e.g. `auth`, `auth-internal`\r\n   */\n  var Component = exports.Component = /*#__PURE__*/function () {\n    /**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */\n    function Component(name, instanceFactory, type) {\n      (0, _classCallCheck2.default)(this, Component);\n      this.name = name;\n      this.instanceFactory = instanceFactory;\n      this.type = type;\n      this.multipleInstances = false;\n      /**\r\n       * Properties to be added to the service namespace\r\n       */\n      this.serviceProps = {};\n      this.instantiationMode = \"LAZY\" /* InstantiationMode.LAZY */;\n      this.onInstanceCreated = null;\n    }\n    return (0, _createClass2.default)(Component, [{\n      key: \"setInstantiationMode\",\n      value: function setInstantiationMode(mode) {\n        this.instantiationMode = mode;\n        return this;\n      }\n    }, {\n      key: \"setMultipleInstances\",\n      value: function setMultipleInstances(multipleInstances) {\n        this.multipleInstances = multipleInstances;\n        return this;\n      }\n    }, {\n      key: \"setServiceProps\",\n      value: function setServiceProps(props) {\n        this.serviceProps = props;\n        return this;\n      }\n    }, {\n      key: \"setInstanceCreatedCallback\",\n      value: function setInstanceCreatedCallback(callback) {\n        this.onInstanceCreated = callback;\n        return this;\n      }\n    }]);\n  }();\n  /**\r\n   * @license\r\n   * Copyright 2019 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n  /**\r\n   * @license\r\n   * Copyright 2019 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n   * NameServiceMapping[T] is an alias for the type of the instance\r\n   */\n  var Provider = exports.Provider = /*#__PURE__*/function () {\n    function Provider(name, container) {\n      (0, _classCallCheck2.default)(this, Provider);\n      this.name = name;\n      this.container = container;\n      this.component = null;\n      this.instances = new Map();\n      this.instancesDeferred = new Map();\n      this.instancesOptions = new Map();\n      this.onInitCallbacks = new Map();\n    }\n    /**\r\n     * @param identifier A provider can provide multiple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */\n    return (0, _createClass2.default)(Provider, [{\n      key: \"get\",\n      value: function get(identifier) {\n        // if multipleInstances is not supported, use the default name\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\n          var deferred = new _util.Deferred();\n          this.instancesDeferred.set(normalizedIdentifier, deferred);\n          if (this.isInitialized(normalizedIdentifier) || this.shouldAutoInitialize()) {\n            // initialize the service if it can be auto-initialized\n            try {\n              var instance = this.getOrInitializeService({\n                instanceIdentifier: normalizedIdentifier\n              });\n              if (instance) {\n                deferred.resolve(instance);\n              }\n            } catch (e) {\n              // when the instance factory throws an exception during get(), it should not cause\n              // a fatal error. We just return the unresolved promise in this case.\n            }\n          }\n        }\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\n      }\n    }, {\n      key: \"getImmediate\",\n      value: function getImmediate(options) {\n        var _a;\n        // if multipleInstances is not supported, use the default name\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === undefined ? undefined : options.identifier);\n        var optional = (_a = options === null || options === undefined ? undefined : options.optional) !== null && _a !== undefined ? _a : false;\n        if (this.isInitialized(normalizedIdentifier) || this.shouldAutoInitialize()) {\n          try {\n            return this.getOrInitializeService({\n              instanceIdentifier: normalizedIdentifier\n            });\n          } catch (e) {\n            if (optional) {\n              return null;\n            } else {\n              throw e;\n            }\n          }\n        } else {\n          // In case a component is not initialized and should/cannot be auto-initialized at the moment, return null if the optional flag is set, or throw\n          if (optional) {\n            return null;\n          } else {\n            throw Error(`Service ${this.name} is not available`);\n          }\n        }\n      }\n    }, {\n      key: \"getComponent\",\n      value: function getComponent() {\n        return this.component;\n      }\n    }, {\n      key: \"setComponent\",\n      value: function setComponent(component) {\n        if (component.name !== this.name) {\n          throw Error(`Mismatching Component ${component.name} for Provider ${this.name}.`);\n        }\n        if (this.component) {\n          throw Error(`Component for ${this.name} has already been provided`);\n        }\n        this.component = component;\n        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n        if (!this.shouldAutoInitialize()) {\n          return;\n        }\n        // if the service is eager, initialize the default instance\n        if (isComponentEager(component)) {\n          try {\n            this.getOrInitializeService({\n              instanceIdentifier: DEFAULT_ENTRY_NAME\n            });\n          } catch (e) {\n            // when the instance factory for an eager Component throws an exception during the eager\n            // initialization, it should not cause a fatal error.\n            // TODO: Investigate if we need to make it configurable, because some component may want to cause\n            // a fatal error in this case?\n          }\n        }\n        // Create service instances for the pending promises and resolve them\n        // NOTE: if this.multipleInstances is false, only the default instance will be created\n        // and all promises with resolve with it regardless of the identifier.\n        for (var _ref of this.instancesDeferred.entries()) {\n          var _ref2 = (0, _slicedToArray2.default)(_ref, 2);\n          var instanceIdentifier = _ref2[0];\n          var instanceDeferred = _ref2[1];\n          var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\n          try {\n            // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n            var instance = this.getOrInitializeService({\n              instanceIdentifier: normalizedIdentifier\n            });\n            instanceDeferred.resolve(instance);\n          } catch (e) {\n            // when the instance factory throws an exception, it should not cause\n            // a fatal error. We just leave the promise unresolved.\n          }\n        }\n      }\n    }, {\n      key: \"clearInstance\",\n      value: function clearInstance() {\n        var identifier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ENTRY_NAME;\n        this.instancesDeferred.delete(identifier);\n        this.instancesOptions.delete(identifier);\n        this.instances.delete(identifier);\n      }\n      // app.delete() will call this method on every provider to delete the services\n      // TODO: should we mark the provider as deleted?\n    }, {\n      key: \"delete\",\n      value: function () {\n        var _delete2 = (0, _asyncToGenerator2.default)(function* () {\n          var services = Array.from(this.instances.values());\n          yield Promise.all([...services.filter(service => 'INTERNAL' in service) // legacy services\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          .map(service => service.INTERNAL.delete()), ...services.filter(service => '_delete' in service) // modularized services\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          .map(service => service._delete())]);\n        });\n        function _delete() {\n          return _delete2.apply(this, arguments);\n        }\n        return _delete;\n      }()\n    }, {\n      key: \"isComponentSet\",\n      value: function isComponentSet() {\n        return this.component != null;\n      }\n    }, {\n      key: \"isInitialized\",\n      value: function isInitialized() {\n        var identifier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ENTRY_NAME;\n        return this.instances.has(identifier);\n      }\n    }, {\n      key: \"getOptions\",\n      value: function getOptions() {\n        var identifier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ENTRY_NAME;\n        return this.instancesOptions.get(identifier) || {};\n      }\n    }, {\n      key: \"initialize\",\n      value: function initialize() {\n        var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var _opts$options = opts.options,\n          options = _opts$options === undefined ? {} : _opts$options;\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\n        if (this.isInitialized(normalizedIdentifier)) {\n          throw Error(`${this.name}(${normalizedIdentifier}) has already been initialized`);\n        }\n        if (!this.isComponentSet()) {\n          throw Error(`Component ${this.name} has not been registered yet`);\n        }\n        var instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier,\n          options\n        });\n        // resolve any pending promise waiting for the service instance\n        for (var _ref3 of this.instancesDeferred.entries()) {\n          var _ref4 = (0, _slicedToArray2.default)(_ref3, 2);\n          var instanceIdentifier = _ref4[0];\n          var instanceDeferred = _ref4[1];\n          var normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\n          if (normalizedIdentifier === normalizedDeferredIdentifier) {\n            instanceDeferred.resolve(instance);\n          }\n        }\n        return instance;\n      }\n      /**\r\n       *\r\n       * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n       * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n       *\r\n       * @param identifier An optional instance identifier\r\n       * @returns a function to unregister the callback\r\n       */\n    }, {\n      key: \"onInit\",\n      value: function onInit(callback, identifier) {\n        var _a;\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n        var existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== undefined ? _a : new Set();\n        existingCallbacks.add(callback);\n        this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n        var existingInstance = this.instances.get(normalizedIdentifier);\n        if (existingInstance) {\n          callback(existingInstance, normalizedIdentifier);\n        }\n        return () => {\n          existingCallbacks.delete(callback);\n        };\n      }\n      /**\r\n       * Invoke onInit callbacks synchronously\r\n       * @param instance the service instance`\r\n       */\n    }, {\n      key: \"invokeOnInitCallbacks\",\n      value: function invokeOnInitCallbacks(instance, identifier) {\n        var callbacks = this.onInitCallbacks.get(identifier);\n        if (!callbacks) {\n          return;\n        }\n        for (var callback of callbacks) {\n          try {\n            callback(instance, identifier);\n          } catch (_a) {\n            // ignore errors in the onInit callback\n          }\n        }\n      }\n    }, {\n      key: \"getOrInitializeService\",\n      value: function getOrInitializeService(_ref5) {\n        var instanceIdentifier = _ref5.instanceIdentifier,\n          _ref5$options = _ref5.options,\n          options = _ref5$options === undefined ? {} : _ref5$options;\n        var instance = this.instances.get(instanceIdentifier);\n        if (!instance && this.component) {\n          instance = this.component.instanceFactory(this.container, {\n            instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n            options\n          });\n          this.instances.set(instanceIdentifier, instance);\n          this.instancesOptions.set(instanceIdentifier, options);\n          /**\r\n           * Invoke onInit listeners.\r\n           * Note this.component.onInstanceCreated is different, which is used by the component creator,\r\n           * while onInit listeners are registered by consumers of the provider.\r\n           */\n          this.invokeOnInitCallbacks(instance, instanceIdentifier);\n          /**\r\n           * Order is important\r\n           * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n           * makes `isInitialized()` return true.\r\n           */\n          if (this.component.onInstanceCreated) {\n            try {\n              this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\n            } catch (_a) {\n              // ignore errors in the onInstanceCreatedCallback\n            }\n          }\n        }\n        return instance || null;\n      }\n    }, {\n      key: \"normalizeInstanceIdentifier\",\n      value: function normalizeInstanceIdentifier() {\n        var identifier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ENTRY_NAME;\n        if (this.component) {\n          return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n        } else {\n          return identifier; // assume multiple instances are supported before the component is provided.\n        }\n      }\n    }, {\n      key: \"shouldAutoInitialize\",\n      value: function shouldAutoInitialize() {\n        return !!this.component && this.component.instantiationMode !== \"EXPLICIT\" /* InstantiationMode.EXPLICIT */;\n      }\n    }]);\n  }(); // undefined should be passed to the service factory for the default instance\n  function normalizeIdentifierForFactory(identifier) {\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n  }\n  function isComponentEager(component) {\n    return component.instantiationMode === \"EAGER\" /* InstantiationMode.EAGER */;\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2019 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n   */\n  var ComponentContainer = exports.ComponentContainer = /*#__PURE__*/function () {\n    function ComponentContainer(name) {\n      (0, _classCallCheck2.default)(this, ComponentContainer);\n      this.name = name;\n      this.providers = new Map();\n    }\n    /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */\n    return (0, _createClass2.default)(ComponentContainer, [{\n      key: \"addComponent\",\n      value: function addComponent(component) {\n        var provider = this.getProvider(component.name);\n        if (provider.isComponentSet()) {\n          throw new Error(`Component ${component.name} has already been registered with ${this.name}`);\n        }\n        provider.setComponent(component);\n      }\n    }, {\n      key: \"addOrOverwriteComponent\",\n      value: function addOrOverwriteComponent(component) {\n        var provider = this.getProvider(component.name);\n        if (provider.isComponentSet()) {\n          // delete the existing provider from the container, so we can register the new component\n          this.providers.delete(component.name);\n        }\n        this.addComponent(component);\n      }\n      /**\r\n       * getProvider provides a type safe interface where it can only be called with a field name\r\n       * present in NameServiceMapping interface.\r\n       *\r\n       * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n       * themselves.\r\n       */\n    }, {\n      key: \"getProvider\",\n      value: function getProvider(name) {\n        if (this.providers.has(name)) {\n          return this.providers.get(name);\n        }\n        // create a Provider for a service that hasn't registered with Firebase\n        var provider = new Provider(name, this);\n        this.providers.set(name, provider);\n        return provider;\n      }\n    }, {\n      key: \"getProviders\",\n      value: function getProviders() {\n        return Array.from(this.providers.values());\n      }\n    }]);\n  }();\n});","lineCount":471,"map":[[11,2,1,0],[11,6,1,0,"_util"],[11,11,1,0],[11,14,1,0,"require"],[11,21,1,0],[11,22,1,0,"_dependencyMap"],[11,36,1,0],[12,2,3,0],[13,0,4,0],[14,0,5,0],[15,2,3,0],[15,6,6,6,"Component"],[15,15,6,15],[15,18,6,15,"exports"],[15,25,6,15],[15,26,6,15,"Component"],[15,35,6,15],[16,4,7,4],[17,0,8,0],[18,0,9,0],[19,0,10,0],[20,0,11,0],[21,0,12,0],[22,4,13,4],[22,13,13,4,"Component"],[22,23,13,16,"name"],[22,27,13,20],[22,29,13,22,"instanceFactory"],[22,44,13,37],[22,46,13,39,"type"],[22,50,13,43],[22,52,13,45],[23,6,13,45],[23,10,13,45,"_classCallCheck2"],[23,26,13,45],[23,27,13,45,"default"],[23,34,13,45],[23,42,13,45,"Component"],[23,51,13,45],[24,6,14,8],[24,10,14,12],[24,11,14,13,"name"],[24,15,14,17],[24,18,14,20,"name"],[24,22,14,24],[25,6,15,8],[25,10,15,12],[25,11,15,13,"instanceFactory"],[25,26,15,28],[25,29,15,31,"instanceFactory"],[25,44,15,46],[26,6,16,8],[26,10,16,12],[26,11,16,13,"type"],[26,15,16,17],[26,18,16,20,"type"],[26,22,16,24],[27,6,17,8],[27,10,17,12],[27,11,17,13,"multipleInstances"],[27,28,17,30],[27,31,17,33],[27,36,17,38],[28,6,18,8],[29,0,19,0],[30,0,20,0],[31,6,21,8],[31,10,21,12],[31,11,21,13,"serviceProps"],[31,23,21,25],[31,26,21,28],[31,27,21,29],[31,28,21,30],[32,6,22,8],[32,10,22,12],[32,11,22,13,"instantiationMode"],[32,28,22,30],[32,31,22,33],[32,37,22,39],[32,38,22,40],[33,6,23,8],[33,10,23,12],[33,11,23,13,"onInstanceCreated"],[33,28,23,30],[33,31,23,33],[33,35,23,37],[34,4,24,4],[35,4,24,5],[35,15,24,5,"_createClass2"],[35,28,24,5],[35,29,24,5,"default"],[35,36,24,5],[35,38,24,5,"Component"],[35,47,24,5],[36,6,24,5,"key"],[36,9,24,5],[37,6,24,5,"value"],[37,11,24,5],[37,13,25,4],[37,22,25,4,"setInstantiationMode"],[37,42,25,24,"setInstantiationMode"],[37,43,25,25,"mode"],[37,47,25,29],[37,49,25,31],[38,8,26,8],[38,12,26,12],[38,13,26,13,"instantiationMode"],[38,30,26,30],[38,33,26,33,"mode"],[38,37,26,37],[39,8,27,8],[39,15,27,15],[39,19,27,19],[40,6,28,4],[41,4,28,5],[42,6,28,5,"key"],[42,9,28,5],[43,6,28,5,"value"],[43,11,28,5],[43,13,29,4],[43,22,29,4,"setMultipleInstances"],[43,42,29,24,"setMultipleInstances"],[43,43,29,25,"multipleInstances"],[43,60,29,42],[43,62,29,44],[44,8,30,8],[44,12,30,12],[44,13,30,13,"multipleInstances"],[44,30,30,30],[44,33,30,33,"multipleInstances"],[44,50,30,50],[45,8,31,8],[45,15,31,15],[45,19,31,19],[46,6,32,4],[47,4,32,5],[48,6,32,5,"key"],[48,9,32,5],[49,6,32,5,"value"],[49,11,32,5],[49,13,33,4],[49,22,33,4,"setServiceProps"],[49,37,33,19,"setServiceProps"],[49,38,33,20,"props"],[49,43,33,25],[49,45,33,27],[50,8,34,8],[50,12,34,12],[50,13,34,13,"serviceProps"],[50,25,34,25],[50,28,34,28,"props"],[50,33,34,33],[51,8,35,8],[51,15,35,15],[51,19,35,19],[52,6,36,4],[53,4,36,5],[54,6,36,5,"key"],[54,9,36,5],[55,6,36,5,"value"],[55,11,36,5],[55,13,37,4],[55,22,37,4,"setInstanceCreatedCallback"],[55,48,37,30,"setInstanceCreatedCallback"],[55,49,37,31,"callback"],[55,57,37,39],[55,59,37,41],[56,8,38,8],[56,12,38,12],[56,13,38,13,"onInstanceCreated"],[56,30,38,30],[56,33,38,33,"callback"],[56,41,38,41],[57,8,39,8],[57,15,39,15],[57,19,39,19],[58,6,40,4],[59,4,40,5],[60,2,40,5],[61,2,43,0],[62,0,44,0],[63,0,45,0],[64,0,46,0],[65,0,47,0],[66,0,48,0],[67,0,49,0],[68,0,50,0],[69,0,51,0],[70,0,52,0],[71,0,53,0],[72,0,54,0],[73,0,55,0],[74,0,56,0],[75,0,57,0],[76,0,58,0],[77,2,59,0],[77,6,59,6,"DEFAULT_ENTRY_NAME"],[77,24,59,24],[77,27,59,27],[77,38,59,38],[79,2,61,0],[80,0,62,0],[81,0,63,0],[82,0,64,0],[83,0,65,0],[84,0,66,0],[85,0,67,0],[86,0,68,0],[87,0,69,0],[88,0,70,0],[89,0,71,0],[90,0,72,0],[91,0,73,0],[92,0,74,0],[93,0,75,0],[94,0,76,0],[95,2,77,0],[96,0,78,0],[97,0,79,0],[98,0,80,0],[99,2,77,0],[99,6,81,6,"Provider"],[99,14,81,14],[99,17,81,14,"exports"],[99,24,81,14],[99,25,81,14,"Provider"],[99,33,81,14],[100,4,82,4],[100,13,82,4,"Provider"],[100,22,82,16,"name"],[100,26,82,20],[100,28,82,22,"container"],[100,37,82,31],[100,39,82,33],[101,6,82,33],[101,10,82,33,"_classCallCheck2"],[101,26,82,33],[101,27,82,33,"default"],[101,34,82,33],[101,42,82,33,"Provider"],[101,50,82,33],[102,6,83,8],[102,10,83,12],[102,11,83,13,"name"],[102,15,83,17],[102,18,83,20,"name"],[102,22,83,24],[103,6,84,8],[103,10,84,12],[103,11,84,13,"container"],[103,20,84,22],[103,23,84,25,"container"],[103,32,84,34],[104,6,85,8],[104,10,85,12],[104,11,85,13,"component"],[104,20,85,22],[104,23,85,25],[104,27,85,29],[105,6,86,8],[105,10,86,12],[105,11,86,13,"instances"],[105,20,86,22],[105,23,86,25],[105,27,86,29,"Map"],[105,30,86,32],[105,31,86,33],[105,32,86,34],[106,6,87,8],[106,10,87,12],[106,11,87,13,"instancesDeferred"],[106,28,87,30],[106,31,87,33],[106,35,87,37,"Map"],[106,38,87,40],[106,39,87,41],[106,40,87,42],[107,6,88,8],[107,10,88,12],[107,11,88,13,"instancesOptions"],[107,27,88,29],[107,30,88,32],[107,34,88,36,"Map"],[107,37,88,39],[107,38,88,40],[107,39,88,41],[108,6,89,8],[108,10,89,12],[108,11,89,13,"onInitCallbacks"],[108,26,89,28],[108,29,89,31],[108,33,89,35,"Map"],[108,36,89,38],[108,37,89,39],[108,38,89,40],[109,4,90,4],[110,4,91,4],[111,0,92,0],[112,0,93,0],[113,0,94,0],[114,4,91,4],[114,15,91,4,"_createClass2"],[114,28,91,4],[114,29,91,4,"default"],[114,36,91,4],[114,38,91,4,"Provider"],[114,46,91,4],[115,6,91,4,"key"],[115,9,91,4],[116,6,91,4,"value"],[116,11,91,4],[116,13,95,4],[116,22,95,4,"get"],[116,25,95,7,"get"],[116,26,95,8,"identifier"],[116,36,95,18],[116,38,95,20],[117,8,96,8],[118,8,97,8],[118,12,97,14,"normalizedIdentifier"],[118,32,97,34],[118,35,97,37],[118,39,97,41],[118,40,97,42,"normalizeInstanceIdentifier"],[118,67,97,69],[118,68,97,70,"identifier"],[118,78,97,80],[118,79,97,81],[119,8,98,8],[119,12,98,12],[119,13,98,13],[119,17,98,17],[119,18,98,18,"instancesDeferred"],[119,35,98,35],[119,36,98,36,"has"],[119,39,98,39],[119,40,98,40,"normalizedIdentifier"],[119,60,98,60],[119,61,98,61],[119,63,98,63],[120,10,99,12],[120,14,99,18,"deferred"],[120,22,99,26],[120,25,99,29],[120,29,99,33,"Deferred"],[120,43,99,41],[120,44,99,42],[120,45,99,43],[121,10,100,12],[121,14,100,16],[121,15,100,17,"instancesDeferred"],[121,32,100,34],[121,33,100,35,"set"],[121,36,100,38],[121,37,100,39,"normalizedIdentifier"],[121,57,100,59],[121,59,100,61,"deferred"],[121,67,100,69],[121,68,100,70],[122,10,101,12],[122,14,101,16],[122,18,101,20],[122,19,101,21,"isInitialized"],[122,32,101,34],[122,33,101,35,"normalizedIdentifier"],[122,53,101,55],[122,54,101,56],[122,58,102,16],[122,62,102,20],[122,63,102,21,"shouldAutoInitialize"],[122,83,102,41],[122,84,102,42],[122,85,102,43],[122,87,102,45],[123,12,103,16],[124,12,104,16],[124,16,104,20],[125,14,105,20],[125,18,105,26,"instance"],[125,26,105,34],[125,29,105,37],[125,33,105,41],[125,34,105,42,"getOrInitializeService"],[125,56,105,64],[125,57,105,65],[126,16,106,24,"instanceIdentifier"],[126,34,106,42],[126,36,106,44,"normalizedIdentifier"],[127,14,107,20],[127,15,107,21],[127,16,107,22],[128,14,108,20],[128,18,108,24,"instance"],[128,26,108,32],[128,28,108,34],[129,16,109,24,"deferred"],[129,24,109,32],[129,25,109,33,"resolve"],[129,32,109,40],[129,33,109,41,"instance"],[129,41,109,49],[129,42,109,50],[130,14,110,20],[131,12,111,16],[131,13,111,17],[131,14,112,16],[131,21,112,23,"e"],[131,22,112,24],[131,24,112,26],[132,14,113,20],[133,14,114,20],[134,12,114,20],[135,10,116,12],[136,8,117,8],[137,8,118,8],[137,15,118,15],[137,19,118,19],[137,20,118,20,"instancesDeferred"],[137,37,118,37],[137,38,118,38,"get"],[137,41,118,41],[137,42,118,42,"normalizedIdentifier"],[137,62,118,62],[137,63,118,63],[137,64,118,64,"promise"],[137,71,118,71],[138,6,119,4],[139,4,119,5],[140,6,119,5,"key"],[140,9,119,5],[141,6,119,5,"value"],[141,11,119,5],[141,13,120,4],[141,22,120,4,"getImmediate"],[141,34,120,16,"getImmediate"],[141,35,120,17,"options"],[141,42,120,24],[141,44,120,26],[142,8,121,8],[142,12,121,12,"_a"],[142,14,121,14],[143,8,122,8],[144,8,123,8],[144,12,123,14,"normalizedIdentifier"],[144,32,123,34],[144,35,123,37],[144,39,123,41],[144,40,123,42,"normalizeInstanceIdentifier"],[144,67,123,69],[144,68,123,70,"options"],[144,75,123,77],[144,80,123,82],[144,84,123,86],[144,88,123,90,"options"],[144,95,123,97],[144,100,123,97,"undefined"],[144,109,123,108],[144,112,123,108,"undefined"],[144,121,123,108],[144,124,123,120,"options"],[144,131,123,127],[144,132,123,128,"identifier"],[144,142,123,138],[144,143,123,139],[145,8,124,8],[145,12,124,14,"optional"],[145,20,124,22],[145,23,124,25],[145,24,124,26,"_a"],[145,26,124,28],[145,29,124,31,"options"],[145,36,124,38],[145,41,124,43],[145,45,124,47],[145,49,124,51,"options"],[145,56,124,58],[145,61,124,58,"undefined"],[145,70,124,69],[145,73,124,69,"undefined"],[145,82,124,69],[145,85,124,81,"options"],[145,92,124,88],[145,93,124,89,"optional"],[145,101,124,97],[145,107,124,103],[145,111,124,107],[145,115,124,111,"_a"],[145,117,124,113],[145,122,124,113,"undefined"],[145,131,124,124],[145,134,124,127,"_a"],[145,136,124,129],[145,139,124,132],[145,144,124,137],[146,8,125,8],[146,12,125,12],[146,16,125,16],[146,17,125,17,"isInitialized"],[146,30,125,30],[146,31,125,31,"normalizedIdentifier"],[146,51,125,51],[146,52,125,52],[146,56,126,12],[146,60,126,16],[146,61,126,17,"shouldAutoInitialize"],[146,81,126,37],[146,82,126,38],[146,83,126,39],[146,85,126,41],[147,10,127,12],[147,14,127,16],[148,12,128,16],[148,19,128,23],[148,23,128,27],[148,24,128,28,"getOrInitializeService"],[148,46,128,50],[148,47,128,51],[149,14,129,20,"instanceIdentifier"],[149,32,129,38],[149,34,129,40,"normalizedIdentifier"],[150,12,130,16],[150,13,130,17],[150,14,130,18],[151,10,131,12],[151,11,131,13],[151,12,132,12],[151,19,132,19,"e"],[151,20,132,20],[151,22,132,22],[152,12,133,16],[152,16,133,20,"optional"],[152,24,133,28],[152,26,133,30],[153,14,134,20],[153,21,134,27],[153,25,134,31],[154,12,135,16],[154,13,135,17],[154,19,136,21],[155,14,137,20],[155,20,137,26,"e"],[155,21,137,27],[156,12,138,16],[157,10,139,12],[158,8,140,8],[158,9,140,9],[158,15,141,13],[159,10,142,12],[160,10,143,12],[160,14,143,16,"optional"],[160,22,143,24],[160,24,143,26],[161,12,144,16],[161,19,144,23],[161,23,144,27],[162,10,145,12],[162,11,145,13],[162,17,146,17],[163,12,147,16],[163,18,147,22,"Error"],[163,23,147,27],[163,24,147,28],[163,35,147,39],[163,39,147,43],[163,40,147,44,"name"],[163,44,147,48],[163,63,147,67],[163,64,147,68],[164,10,148,12],[165,8,149,8],[166,6,150,4],[167,4,150,5],[168,6,150,5,"key"],[168,9,150,5],[169,6,150,5,"value"],[169,11,150,5],[169,13,151,4],[169,22,151,4,"getComponent"],[169,34,151,16,"getComponent"],[169,35,151,16],[169,37,151,19],[170,8,152,8],[170,15,152,15],[170,19,152,19],[170,20,152,20,"component"],[170,29,152,29],[171,6,153,4],[172,4,153,5],[173,6,153,5,"key"],[173,9,153,5],[174,6,153,5,"value"],[174,11,153,5],[174,13,154,4],[174,22,154,4,"setComponent"],[174,34,154,16,"setComponent"],[174,35,154,17,"component"],[174,44,154,26],[174,46,154,28],[175,8,155,8],[175,12,155,12,"component"],[175,21,155,21],[175,22,155,22,"name"],[175,26,155,26],[175,31,155,31],[175,35,155,35],[175,36,155,36,"name"],[175,40,155,40],[175,42,155,42],[176,10,156,12],[176,16,156,18,"Error"],[176,21,156,23],[176,22,156,24],[176,47,156,49,"component"],[176,56,156,58],[176,57,156,59,"name"],[176,61,156,63],[176,78,156,80],[176,82,156,84],[176,83,156,85,"name"],[176,87,156,89],[176,90,156,92],[176,91,156,93],[177,8,157,8],[178,8,158,8],[178,12,158,12],[178,16,158,16],[178,17,158,17,"component"],[178,26,158,26],[178,28,158,28],[179,10,159,12],[179,16,159,18,"Error"],[179,21,159,23],[179,22,159,24],[179,39,159,41],[179,43,159,45],[179,44,159,46,"name"],[179,48,159,50],[179,76,159,78],[179,77,159,79],[180,8,160,8],[181,8,161,8],[181,12,161,12],[181,13,161,13,"component"],[181,22,161,22],[181,25,161,25,"component"],[181,34,161,34],[182,8,162,8],[183,8,163,8],[183,12,163,12],[183,13,163,13],[183,17,163,17],[183,18,163,18,"shouldAutoInitialize"],[183,38,163,38],[183,39,163,39],[183,40,163,40],[183,42,163,42],[184,10,164,12],[185,8,165,8],[186,8,166,8],[187,8,167,8],[187,12,167,12,"isComponentEager"],[187,28,167,28],[187,29,167,29,"component"],[187,38,167,38],[187,39,167,39],[187,41,167,41],[188,10,168,12],[188,14,168,16],[189,12,169,16],[189,16,169,20],[189,17,169,21,"getOrInitializeService"],[189,39,169,43],[189,40,169,44],[190,14,169,46,"instanceIdentifier"],[190,32,169,64],[190,34,169,66,"DEFAULT_ENTRY_NAME"],[191,12,169,85],[191,13,169,86],[191,14,169,87],[192,10,170,12],[192,11,170,13],[192,12,171,12],[192,19,171,19,"e"],[192,20,171,20],[192,22,171,22],[193,12,172,16],[194,12,173,16],[195,12,174,16],[196,12,175,16],[197,10,175,16],[198,8,177,8],[199,8,178,8],[200,8,179,8],[201,8,180,8],[202,8,181,8],[202,17,181,8,"_ref"],[202,21,181,8],[202,25,181,61],[202,29,181,65],[202,30,181,66,"instancesDeferred"],[202,47,181,83],[202,48,181,84,"entries"],[202,55,181,91],[202,56,181,92],[202,57,181,93],[202,59,181,95],[203,10,181,95],[203,14,181,95,"_ref2"],[203,19,181,95],[203,26,181,95,"_slicedToArray2"],[203,41,181,95],[203,42,181,95,"default"],[203,49,181,95],[203,51,181,95,"_ref"],[203,55,181,95],[204,10,181,95],[204,14,181,20,"instanceIdentifier"],[204,32,181,38],[204,35,181,38,"_ref2"],[204,40,181,38],[205,10,181,38],[205,14,181,40,"instanceDeferred"],[205,30,181,56],[205,33,181,56,"_ref2"],[205,38,181,56],[206,10,182,12],[206,14,182,18,"normalizedIdentifier"],[206,34,182,38],[206,37,182,41],[206,41,182,45],[206,42,182,46,"normalizeInstanceIdentifier"],[206,69,182,73],[206,70,182,74,"instanceIdentifier"],[206,88,182,92],[206,89,182,93],[207,10,183,12],[207,14,183,16],[208,12,184,16],[209,12,185,16],[209,16,185,22,"instance"],[209,24,185,30],[209,27,185,33],[209,31,185,37],[209,32,185,38,"getOrInitializeService"],[209,54,185,60],[209,55,185,61],[210,14,186,20,"instanceIdentifier"],[210,32,186,38],[210,34,186,40,"normalizedIdentifier"],[211,12,187,16],[211,13,187,17],[211,14,187,18],[212,12,188,16,"instanceDeferred"],[212,28,188,32],[212,29,188,33,"resolve"],[212,36,188,40],[212,37,188,41,"instance"],[212,45,188,49],[212,46,188,50],[213,10,189,12],[213,11,189,13],[213,12,190,12],[213,19,190,19,"e"],[213,20,190,20],[213,22,190,22],[214,12,191,16],[215,12,192,16],[216,10,192,16],[217,8,194,8],[218,6,195,4],[219,4,195,5],[220,6,195,5,"key"],[220,9,195,5],[221,6,195,5,"value"],[221,11,195,5],[221,13,196,4],[221,22,196,4,"clearInstance"],[221,35,196,17,"clearInstance"],[221,36,196,17],[221,38,196,51],[222,8,196,51],[222,12,196,18,"identifier"],[222,22,196,28],[222,25,196,28,"arguments"],[222,34,196,28],[222,35,196,28,"length"],[222,41,196,28],[222,49,196,28,"arguments"],[222,58,196,28],[222,66,196,28,"undefined"],[222,75,196,28],[222,78,196,28,"arguments"],[222,87,196,28],[222,93,196,31,"DEFAULT_ENTRY_NAME"],[222,111,196,49],[223,8,197,8],[223,12,197,12],[223,13,197,13,"instancesDeferred"],[223,30,197,30],[223,31,197,31,"delete"],[223,37,197,37],[223,38,197,38,"identifier"],[223,48,197,48],[223,49,197,49],[224,8,198,8],[224,12,198,12],[224,13,198,13,"instancesOptions"],[224,29,198,29],[224,30,198,30,"delete"],[224,36,198,36],[224,37,198,37,"identifier"],[224,47,198,47],[224,48,198,48],[225,8,199,8],[225,12,199,12],[225,13,199,13,"instances"],[225,22,199,22],[225,23,199,23,"delete"],[225,29,199,29],[225,30,199,30,"identifier"],[225,40,199,40],[225,41,199,41],[226,6,200,4],[227,6,201,4],[228,6,202,4],[229,4,202,4],[230,6,202,4,"key"],[230,9,202,4],[231,6,202,4,"value"],[231,11,202,4],[232,8,202,4],[232,12,202,4,"_delete2"],[232,20,202,4],[232,27,202,4,"_asyncToGenerator2"],[232,45,202,4],[232,46,202,4,"default"],[232,53,202,4],[232,55,203,4],[232,68,203,19],[233,10,204,8],[233,14,204,14,"services"],[233,22,204,22],[233,25,204,25,"Array"],[233,30,204,30],[233,31,204,31,"from"],[233,35,204,35],[233,36,204,36],[233,40,204,40],[233,41,204,41,"instances"],[233,50,204,50],[233,51,204,51,"values"],[233,57,204,57],[233,58,204,58],[233,59,204,59],[233,60,204,60],[234,10,205,8],[234,16,205,14,"Promise"],[234,23,205,21],[234,24,205,22,"all"],[234,27,205,25],[234,28,205,26],[234,29,206,12],[234,32,206,15,"services"],[234,40,206,23],[234,41,207,17,"filter"],[234,47,207,23],[234,48,207,24,"service"],[234,55,207,31],[234,59,207,35],[234,69,207,45],[234,73,207,49,"service"],[234,80,207,56],[234,81,207,57],[234,82,207,58],[235,10,208,16],[236,10,208,16],[236,11,209,17,"map"],[236,14,209,20],[236,15,209,21,"service"],[236,22,209,28],[236,26,209,32,"service"],[236,33,209,39],[236,34,209,40,"INTERNAL"],[236,42,209,48],[236,43,209,49,"delete"],[236,49,209,55],[236,50,209,56],[236,51,209,57],[236,52,209,58],[236,54,210,12],[236,57,210,15,"services"],[236,65,210,23],[236,66,211,17,"filter"],[236,72,211,23],[236,73,211,24,"service"],[236,80,211,31],[236,84,211,35],[236,93,211,44],[236,97,211,48,"service"],[236,104,211,55],[236,105,211,56],[236,106,211,57],[237,10,212,16],[238,10,212,16],[238,11,213,17,"map"],[238,14,213,20],[238,15,213,21,"service"],[238,22,213,28],[238,26,213,32,"service"],[238,33,213,39],[238,34,213,40,"_delete"],[238,41,213,47],[238,42,213,48],[238,43,213,49],[238,44,213,50],[238,45,214,9],[238,46,214,10],[239,8,215,4],[239,9,215,5],[240,8,215,5],[240,17,203,10,"delete"],[240,24,203,16,"delete"],[240,25,203,16],[241,10,203,16],[241,17,203,16,"_delete2"],[241,25,203,16],[241,26,203,16,"apply"],[241,31,203,16],[241,38,203,16,"arguments"],[241,47,203,16],[242,8,203,16],[243,8,203,16],[243,15,203,10,"delete"],[243,22,203,16],[244,6,203,16],[245,4,203,16],[246,6,203,16,"key"],[246,9,203,16],[247,6,203,16,"value"],[247,11,203,16],[247,13,216,4],[247,22,216,4,"isComponentSet"],[247,36,216,18,"isComponentSet"],[247,37,216,18],[247,39,216,21],[248,8,217,8],[248,15,217,15],[248,19,217,19],[248,20,217,20,"component"],[248,29,217,29],[248,33,217,33],[248,37,217,37],[249,6,218,4],[250,4,218,5],[251,6,218,5,"key"],[251,9,218,5],[252,6,218,5,"value"],[252,11,218,5],[252,13,219,4],[252,22,219,4,"isInitialized"],[252,35,219,17,"isInitialized"],[252,36,219,17],[252,38,219,51],[253,8,219,51],[253,12,219,18,"identifier"],[253,22,219,28],[253,25,219,28,"arguments"],[253,34,219,28],[253,35,219,28,"length"],[253,41,219,28],[253,49,219,28,"arguments"],[253,58,219,28],[253,66,219,28,"undefined"],[253,75,219,28],[253,78,219,28,"arguments"],[253,87,219,28],[253,93,219,31,"DEFAULT_ENTRY_NAME"],[253,111,219,49],[254,8,220,8],[254,15,220,15],[254,19,220,19],[254,20,220,20,"instances"],[254,29,220,29],[254,30,220,30,"has"],[254,33,220,33],[254,34,220,34,"identifier"],[254,44,220,44],[254,45,220,45],[255,6,221,4],[256,4,221,5],[257,6,221,5,"key"],[257,9,221,5],[258,6,221,5,"value"],[258,11,221,5],[258,13,222,4],[258,22,222,4,"getOptions"],[258,32,222,14,"getOptions"],[258,33,222,14],[258,35,222,48],[259,8,222,48],[259,12,222,15,"identifier"],[259,22,222,25],[259,25,222,25,"arguments"],[259,34,222,25],[259,35,222,25,"length"],[259,41,222,25],[259,49,222,25,"arguments"],[259,58,222,25],[259,66,222,25,"undefined"],[259,75,222,25],[259,78,222,25,"arguments"],[259,87,222,25],[259,93,222,28,"DEFAULT_ENTRY_NAME"],[259,111,222,46],[260,8,223,8],[260,15,223,15],[260,19,223,19],[260,20,223,20,"instancesOptions"],[260,36,223,36],[260,37,223,37,"get"],[260,40,223,40],[260,41,223,41,"identifier"],[260,51,223,51],[260,52,223,52],[260,56,223,56],[260,57,223,57],[260,58,223,58],[261,6,224,4],[262,4,224,5],[263,6,224,5,"key"],[263,9,224,5],[264,6,224,5,"value"],[264,11,224,5],[264,13,225,4],[264,22,225,4,"initialize"],[264,32,225,14,"initialize"],[264,33,225,14],[264,35,225,26],[265,8,225,26],[265,12,225,15,"opts"],[265,16,225,19],[265,19,225,19,"arguments"],[265,28,225,19],[265,29,225,19,"length"],[265,35,225,19],[265,43,225,19,"arguments"],[265,52,225,19],[265,60,225,19,"undefined"],[265,69,225,19],[265,72,225,19,"arguments"],[265,81,225,19],[265,87,225,22],[265,88,225,23],[265,89,225,24],[266,8,226,8],[266,12,226,8,"_opts$options"],[266,25,226,8],[266,28,226,33,"opts"],[266,32,226,37],[266,33,226,16,"options"],[266,40,226,23],[267,10,226,16,"options"],[267,17,226,23],[267,20,226,23,"_opts$options"],[267,33,226,23],[267,38,226,23,"undefined"],[267,47,226,23],[267,50,226,26],[267,51,226,27],[267,52,226,28],[267,55,226,28,"_opts$options"],[267,68,226,28],[268,8,227,8],[268,12,227,14,"normalizedIdentifier"],[268,32,227,34],[268,35,227,37],[268,39,227,41],[268,40,227,42,"normalizeInstanceIdentifier"],[268,67,227,69],[268,68,227,70,"opts"],[268,72,227,74],[268,73,227,75,"instanceIdentifier"],[268,91,227,93],[268,92,227,94],[269,8,228,8],[269,12,228,12],[269,16,228,16],[269,17,228,17,"isInitialized"],[269,30,228,30],[269,31,228,31,"normalizedIdentifier"],[269,51,228,51],[269,52,228,52],[269,54,228,54],[270,10,229,12],[270,16,229,18,"Error"],[270,21,229,23],[270,22,229,24],[270,25,229,27],[270,29,229,31],[270,30,229,32,"name"],[270,34,229,36],[270,38,229,40,"normalizedIdentifier"],[270,58,229,60],[270,90,229,92],[270,91,229,93],[271,8,230,8],[272,8,231,8],[272,12,231,12],[272,13,231,13],[272,17,231,17],[272,18,231,18,"isComponentSet"],[272,32,231,32],[272,33,231,33],[272,34,231,34],[272,36,231,36],[273,10,232,12],[273,16,232,18,"Error"],[273,21,232,23],[273,22,232,24],[273,35,232,37],[273,39,232,41],[273,40,232,42,"name"],[273,44,232,46],[273,74,232,76],[273,75,232,77],[274,8,233,8],[275,8,234,8],[275,12,234,14,"instance"],[275,20,234,22],[275,23,234,25],[275,27,234,29],[275,28,234,30,"getOrInitializeService"],[275,50,234,52],[275,51,234,53],[276,10,235,12,"instanceIdentifier"],[276,28,235,30],[276,30,235,32,"normalizedIdentifier"],[276,50,235,52],[277,10,236,12,"options"],[278,8,237,8],[278,9,237,9],[278,10,237,10],[279,8,238,8],[280,8,239,8],[280,17,239,8,"_ref3"],[280,22,239,8],[280,26,239,61],[280,30,239,65],[280,31,239,66,"instancesDeferred"],[280,48,239,83],[280,49,239,84,"entries"],[280,56,239,91],[280,57,239,92],[280,58,239,93],[280,60,239,95],[281,10,239,95],[281,14,239,95,"_ref4"],[281,19,239,95],[281,26,239,95,"_slicedToArray2"],[281,41,239,95],[281,42,239,95,"default"],[281,49,239,95],[281,51,239,95,"_ref3"],[281,56,239,95],[282,10,239,95],[282,14,239,20,"instanceIdentifier"],[282,32,239,38],[282,35,239,38,"_ref4"],[282,40,239,38],[283,10,239,38],[283,14,239,40,"instanceDeferred"],[283,30,239,56],[283,33,239,56,"_ref4"],[283,38,239,56],[284,10,240,12],[284,14,240,18,"normalizedDeferredIdentifier"],[284,42,240,46],[284,45,240,49],[284,49,240,53],[284,50,240,54,"normalizeInstanceIdentifier"],[284,77,240,81],[284,78,240,82,"instanceIdentifier"],[284,96,240,100],[284,97,240,101],[285,10,241,12],[285,14,241,16,"normalizedIdentifier"],[285,34,241,36],[285,39,241,41,"normalizedDeferredIdentifier"],[285,67,241,69],[285,69,241,71],[286,12,242,16,"instanceDeferred"],[286,28,242,32],[286,29,242,33,"resolve"],[286,36,242,40],[286,37,242,41,"instance"],[286,45,242,49],[286,46,242,50],[287,10,243,12],[288,8,244,8],[289,8,245,8],[289,15,245,15,"instance"],[289,23,245,23],[290,6,246,4],[291,6,247,4],[292,0,248,0],[293,0,249,0],[294,0,250,0],[295,0,251,0],[296,0,252,0],[297,0,253,0],[298,0,254,0],[299,4,247,4],[300,6,247,4,"key"],[300,9,247,4],[301,6,247,4,"value"],[301,11,247,4],[301,13,255,4],[301,22,255,4,"onInit"],[301,28,255,10,"onInit"],[301,29,255,11,"callback"],[301,37,255,19],[301,39,255,21,"identifier"],[301,49,255,31],[301,51,255,33],[302,8,256,8],[302,12,256,12,"_a"],[302,14,256,14],[303,8,257,8],[303,12,257,14,"normalizedIdentifier"],[303,32,257,34],[303,35,257,37],[303,39,257,41],[303,40,257,42,"normalizeInstanceIdentifier"],[303,67,257,69],[303,68,257,70,"identifier"],[303,78,257,80],[303,79,257,81],[304,8,258,8],[304,12,258,14,"existingCallbacks"],[304,29,258,31],[304,32,258,34],[304,33,258,35,"_a"],[304,35,258,37],[304,38,258,40],[304,42,258,44],[304,43,258,45,"onInitCallbacks"],[304,58,258,60],[304,59,258,61,"get"],[304,62,258,64],[304,63,258,65,"normalizedIdentifier"],[304,83,258,85],[304,84,258,86],[304,90,258,92],[304,94,258,96],[304,98,258,100,"_a"],[304,100,258,102],[304,105,258,102,"undefined"],[304,114,258,113],[304,117,258,116,"_a"],[304,119,258,118],[304,122,258,121],[304,126,258,125,"Set"],[304,129,258,128],[304,130,258,129],[304,131,258,130],[305,8,259,8,"existingCallbacks"],[305,25,259,25],[305,26,259,26,"add"],[305,29,259,29],[305,30,259,30,"callback"],[305,38,259,38],[305,39,259,39],[306,8,260,8],[306,12,260,12],[306,13,260,13,"onInitCallbacks"],[306,28,260,28],[306,29,260,29,"set"],[306,32,260,32],[306,33,260,33,"normalizedIdentifier"],[306,53,260,53],[306,55,260,55,"existingCallbacks"],[306,72,260,72],[306,73,260,73],[307,8,261,8],[307,12,261,14,"existingInstance"],[307,28,261,30],[307,31,261,33],[307,35,261,37],[307,36,261,38,"instances"],[307,45,261,47],[307,46,261,48,"get"],[307,49,261,51],[307,50,261,52,"normalizedIdentifier"],[307,70,261,72],[307,71,261,73],[308,8,262,8],[308,12,262,12,"existingInstance"],[308,28,262,28],[308,30,262,30],[309,10,263,12,"callback"],[309,18,263,20],[309,19,263,21,"existingInstance"],[309,35,263,37],[309,37,263,39,"normalizedIdentifier"],[309,57,263,59],[309,58,263,60],[310,8,264,8],[311,8,265,8],[311,15,265,15],[311,21,265,21],[312,10,266,12,"existingCallbacks"],[312,27,266,29],[312,28,266,30,"delete"],[312,34,266,36],[312,35,266,37,"callback"],[312,43,266,45],[312,44,266,46],[313,8,267,8],[313,9,267,9],[314,6,268,4],[315,6,269,4],[316,0,270,0],[317,0,271,0],[318,0,272,0],[319,4,269,4],[320,6,269,4,"key"],[320,9,269,4],[321,6,269,4,"value"],[321,11,269,4],[321,13,273,4],[321,22,273,4,"invokeOnInitCallbacks"],[321,43,273,25,"invokeOnInitCallbacks"],[321,44,273,26,"instance"],[321,52,273,34],[321,54,273,36,"identifier"],[321,64,273,46],[321,66,273,48],[322,8,274,8],[322,12,274,14,"callbacks"],[322,21,274,23],[322,24,274,26],[322,28,274,30],[322,29,274,31,"onInitCallbacks"],[322,44,274,46],[322,45,274,47,"get"],[322,48,274,50],[322,49,274,51,"identifier"],[322,59,274,61],[322,60,274,62],[323,8,275,8],[323,12,275,12],[323,13,275,13,"callbacks"],[323,22,275,22],[323,24,275,24],[324,10,276,12],[325,8,277,8],[326,8,278,8],[326,13,278,13],[326,17,278,19,"callback"],[326,25,278,27],[326,29,278,31,"callbacks"],[326,38,278,40],[326,40,278,42],[327,10,279,12],[327,14,279,16],[328,12,280,16,"callback"],[328,20,280,24],[328,21,280,25,"instance"],[328,29,280,33],[328,31,280,35,"identifier"],[328,41,280,45],[328,42,280,46],[329,10,281,12],[329,11,281,13],[329,12,282,12],[329,19,282,19,"_a"],[329,21,282,21],[329,23,282,23],[330,12,283,16],[331,10,283,16],[332,8,285,8],[333,6,286,4],[334,4,286,5],[335,6,286,5,"key"],[335,9,286,5],[336,6,286,5,"value"],[336,11,286,5],[336,13,287,4],[336,22,287,4,"getOrInitializeService"],[336,44,287,26,"getOrInitializeService"],[336,45,287,26,"_ref5"],[336,50,287,26],[336,52,287,65],[337,8,287,65],[337,12,287,29,"instanceIdentifier"],[337,30,287,47],[337,33,287,47,"_ref5"],[337,38,287,47],[337,39,287,29,"instanceIdentifier"],[337,57,287,47],[338,10,287,47,"_ref5$options"],[338,23,287,47],[338,26,287,47,"_ref5"],[338,31,287,47],[338,32,287,49,"options"],[338,39,287,56],[339,10,287,49,"options"],[339,17,287,56],[339,20,287,56,"_ref5$options"],[339,33,287,56],[339,38,287,56,"undefined"],[339,47,287,56],[339,50,287,59],[339,51,287,60],[339,52,287,61],[339,55,287,61,"_ref5$options"],[339,68,287,61],[340,8,288,8],[340,12,288,12,"instance"],[340,20,288,20],[340,23,288,23],[340,27,288,27],[340,28,288,28,"instances"],[340,37,288,37],[340,38,288,38,"get"],[340,41,288,41],[340,42,288,42,"instanceIdentifier"],[340,60,288,60],[340,61,288,61],[341,8,289,8],[341,12,289,12],[341,13,289,13,"instance"],[341,21,289,21],[341,25,289,25],[341,29,289,29],[341,30,289,30,"component"],[341,39,289,39],[341,41,289,41],[342,10,290,12,"instance"],[342,18,290,20],[342,21,290,23],[342,25,290,27],[342,26,290,28,"component"],[342,35,290,37],[342,36,290,38,"instanceFactory"],[342,51,290,53],[342,52,290,54],[342,56,290,58],[342,57,290,59,"container"],[342,66,290,68],[342,68,290,70],[343,12,291,16,"instanceIdentifier"],[343,30,291,34],[343,32,291,36,"normalizeIdentifierForFactory"],[343,61,291,65],[343,62,291,66,"instanceIdentifier"],[343,80,291,84],[343,81,291,85],[344,12,292,16,"options"],[345,10,293,12],[345,11,293,13],[345,12,293,14],[346,10,294,12],[346,14,294,16],[346,15,294,17,"instances"],[346,24,294,26],[346,25,294,27,"set"],[346,28,294,30],[346,29,294,31,"instanceIdentifier"],[346,47,294,49],[346,49,294,51,"instance"],[346,57,294,59],[346,58,294,60],[347,10,295,12],[347,14,295,16],[347,15,295,17,"instancesOptions"],[347,31,295,33],[347,32,295,34,"set"],[347,35,295,37],[347,36,295,38,"instanceIdentifier"],[347,54,295,56],[347,56,295,58,"options"],[347,63,295,65],[347,64,295,66],[348,10,296,12],[349,0,297,0],[350,0,298,0],[351,0,299,0],[352,0,300,0],[353,10,301,12],[353,14,301,16],[353,15,301,17,"invokeOnInitCallbacks"],[353,36,301,38],[353,37,301,39,"instance"],[353,45,301,47],[353,47,301,49,"instanceIdentifier"],[353,65,301,67],[353,66,301,68],[354,10,302,12],[355,0,303,0],[356,0,304,0],[357,0,305,0],[358,0,306,0],[359,10,307,12],[359,14,307,16],[359,18,307,20],[359,19,307,21,"component"],[359,28,307,30],[359,29,307,31,"onInstanceCreated"],[359,46,307,48],[359,48,307,50],[360,12,308,16],[360,16,308,20],[361,14,309,20],[361,18,309,24],[361,19,309,25,"component"],[361,28,309,34],[361,29,309,35,"onInstanceCreated"],[361,46,309,52],[361,47,309,53],[361,51,309,57],[361,52,309,58,"container"],[361,61,309,67],[361,63,309,69,"instanceIdentifier"],[361,81,309,87],[361,83,309,89,"instance"],[361,91,309,97],[361,92,309,98],[362,12,310,16],[362,13,310,17],[362,14,311,16],[362,21,311,23,"_a"],[362,23,311,25],[362,25,311,27],[363,14,312,20],[364,12,312,20],[365,10,314,12],[366,8,315,8],[367,8,316,8],[367,15,316,15,"instance"],[367,23,316,23],[367,27,316,27],[367,31,316,31],[368,6,317,4],[369,4,317,5],[370,6,317,5,"key"],[370,9,317,5],[371,6,317,5,"value"],[371,11,317,5],[371,13,318,4],[371,22,318,4,"normalizeInstanceIdentifier"],[371,49,318,31,"normalizeInstanceIdentifier"],[371,50,318,31],[371,52,318,65],[372,8,318,65],[372,12,318,32,"identifier"],[372,22,318,42],[372,25,318,42,"arguments"],[372,34,318,42],[372,35,318,42,"length"],[372,41,318,42],[372,49,318,42,"arguments"],[372,58,318,42],[372,66,318,42,"undefined"],[372,75,318,42],[372,78,318,42,"arguments"],[372,87,318,42],[372,93,318,45,"DEFAULT_ENTRY_NAME"],[372,111,318,63],[373,8,319,8],[373,12,319,12],[373,16,319,16],[373,17,319,17,"component"],[373,26,319,26],[373,28,319,28],[374,10,320,12],[374,17,320,19],[374,21,320,23],[374,22,320,24,"component"],[374,31,320,33],[374,32,320,34,"multipleInstances"],[374,49,320,51],[374,52,320,54,"identifier"],[374,62,320,64],[374,65,320,67,"DEFAULT_ENTRY_NAME"],[374,83,320,85],[375,8,321,8],[375,9,321,9],[375,15,322,13],[376,10,323,12],[376,17,323,19,"identifier"],[376,27,323,29],[376,28,323,30],[376,29,323,31],[377,8,324,8],[378,6,325,4],[379,4,325,5],[380,6,325,5,"key"],[380,9,325,5],[381,6,325,5,"value"],[381,11,325,5],[381,13,326,4],[381,22,326,4,"shouldAutoInitialize"],[381,42,326,24,"shouldAutoInitialize"],[381,43,326,24],[381,45,326,27],[382,8,327,8],[382,15,327,16],[382,16,327,17],[382,17,327,18],[382,21,327,22],[382,22,327,23,"component"],[382,31,327,32],[382,35,328,12],[382,39,328,16],[382,40,328,17,"component"],[382,49,328,26],[382,50,328,27,"instantiationMode"],[382,67,328,44],[382,72,328,49],[382,82,328,59],[382,83,328,60],[383,6,329,4],[384,4,329,5],[385,2,329,5],[385,7,331,0],[386,2,332,0],[386,11,332,9,"normalizeIdentifierForFactory"],[386,40,332,38,"normalizeIdentifierForFactory"],[386,41,332,39,"identifier"],[386,51,332,49],[386,53,332,51],[387,4,333,4],[387,11,333,11,"identifier"],[387,21,333,21],[387,26,333,26,"DEFAULT_ENTRY_NAME"],[387,44,333,44],[387,47,333,47,"undefined"],[387,56,333,56],[387,59,333,59,"identifier"],[387,69,333,69],[388,2,334,0],[389,2,335,0],[389,11,335,9,"isComponentEager"],[389,27,335,25,"isComponentEager"],[389,28,335,26,"component"],[389,37,335,35],[389,39,335,37],[390,4,336,4],[390,11,336,11,"component"],[390,20,336,20],[390,21,336,21,"instantiationMode"],[390,38,336,38],[390,43,336,43],[390,50,336,50],[390,51,336,51],[391,2,337,0],[393,2,339,0],[394,0,340,0],[395,0,341,0],[396,0,342,0],[397,0,343,0],[398,0,344,0],[399,0,345,0],[400,0,346,0],[401,0,347,0],[402,0,348,0],[403,0,349,0],[404,0,350,0],[405,0,351,0],[406,0,352,0],[407,0,353,0],[408,0,354,0],[409,2,355,0],[410,0,356,0],[411,0,357,0],[412,2,355,0],[412,6,358,6,"ComponentContainer"],[412,24,358,24],[412,27,358,24,"exports"],[412,34,358,24],[412,35,358,24,"ComponentContainer"],[412,53,358,24],[413,4,359,4],[413,13,359,4,"ComponentContainer"],[413,32,359,16,"name"],[413,36,359,20],[413,38,359,22],[414,6,359,22],[414,10,359,22,"_classCallCheck2"],[414,26,359,22],[414,27,359,22,"default"],[414,34,359,22],[414,42,359,22,"ComponentContainer"],[414,60,359,22],[415,6,360,8],[415,10,360,12],[415,11,360,13,"name"],[415,15,360,17],[415,18,360,20,"name"],[415,22,360,24],[416,6,361,8],[416,10,361,12],[416,11,361,13,"providers"],[416,20,361,22],[416,23,361,25],[416,27,361,29,"Map"],[416,30,361,32],[416,31,361,33],[416,32,361,34],[417,4,362,4],[418,4,363,4],[419,0,364,0],[420,0,365,0],[421,0,366,0],[422,0,367,0],[423,0,368,0],[424,0,369,0],[425,0,370,0],[426,0,371,0],[427,4,363,4],[427,15,363,4,"_createClass2"],[427,28,363,4],[427,29,363,4,"default"],[427,36,363,4],[427,38,363,4,"ComponentContainer"],[427,56,363,4],[428,6,363,4,"key"],[428,9,363,4],[429,6,363,4,"value"],[429,11,363,4],[429,13,372,4],[429,22,372,4,"addComponent"],[429,34,372,16,"addComponent"],[429,35,372,17,"component"],[429,44,372,26],[429,46,372,28],[430,8,373,8],[430,12,373,14,"provider"],[430,20,373,22],[430,23,373,25],[430,27,373,29],[430,28,373,30,"getProvider"],[430,39,373,41],[430,40,373,42,"component"],[430,49,373,51],[430,50,373,52,"name"],[430,54,373,56],[430,55,373,57],[431,8,374,8],[431,12,374,12,"provider"],[431,20,374,20],[431,21,374,21,"isComponentSet"],[431,35,374,35],[431,36,374,36],[431,37,374,37],[431,39,374,39],[432,10,375,12],[432,16,375,18],[432,20,375,22,"Error"],[432,25,375,27],[432,26,375,28],[432,39,375,41,"component"],[432,48,375,50],[432,49,375,51,"name"],[432,53,375,55],[432,90,375,92],[432,94,375,96],[432,95,375,97,"name"],[432,99,375,101],[432,101,375,103],[432,102,375,104],[433,8,376,8],[434,8,377,8,"provider"],[434,16,377,16],[434,17,377,17,"setComponent"],[434,29,377,29],[434,30,377,30,"component"],[434,39,377,39],[434,40,377,40],[435,6,378,4],[436,4,378,5],[437,6,378,5,"key"],[437,9,378,5],[438,6,378,5,"value"],[438,11,378,5],[438,13,379,4],[438,22,379,4,"addOrOverwriteComponent"],[438,45,379,27,"addOrOverwriteComponent"],[438,46,379,28,"component"],[438,55,379,37],[438,57,379,39],[439,8,380,8],[439,12,380,14,"provider"],[439,20,380,22],[439,23,380,25],[439,27,380,29],[439,28,380,30,"getProvider"],[439,39,380,41],[439,40,380,42,"component"],[439,49,380,51],[439,50,380,52,"name"],[439,54,380,56],[439,55,380,57],[440,8,381,8],[440,12,381,12,"provider"],[440,20,381,20],[440,21,381,21,"isComponentSet"],[440,35,381,35],[440,36,381,36],[440,37,381,37],[440,39,381,39],[441,10,382,12],[442,10,383,12],[442,14,383,16],[442,15,383,17,"providers"],[442,24,383,26],[442,25,383,27,"delete"],[442,31,383,33],[442,32,383,34,"component"],[442,41,383,43],[442,42,383,44,"name"],[442,46,383,48],[442,47,383,49],[443,8,384,8],[444,8,385,8],[444,12,385,12],[444,13,385,13,"addComponent"],[444,25,385,25],[444,26,385,26,"component"],[444,35,385,35],[444,36,385,36],[445,6,386,4],[446,6,387,4],[447,0,388,0],[448,0,389,0],[449,0,390,0],[450,0,391,0],[451,0,392,0],[452,0,393,0],[453,4,387,4],[454,6,387,4,"key"],[454,9,387,4],[455,6,387,4,"value"],[455,11,387,4],[455,13,394,4],[455,22,394,4,"getProvider"],[455,33,394,15,"getProvider"],[455,34,394,16,"name"],[455,38,394,20],[455,40,394,22],[456,8,395,8],[456,12,395,12],[456,16,395,16],[456,17,395,17,"providers"],[456,26,395,26],[456,27,395,27,"has"],[456,30,395,30],[456,31,395,31,"name"],[456,35,395,35],[456,36,395,36],[456,38,395,38],[457,10,396,12],[457,17,396,19],[457,21,396,23],[457,22,396,24,"providers"],[457,31,396,33],[457,32,396,34,"get"],[457,35,396,37],[457,36,396,38,"name"],[457,40,396,42],[457,41,396,43],[458,8,397,8],[459,8,398,8],[460,8,399,8],[460,12,399,14,"provider"],[460,20,399,22],[460,23,399,25],[460,27,399,29,"Provider"],[460,35,399,37],[460,36,399,38,"name"],[460,40,399,42],[460,42,399,44],[460,46,399,48],[460,47,399,49],[461,8,400,8],[461,12,400,12],[461,13,400,13,"providers"],[461,22,400,22],[461,23,400,23,"set"],[461,26,400,26],[461,27,400,27,"name"],[461,31,400,31],[461,33,400,33,"provider"],[461,41,400,41],[461,42,400,42],[462,8,401,8],[462,15,401,15,"provider"],[462,23,401,23],[463,6,402,4],[464,4,402,5],[465,6,402,5,"key"],[465,9,402,5],[466,6,402,5,"value"],[466,11,402,5],[466,13,403,4],[466,22,403,4,"getProviders"],[466,34,403,16,"getProviders"],[466,35,403,16],[466,37,403,19],[467,8,404,8],[467,15,404,15,"Array"],[467,20,404,20],[467,21,404,21,"from"],[467,25,404,25],[467,26,404,26],[467,30,404,30],[467,31,404,31,"providers"],[467,40,404,40],[467,41,404,41,"values"],[467,47,404,47],[467,48,404,48],[467,49,404,49],[467,50,404,50],[468,6,405,4],[469,4,405,5],[470,2,405,5],[471,0,405,5],[471,3]],"functionMap":{"names":["<global>","Component","Component#constructor","Component#setInstantiationMode","Component#setMultipleInstances","Component#setServiceProps","Component#setInstanceCreatedCallback","Provider","Provider#constructor","Provider#get","Provider#getImmediate","Provider#getComponent","Provider#setComponent","Provider#clearInstance","Provider#_delete","services.filter$argument_0","services.filter.map$argument_0","Provider#isComponentSet","Provider#isInitialized","Provider#getOptions","Provider#initialize","Provider#onInit","<anonymous>","Provider#invokeOnInitCallbacks","Provider#getOrInitializeService","Provider#normalizeInstanceIdentifier","Provider#shouldAutoInitialize","normalizeIdentifierForFactory","isComponentEager","ComponentContainer","ComponentContainer#constructor","ComponentContainer#addComponent","ComponentContainer#addOrOverwriteComponent","ComponentContainer#getProvider","ComponentContainer#getProviders"],"mappings":"AAA;ACK;ICO;KDW;IEC;KFG;IGC;KHG;IIC;KJG;IKC;KLG;CDC;AOwC;ICC;KDQ;IEK;KFwB;IGC;KH8B;IIC;KJE;IKC;KLyC;IMC;KNI;IOG;wBCI,gCD;qBEE,oCF;wBCE,+BD;qBEE,4BF;KPE;IUC;KVE;IWC;KXE;IYC;KZE;IaC;KbqB;IcS;eCU;SDE;KdC;IgBK;KhBa;IiBC;KjB8B;IkBC;KlBO;ImBC;KnBG;CPC;A2BE;C3BE;A4BC;C5BE;A6BqB;ICC;KDG;IEU;KFM;IGC;KHO;IIQ;KJQ;IKC;KLE;C7BC"}},"type":"js/module"}]}