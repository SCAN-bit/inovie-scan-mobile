{"dependencies":[{"name":"tslib","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":12,"index":27},"end":{"line":3,"column":28,"index":43}}],"key":"j/7buxWl8Yo4DN5u39IwETSJJyw="}},{"name":"@firebase/app","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":10,"index":55},"end":{"line":4,"column":34,"index":79}}],"key":"xXC+ubLiDVOEmXdcYKophegGkYQ="}},{"name":"@firebase/util","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":11,"index":92},"end":{"line":5,"column":36,"index":117}}],"key":"E1TkBF0412Fgmp0WXPMAjAx5mio="}},{"name":"@firebase/component","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":16,"index":135},"end":{"line":6,"column":46,"index":165}}],"key":"YiqCXfmpUmXL2y7xTPTj9/PFPYg="}},{"name":"@firebase/logger","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":13,"index":180},"end":{"line":7,"column":40,"index":207}}],"key":"ZYsX9nlr38OA1SirG2iNW8KjJAk="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var tslib = require(_dependencyMap[0]);\n  var app = require(_dependencyMap[1]);\n  var util = require(_dependencyMap[2]);\n  var component = require(_dependencyMap[3]);\n  var logger = require(_dependencyMap[4]);\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function _debugErrorMap() {\n    var _a;\n    return _a = {}, _a[\"admin-restricted-operation\" /* AuthErrorCode.ADMIN_ONLY_OPERATION */] = 'This operation is restricted to administrators only.', _a[\"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */] = '', _a[\"app-not-authorized\" /* AuthErrorCode.APP_NOT_AUTHORIZED */] = \"This app, identified by the domain where it's hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.\", _a[\"app-not-installed\" /* AuthErrorCode.APP_NOT_INSTALLED */] = \"The requested mobile application corresponding to the identifier (Android package name or iOS bundle ID) provided is not installed on this device.\", _a[\"captcha-check-failed\" /* AuthErrorCode.CAPTCHA_CHECK_FAILED */] = \"The reCAPTCHA response token provided is either invalid, expired, already used or the domain associated with it does not match the list of whitelisted domains.\", _a[\"code-expired\" /* AuthErrorCode.CODE_EXPIRED */] = \"The SMS code has expired. Please re-send the verification code to try again.\", _a[\"cordova-not-ready\" /* AuthErrorCode.CORDOVA_NOT_READY */] = 'Cordova framework is not ready.', _a[\"cors-unsupported\" /* AuthErrorCode.CORS_UNSUPPORTED */] = 'This browser is not supported.', _a[\"credential-already-in-use\" /* AuthErrorCode.CREDENTIAL_ALREADY_IN_USE */] = 'This credential is already associated with a different user account.', _a[\"custom-token-mismatch\" /* AuthErrorCode.CREDENTIAL_MISMATCH */] = 'The custom token corresponds to a different audience.', _a[\"requires-recent-login\" /* AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN */] = \"This operation is sensitive and requires recent authentication. Log in again before retrying this request.\", _a[\"dependent-sdk-initialized-before-auth\" /* AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH */] = \"Another Firebase SDK was initialized and is trying to use Auth before Auth is initialized. Please be sure to call `initializeAuth` or `getAuth` before starting any other Firebase SDK.\", _a[\"dynamic-link-not-activated\" /* AuthErrorCode.DYNAMIC_LINK_NOT_ACTIVATED */] = \"Please activate Dynamic Links in the Firebase Console and agree to the terms and conditions.\", _a[\"email-change-needs-verification\" /* AuthErrorCode.EMAIL_CHANGE_NEEDS_VERIFICATION */] = 'Multi-factor users must always have a verified email.', _a[\"email-already-in-use\" /* AuthErrorCode.EMAIL_EXISTS */] = 'The email address is already in use by another account.', _a[\"emulator-config-failed\" /* AuthErrorCode.EMULATOR_CONFIG_FAILED */] = \"Auth instance has already been used to make a network call. Auth can no longer be configured to use the emulator. Try calling \\\"connectAuthEmulator()\\\" sooner.\", _a[\"expired-action-code\" /* AuthErrorCode.EXPIRED_OOB_CODE */] = 'The action code has expired.', _a[\"cancelled-popup-request\" /* AuthErrorCode.EXPIRED_POPUP_REQUEST */] = 'This operation has been cancelled due to another conflicting popup being opened.', _a[\"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */] = 'An internal AuthError has occurred.', _a[\"invalid-app-credential\" /* AuthErrorCode.INVALID_APP_CREDENTIAL */] = \"The phone verification request contains an invalid application verifier. The reCAPTCHA token response is either invalid or expired.\", _a[\"invalid-app-id\" /* AuthErrorCode.INVALID_APP_ID */] = 'The mobile app identifier is not registered for the current project.', _a[\"invalid-user-token\" /* AuthErrorCode.INVALID_AUTH */] = \"This user's credential isn't valid for this project. This can happen if the user's token has been tampered with, or if the user isn't for the project associated with this API key.\", _a[\"invalid-auth-event\" /* AuthErrorCode.INVALID_AUTH_EVENT */] = 'An internal AuthError has occurred.', _a[\"invalid-verification-code\" /* AuthErrorCode.INVALID_CODE */] = \"The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure to use the verification code provided by the user.\", _a[\"invalid-continue-uri\" /* AuthErrorCode.INVALID_CONTINUE_URI */] = 'The continue URL provided in the request is invalid.', _a[\"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */] = \"The following Cordova plugins must be installed to enable OAuth sign-in: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser and cordova-plugin-customurlscheme.\", _a[\"invalid-custom-token\" /* AuthErrorCode.INVALID_CUSTOM_TOKEN */] = 'The custom token format is incorrect. Please check the documentation.', _a[\"invalid-dynamic-link-domain\" /* AuthErrorCode.INVALID_DYNAMIC_LINK_DOMAIN */] = 'The provided dynamic link domain is not configured or authorized for the current project.', _a[\"invalid-email\" /* AuthErrorCode.INVALID_EMAIL */] = 'The email address is badly formatted.', _a[\"invalid-emulator-scheme\" /* AuthErrorCode.INVALID_EMULATOR_SCHEME */] = 'Emulator URL must start with a valid scheme (http:// or https://).', _a[\"invalid-api-key\" /* AuthErrorCode.INVALID_API_KEY */] = 'Your API key is invalid, please check you have copied it correctly.', _a[\"invalid-cert-hash\" /* AuthErrorCode.INVALID_CERT_HASH */] = 'The SHA-1 certificate hash provided is invalid.', _a[\"invalid-credential\" /* AuthErrorCode.INVALID_CREDENTIAL */] = 'The supplied auth credential is incorrect, malformed or has expired.', _a[\"invalid-message-payload\" /* AuthErrorCode.INVALID_MESSAGE_PAYLOAD */] = \"The email template corresponding to this action contains invalid characters in its message. Please fix by going to the Auth email templates section in the Firebase Console.\", _a[\"invalid-multi-factor-session\" /* AuthErrorCode.INVALID_MFA_SESSION */] = 'The request does not contain a valid proof of first factor successful sign-in.', _a[\"invalid-oauth-provider\" /* AuthErrorCode.INVALID_OAUTH_PROVIDER */] = \"EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.\", _a[\"invalid-oauth-client-id\" /* AuthErrorCode.INVALID_OAUTH_CLIENT_ID */] = \"The OAuth client ID provided is either invalid or does not match the specified API key.\", _a[\"unauthorized-domain\" /* AuthErrorCode.INVALID_ORIGIN */] = \"This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.\", _a[\"invalid-action-code\" /* AuthErrorCode.INVALID_OOB_CODE */] = \"The action code is invalid. This can happen if the code is malformed, expired, or has already been used.\", _a[\"wrong-password\" /* AuthErrorCode.INVALID_PASSWORD */] = 'The password is invalid or the user does not have a password.', _a[\"invalid-persistence-type\" /* AuthErrorCode.INVALID_PERSISTENCE */] = 'The specified persistence type is invalid. It can only be local, session or none.', _a[\"invalid-phone-number\" /* AuthErrorCode.INVALID_PHONE_NUMBER */] = \"The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format. E.164 phone numbers are written in the format [+][country code][subscriber number including area code].\", _a[\"invalid-provider-id\" /* AuthErrorCode.INVALID_PROVIDER_ID */] = 'The specified provider ID is invalid.', _a[\"invalid-recipient-email\" /* AuthErrorCode.INVALID_RECIPIENT_EMAIL */] = \"The email corresponding to this action failed to send as the provided recipient email address is invalid.\", _a[\"invalid-sender\" /* AuthErrorCode.INVALID_SENDER */] = \"The email template corresponding to this action contains an invalid sender email or name. Please fix by going to the Auth email templates section in the Firebase Console.\", _a[\"invalid-verification-id\" /* AuthErrorCode.INVALID_SESSION_INFO */] = 'The verification ID used to create the phone auth credential is invalid.', _a[\"invalid-tenant-id\" /* AuthErrorCode.INVALID_TENANT_ID */] = \"The Auth instance's tenant ID is invalid.\", _a[\"login-blocked\" /* AuthErrorCode.LOGIN_BLOCKED */] = 'Login blocked by user-provided method: {$originalMessage}', _a[\"missing-android-pkg-name\" /* AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME */] = 'An Android Package Name must be provided if the Android App is required to be installed.', _a[\"auth-domain-config-required\" /* AuthErrorCode.MISSING_AUTH_DOMAIN */] = \"Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.\", _a[\"missing-app-credential\" /* AuthErrorCode.MISSING_APP_CREDENTIAL */] = \"The phone verification request is missing an application verifier assertion. A reCAPTCHA response token needs to be provided.\", _a[\"missing-verification-code\" /* AuthErrorCode.MISSING_CODE */] = 'The phone auth credential was created with an empty SMS verification code.', _a[\"missing-continue-uri\" /* AuthErrorCode.MISSING_CONTINUE_URI */] = 'A continue URL must be provided in the request.', _a[\"missing-iframe-start\" /* AuthErrorCode.MISSING_IFRAME_START */] = 'An internal AuthError has occurred.', _a[\"missing-ios-bundle-id\" /* AuthErrorCode.MISSING_IOS_BUNDLE_ID */] = 'An iOS Bundle ID must be provided if an App Store ID is provided.', _a[\"missing-or-invalid-nonce\" /* AuthErrorCode.MISSING_OR_INVALID_NONCE */] = \"The request does not contain a valid nonce. This can occur if the SHA-256 hash of the provided raw nonce does not match the hashed nonce in the ID token payload.\", _a[\"missing-password\" /* AuthErrorCode.MISSING_PASSWORD */] = 'A non-empty password must be provided', _a[\"missing-multi-factor-info\" /* AuthErrorCode.MISSING_MFA_INFO */] = 'No second factor identifier is provided.', _a[\"missing-multi-factor-session\" /* AuthErrorCode.MISSING_MFA_SESSION */] = 'The request is missing proof of first factor successful sign-in.', _a[\"missing-phone-number\" /* AuthErrorCode.MISSING_PHONE_NUMBER */] = 'To send verification codes, provide a phone number for the recipient.', _a[\"missing-verification-id\" /* AuthErrorCode.MISSING_SESSION_INFO */] = 'The phone auth credential was created with an empty verification ID.', _a[\"app-deleted\" /* AuthErrorCode.MODULE_DESTROYED */] = 'This instance of FirebaseApp has been deleted.', _a[\"multi-factor-info-not-found\" /* AuthErrorCode.MFA_INFO_NOT_FOUND */] = 'The user does not have a second factor matching the identifier provided.', _a[\"multi-factor-auth-required\" /* AuthErrorCode.MFA_REQUIRED */] = 'Proof of ownership of a second factor is required to complete sign-in.', _a[\"account-exists-with-different-credential\" /* AuthErrorCode.NEED_CONFIRMATION */] = \"An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.\", _a[\"network-request-failed\" /* AuthErrorCode.NETWORK_REQUEST_FAILED */] = 'A network AuthError (such as timeout, interrupted connection or unreachable host) has occurred.', _a[\"no-auth-event\" /* AuthErrorCode.NO_AUTH_EVENT */] = 'An internal AuthError has occurred.', _a[\"no-such-provider\" /* AuthErrorCode.NO_SUCH_PROVIDER */] = 'User was not linked to an account with the given provider.', _a[\"null-user\" /* AuthErrorCode.NULL_USER */] = \"A null user object was provided as the argument for an operation which requires a non-null user object.\", _a[\"operation-not-allowed\" /* AuthErrorCode.OPERATION_NOT_ALLOWED */] = \"The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.\", _a[\"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */] = \"This operation is not supported in the environment this application is running on. \\\"location.protocol\\\" must be http, https or chrome-extension and web storage must be enabled.\", _a[\"popup-blocked\" /* AuthErrorCode.POPUP_BLOCKED */] = 'Unable to establish a connection with the popup. It may have been blocked by the browser.', _a[\"popup-closed-by-user\" /* AuthErrorCode.POPUP_CLOSED_BY_USER */] = 'The popup has been closed by the user before finalizing the operation.', _a[\"provider-already-linked\" /* AuthErrorCode.PROVIDER_ALREADY_LINKED */] = 'User can only be linked to one identity for the given provider.', _a[\"quota-exceeded\" /* AuthErrorCode.QUOTA_EXCEEDED */] = \"The project's quota for this operation has been exceeded.\", _a[\"redirect-cancelled-by-user\" /* AuthErrorCode.REDIRECT_CANCELLED_BY_USER */] = 'The redirect operation has been cancelled by the user before finalizing.', _a[\"redirect-operation-pending\" /* AuthErrorCode.REDIRECT_OPERATION_PENDING */] = 'A redirect sign-in operation is already pending.', _a[\"rejected-credential\" /* AuthErrorCode.REJECTED_CREDENTIAL */] = 'The request contains malformed or mismatching credentials.', _a[\"second-factor-already-in-use\" /* AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED */] = 'The second factor is already enrolled on this account.', _a[\"maximum-second-factor-count-exceeded\" /* AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED */] = 'The maximum allowed number of second factors on a user has been exceeded.', _a[\"tenant-id-mismatch\" /* AuthErrorCode.TENANT_ID_MISMATCH */] = \"The provided tenant ID does not match the Auth instance's tenant ID\", _a[\"timeout\" /* AuthErrorCode.TIMEOUT */] = 'The operation has timed out.', _a[\"user-token-expired\" /* AuthErrorCode.TOKEN_EXPIRED */] = \"The user's credential is no longer valid. The user must sign in again.\", _a[\"too-many-requests\" /* AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER */] = \"We have blocked all requests from this device due to unusual activity. Try again later.\", _a[\"unauthorized-continue-uri\" /* AuthErrorCode.UNAUTHORIZED_DOMAIN */] = \"The domain of the continue URL is not whitelisted.  Please whitelist the domain in the Firebase console.\", _a[\"unsupported-first-factor\" /* AuthErrorCode.UNSUPPORTED_FIRST_FACTOR */] = 'Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.', _a[\"unsupported-persistence-type\" /* AuthErrorCode.UNSUPPORTED_PERSISTENCE */] = 'The current environment does not support the specified persistence type.', _a[\"unsupported-tenant-operation\" /* AuthErrorCode.UNSUPPORTED_TENANT_OPERATION */] = 'This operation is not supported in a multi-tenant context.', _a[\"unverified-email\" /* AuthErrorCode.UNVERIFIED_EMAIL */] = 'The operation requires a verified email.', _a[\"user-cancelled\" /* AuthErrorCode.USER_CANCELLED */] = 'The user did not grant your application the permissions it requested.', _a[\"user-not-found\" /* AuthErrorCode.USER_DELETED */] = \"There is no user record corresponding to this identifier. The user may have been deleted.\", _a[\"user-disabled\" /* AuthErrorCode.USER_DISABLED */] = 'The user account has been disabled by an administrator.', _a[\"user-mismatch\" /* AuthErrorCode.USER_MISMATCH */] = 'The supplied credentials do not correspond to the previously signed in user.', _a[\"user-signed-out\" /* AuthErrorCode.USER_SIGNED_OUT */] = '', _a[\"weak-password\" /* AuthErrorCode.WEAK_PASSWORD */] = 'The password must be 6 characters long or more.', _a[\"web-storage-unsupported\" /* AuthErrorCode.WEB_STORAGE_UNSUPPORTED */] = 'This browser is not supported or 3rd party cookies and data may be disabled.', _a[\"already-initialized\" /* AuthErrorCode.ALREADY_INITIALIZED */] = \"initializeAuth() has already been called with different options. To avoid this error, call initializeAuth() with the same options as when it was originally called, or call getAuth() to return the already initialized instance.\", _a[\"missing-recaptcha-token\" /* AuthErrorCode.MISSING_RECAPTCHA_TOKEN */] = 'The reCAPTCHA token is missing when sending request to the backend.', _a[\"invalid-recaptcha-token\" /* AuthErrorCode.INVALID_RECAPTCHA_TOKEN */] = 'The reCAPTCHA token is invalid when sending request to the backend.', _a[\"invalid-recaptcha-action\" /* AuthErrorCode.INVALID_RECAPTCHA_ACTION */] = 'The reCAPTCHA action is invalid when sending request to the backend.', _a[\"recaptcha-not-enabled\" /* AuthErrorCode.RECAPTCHA_NOT_ENABLED */] = 'reCAPTCHA Enterprise integration is not enabled for this project.', _a[\"missing-client-type\" /* AuthErrorCode.MISSING_CLIENT_TYPE */] = 'The reCAPTCHA client type is missing when sending request to the backend.', _a[\"missing-recaptcha-version\" /* AuthErrorCode.MISSING_RECAPTCHA_VERSION */] = 'The reCAPTCHA version is missing when sending request to the backend.', _a[\"invalid-req-type\" /* AuthErrorCode.INVALID_REQ_TYPE */] = 'Invalid request parameters.', _a[\"invalid-recaptcha-version\" /* AuthErrorCode.INVALID_RECAPTCHA_VERSION */] = 'The reCAPTCHA version is invalid when sending request to the backend.', _a[\"unsupported-password-policy-schema-version\" /* AuthErrorCode.UNSUPPORTED_PASSWORD_POLICY_SCHEMA_VERSION */] = 'The password policy received from the backend uses a schema version that is not supported by this version of the Firebase SDK.', _a[\"password-does-not-meet-requirements\" /* AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS */] = 'The password does not meet the requirements.', _a;\n  }\n  function _prodErrorMap() {\n    var _a;\n    // We will include this one message in the prod error map since by the very\n    // nature of this error, developers will never be able to see the message\n    // using the debugErrorMap (which is installed during auth initialization).\n    return _a = {}, _a[\"dependent-sdk-initialized-before-auth\" /* AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH */] = \"Another Firebase SDK was initialized and is trying to use Auth before Auth is initialized. Please be sure to call `initializeAuth` or `getAuth` before starting any other Firebase SDK.\", _a;\n  }\n  /**\r\n   * A verbose error map with detailed descriptions for most error codes.\r\n   *\r\n   * See discussion at {@link AuthErrorMap}\r\n   *\r\n   * @public\r\n   */\n  var debugErrorMap = _debugErrorMap;\n  /**\r\n   * A minimal error map with all verbose error messages stripped.\r\n   *\r\n   * See discussion at {@link AuthErrorMap}\r\n   *\r\n   * @public\r\n   */\n  var prodErrorMap = _prodErrorMap;\n  var _DEFAULT_AUTH_ERROR_FACTORY = new util.ErrorFactory('auth', 'Firebase', _prodErrorMap());\n  /**\r\n   * A map of potential `Auth` error codes, for easier comparison with errors\r\n   * thrown by the SDK.\r\n   *\r\n   * @remarks\r\n   * Note that you can't tree-shake individual keys\r\n   * in the map, so by using the map you might substantially increase your\r\n   * bundle size.\r\n   *\r\n   * @public\r\n   */\n  var AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY = {\n    ADMIN_ONLY_OPERATION: 'auth/admin-restricted-operation',\n    ARGUMENT_ERROR: 'auth/argument-error',\n    APP_NOT_AUTHORIZED: 'auth/app-not-authorized',\n    APP_NOT_INSTALLED: 'auth/app-not-installed',\n    CAPTCHA_CHECK_FAILED: 'auth/captcha-check-failed',\n    CODE_EXPIRED: 'auth/code-expired',\n    CORDOVA_NOT_READY: 'auth/cordova-not-ready',\n    CORS_UNSUPPORTED: 'auth/cors-unsupported',\n    CREDENTIAL_ALREADY_IN_USE: 'auth/credential-already-in-use',\n    CREDENTIAL_MISMATCH: 'auth/custom-token-mismatch',\n    CREDENTIAL_TOO_OLD_LOGIN_AGAIN: 'auth/requires-recent-login',\n    DEPENDENT_SDK_INIT_BEFORE_AUTH: 'auth/dependent-sdk-initialized-before-auth',\n    DYNAMIC_LINK_NOT_ACTIVATED: 'auth/dynamic-link-not-activated',\n    EMAIL_CHANGE_NEEDS_VERIFICATION: 'auth/email-change-needs-verification',\n    EMAIL_EXISTS: 'auth/email-already-in-use',\n    EMULATOR_CONFIG_FAILED: 'auth/emulator-config-failed',\n    EXPIRED_OOB_CODE: 'auth/expired-action-code',\n    EXPIRED_POPUP_REQUEST: 'auth/cancelled-popup-request',\n    INTERNAL_ERROR: 'auth/internal-error',\n    INVALID_API_KEY: 'auth/invalid-api-key',\n    INVALID_APP_CREDENTIAL: 'auth/invalid-app-credential',\n    INVALID_APP_ID: 'auth/invalid-app-id',\n    INVALID_AUTH: 'auth/invalid-user-token',\n    INVALID_AUTH_EVENT: 'auth/invalid-auth-event',\n    INVALID_CERT_HASH: 'auth/invalid-cert-hash',\n    INVALID_CODE: 'auth/invalid-verification-code',\n    INVALID_CONTINUE_URI: 'auth/invalid-continue-uri',\n    INVALID_CORDOVA_CONFIGURATION: 'auth/invalid-cordova-configuration',\n    INVALID_CUSTOM_TOKEN: 'auth/invalid-custom-token',\n    INVALID_DYNAMIC_LINK_DOMAIN: 'auth/invalid-dynamic-link-domain',\n    INVALID_EMAIL: 'auth/invalid-email',\n    INVALID_EMULATOR_SCHEME: 'auth/invalid-emulator-scheme',\n    INVALID_IDP_RESPONSE: 'auth/invalid-credential',\n    INVALID_LOGIN_CREDENTIALS: 'auth/invalid-credential',\n    INVALID_MESSAGE_PAYLOAD: 'auth/invalid-message-payload',\n    INVALID_MFA_SESSION: 'auth/invalid-multi-factor-session',\n    INVALID_OAUTH_CLIENT_ID: 'auth/invalid-oauth-client-id',\n    INVALID_OAUTH_PROVIDER: 'auth/invalid-oauth-provider',\n    INVALID_OOB_CODE: 'auth/invalid-action-code',\n    INVALID_ORIGIN: 'auth/unauthorized-domain',\n    INVALID_PASSWORD: 'auth/wrong-password',\n    INVALID_PERSISTENCE: 'auth/invalid-persistence-type',\n    INVALID_PHONE_NUMBER: 'auth/invalid-phone-number',\n    INVALID_PROVIDER_ID: 'auth/invalid-provider-id',\n    INVALID_RECIPIENT_EMAIL: 'auth/invalid-recipient-email',\n    INVALID_SENDER: 'auth/invalid-sender',\n    INVALID_SESSION_INFO: 'auth/invalid-verification-id',\n    INVALID_TENANT_ID: 'auth/invalid-tenant-id',\n    MFA_INFO_NOT_FOUND: 'auth/multi-factor-info-not-found',\n    MFA_REQUIRED: 'auth/multi-factor-auth-required',\n    MISSING_ANDROID_PACKAGE_NAME: 'auth/missing-android-pkg-name',\n    MISSING_APP_CREDENTIAL: 'auth/missing-app-credential',\n    MISSING_AUTH_DOMAIN: 'auth/auth-domain-config-required',\n    MISSING_CODE: 'auth/missing-verification-code',\n    MISSING_CONTINUE_URI: 'auth/missing-continue-uri',\n    MISSING_IFRAME_START: 'auth/missing-iframe-start',\n    MISSING_IOS_BUNDLE_ID: 'auth/missing-ios-bundle-id',\n    MISSING_OR_INVALID_NONCE: 'auth/missing-or-invalid-nonce',\n    MISSING_MFA_INFO: 'auth/missing-multi-factor-info',\n    MISSING_MFA_SESSION: 'auth/missing-multi-factor-session',\n    MISSING_PHONE_NUMBER: 'auth/missing-phone-number',\n    MISSING_SESSION_INFO: 'auth/missing-verification-id',\n    MODULE_DESTROYED: 'auth/app-deleted',\n    NEED_CONFIRMATION: 'auth/account-exists-with-different-credential',\n    NETWORK_REQUEST_FAILED: 'auth/network-request-failed',\n    NULL_USER: 'auth/null-user',\n    NO_AUTH_EVENT: 'auth/no-auth-event',\n    NO_SUCH_PROVIDER: 'auth/no-such-provider',\n    OPERATION_NOT_ALLOWED: 'auth/operation-not-allowed',\n    OPERATION_NOT_SUPPORTED: 'auth/operation-not-supported-in-this-environment',\n    POPUP_BLOCKED: 'auth/popup-blocked',\n    POPUP_CLOSED_BY_USER: 'auth/popup-closed-by-user',\n    PROVIDER_ALREADY_LINKED: 'auth/provider-already-linked',\n    QUOTA_EXCEEDED: 'auth/quota-exceeded',\n    REDIRECT_CANCELLED_BY_USER: 'auth/redirect-cancelled-by-user',\n    REDIRECT_OPERATION_PENDING: 'auth/redirect-operation-pending',\n    REJECTED_CREDENTIAL: 'auth/rejected-credential',\n    SECOND_FACTOR_ALREADY_ENROLLED: 'auth/second-factor-already-in-use',\n    SECOND_FACTOR_LIMIT_EXCEEDED: 'auth/maximum-second-factor-count-exceeded',\n    TENANT_ID_MISMATCH: 'auth/tenant-id-mismatch',\n    TIMEOUT: 'auth/timeout',\n    TOKEN_EXPIRED: 'auth/user-token-expired',\n    TOO_MANY_ATTEMPTS_TRY_LATER: 'auth/too-many-requests',\n    UNAUTHORIZED_DOMAIN: 'auth/unauthorized-continue-uri',\n    UNSUPPORTED_FIRST_FACTOR: 'auth/unsupported-first-factor',\n    UNSUPPORTED_PERSISTENCE: 'auth/unsupported-persistence-type',\n    UNSUPPORTED_TENANT_OPERATION: 'auth/unsupported-tenant-operation',\n    UNVERIFIED_EMAIL: 'auth/unverified-email',\n    USER_CANCELLED: 'auth/user-cancelled',\n    USER_DELETED: 'auth/user-not-found',\n    USER_DISABLED: 'auth/user-disabled',\n    USER_MISMATCH: 'auth/user-mismatch',\n    USER_SIGNED_OUT: 'auth/user-signed-out',\n    WEAK_PASSWORD: 'auth/weak-password',\n    WEB_STORAGE_UNSUPPORTED: 'auth/web-storage-unsupported',\n    ALREADY_INITIALIZED: 'auth/already-initialized',\n    RECAPTCHA_NOT_ENABLED: 'auth/recaptcha-not-enabled',\n    MISSING_RECAPTCHA_TOKEN: 'auth/missing-recaptcha-token',\n    INVALID_RECAPTCHA_TOKEN: 'auth/invalid-recaptcha-token',\n    INVALID_RECAPTCHA_ACTION: 'auth/invalid-recaptcha-action',\n    MISSING_CLIENT_TYPE: 'auth/missing-client-type',\n    MISSING_RECAPTCHA_VERSION: 'auth/missing-recaptcha-version',\n    INVALID_RECAPTCHA_VERSION: 'auth/invalid-recaptcha-version',\n    INVALID_REQ_TYPE: 'auth/invalid-req-type'\n  };\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var logClient = new logger.Logger('@firebase/auth');\n  function _logWarn(msg) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    if (logClient.logLevel <= logger.LogLevel.WARN) {\n      logClient.warn.apply(logClient, tslib.__spreadArray([\"Auth (\".concat(app.SDK_VERSION, \"): \").concat(msg)], args, false));\n    }\n  }\n  function _logError(msg) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    if (logClient.logLevel <= logger.LogLevel.ERROR) {\n      logClient.error.apply(logClient, tslib.__spreadArray([\"Auth (\".concat(app.SDK_VERSION, \"): \").concat(msg)], args, false));\n    }\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function _fail(authOrCode) {\n    var rest = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      rest[_i - 1] = arguments[_i];\n    }\n    throw createErrorInternal.apply(undefined, tslib.__spreadArray([authOrCode], rest, false));\n  }\n  function _createError(authOrCode) {\n    var rest = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      rest[_i - 1] = arguments[_i];\n    }\n    return createErrorInternal.apply(undefined, tslib.__spreadArray([authOrCode], rest, false));\n  }\n  function _errorWithCustomMessage(auth, code, message) {\n    var _a;\n    var errorMap = tslib.__assign(tslib.__assign({}, prodErrorMap()), (_a = {}, _a[code] = message, _a));\n    var factory = new util.ErrorFactory('auth', 'Firebase', errorMap);\n    return factory.create(code, {\n      appName: auth.name\n    });\n  }\n  function _serverAppCurrentUserOperationNotSupportedError(auth) {\n    return _errorWithCustomMessage(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */, 'Operations that alter the current user are not supported in conjunction with FirebaseServerApp');\n  }\n  function _assertInstanceOf(auth, object, instance) {\n    var constructorInstance = instance;\n    if (!(object instanceof constructorInstance)) {\n      if (constructorInstance.name !== object.constructor.name) {\n        _fail(auth, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n      }\n      throw _errorWithCustomMessage(auth, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */, \"Type of \".concat(object.constructor.name, \" does not match expected instance.\") + \"Did you pass a reference from a different Auth SDK?\");\n    }\n  }\n  function createErrorInternal(authOrCode) {\n    var _a;\n    var rest = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      rest[_i - 1] = arguments[_i];\n    }\n    if (typeof authOrCode !== 'string') {\n      var code = rest[0];\n      var fullParams = tslib.__spreadArray([], rest.slice(1), true);\n      if (fullParams[0]) {\n        fullParams[0].appName = authOrCode.name;\n      }\n      return (_a = authOrCode._errorFactory).create.apply(_a, tslib.__spreadArray([code], fullParams, false));\n    }\n    return _DEFAULT_AUTH_ERROR_FACTORY.create.apply(_DEFAULT_AUTH_ERROR_FACTORY, tslib.__spreadArray([authOrCode], rest, false));\n  }\n  function _assert(assertion, authOrCode) {\n    var rest = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n      rest[_i - 2] = arguments[_i];\n    }\n    if (!assertion) {\n      throw createErrorInternal.apply(undefined, tslib.__spreadArray([authOrCode], rest, false));\n    }\n  }\n  /**\r\n   * Unconditionally fails, throwing an internal error with the given message.\r\n   *\r\n   * @param failure type of failure encountered\r\n   * @throws Error\r\n   */\n  function debugFail(failure) {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    var message = \"INTERNAL ASSERTION FAILED: \" + failure;\n    _logError(message);\n    // NOTE: We don't use FirebaseError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw new Error(message);\n  }\n  /**\r\n   * Fails if the given assertion condition is false, throwing an Error with the\r\n   * given message if it did.\r\n   *\r\n   * @param assertion\r\n   * @param message\r\n   */\n  function debugAssert(assertion, message) {\n    if (!assertion) {\n      debugFail(message);\n    }\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function _getCurrentUrl() {\n    var _a;\n    return typeof self !== 'undefined' && ((_a = self.location) === null || _a === undefined ? undefined : _a.href) || '';\n  }\n  function _isHttpOrHttps() {\n    return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\n  }\n  function _getCurrentScheme() {\n    var _a;\n    return typeof self !== 'undefined' && ((_a = self.location) === null || _a === undefined ? undefined : _a.protocol) || null;\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Determine whether the browser is working online\r\n   */\n  function _isOnline() {\n    if (typeof navigator !== 'undefined' && navigator && 'onLine' in navigator && typeof navigator.onLine === 'boolean' && (\n    // Apply only for traditional web apps and Chrome extensions.\n    // This is especially true for Cordova apps which have unreliable\n    // navigator.onLine behavior unless cordova-plugin-network-information is\n    // installed which overwrites the native navigator.onLine value and\n    // defines navigator.connection.\n    _isHttpOrHttps() || util.isBrowserExtension() || 'connection' in navigator)) {\n      return navigator.onLine;\n    }\n    // If we can't determine the state, assume it is online.\n    return true;\n  }\n  function _getUserLanguage() {\n    if (typeof navigator === 'undefined') {\n      return null;\n    }\n    var navigatorLanguage = navigator;\n    return (\n      // Most reliable, but only supported in Chrome/Firefox.\n      navigatorLanguage.languages && navigatorLanguage.languages[0] ||\n      // Supported in most browsers, but returns the language of the browser\n      // UI, not the language set in browser settings.\n      navigatorLanguage.language ||\n      // Couldn't determine language.\n      null\n    );\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * A structure to help pick between a range of long and short delay durations\r\n   * depending on the current environment. In general, the long delay is used for\r\n   * mobile environments whereas short delays are used for desktop environments.\r\n   */\n  var Delay = /** @class */function () {\n    function Delay(shortDelay, longDelay) {\n      this.shortDelay = shortDelay;\n      this.longDelay = longDelay;\n      // Internal error when improperly initialized.\n      debugAssert(longDelay > shortDelay, 'Short delay should be less than long delay!');\n      this.isMobile = util.isMobileCordova() || util.isReactNative();\n    }\n    Delay.prototype.get = function () {\n      if (!_isOnline()) {\n        // Pick the shorter timeout.\n        return Math.min(5000 /* DelayMin.OFFLINE */, this.shortDelay);\n      }\n      // If running in a mobile environment, return the long delay, otherwise\n      // return the short delay.\n      // This could be improved in the future to dynamically change based on other\n      // variables instead of just reading the current environment.\n      return this.isMobile ? this.longDelay : this.shortDelay;\n    };\n    return Delay;\n  }();\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function _emulatorUrl(config, path) {\n    debugAssert(config.emulator, 'Emulator should always be set here');\n    var url = config.emulator.url;\n    if (!path) {\n      return url;\n    }\n    return \"\".concat(url).concat(path.startsWith('/') ? path.slice(1) : path);\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var FetchProvider = /** @class */function () {\n    function FetchProvider() {}\n    FetchProvider.initialize = function (fetchImpl, headersImpl, responseImpl) {\n      this.fetchImpl = fetchImpl;\n      if (headersImpl) {\n        this.headersImpl = headersImpl;\n      }\n      if (responseImpl) {\n        this.responseImpl = responseImpl;\n      }\n    };\n    FetchProvider.fetch = function () {\n      if (this.fetchImpl) {\n        return this.fetchImpl;\n      }\n      if (typeof self !== 'undefined' && 'fetch' in self) {\n        return self.fetch;\n      }\n      if (typeof globalThis !== 'undefined' && globalThis.fetch) {\n        return globalThis.fetch;\n      }\n      if (typeof fetch !== 'undefined') {\n        return fetch;\n      }\n      debugFail('Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill');\n    };\n    FetchProvider.headers = function () {\n      if (this.headersImpl) {\n        return this.headersImpl;\n      }\n      if (typeof self !== 'undefined' && 'Headers' in self) {\n        return self.Headers;\n      }\n      if (typeof globalThis !== 'undefined' && globalThis.Headers) {\n        return globalThis.Headers;\n      }\n      if (typeof Headers !== 'undefined') {\n        return Headers;\n      }\n      debugFail('Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill');\n    };\n    FetchProvider.response = function () {\n      if (this.responseImpl) {\n        return this.responseImpl;\n      }\n      if (typeof self !== 'undefined' && 'Response' in self) {\n        return self.Response;\n      }\n      if (typeof globalThis !== 'undefined' && globalThis.Response) {\n        return globalThis.Response;\n      }\n      if (typeof Response !== 'undefined') {\n        return Response;\n      }\n      debugFail('Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill');\n    };\n    return FetchProvider;\n  }();\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var _a$1;\n  /**\r\n   * Map from errors returned by the server to errors to developer visible errors\r\n   */\n  var SERVER_ERROR_MAP = (_a$1 = {},\n  // Custom token errors.\n  _a$1[\"CREDENTIAL_MISMATCH\" /* ServerError.CREDENTIAL_MISMATCH */] = \"custom-token-mismatch\" /* AuthErrorCode.CREDENTIAL_MISMATCH */,\n  // This can only happen if the SDK sends a bad request.\n  _a$1[\"MISSING_CUSTOM_TOKEN\" /* ServerError.MISSING_CUSTOM_TOKEN */] = \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */,\n  // Create Auth URI errors.\n  _a$1[\"INVALID_IDENTIFIER\" /* ServerError.INVALID_IDENTIFIER */] = \"invalid-email\" /* AuthErrorCode.INVALID_EMAIL */,\n  // This can only happen if the SDK sends a bad request.\n  _a$1[\"MISSING_CONTINUE_URI\" /* ServerError.MISSING_CONTINUE_URI */] = \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */,\n  // Sign in with email and password errors (some apply to sign up too).\n  _a$1[\"INVALID_PASSWORD\" /* ServerError.INVALID_PASSWORD */] = \"wrong-password\" /* AuthErrorCode.INVALID_PASSWORD */,\n  // This can only happen if the SDK sends a bad request.\n  _a$1[\"MISSING_PASSWORD\" /* ServerError.MISSING_PASSWORD */] = \"missing-password\" /* AuthErrorCode.MISSING_PASSWORD */,\n  // Thrown if Email Enumeration Protection is enabled in the project and the email or password is\n  // invalid.\n  _a$1[\"INVALID_LOGIN_CREDENTIALS\" /* ServerError.INVALID_LOGIN_CREDENTIALS */] = \"invalid-credential\" /* AuthErrorCode.INVALID_CREDENTIAL */,\n  // Sign up with email and password errors.\n  _a$1[\"EMAIL_EXISTS\" /* ServerError.EMAIL_EXISTS */] = \"email-already-in-use\" /* AuthErrorCode.EMAIL_EXISTS */, _a$1[\"PASSWORD_LOGIN_DISABLED\" /* ServerError.PASSWORD_LOGIN_DISABLED */] = \"operation-not-allowed\" /* AuthErrorCode.OPERATION_NOT_ALLOWED */,\n  // Verify assertion for sign in with credential errors:\n  _a$1[\"INVALID_IDP_RESPONSE\" /* ServerError.INVALID_IDP_RESPONSE */] = \"invalid-credential\" /* AuthErrorCode.INVALID_CREDENTIAL */, _a$1[\"INVALID_PENDING_TOKEN\" /* ServerError.INVALID_PENDING_TOKEN */] = \"invalid-credential\" /* AuthErrorCode.INVALID_CREDENTIAL */, _a$1[\"FEDERATED_USER_ID_ALREADY_LINKED\" /* ServerError.FEDERATED_USER_ID_ALREADY_LINKED */] = \"credential-already-in-use\" /* AuthErrorCode.CREDENTIAL_ALREADY_IN_USE */,\n  // This can only happen if the SDK sends a bad request.\n  _a$1[\"MISSING_REQ_TYPE\" /* ServerError.MISSING_REQ_TYPE */] = \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */,\n  // Send Password reset email errors:\n  _a$1[\"EMAIL_NOT_FOUND\" /* ServerError.EMAIL_NOT_FOUND */] = \"user-not-found\" /* AuthErrorCode.USER_DELETED */, _a$1[\"RESET_PASSWORD_EXCEED_LIMIT\" /* ServerError.RESET_PASSWORD_EXCEED_LIMIT */] = \"too-many-requests\" /* AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER */, _a$1[\"EXPIRED_OOB_CODE\" /* ServerError.EXPIRED_OOB_CODE */] = \"expired-action-code\" /* AuthErrorCode.EXPIRED_OOB_CODE */, _a$1[\"INVALID_OOB_CODE\" /* ServerError.INVALID_OOB_CODE */] = \"invalid-action-code\" /* AuthErrorCode.INVALID_OOB_CODE */,\n  // This can only happen if the SDK sends a bad request.\n  _a$1[\"MISSING_OOB_CODE\" /* ServerError.MISSING_OOB_CODE */] = \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */,\n  // Operations that require ID token in request:\n  _a$1[\"CREDENTIAL_TOO_OLD_LOGIN_AGAIN\" /* ServerError.CREDENTIAL_TOO_OLD_LOGIN_AGAIN */] = \"requires-recent-login\" /* AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN */, _a$1[\"INVALID_ID_TOKEN\" /* ServerError.INVALID_ID_TOKEN */] = \"invalid-user-token\" /* AuthErrorCode.INVALID_AUTH */, _a$1[\"TOKEN_EXPIRED\" /* ServerError.TOKEN_EXPIRED */] = \"user-token-expired\" /* AuthErrorCode.TOKEN_EXPIRED */, _a$1[\"USER_NOT_FOUND\" /* ServerError.USER_NOT_FOUND */] = \"user-token-expired\" /* AuthErrorCode.TOKEN_EXPIRED */,\n  // Other errors.\n  _a$1[\"TOO_MANY_ATTEMPTS_TRY_LATER\" /* ServerError.TOO_MANY_ATTEMPTS_TRY_LATER */] = \"too-many-requests\" /* AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER */, _a$1[\"PASSWORD_DOES_NOT_MEET_REQUIREMENTS\" /* ServerError.PASSWORD_DOES_NOT_MEET_REQUIREMENTS */] = \"password-does-not-meet-requirements\" /* AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS */,\n  // Phone Auth related errors.\n  _a$1[\"INVALID_CODE\" /* ServerError.INVALID_CODE */] = \"invalid-verification-code\" /* AuthErrorCode.INVALID_CODE */, _a$1[\"INVALID_SESSION_INFO\" /* ServerError.INVALID_SESSION_INFO */] = \"invalid-verification-id\" /* AuthErrorCode.INVALID_SESSION_INFO */, _a$1[\"INVALID_TEMPORARY_PROOF\" /* ServerError.INVALID_TEMPORARY_PROOF */] = \"invalid-credential\" /* AuthErrorCode.INVALID_CREDENTIAL */, _a$1[\"MISSING_SESSION_INFO\" /* ServerError.MISSING_SESSION_INFO */] = \"missing-verification-id\" /* AuthErrorCode.MISSING_SESSION_INFO */, _a$1[\"SESSION_EXPIRED\" /* ServerError.SESSION_EXPIRED */] = \"code-expired\" /* AuthErrorCode.CODE_EXPIRED */,\n  // Other action code errors when additional settings passed.\n  // MISSING_CONTINUE_URI is getting mapped to INTERNAL_ERROR above.\n  // This is OK as this error will be caught by client side validation.\n  _a$1[\"MISSING_ANDROID_PACKAGE_NAME\" /* ServerError.MISSING_ANDROID_PACKAGE_NAME */] = \"missing-android-pkg-name\" /* AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME */, _a$1[\"UNAUTHORIZED_DOMAIN\" /* ServerError.UNAUTHORIZED_DOMAIN */] = \"unauthorized-continue-uri\" /* AuthErrorCode.UNAUTHORIZED_DOMAIN */,\n  // getProjectConfig errors when clientId is passed.\n  _a$1[\"INVALID_OAUTH_CLIENT_ID\" /* ServerError.INVALID_OAUTH_CLIENT_ID */] = \"invalid-oauth-client-id\" /* AuthErrorCode.INVALID_OAUTH_CLIENT_ID */,\n  // User actions (sign-up or deletion) disabled errors.\n  _a$1[\"ADMIN_ONLY_OPERATION\" /* ServerError.ADMIN_ONLY_OPERATION */] = \"admin-restricted-operation\" /* AuthErrorCode.ADMIN_ONLY_OPERATION */,\n  // Multi factor related errors.\n  _a$1[\"INVALID_MFA_PENDING_CREDENTIAL\" /* ServerError.INVALID_MFA_PENDING_CREDENTIAL */] = \"invalid-multi-factor-session\" /* AuthErrorCode.INVALID_MFA_SESSION */, _a$1[\"MFA_ENROLLMENT_NOT_FOUND\" /* ServerError.MFA_ENROLLMENT_NOT_FOUND */] = \"multi-factor-info-not-found\" /* AuthErrorCode.MFA_INFO_NOT_FOUND */, _a$1[\"MISSING_MFA_ENROLLMENT_ID\" /* ServerError.MISSING_MFA_ENROLLMENT_ID */] = \"missing-multi-factor-info\" /* AuthErrorCode.MISSING_MFA_INFO */, _a$1[\"MISSING_MFA_PENDING_CREDENTIAL\" /* ServerError.MISSING_MFA_PENDING_CREDENTIAL */] = \"missing-multi-factor-session\" /* AuthErrorCode.MISSING_MFA_SESSION */, _a$1[\"SECOND_FACTOR_EXISTS\" /* ServerError.SECOND_FACTOR_EXISTS */] = \"second-factor-already-in-use\" /* AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED */, _a$1[\"SECOND_FACTOR_LIMIT_EXCEEDED\" /* ServerError.SECOND_FACTOR_LIMIT_EXCEEDED */] = \"maximum-second-factor-count-exceeded\" /* AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED */,\n  // Blocking functions related errors.\n  _a$1[\"BLOCKING_FUNCTION_ERROR_RESPONSE\" /* ServerError.BLOCKING_FUNCTION_ERROR_RESPONSE */] = \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */,\n  // Recaptcha related errors.\n  _a$1[\"RECAPTCHA_NOT_ENABLED\" /* ServerError.RECAPTCHA_NOT_ENABLED */] = \"recaptcha-not-enabled\" /* AuthErrorCode.RECAPTCHA_NOT_ENABLED */, _a$1[\"MISSING_RECAPTCHA_TOKEN\" /* ServerError.MISSING_RECAPTCHA_TOKEN */] = \"missing-recaptcha-token\" /* AuthErrorCode.MISSING_RECAPTCHA_TOKEN */, _a$1[\"INVALID_RECAPTCHA_TOKEN\" /* ServerError.INVALID_RECAPTCHA_TOKEN */] = \"invalid-recaptcha-token\" /* AuthErrorCode.INVALID_RECAPTCHA_TOKEN */, _a$1[\"INVALID_RECAPTCHA_ACTION\" /* ServerError.INVALID_RECAPTCHA_ACTION */] = \"invalid-recaptcha-action\" /* AuthErrorCode.INVALID_RECAPTCHA_ACTION */, _a$1[\"MISSING_CLIENT_TYPE\" /* ServerError.MISSING_CLIENT_TYPE */] = \"missing-client-type\" /* AuthErrorCode.MISSING_CLIENT_TYPE */, _a$1[\"MISSING_RECAPTCHA_VERSION\" /* ServerError.MISSING_RECAPTCHA_VERSION */] = \"missing-recaptcha-version\" /* AuthErrorCode.MISSING_RECAPTCHA_VERSION */, _a$1[\"INVALID_RECAPTCHA_VERSION\" /* ServerError.INVALID_RECAPTCHA_VERSION */] = \"invalid-recaptcha-version\" /* AuthErrorCode.INVALID_RECAPTCHA_VERSION */, _a$1[\"INVALID_REQ_TYPE\" /* ServerError.INVALID_REQ_TYPE */] = \"invalid-req-type\" /* AuthErrorCode.INVALID_REQ_TYPE */, _a$1);\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var DEFAULT_API_TIMEOUT_MS = new Delay(30000, 60000);\n  function _addTidIfNecessary(auth, request) {\n    if (auth.tenantId && !request.tenantId) {\n      return tslib.__assign(tslib.__assign({}, request), {\n        tenantId: auth.tenantId\n      });\n    }\n    return request;\n  }\n  function _performApiRequest(auth, method, path, request, customErrorMap) {\n    if (customErrorMap === undefined) {\n      customErrorMap = {};\n    }\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var _this = this;\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, _performFetchWithErrorHandling(auth, customErrorMap, function () {\n          return tslib.__awaiter(_this, undefined, undefined, function () {\n            var body, params, query, headers, fetchArgs;\n            return tslib.__generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  body = {};\n                  params = {};\n                  if (request) {\n                    if (method === \"GET\" /* HttpMethod.GET */) {\n                      params = request;\n                    } else {\n                      body = {\n                        body: JSON.stringify(request)\n                      };\n                    }\n                  }\n                  query = util.querystring(tslib.__assign({\n                    key: auth.config.apiKey\n                  }, params)).slice(1);\n                  return [4 /*yield*/, auth._getAdditionalHeaders()];\n                case 1:\n                  headers = _a.sent();\n                  headers[\"Content-Type\" /* HttpHeader.CONTENT_TYPE */] = 'application/json';\n                  if (auth.languageCode) {\n                    headers[\"X-Firebase-Locale\" /* HttpHeader.X_FIREBASE_LOCALE */] = auth.languageCode;\n                  }\n                  fetchArgs = tslib.__assign({\n                    method: method,\n                    headers: headers\n                  }, body);\n                  /* Security-conscious server-side frameworks tend to have built in mitigations for referrer\r\n                     problems\". See the Cloudflare GitHub issue #487: Error: The 'referrerPolicy' field on\r\n                     'RequestInitializerDict' is not implemented.\"\r\n                     https://github.com/cloudflare/next-on-pages/issues/487 */\n                  if (!util.isCloudflareWorker()) {\n                    fetchArgs.referrerPolicy = 'no-referrer';\n                  }\n                  return [2 /*return*/, FetchProvider.fetch()(_getFinalTarget(auth, auth.config.apiHost, path, query), fetchArgs)];\n              }\n            });\n          });\n        })];\n      });\n    });\n  }\n  function _performFetchWithErrorHandling(auth, customErrorMap, fetchFn) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var errorMap, networkTimeout, response, json, errorMessage, _a, serverErrorCode, serverErrorMessage, authError, e_1;\n      return tslib.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            auth._canInitEmulator = false;\n            errorMap = tslib.__assign(tslib.__assign({}, SERVER_ERROR_MAP), customErrorMap);\n            _b.label = 1;\n          case 1:\n            _b.trys.push([1, 4,, 5]);\n            networkTimeout = new NetworkTimeout(auth);\n            return [4 /*yield*/, Promise.race([fetchFn(), networkTimeout.promise])];\n          case 2:\n            response = _b.sent();\n            // If we've reached this point, the fetch succeeded and the networkTimeout\n            // didn't throw; clear the network timeout delay so that Node won't hang\n            networkTimeout.clearNetworkTimeout();\n            return [4 /*yield*/, response.json()];\n          case 3:\n            json = _b.sent();\n            if ('needConfirmation' in json) {\n              throw _makeTaggedError(auth, \"account-exists-with-different-credential\" /* AuthErrorCode.NEED_CONFIRMATION */, json);\n            }\n            if (response.ok && !('errorMessage' in json)) {\n              return [2 /*return*/, json];\n            } else {\n              errorMessage = response.ok ? json.errorMessage : json.error.message;\n              _a = errorMessage.split(' : '), serverErrorCode = _a[0], serverErrorMessage = _a[1];\n              if (serverErrorCode === \"FEDERATED_USER_ID_ALREADY_LINKED\" /* ServerError.FEDERATED_USER_ID_ALREADY_LINKED */) {\n                throw _makeTaggedError(auth, \"credential-already-in-use\" /* AuthErrorCode.CREDENTIAL_ALREADY_IN_USE */, json);\n              } else if (serverErrorCode === \"EMAIL_EXISTS\" /* ServerError.EMAIL_EXISTS */) {\n                throw _makeTaggedError(auth, \"email-already-in-use\" /* AuthErrorCode.EMAIL_EXISTS */, json);\n              } else if (serverErrorCode === \"USER_DISABLED\" /* ServerError.USER_DISABLED */) {\n                throw _makeTaggedError(auth, \"user-disabled\" /* AuthErrorCode.USER_DISABLED */, json);\n              }\n              authError = errorMap[serverErrorCode] || serverErrorCode.toLowerCase().replace(/[_\\s]+/g, '-');\n              if (serverErrorMessage) {\n                throw _errorWithCustomMessage(auth, authError, serverErrorMessage);\n              } else {\n                _fail(auth, authError);\n              }\n            }\n            return [3 /*break*/, 5];\n          case 4:\n            e_1 = _b.sent();\n            if (e_1 instanceof util.FirebaseError) {\n              throw e_1;\n            }\n            // Changing this to a different error code will log user out when there is a network error\n            // because we treat any error other than NETWORK_REQUEST_FAILED as token is invalid.\n            // https://github.com/firebase/firebase-js-sdk/blob/4fbc73610d70be4e0852e7de63a39cb7897e8546/packages/auth/src/core/auth/auth_impl.ts#L309-L316\n            _fail(auth, \"network-request-failed\" /* AuthErrorCode.NETWORK_REQUEST_FAILED */, {\n              'message': String(e_1)\n            });\n            return [3 /*break*/, 5];\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  }\n  function _performSignInRequest(auth, method, path, request, customErrorMap) {\n    if (customErrorMap === undefined) {\n      customErrorMap = {};\n    }\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var serverResponse;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, _performApiRequest(auth, method, path, request, customErrorMap)];\n          case 1:\n            serverResponse = _a.sent();\n            if ('mfaPendingCredential' in serverResponse) {\n              _fail(auth, \"multi-factor-auth-required\" /* AuthErrorCode.MFA_REQUIRED */, {\n                _serverResponse: serverResponse\n              });\n            }\n            return [2 /*return*/, serverResponse];\n        }\n      });\n    });\n  }\n  function _getFinalTarget(auth, host, path, query) {\n    var base = \"\".concat(host).concat(path, \"?\").concat(query);\n    if (!auth.config.emulator) {\n      return \"\".concat(auth.config.apiScheme, \"://\").concat(base);\n    }\n    return _emulatorUrl(auth.config, base);\n  }\n  function _parseEnforcementState(enforcementStateStr) {\n    switch (enforcementStateStr) {\n      case 'ENFORCE':\n        return \"ENFORCE\" /* EnforcementState.ENFORCE */;\n      case 'AUDIT':\n        return \"AUDIT\" /* EnforcementState.AUDIT */;\n      case 'OFF':\n        return \"OFF\" /* EnforcementState.OFF */;\n      default:\n        return \"ENFORCEMENT_STATE_UNSPECIFIED\" /* EnforcementState.ENFORCEMENT_STATE_UNSPECIFIED */;\n    }\n  }\n  var NetworkTimeout = /** @class */function () {\n    function NetworkTimeout(auth) {\n      var _this = this;\n      this.auth = auth;\n      // Node timers and browser timers are fundamentally incompatible, but we\n      // don't care about the value here\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.timer = null;\n      this.promise = new Promise(function (_, reject) {\n        _this.timer = setTimeout(function () {\n          return reject(_createError(_this.auth, \"network-request-failed\" /* AuthErrorCode.NETWORK_REQUEST_FAILED */));\n        }, DEFAULT_API_TIMEOUT_MS.get());\n      });\n    }\n    NetworkTimeout.prototype.clearNetworkTimeout = function () {\n      clearTimeout(this.timer);\n    };\n    return NetworkTimeout;\n  }();\n  function _makeTaggedError(auth, code, response) {\n    var errorParams = {\n      appName: auth.name\n    };\n    if (response.email) {\n      errorParams.email = response.email;\n    }\n    if (response.phoneNumber) {\n      errorParams.phoneNumber = response.phoneNumber;\n    }\n    var error = _createError(auth, code, errorParams);\n    // We know customData is defined on error because errorParams is defined\n    error.customData._tokenResponse = response;\n    return error;\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function isV2(grecaptcha) {\n    return grecaptcha !== undefined && grecaptcha.getResponse !== undefined;\n  }\n  function isEnterprise(grecaptcha) {\n    return grecaptcha !== undefined && grecaptcha.enterprise !== undefined;\n  }\n  var RecaptchaConfig = /** @class */function () {\n    function RecaptchaConfig(response) {\n      /**\r\n       * The reCAPTCHA site key.\r\n       */\n      this.siteKey = '';\n      /**\r\n       * The list of providers and their enablement status for reCAPTCHA Enterprise.\r\n       */\n      this.recaptchaEnforcementState = [];\n      if (response.recaptchaKey === undefined) {\n        throw new Error('recaptchaKey undefined');\n      }\n      // Example response.recaptchaKey: \"projects/proj123/keys/sitekey123\"\n      this.siteKey = response.recaptchaKey.split('/')[3];\n      this.recaptchaEnforcementState = response.recaptchaEnforcementState;\n    }\n    /**\r\n     * Returns the reCAPTCHA Enterprise enforcement state for the given provider.\r\n     *\r\n     * @param providerStr - The provider whose enforcement state is to be returned.\r\n     * @returns The reCAPTCHA Enterprise enforcement state for the given provider.\r\n     */\n    RecaptchaConfig.prototype.getProviderEnforcementState = function (providerStr) {\n      if (!this.recaptchaEnforcementState || this.recaptchaEnforcementState.length === 0) {\n        return null;\n      }\n      for (var _i = 0, _a = this.recaptchaEnforcementState; _i < _a.length; _i++) {\n        var recaptchaEnforcementState = _a[_i];\n        if (recaptchaEnforcementState.provider && recaptchaEnforcementState.provider === providerStr) {\n          return _parseEnforcementState(recaptchaEnforcementState.enforcementState);\n        }\n      }\n      return null;\n    };\n    /**\r\n     * Returns true if the reCAPTCHA Enterprise enforcement state for the provider is set to ENFORCE or AUDIT.\r\n     *\r\n     * @param providerStr - The provider whose enablement state is to be returned.\r\n     * @returns Whether or not reCAPTCHA Enterprise protection is enabled for the given provider.\r\n     */\n    RecaptchaConfig.prototype.isProviderEnabled = function (providerStr) {\n      return this.getProviderEnforcementState(providerStr) === \"ENFORCE\" /* EnforcementState.ENFORCE */ || this.getProviderEnforcementState(providerStr) === \"AUDIT\" /* EnforcementState.AUDIT */;\n    };\n    return RecaptchaConfig;\n  }();\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function getRecaptchaParams(auth) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, _performApiRequest(auth, \"GET\" /* HttpMethod.GET */, \"/v1/recaptchaParams\" /* Endpoint.GET_RECAPTCHA_PARAM */)];\n          case 1:\n            return [2 /*return*/, _a.sent().recaptchaSiteKey || ''];\n        }\n      });\n    });\n  }\n  function getRecaptchaConfig(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, _performApiRequest(auth, \"GET\" /* HttpMethod.GET */, \"/v2/recaptchaConfig\" /* Endpoint.GET_RECAPTCHA_CONFIG */, _addTidIfNecessary(auth, request))];\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function deleteAccount(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:delete\" /* Endpoint.DELETE_ACCOUNT */, request)];\n      });\n    });\n  }\n  function deleteLinkedAccounts(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:update\" /* Endpoint.SET_ACCOUNT_INFO */, request)];\n      });\n    });\n  }\n  function getAccountInfo(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:lookup\" /* Endpoint.GET_ACCOUNT_INFO */, request)];\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function utcTimestampToDateString(utcTimestamp) {\n    if (!utcTimestamp) {\n      return undefined;\n    }\n    try {\n      // Convert to date object.\n      var date = new Date(Number(utcTimestamp));\n      // Test date is valid.\n      if (!isNaN(date.getTime())) {\n        // Convert to UTC date string.\n        return date.toUTCString();\n      }\n    } catch (e) {\n      // Do nothing. undefined will be returned.\n    }\n    return undefined;\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Returns a JSON Web Token (JWT) used to identify the user to a Firebase service.\r\n   *\r\n   * @remarks\r\n   * Returns the current token if it has not expired or if it will not expire in the next five\r\n   * minutes. Otherwise, this will refresh the token and return a new one.\r\n   *\r\n   * @param user - The user.\r\n   * @param forceRefresh - Force refresh regardless of token expiration.\r\n   *\r\n   * @public\r\n   */\n  function getIdToken(user, forceRefresh) {\n    if (forceRefresh === undefined) {\n      forceRefresh = false;\n    }\n    return util.getModularInstance(user).getIdToken(forceRefresh);\n  }\n  /**\r\n   * Returns a deserialized JSON Web Token (JWT) used to identify the user to a Firebase service.\r\n   *\r\n   * @remarks\r\n   * Returns the current token if it has not expired or if it will not expire in the next five\r\n   * minutes. Otherwise, this will refresh the token and return a new one.\r\n   *\r\n   * @param user - The user.\r\n   * @param forceRefresh - Force refresh regardless of token expiration.\r\n   *\r\n   * @public\r\n   */\n  function getIdTokenResult(user, forceRefresh) {\n    if (forceRefresh === undefined) {\n      forceRefresh = false;\n    }\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var userInternal, token, claims, firebase, signInProvider;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            userInternal = util.getModularInstance(user);\n            return [4 /*yield*/, userInternal.getIdToken(forceRefresh)];\n          case 1:\n            token = _a.sent();\n            claims = _parseToken(token);\n            _assert(claims && claims.exp && claims.auth_time && claims.iat, userInternal.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n            firebase = typeof claims.firebase === 'object' ? claims.firebase : undefined;\n            signInProvider = firebase === null || firebase === undefined ? undefined : firebase['sign_in_provider'];\n            return [2 /*return*/, {\n              claims: claims,\n              token: token,\n              authTime: utcTimestampToDateString(secondsStringToMilliseconds(claims.auth_time)),\n              issuedAtTime: utcTimestampToDateString(secondsStringToMilliseconds(claims.iat)),\n              expirationTime: utcTimestampToDateString(secondsStringToMilliseconds(claims.exp)),\n              signInProvider: signInProvider || null,\n              signInSecondFactor: (firebase === null || firebase === undefined ? undefined : firebase['sign_in_second_factor']) || null\n            }];\n        }\n      });\n    });\n  }\n  function secondsStringToMilliseconds(seconds) {\n    return Number(seconds) * 1000;\n  }\n  function _parseToken(token) {\n    var _a = token.split('.'),\n      algorithm = _a[0],\n      payload = _a[1],\n      signature = _a[2];\n    if (algorithm === undefined || payload === undefined || signature === undefined) {\n      _logError('JWT malformed, contained fewer than 3 sections');\n      return null;\n    }\n    try {\n      var decoded = util.base64Decode(payload);\n      if (!decoded) {\n        _logError('Failed to decode base64 JWT payload');\n        return null;\n      }\n      return JSON.parse(decoded);\n    } catch (e) {\n      _logError('Caught error parsing JWT payload as JSON', e === null || e === undefined ? undefined : e.toString());\n      return null;\n    }\n  }\n  /**\r\n   * Extract expiresIn TTL from a token by subtracting the expiration from the issuance.\r\n   */\n  function _tokenExpiresIn(token) {\n    var parsedToken = _parseToken(token);\n    _assert(parsedToken, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n    _assert(typeof parsedToken.exp !== 'undefined', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n    _assert(typeof parsedToken.iat !== 'undefined', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n    return Number(parsedToken.exp) - Number(parsedToken.iat);\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function _logoutIfInvalidated(user, promise, bypassAuthState) {\n    if (bypassAuthState === undefined) {\n      bypassAuthState = false;\n    }\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var e_1;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (bypassAuthState) {\n              return [2 /*return*/, promise];\n            }\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 6]);\n            return [4 /*yield*/, promise];\n          case 2:\n            return [2 /*return*/, _a.sent()];\n          case 3:\n            e_1 = _a.sent();\n            if (!(e_1 instanceof util.FirebaseError && isUserInvalidated(e_1))) return [3 /*break*/, 5];\n            if (!(user.auth.currentUser === user)) return [3 /*break*/, 5];\n            return [4 /*yield*/, user.auth.signOut()];\n          case 4:\n            _a.sent();\n            _a.label = 5;\n          case 5:\n            throw e_1;\n          case 6:\n            return [2 /*return*/];\n        }\n      });\n    });\n  }\n  function isUserInvalidated(_a) {\n    var code = _a.code;\n    return code === \"auth/\".concat(\"user-disabled\" /* AuthErrorCode.USER_DISABLED */) || code === \"auth/\".concat(\"user-token-expired\" /* AuthErrorCode.TOKEN_EXPIRED */);\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var ProactiveRefresh = /** @class */function () {\n    function ProactiveRefresh(user) {\n      this.user = user;\n      this.isRunning = false;\n      // Node timers and browser timers return fundamentally different types.\n      // We don't actually care what the value is but TS won't accept unknown and\n      // we can't cast properly in both environments.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.timerId = null;\n      this.errorBackoff = 30000 /* Duration.RETRY_BACKOFF_MIN */;\n    }\n    ProactiveRefresh.prototype._start = function () {\n      if (this.isRunning) {\n        return;\n      }\n      this.isRunning = true;\n      this.schedule();\n    };\n    ProactiveRefresh.prototype._stop = function () {\n      if (!this.isRunning) {\n        return;\n      }\n      this.isRunning = false;\n      if (this.timerId !== null) {\n        clearTimeout(this.timerId);\n      }\n    };\n    ProactiveRefresh.prototype.getInterval = function (wasError) {\n      var _a;\n      if (wasError) {\n        var interval = this.errorBackoff;\n        this.errorBackoff = Math.min(this.errorBackoff * 2, 960000 /* Duration.RETRY_BACKOFF_MAX */);\n        return interval;\n      } else {\n        // Reset the error backoff\n        this.errorBackoff = 30000 /* Duration.RETRY_BACKOFF_MIN */;\n        var expTime = (_a = this.user.stsTokenManager.expirationTime) !== null && _a !== undefined ? _a : 0;\n        var interval = expTime - Date.now() - 300000 /* Duration.OFFSET */;\n        return Math.max(0, interval);\n      }\n    };\n    ProactiveRefresh.prototype.schedule = function (wasError) {\n      var _this = this;\n      if (wasError === undefined) {\n        wasError = false;\n      }\n      if (!this.isRunning) {\n        // Just in case...\n        return;\n      }\n      var interval = this.getInterval(wasError);\n      this.timerId = setTimeout(function () {\n        return tslib.__awaiter(_this, undefined, undefined, function () {\n          return tslib.__generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4 /*yield*/, this.iteration()];\n              case 1:\n                _a.sent();\n                return [2 /*return*/];\n            }\n          });\n        });\n      }, interval);\n    };\n    ProactiveRefresh.prototype.iteration = function () {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var e_1;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _a.trys.push([0, 2,, 3]);\n              return [4 /*yield*/, this.user.getIdToken(true)];\n            case 1:\n              _a.sent();\n              return [3 /*break*/, 3];\n            case 2:\n              e_1 = _a.sent();\n              // Only retry on network errors\n              if ((e_1 === null || e_1 === undefined ? undefined : e_1.code) === \"auth/\".concat(\"network-request-failed\" /* AuthErrorCode.NETWORK_REQUEST_FAILED */)) {\n                this.schedule(/* wasError */true);\n              }\n              return [2 /*return*/];\n            case 3:\n              this.schedule();\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n    return ProactiveRefresh;\n  }();\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var UserMetadata = /** @class */function () {\n    function UserMetadata(createdAt, lastLoginAt) {\n      this.createdAt = createdAt;\n      this.lastLoginAt = lastLoginAt;\n      this._initializeTime();\n    }\n    UserMetadata.prototype._initializeTime = function () {\n      this.lastSignInTime = utcTimestampToDateString(this.lastLoginAt);\n      this.creationTime = utcTimestampToDateString(this.createdAt);\n    };\n    UserMetadata.prototype._copy = function (metadata) {\n      this.createdAt = metadata.createdAt;\n      this.lastLoginAt = metadata.lastLoginAt;\n      this._initializeTime();\n    };\n    UserMetadata.prototype.toJSON = function () {\n      return {\n        createdAt: this.createdAt,\n        lastLoginAt: this.lastLoginAt\n      };\n    };\n    return UserMetadata;\n  }();\n\n  /**\r\n   * @license\r\n   * Copyright 2019 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function _reloadWithoutSaving(user) {\n    var _a;\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var auth, idToken, response, coreAccount, newProviderData, providerData, oldIsAnonymous, newIsAnonymous, isAnonymous, updates;\n      return tslib.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            auth = user.auth;\n            return [4 /*yield*/, user.getIdToken()];\n          case 1:\n            idToken = _b.sent();\n            return [4 /*yield*/, _logoutIfInvalidated(user, getAccountInfo(auth, {\n              idToken: idToken\n            }))];\n          case 2:\n            response = _b.sent();\n            _assert(response === null || response === undefined ? undefined : response.users.length, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n            coreAccount = response.users[0];\n            user._notifyReloadListener(coreAccount);\n            newProviderData = ((_a = coreAccount.providerUserInfo) === null || _a === undefined ? undefined : _a.length) ? extractProviderData(coreAccount.providerUserInfo) : [];\n            providerData = mergeProviderData(user.providerData, newProviderData);\n            oldIsAnonymous = user.isAnonymous;\n            newIsAnonymous = !(user.email && coreAccount.passwordHash) && !(providerData === null || providerData === undefined ? undefined : providerData.length);\n            isAnonymous = !oldIsAnonymous ? false : newIsAnonymous;\n            updates = {\n              uid: coreAccount.localId,\n              displayName: coreAccount.displayName || null,\n              photoURL: coreAccount.photoUrl || null,\n              email: coreAccount.email || null,\n              emailVerified: coreAccount.emailVerified || false,\n              phoneNumber: coreAccount.phoneNumber || null,\n              tenantId: coreAccount.tenantId || null,\n              providerData: providerData,\n              metadata: new UserMetadata(coreAccount.createdAt, coreAccount.lastLoginAt),\n              isAnonymous: isAnonymous\n            };\n            Object.assign(user, updates);\n            return [2 /*return*/];\n        }\n      });\n    });\n  }\n  /**\r\n   * Reloads user account data, if signed in.\r\n   *\r\n   * @param user - The user.\r\n   *\r\n   * @public\r\n   */\n  function reload(user) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var userInternal;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            userInternal = util.getModularInstance(user);\n            return [4 /*yield*/, _reloadWithoutSaving(userInternal)];\n          case 1:\n            _a.sent();\n            // Even though the current user hasn't changed, update\n            // current user will trigger a persistence update w/ the\n            // new info.\n            return [4 /*yield*/, userInternal.auth._persistUserIfCurrent(userInternal)];\n          case 2:\n            // Even though the current user hasn't changed, update\n            // current user will trigger a persistence update w/ the\n            // new info.\n            _a.sent();\n            userInternal.auth._notifyListenersIfCurrent(userInternal);\n            return [2 /*return*/];\n        }\n      });\n    });\n  }\n  function mergeProviderData(original, newData) {\n    var deduped = original.filter(function (o) {\n      return !newData.some(function (n) {\n        return n.providerId === o.providerId;\n      });\n    });\n    return tslib.__spreadArray(tslib.__spreadArray([], deduped, true), newData, true);\n  }\n  function extractProviderData(providers) {\n    return providers.map(function (_a) {\n      var providerId = _a.providerId,\n        provider = tslib.__rest(_a, [\"providerId\"]);\n      return {\n        providerId: providerId,\n        uid: provider.rawId || '',\n        displayName: provider.displayName || null,\n        email: provider.email || null,\n        phoneNumber: provider.phoneNumber || null,\n        photoURL: provider.photoUrl || null\n      };\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function requestStsToken(auth, refreshToken) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var response;\n      var _this = this;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, _performFetchWithErrorHandling(auth, {}, function () {\n              return tslib.__awaiter(_this, undefined, undefined, function () {\n                var body, _a, tokenApiHost, apiKey, url, headers;\n                return tslib.__generator(this, function (_b) {\n                  switch (_b.label) {\n                    case 0:\n                      body = util.querystring({\n                        'grant_type': 'refresh_token',\n                        'refresh_token': refreshToken\n                      }).slice(1);\n                      _a = auth.config, tokenApiHost = _a.tokenApiHost, apiKey = _a.apiKey;\n                      url = _getFinalTarget(auth, tokenApiHost, \"/v1/token\" /* Endpoint.TOKEN */, \"key=\".concat(apiKey));\n                      return [4 /*yield*/, auth._getAdditionalHeaders()];\n                    case 1:\n                      headers = _b.sent();\n                      headers[\"Content-Type\" /* HttpHeader.CONTENT_TYPE */] = 'application/x-www-form-urlencoded';\n                      return [2 /*return*/, FetchProvider.fetch()(url, {\n                        method: \"POST\" /* HttpMethod.POST */,\n                        headers: headers,\n                        body: body\n                      })];\n                  }\n                });\n              });\n            })];\n          case 1:\n            response = _a.sent();\n            // The response comes back in snake_case. Convert to camel:\n            return [2 /*return*/, {\n              accessToken: response.access_token,\n              expiresIn: response.expires_in,\n              refreshToken: response.refresh_token\n            }];\n        }\n      });\n    });\n  }\n  function revokeToken(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts:revokeToken\" /* Endpoint.REVOKE_TOKEN */, _addTidIfNecessary(auth, request))];\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * We need to mark this class as internal explicitly to exclude it in the public typings, because\r\n   * it references AuthInternal which has a circular dependency with UserInternal.\r\n   *\r\n   * @internal\r\n   */\n  var StsTokenManager = /** @class */function () {\n    function StsTokenManager() {\n      this.refreshToken = null;\n      this.accessToken = null;\n      this.expirationTime = null;\n    }\n    Object.defineProperty(StsTokenManager.prototype, \"isExpired\", {\n      get: function () {\n        return !this.expirationTime || Date.now() > this.expirationTime - 30000 /* Buffer.TOKEN_REFRESH */;\n      },\n      enumerable: false,\n      configurable: true\n    });\n    StsTokenManager.prototype.updateFromServerResponse = function (response) {\n      _assert(response.idToken, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n      _assert(typeof response.idToken !== 'undefined', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n      _assert(typeof response.refreshToken !== 'undefined', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n      var expiresIn = 'expiresIn' in response && typeof response.expiresIn !== 'undefined' ? Number(response.expiresIn) : _tokenExpiresIn(response.idToken);\n      this.updateTokensAndExpiration(response.idToken, response.refreshToken, expiresIn);\n    };\n    StsTokenManager.prototype.updateFromIdToken = function (idToken) {\n      _assert(idToken.length !== 0, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n      var expiresIn = _tokenExpiresIn(idToken);\n      this.updateTokensAndExpiration(idToken, null, expiresIn);\n    };\n    StsTokenManager.prototype.getToken = function (auth, forceRefresh) {\n      if (forceRefresh === undefined) {\n        forceRefresh = false;\n      }\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!forceRefresh && this.accessToken && !this.isExpired) {\n                return [2 /*return*/, this.accessToken];\n              }\n              _assert(this.refreshToken, auth, \"user-token-expired\" /* AuthErrorCode.TOKEN_EXPIRED */);\n              if (!this.refreshToken) return [3 /*break*/, 2];\n              return [4 /*yield*/, this.refresh(auth, this.refreshToken)];\n            case 1:\n              _a.sent();\n              return [2 /*return*/, this.accessToken];\n            case 2:\n              return [2 /*return*/, null];\n          }\n        });\n      });\n    };\n    StsTokenManager.prototype.clearRefreshToken = function () {\n      this.refreshToken = null;\n    };\n    StsTokenManager.prototype.refresh = function (auth, oldToken) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var _a, accessToken, refreshToken, expiresIn;\n        return tslib.__generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              return [4 /*yield*/, requestStsToken(auth, oldToken)];\n            case 1:\n              _a = _b.sent(), accessToken = _a.accessToken, refreshToken = _a.refreshToken, expiresIn = _a.expiresIn;\n              this.updateTokensAndExpiration(accessToken, refreshToken, Number(expiresIn));\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n    StsTokenManager.prototype.updateTokensAndExpiration = function (accessToken, refreshToken, expiresInSec) {\n      this.refreshToken = refreshToken || null;\n      this.accessToken = accessToken || null;\n      this.expirationTime = Date.now() + expiresInSec * 1000;\n    };\n    StsTokenManager.fromJSON = function (appName, object) {\n      var refreshToken = object.refreshToken,\n        accessToken = object.accessToken,\n        expirationTime = object.expirationTime;\n      var manager = new StsTokenManager();\n      if (refreshToken) {\n        _assert(typeof refreshToken === 'string', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */, {\n          appName: appName\n        });\n        manager.refreshToken = refreshToken;\n      }\n      if (accessToken) {\n        _assert(typeof accessToken === 'string', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */, {\n          appName: appName\n        });\n        manager.accessToken = accessToken;\n      }\n      if (expirationTime) {\n        _assert(typeof expirationTime === 'number', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */, {\n          appName: appName\n        });\n        manager.expirationTime = expirationTime;\n      }\n      return manager;\n    };\n    StsTokenManager.prototype.toJSON = function () {\n      return {\n        refreshToken: this.refreshToken,\n        accessToken: this.accessToken,\n        expirationTime: this.expirationTime\n      };\n    };\n    StsTokenManager.prototype._assign = function (stsTokenManager) {\n      this.accessToken = stsTokenManager.accessToken;\n      this.refreshToken = stsTokenManager.refreshToken;\n      this.expirationTime = stsTokenManager.expirationTime;\n    };\n    StsTokenManager.prototype._clone = function () {\n      return Object.assign(new StsTokenManager(), this.toJSON());\n    };\n    StsTokenManager.prototype._performRefresh = function () {\n      return debugFail('not implemented');\n    };\n    return StsTokenManager;\n  }();\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function assertStringOrUndefined(assertion, appName) {\n    _assert(typeof assertion === 'string' || typeof assertion === 'undefined', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */, {\n      appName: appName\n    });\n  }\n  var UserImpl = /** @class */function () {\n    function UserImpl(_a) {\n      var uid = _a.uid,\n        auth = _a.auth,\n        stsTokenManager = _a.stsTokenManager,\n        opt = tslib.__rest(_a, [\"uid\", \"auth\", \"stsTokenManager\"]);\n      // For the user object, provider is always Firebase.\n      this.providerId = \"firebase\" /* ProviderId.FIREBASE */;\n      this.proactiveRefresh = new ProactiveRefresh(this);\n      this.reloadUserInfo = null;\n      this.reloadListener = null;\n      this.uid = uid;\n      this.auth = auth;\n      this.stsTokenManager = stsTokenManager;\n      this.accessToken = stsTokenManager.accessToken;\n      this.displayName = opt.displayName || null;\n      this.email = opt.email || null;\n      this.emailVerified = opt.emailVerified || false;\n      this.phoneNumber = opt.phoneNumber || null;\n      this.photoURL = opt.photoURL || null;\n      this.isAnonymous = opt.isAnonymous || false;\n      this.tenantId = opt.tenantId || null;\n      this.providerData = opt.providerData ? tslib.__spreadArray([], opt.providerData, true) : [];\n      this.metadata = new UserMetadata(opt.createdAt || undefined, opt.lastLoginAt || undefined);\n    }\n    UserImpl.prototype.getIdToken = function (forceRefresh) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var accessToken;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4 /*yield*/, _logoutIfInvalidated(this, this.stsTokenManager.getToken(this.auth, forceRefresh))];\n            case 1:\n              accessToken = _a.sent();\n              _assert(accessToken, this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n              if (!(this.accessToken !== accessToken)) return [3 /*break*/, 3];\n              this.accessToken = accessToken;\n              return [4 /*yield*/, this.auth._persistUserIfCurrent(this)];\n            case 2:\n              _a.sent();\n              this.auth._notifyListenersIfCurrent(this);\n              _a.label = 3;\n            case 3:\n              return [2 /*return*/, accessToken];\n          }\n        });\n      });\n    };\n    UserImpl.prototype.getIdTokenResult = function (forceRefresh) {\n      return getIdTokenResult(this, forceRefresh);\n    };\n    UserImpl.prototype.reload = function () {\n      return reload(this);\n    };\n    UserImpl.prototype._assign = function (user) {\n      if (this === user) {\n        return;\n      }\n      _assert(this.uid === user.uid, this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n      this.displayName = user.displayName;\n      this.photoURL = user.photoURL;\n      this.email = user.email;\n      this.emailVerified = user.emailVerified;\n      this.phoneNumber = user.phoneNumber;\n      this.isAnonymous = user.isAnonymous;\n      this.tenantId = user.tenantId;\n      this.providerData = user.providerData.map(function (userInfo) {\n        return tslib.__assign({}, userInfo);\n      });\n      this.metadata._copy(user.metadata);\n      this.stsTokenManager._assign(user.stsTokenManager);\n    };\n    UserImpl.prototype._clone = function (auth) {\n      var newUser = new UserImpl(tslib.__assign(tslib.__assign({}, this), {\n        auth: auth,\n        stsTokenManager: this.stsTokenManager._clone()\n      }));\n      newUser.metadata._copy(this.metadata);\n      return newUser;\n    };\n    UserImpl.prototype._onReload = function (callback) {\n      // There should only ever be one listener, and that is a single instance of MultiFactorUser\n      _assert(!this.reloadListener, this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n      this.reloadListener = callback;\n      if (this.reloadUserInfo) {\n        this._notifyReloadListener(this.reloadUserInfo);\n        this.reloadUserInfo = null;\n      }\n    };\n    UserImpl.prototype._notifyReloadListener = function (userInfo) {\n      if (this.reloadListener) {\n        this.reloadListener(userInfo);\n      } else {\n        // If no listener is subscribed yet, save the result so it's available when they do subscribe\n        this.reloadUserInfo = userInfo;\n      }\n    };\n    UserImpl.prototype._startProactiveRefresh = function () {\n      this.proactiveRefresh._start();\n    };\n    UserImpl.prototype._stopProactiveRefresh = function () {\n      this.proactiveRefresh._stop();\n    };\n    UserImpl.prototype._updateTokensIfNecessary = function (response, reload) {\n      if (reload === undefined) {\n        reload = false;\n      }\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var tokensRefreshed;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              tokensRefreshed = false;\n              if (response.idToken && response.idToken !== this.stsTokenManager.accessToken) {\n                this.stsTokenManager.updateFromServerResponse(response);\n                tokensRefreshed = true;\n              }\n              if (!reload) return [3 /*break*/, 2];\n              return [4 /*yield*/, _reloadWithoutSaving(this)];\n            case 1:\n              _a.sent();\n              _a.label = 2;\n            case 2:\n              return [4 /*yield*/, this.auth._persistUserIfCurrent(this)];\n            case 3:\n              _a.sent();\n              if (tokensRefreshed) {\n                this.auth._notifyListenersIfCurrent(this);\n              }\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n    UserImpl.prototype.delete = function () {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var idToken;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (app._isFirebaseServerApp(this.auth.app)) {\n                return [2 /*return*/, Promise.reject(_serverAppCurrentUserOperationNotSupportedError(this.auth))];\n              }\n              return [4 /*yield*/, this.getIdToken()];\n            case 1:\n              idToken = _a.sent();\n              return [4 /*yield*/, _logoutIfInvalidated(this, deleteAccount(this.auth, {\n                idToken: idToken\n              }))];\n            case 2:\n              _a.sent();\n              this.stsTokenManager.clearRefreshToken();\n              // TODO: Determine if cancellable-promises are necessary to use in this class so that delete()\n              //       cancels pending actions...\n              return [2 /*return*/, this.auth.signOut()];\n          }\n        });\n      });\n    };\n    UserImpl.prototype.toJSON = function () {\n      return tslib.__assign(tslib.__assign({\n        uid: this.uid,\n        email: this.email || undefined,\n        emailVerified: this.emailVerified,\n        displayName: this.displayName || undefined,\n        isAnonymous: this.isAnonymous,\n        photoURL: this.photoURL || undefined,\n        phoneNumber: this.phoneNumber || undefined,\n        tenantId: this.tenantId || undefined,\n        providerData: this.providerData.map(function (userInfo) {\n          return tslib.__assign({}, userInfo);\n        }),\n        stsTokenManager: this.stsTokenManager.toJSON(),\n        // Redirect event ID must be maintained in case there is a pending\n        // redirect event.\n        _redirectEventId: this._redirectEventId\n      }, this.metadata.toJSON()), {\n        // Required for compatibility with the legacy SDK (go/firebase-auth-sdk-persistence-parsing):\n        apiKey: this.auth.config.apiKey,\n        appName: this.auth.name\n      });\n    };\n    Object.defineProperty(UserImpl.prototype, \"refreshToken\", {\n      get: function () {\n        return this.stsTokenManager.refreshToken || '';\n      },\n      enumerable: false,\n      configurable: true\n    });\n    UserImpl._fromJSON = function (auth, object) {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n      var displayName = (_a = object.displayName) !== null && _a !== undefined ? _a : undefined;\n      var email = (_b = object.email) !== null && _b !== undefined ? _b : undefined;\n      var phoneNumber = (_c = object.phoneNumber) !== null && _c !== undefined ? _c : undefined;\n      var photoURL = (_d = object.photoURL) !== null && _d !== undefined ? _d : undefined;\n      var tenantId = (_e = object.tenantId) !== null && _e !== undefined ? _e : undefined;\n      var _redirectEventId = (_f = object._redirectEventId) !== null && _f !== undefined ? _f : undefined;\n      var createdAt = (_g = object.createdAt) !== null && _g !== undefined ? _g : undefined;\n      var lastLoginAt = (_h = object.lastLoginAt) !== null && _h !== undefined ? _h : undefined;\n      var uid = object.uid,\n        emailVerified = object.emailVerified,\n        isAnonymous = object.isAnonymous,\n        providerData = object.providerData,\n        plainObjectTokenManager = object.stsTokenManager;\n      _assert(uid && plainObjectTokenManager, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n      var stsTokenManager = StsTokenManager.fromJSON(this.name, plainObjectTokenManager);\n      _assert(typeof uid === 'string', auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n      assertStringOrUndefined(displayName, auth.name);\n      assertStringOrUndefined(email, auth.name);\n      _assert(typeof emailVerified === 'boolean', auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n      _assert(typeof isAnonymous === 'boolean', auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n      assertStringOrUndefined(phoneNumber, auth.name);\n      assertStringOrUndefined(photoURL, auth.name);\n      assertStringOrUndefined(tenantId, auth.name);\n      assertStringOrUndefined(_redirectEventId, auth.name);\n      assertStringOrUndefined(createdAt, auth.name);\n      assertStringOrUndefined(lastLoginAt, auth.name);\n      var user = new UserImpl({\n        uid: uid,\n        auth: auth,\n        email: email,\n        emailVerified: emailVerified,\n        displayName: displayName,\n        isAnonymous: isAnonymous,\n        photoURL: photoURL,\n        phoneNumber: phoneNumber,\n        tenantId: tenantId,\n        stsTokenManager: stsTokenManager,\n        createdAt: createdAt,\n        lastLoginAt: lastLoginAt\n      });\n      if (providerData && Array.isArray(providerData)) {\n        user.providerData = providerData.map(function (userInfo) {\n          return tslib.__assign({}, userInfo);\n        });\n      }\n      if (_redirectEventId) {\n        user._redirectEventId = _redirectEventId;\n      }\n      return user;\n    };\n    /**\r\n     * Initialize a User from an idToken server response\r\n     * @param auth\r\n     * @param idTokenResponse\r\n     */\n    UserImpl._fromIdTokenResponse = function (auth, idTokenResponse, isAnonymous) {\n      if (isAnonymous === undefined) {\n        isAnonymous = false;\n      }\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var stsTokenManager, user;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              stsTokenManager = new StsTokenManager();\n              stsTokenManager.updateFromServerResponse(idTokenResponse);\n              user = new UserImpl({\n                uid: idTokenResponse.localId,\n                auth: auth,\n                stsTokenManager: stsTokenManager,\n                isAnonymous: isAnonymous\n              });\n              // Updates the user info and data and resolves with a user instance.\n              return [4 /*yield*/, _reloadWithoutSaving(user)];\n            case 1:\n              // Updates the user info and data and resolves with a user instance.\n              _a.sent();\n              return [2 /*return*/, user];\n          }\n        });\n      });\n    };\n    /**\r\n     * Initialize a User from an idToken server response\r\n     * @param auth\r\n     * @param idTokenResponse\r\n     */\n    UserImpl._fromGetAccountInfoResponse = function (auth, response, idToken) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var coreAccount, providerData, isAnonymous, stsTokenManager, user, updates;\n        return tslib.__generator(this, function (_a) {\n          coreAccount = response.users[0];\n          _assert(coreAccount.localId !== undefined, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n          providerData = coreAccount.providerUserInfo !== undefined ? extractProviderData(coreAccount.providerUserInfo) : [];\n          isAnonymous = !(coreAccount.email && coreAccount.passwordHash) && !(providerData === null || providerData === undefined ? undefined : providerData.length);\n          stsTokenManager = new StsTokenManager();\n          stsTokenManager.updateFromIdToken(idToken);\n          user = new UserImpl({\n            uid: coreAccount.localId,\n            auth: auth,\n            stsTokenManager: stsTokenManager,\n            isAnonymous: isAnonymous\n          });\n          updates = {\n            uid: coreAccount.localId,\n            displayName: coreAccount.displayName || null,\n            photoURL: coreAccount.photoUrl || null,\n            email: coreAccount.email || null,\n            emailVerified: coreAccount.emailVerified || false,\n            phoneNumber: coreAccount.phoneNumber || null,\n            tenantId: coreAccount.tenantId || null,\n            providerData: providerData,\n            metadata: new UserMetadata(coreAccount.createdAt, coreAccount.lastLoginAt),\n            isAnonymous: !(coreAccount.email && coreAccount.passwordHash) && !(providerData === null || providerData === undefined ? undefined : providerData.length)\n          };\n          Object.assign(user, updates);\n          return [2 /*return*/, user];\n        });\n      });\n    };\n    return UserImpl;\n  }();\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var instanceCache = new Map();\n  function _getInstance(cls) {\n    debugAssert(cls instanceof Function, 'Expected a class definition');\n    var instance = instanceCache.get(cls);\n    if (instance) {\n      debugAssert(instance instanceof cls, 'Instance stored in cache mismatched with class');\n      return instance;\n    }\n    instance = new cls();\n    instanceCache.set(cls, instance);\n    return instance;\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2019 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var InMemoryPersistence = /** @class */function () {\n    function InMemoryPersistence() {\n      this.type = \"NONE\" /* PersistenceType.NONE */;\n      this.storage = {};\n    }\n    InMemoryPersistence.prototype._isAvailable = function () {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        return tslib.__generator(this, function (_a) {\n          return [2 /*return*/, true];\n        });\n      });\n    };\n    InMemoryPersistence.prototype._set = function (key, value) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        return tslib.__generator(this, function (_a) {\n          this.storage[key] = value;\n          return [2 /*return*/];\n        });\n      });\n    };\n    InMemoryPersistence.prototype._get = function (key) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var value;\n        return tslib.__generator(this, function (_a) {\n          value = this.storage[key];\n          return [2 /*return*/, value === undefined ? null : value];\n        });\n      });\n    };\n    InMemoryPersistence.prototype._remove = function (key) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        return tslib.__generator(this, function (_a) {\n          delete this.storage[key];\n          return [2 /*return*/];\n        });\n      });\n    };\n    InMemoryPersistence.prototype._addListener = function (_key, _listener) {\n      // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\n      return;\n    };\n    InMemoryPersistence.prototype._removeListener = function (_key, _listener) {\n      // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\n      return;\n    };\n    InMemoryPersistence.type = 'NONE';\n    return InMemoryPersistence;\n  }();\n  /**\r\n   * An implementation of {@link Persistence} of type 'NONE'.\r\n   *\r\n   * @public\r\n   */\n  var inMemoryPersistence = InMemoryPersistence;\n\n  /**\r\n   * @license\r\n   * Copyright 2019 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function _persistenceKeyName(key, apiKey, appName) {\n    return \"\".concat(\"firebase\" /* Namespace.PERSISTENCE */, \":\").concat(key, \":\").concat(apiKey, \":\").concat(appName);\n  }\n  var PersistenceUserManager = /** @class */function () {\n    function PersistenceUserManager(persistence, auth, userKey) {\n      this.persistence = persistence;\n      this.auth = auth;\n      this.userKey = userKey;\n      var _a = this.auth,\n        config = _a.config,\n        name = _a.name;\n      this.fullUserKey = _persistenceKeyName(this.userKey, config.apiKey, name);\n      this.fullPersistenceKey = _persistenceKeyName(\"persistence\" /* KeyName.PERSISTENCE_USER */, config.apiKey, name);\n      this.boundEventHandler = auth._onStorageEvent.bind(auth);\n      this.persistence._addListener(this.fullUserKey, this.boundEventHandler);\n    }\n    PersistenceUserManager.prototype.setCurrentUser = function (user) {\n      return this.persistence._set(this.fullUserKey, user.toJSON());\n    };\n    PersistenceUserManager.prototype.getCurrentUser = function () {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var blob;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4 /*yield*/, this.persistence._get(this.fullUserKey)];\n            case 1:\n              blob = _a.sent();\n              return [2 /*return*/, blob ? UserImpl._fromJSON(this.auth, blob) : null];\n          }\n        });\n      });\n    };\n    PersistenceUserManager.prototype.removeCurrentUser = function () {\n      return this.persistence._remove(this.fullUserKey);\n    };\n    PersistenceUserManager.prototype.savePersistenceForRedirect = function () {\n      return this.persistence._set(this.fullPersistenceKey, this.persistence.type);\n    };\n    PersistenceUserManager.prototype.setPersistence = function (newPersistence) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var currentUser;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (this.persistence === newPersistence) {\n                return [2 /*return*/];\n              }\n              return [4 /*yield*/, this.getCurrentUser()];\n            case 1:\n              currentUser = _a.sent();\n              return [4 /*yield*/, this.removeCurrentUser()];\n            case 2:\n              _a.sent();\n              this.persistence = newPersistence;\n              if (currentUser) {\n                return [2 /*return*/, this.setCurrentUser(currentUser)];\n              }\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n    PersistenceUserManager.prototype.delete = function () {\n      this.persistence._removeListener(this.fullUserKey, this.boundEventHandler);\n    };\n    PersistenceUserManager.create = function (auth, persistenceHierarchy, userKey) {\n      if (userKey === undefined) {\n        userKey = \"authUser\" /* KeyName.AUTH_USER */;\n      }\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var availablePersistences, selectedPersistence, key, userToMigrate, _i, persistenceHierarchy_1, persistence, blob, user, migrationHierarchy;\n        var _this = this;\n        return tslib.__generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              if (!persistenceHierarchy.length) {\n                return [2 /*return*/, new PersistenceUserManager(_getInstance(inMemoryPersistence), auth, userKey)];\n              }\n              return [4 /*yield*/, Promise.all(persistenceHierarchy.map(function (persistence) {\n                return tslib.__awaiter(_this, undefined, undefined, function () {\n                  return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        return [4 /*yield*/, persistence._isAvailable()];\n                      case 1:\n                        if (_a.sent()) {\n                          return [2 /*return*/, persistence];\n                        }\n                        return [2 /*return*/, undefined];\n                    }\n                  });\n                });\n              }))];\n            case 1:\n              availablePersistences = _b.sent().filter(function (persistence) {\n                return persistence;\n              });\n              selectedPersistence = availablePersistences[0] || _getInstance(inMemoryPersistence);\n              key = _persistenceKeyName(userKey, auth.config.apiKey, auth.name);\n              userToMigrate = null;\n              _i = 0, persistenceHierarchy_1 = persistenceHierarchy;\n              _b.label = 2;\n            case 2:\n              if (!(_i < persistenceHierarchy_1.length)) return [3 /*break*/, 7];\n              persistence = persistenceHierarchy_1[_i];\n              _b.label = 3;\n            case 3:\n              _b.trys.push([3, 5,, 6]);\n              return [4 /*yield*/, persistence._get(key)];\n            case 4:\n              blob = _b.sent();\n              if (blob) {\n                user = UserImpl._fromJSON(auth, blob);\n                if (persistence !== selectedPersistence) {\n                  userToMigrate = user;\n                }\n                selectedPersistence = persistence;\n                return [3 /*break*/, 7];\n              }\n              return [3 /*break*/, 6];\n            case 5:\n              _b.sent();\n              return [3 /*break*/, 6];\n            case 6:\n              _i++;\n              return [3 /*break*/, 2];\n            case 7:\n              migrationHierarchy = availablePersistences.filter(function (p) {\n                return p._shouldAllowMigration;\n              });\n              // If the persistence does _not_ allow migration, just finish off here\n              if (!selectedPersistence._shouldAllowMigration || !migrationHierarchy.length) {\n                return [2 /*return*/, new PersistenceUserManager(selectedPersistence, auth, userKey)];\n              }\n              selectedPersistence = migrationHierarchy[0];\n              if (!userToMigrate) return [3 /*break*/, 9];\n              // This normally shouldn't throw since chosenPersistence.isAvailable() is true, but if it does\n              // we'll just let it bubble to surface the error.\n              return [4 /*yield*/, selectedPersistence._set(key, userToMigrate.toJSON())];\n            case 8:\n              // This normally shouldn't throw since chosenPersistence.isAvailable() is true, but if it does\n              // we'll just let it bubble to surface the error.\n              _b.sent();\n              _b.label = 9;\n            case 9:\n              // Attempt to clear the key in other persistences but ignore errors. This helps prevent issues\n              // such as users getting stuck with a previous account after signing out and refreshing the tab.\n              return [4 /*yield*/, Promise.all(persistenceHierarchy.map(function (persistence) {\n                return tslib.__awaiter(_this, undefined, undefined, function () {\n                  return tslib.__generator(this, function (_b) {\n                    switch (_b.label) {\n                      case 0:\n                        if (!(persistence !== selectedPersistence)) return [3 /*break*/, 4];\n                        _b.label = 1;\n                      case 1:\n                        _b.trys.push([1, 3,, 4]);\n                        return [4 /*yield*/, persistence._remove(key)];\n                      case 2:\n                        _b.sent();\n                        return [3 /*break*/, 4];\n                      case 3:\n                        _b.sent();\n                        return [3 /*break*/, 4];\n                      case 4:\n                        return [2 /*return*/];\n                    }\n                  });\n                });\n              }))];\n            case 10:\n              // Attempt to clear the key in other persistences but ignore errors. This helps prevent issues\n              // such as users getting stuck with a previous account after signing out and refreshing the tab.\n              _b.sent();\n              return [2 /*return*/, new PersistenceUserManager(selectedPersistence, auth, userKey)];\n          }\n        });\n      });\n    };\n    return PersistenceUserManager;\n  }();\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Determine the browser for the purposes of reporting usage to the API\r\n   */\n  function _getBrowserName(userAgent) {\n    var ua = userAgent.toLowerCase();\n    if (ua.includes('opera/') || ua.includes('opr/') || ua.includes('opios/')) {\n      return \"Opera\" /* BrowserName.OPERA */;\n    } else if (_isIEMobile(ua)) {\n      // Windows phone IEMobile browser.\n      return \"IEMobile\" /* BrowserName.IEMOBILE */;\n    } else if (ua.includes('msie') || ua.includes('trident/')) {\n      return \"IE\" /* BrowserName.IE */;\n    } else if (ua.includes('edge/')) {\n      return \"Edge\" /* BrowserName.EDGE */;\n    } else if (_isFirefox(ua)) {\n      return \"Firefox\" /* BrowserName.FIREFOX */;\n    } else if (ua.includes('silk/')) {\n      return \"Silk\" /* BrowserName.SILK */;\n    } else if (_isBlackBerry(ua)) {\n      // Blackberry browser.\n      return \"Blackberry\" /* BrowserName.BLACKBERRY */;\n    } else if (_isWebOS(ua)) {\n      // WebOS default browser.\n      return \"Webos\" /* BrowserName.WEBOS */;\n    } else if (_isSafari(ua)) {\n      return \"Safari\" /* BrowserName.SAFARI */;\n    } else if ((ua.includes('chrome/') || _isChromeIOS(ua)) && !ua.includes('edge/')) {\n      return \"Chrome\" /* BrowserName.CHROME */;\n    } else if (_isAndroid(ua)) {\n      // Android stock browser.\n      return \"Android\" /* BrowserName.ANDROID */;\n    } else {\n      // Most modern browsers have name/version at end of user agent string.\n      var re = /([a-zA-Z\\d\\.]+)\\/[a-zA-Z\\d\\.]*$/;\n      var matches = userAgent.match(re);\n      if ((matches === null || matches === undefined ? undefined : matches.length) === 2) {\n        return matches[1];\n      }\n    }\n    return \"Other\" /* BrowserName.OTHER */;\n  }\n  function _isFirefox(ua) {\n    if (ua === undefined) {\n      ua = util.getUA();\n    }\n    return /firefox\\//i.test(ua);\n  }\n  function _isSafari(userAgent) {\n    if (userAgent === undefined) {\n      userAgent = util.getUA();\n    }\n    var ua = userAgent.toLowerCase();\n    return ua.includes('safari/') && !ua.includes('chrome/') && !ua.includes('crios/') && !ua.includes('android');\n  }\n  function _isChromeIOS(ua) {\n    if (ua === undefined) {\n      ua = util.getUA();\n    }\n    return /crios\\//i.test(ua);\n  }\n  function _isIEMobile(ua) {\n    if (ua === undefined) {\n      ua = util.getUA();\n    }\n    return /iemobile/i.test(ua);\n  }\n  function _isAndroid(ua) {\n    if (ua === undefined) {\n      ua = util.getUA();\n    }\n    return /android/i.test(ua);\n  }\n  function _isBlackBerry(ua) {\n    if (ua === undefined) {\n      ua = util.getUA();\n    }\n    return /blackberry/i.test(ua);\n  }\n  function _isWebOS(ua) {\n    if (ua === undefined) {\n      ua = util.getUA();\n    }\n    return /webos/i.test(ua);\n  }\n  function _isIOS(ua) {\n    if (ua === undefined) {\n      ua = util.getUA();\n    }\n    return /iphone|ipad|ipod/i.test(ua) || /macintosh/i.test(ua) && /mobile/i.test(ua);\n  }\n  function _isIOS7Or8(ua) {\n    if (ua === undefined) {\n      ua = util.getUA();\n    }\n    return /(iPad|iPhone|iPod).*OS 7_\\d/i.test(ua) || /(iPad|iPhone|iPod).*OS 8_\\d/i.test(ua);\n  }\n  function _isIOSStandalone(ua) {\n    var _a;\n    if (ua === undefined) {\n      ua = util.getUA();\n    }\n    return _isIOS(ua) && !!((_a = window.navigator) === null || _a === undefined ? undefined : _a.standalone);\n  }\n  function _isIE10() {\n    return util.isIE() && document.documentMode === 10;\n  }\n  function _isMobileBrowser(ua) {\n    if (ua === undefined) {\n      ua = util.getUA();\n    }\n    // TODO: implement getBrowserName equivalent for OS.\n    return _isIOS(ua) || _isAndroid(ua) || _isWebOS(ua) || _isBlackBerry(ua) || /windows phone/i.test(ua) || _isIEMobile(ua);\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /*\r\n   * Determine the SDK version string\r\n   */\n  function _getClientVersion(clientPlatform, frameworks) {\n    if (frameworks === undefined) {\n      frameworks = [];\n    }\n    var reportedPlatform;\n    switch (clientPlatform) {\n      case \"Browser\" /* ClientPlatform.BROWSER */:\n        // In a browser environment, report the browser name.\n        reportedPlatform = _getBrowserName(util.getUA());\n        break;\n      case \"Worker\" /* ClientPlatform.WORKER */:\n        // Technically a worker runs from a browser but we need to differentiate a\n        // worker from a browser.\n        // For example: Chrome-Worker/JsCore/4.9.1/FirebaseCore-web.\n        reportedPlatform = \"\".concat(_getBrowserName(util.getUA()), \"-\").concat(clientPlatform);\n        break;\n      default:\n        reportedPlatform = clientPlatform;\n    }\n    var reportedFrameworks = frameworks.length ? frameworks.join(',') : 'FirebaseCore-web'; /* default value if no other framework is used */\n    return \"\".concat(reportedPlatform, \"/\").concat(\"JsCore\" /* ClientImplementation.CORE */, \"/\").concat(app.SDK_VERSION, \"/\").concat(reportedFrameworks);\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2022 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var AuthMiddlewareQueue = /** @class */function () {\n    function AuthMiddlewareQueue(auth) {\n      this.auth = auth;\n      this.queue = [];\n    }\n    AuthMiddlewareQueue.prototype.pushCallback = function (callback, onAbort) {\n      var _this = this;\n      // The callback could be sync or async. Wrap it into a\n      // function that is always async.\n      var wrappedCallback = function (user) {\n        return new Promise(function (resolve, reject) {\n          try {\n            var result = callback(user);\n            // Either resolve with existing promise or wrap a non-promise\n            // return value into a promise.\n            resolve(result);\n          } catch (e) {\n            // Sync callback throws.\n            reject(e);\n          }\n        });\n      };\n      // Attach the onAbort if present\n      wrappedCallback.onAbort = onAbort;\n      this.queue.push(wrappedCallback);\n      var index = this.queue.length - 1;\n      return function () {\n        // Unsubscribe. Replace with no-op. Do not remove from array, or it will disturb\n        // indexing of other elements.\n        _this.queue[index] = function () {\n          return Promise.resolve();\n        };\n      };\n    };\n    AuthMiddlewareQueue.prototype.runMiddleware = function (nextUser) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var onAbortStack, _i, _a, beforeStateCallback, e_1, _b, onAbortStack_1, onAbort;\n        return tslib.__generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              if (this.auth.currentUser === nextUser) {\n                return [2 /*return*/];\n              }\n              onAbortStack = [];\n              _c.label = 1;\n            case 1:\n              _c.trys.push([1, 6,, 7]);\n              _i = 0, _a = this.queue;\n              _c.label = 2;\n            case 2:\n              if (!(_i < _a.length)) return [3 /*break*/, 5];\n              beforeStateCallback = _a[_i];\n              return [4 /*yield*/, beforeStateCallback(nextUser)];\n            case 3:\n              _c.sent();\n              // Only push the onAbort if the callback succeeds\n              if (beforeStateCallback.onAbort) {\n                onAbortStack.push(beforeStateCallback.onAbort);\n              }\n              _c.label = 4;\n            case 4:\n              _i++;\n              return [3 /*break*/, 2];\n            case 5:\n              return [3 /*break*/, 7];\n            case 6:\n              e_1 = _c.sent();\n              // Run all onAbort, with separate try/catch to ignore any errors and\n              // continue\n              onAbortStack.reverse();\n              for (_b = 0, onAbortStack_1 = onAbortStack; _b < onAbortStack_1.length; _b++) {\n                onAbort = onAbortStack_1[_b];\n                try {\n                  onAbort();\n                } catch (_) {\n                  /* swallow error */\n                }\n              }\n              throw this.auth._errorFactory.create(\"login-blocked\" /* AuthErrorCode.LOGIN_BLOCKED */, {\n                originalMessage: e_1 === null || e_1 === undefined ? undefined : e_1.message\n              });\n            case 7:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n    return AuthMiddlewareQueue;\n  }();\n\n  /**\r\n   * @license\r\n   * Copyright 2023 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Fetches the password policy for the currently set tenant or the project if no tenant is set.\r\n   *\r\n   * @param auth Auth object.\r\n   * @param request Password policy request.\r\n   * @returns Password policy response.\r\n   */\n  function _getPasswordPolicy(auth, request) {\n    if (request === undefined) {\n      request = {};\n    }\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, _performApiRequest(auth, \"GET\" /* HttpMethod.GET */, \"/v2/passwordPolicy\" /* Endpoint.GET_PASSWORD_POLICY */, _addTidIfNecessary(auth, request))];\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2023 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  // Minimum min password length enforced by the backend, even if no minimum length is set.\n  var MINIMUM_MIN_PASSWORD_LENGTH = 6;\n  /**\r\n   * Stores password policy requirements and provides password validation against the policy.\r\n   *\r\n   * @internal\r\n   */\n  var PasswordPolicyImpl = /** @class */function () {\n    function PasswordPolicyImpl(response) {\n      var _a, _b, _c, _d;\n      // Only include custom strength options defined in the response.\n      var responseOptions = response.customStrengthOptions;\n      this.customStrengthOptions = {};\n      // TODO: Remove once the backend is updated to include the minimum min password length instead of undefined when there is no minimum length set.\n      this.customStrengthOptions.minPasswordLength = (_a = responseOptions.minPasswordLength) !== null && _a !== undefined ? _a : MINIMUM_MIN_PASSWORD_LENGTH;\n      if (responseOptions.maxPasswordLength) {\n        this.customStrengthOptions.maxPasswordLength = responseOptions.maxPasswordLength;\n      }\n      if (responseOptions.containsLowercaseCharacter !== undefined) {\n        this.customStrengthOptions.containsLowercaseLetter = responseOptions.containsLowercaseCharacter;\n      }\n      if (responseOptions.containsUppercaseCharacter !== undefined) {\n        this.customStrengthOptions.containsUppercaseLetter = responseOptions.containsUppercaseCharacter;\n      }\n      if (responseOptions.containsNumericCharacter !== undefined) {\n        this.customStrengthOptions.containsNumericCharacter = responseOptions.containsNumericCharacter;\n      }\n      if (responseOptions.containsNonAlphanumericCharacter !== undefined) {\n        this.customStrengthOptions.containsNonAlphanumericCharacter = responseOptions.containsNonAlphanumericCharacter;\n      }\n      this.enforcementState = response.enforcementState;\n      if (this.enforcementState === 'ENFORCEMENT_STATE_UNSPECIFIED') {\n        this.enforcementState = 'OFF';\n      }\n      // Use an empty string if no non-alphanumeric characters are specified in the response.\n      this.allowedNonAlphanumericCharacters = (_c = (_b = response.allowedNonAlphanumericCharacters) === null || _b === undefined ? undefined : _b.join('')) !== null && _c !== undefined ? _c : '';\n      this.forceUpgradeOnSignin = (_d = response.forceUpgradeOnSignin) !== null && _d !== undefined ? _d : false;\n      this.schemaVersion = response.schemaVersion;\n    }\n    PasswordPolicyImpl.prototype.validatePassword = function (password) {\n      var _a, _b, _c, _d, _e, _f;\n      var status = {\n        isValid: true,\n        passwordPolicy: this\n      };\n      // Check the password length and character options.\n      this.validatePasswordLengthOptions(password, status);\n      this.validatePasswordCharacterOptions(password, status);\n      // Combine the status into single isValid property.\n      status.isValid && (status.isValid = (_a = status.meetsMinPasswordLength) !== null && _a !== undefined ? _a : true);\n      status.isValid && (status.isValid = (_b = status.meetsMaxPasswordLength) !== null && _b !== undefined ? _b : true);\n      status.isValid && (status.isValid = (_c = status.containsLowercaseLetter) !== null && _c !== undefined ? _c : true);\n      status.isValid && (status.isValid = (_d = status.containsUppercaseLetter) !== null && _d !== undefined ? _d : true);\n      status.isValid && (status.isValid = (_e = status.containsNumericCharacter) !== null && _e !== undefined ? _e : true);\n      status.isValid && (status.isValid = (_f = status.containsNonAlphanumericCharacter) !== null && _f !== undefined ? _f : true);\n      return status;\n    };\n    /**\r\n     * Validates that the password meets the length options for the policy.\r\n     *\r\n     * @param password Password to validate.\r\n     * @param status Validation status.\r\n     */\n    PasswordPolicyImpl.prototype.validatePasswordLengthOptions = function (password, status) {\n      var minPasswordLength = this.customStrengthOptions.minPasswordLength;\n      var maxPasswordLength = this.customStrengthOptions.maxPasswordLength;\n      if (minPasswordLength) {\n        status.meetsMinPasswordLength = password.length >= minPasswordLength;\n      }\n      if (maxPasswordLength) {\n        status.meetsMaxPasswordLength = password.length <= maxPasswordLength;\n      }\n    };\n    /**\r\n     * Validates that the password meets the character options for the policy.\r\n     *\r\n     * @param password Password to validate.\r\n     * @param status Validation status.\r\n     */\n    PasswordPolicyImpl.prototype.validatePasswordCharacterOptions = function (password, status) {\n      // Assign statuses for requirements even if the password is an empty string.\n      this.updatePasswordCharacterOptionsStatuses(status, /* containsLowercaseCharacter= */false, /* containsUppercaseCharacter= */false, /* containsNumericCharacter= */false, /* containsNonAlphanumericCharacter= */false);\n      var passwordChar;\n      for (var i = 0; i < password.length; i++) {\n        passwordChar = password.charAt(i);\n        this.updatePasswordCharacterOptionsStatuses(status, /* containsLowercaseCharacter= */passwordChar >= 'a' && passwordChar <= 'z', /* containsUppercaseCharacter= */passwordChar >= 'A' && passwordChar <= 'Z', /* containsNumericCharacter= */passwordChar >= '0' && passwordChar <= '9', /* containsNonAlphanumericCharacter= */this.allowedNonAlphanumericCharacters.includes(passwordChar));\n      }\n    };\n    /**\r\n     * Updates the running validation status with the statuses for the character options.\r\n     * Expected to be called each time a character is processed to update each option status\r\n     * based on the current character.\r\n     *\r\n     * @param status Validation status.\r\n     * @param containsLowercaseCharacter Whether the character is a lowercase letter.\r\n     * @param containsUppercaseCharacter Whether the character is an uppercase letter.\r\n     * @param containsNumericCharacter Whether the character is a numeric character.\r\n     * @param containsNonAlphanumericCharacter Whether the character is a non-alphanumeric character.\r\n     */\n    PasswordPolicyImpl.prototype.updatePasswordCharacterOptionsStatuses = function (status, containsLowercaseCharacter, containsUppercaseCharacter, containsNumericCharacter, containsNonAlphanumericCharacter) {\n      if (this.customStrengthOptions.containsLowercaseLetter) {\n        status.containsLowercaseLetter || (status.containsLowercaseLetter = containsLowercaseCharacter);\n      }\n      if (this.customStrengthOptions.containsUppercaseLetter) {\n        status.containsUppercaseLetter || (status.containsUppercaseLetter = containsUppercaseCharacter);\n      }\n      if (this.customStrengthOptions.containsNumericCharacter) {\n        status.containsNumericCharacter || (status.containsNumericCharacter = containsNumericCharacter);\n      }\n      if (this.customStrengthOptions.containsNonAlphanumericCharacter) {\n        status.containsNonAlphanumericCharacter || (status.containsNonAlphanumericCharacter = containsNonAlphanumericCharacter);\n      }\n    };\n    return PasswordPolicyImpl;\n  }();\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var AuthImpl = /** @class */function () {\n    function AuthImpl(app, heartbeatServiceProvider, appCheckServiceProvider, config) {\n      this.app = app;\n      this.heartbeatServiceProvider = heartbeatServiceProvider;\n      this.appCheckServiceProvider = appCheckServiceProvider;\n      this.config = config;\n      this.currentUser = null;\n      this.emulatorConfig = null;\n      this.operations = Promise.resolve();\n      this.authStateSubscription = new Subscription(this);\n      this.idTokenSubscription = new Subscription(this);\n      this.beforeStateQueue = new AuthMiddlewareQueue(this);\n      this.redirectUser = null;\n      this.isProactiveRefreshEnabled = false;\n      this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION = 1;\n      // Any network calls will set this to true and prevent subsequent emulator\n      // initialization\n      this._canInitEmulator = true;\n      this._isInitialized = false;\n      this._deleted = false;\n      this._initializationPromise = null;\n      this._popupRedirectResolver = null;\n      this._errorFactory = _DEFAULT_AUTH_ERROR_FACTORY;\n      this._agentRecaptchaConfig = null;\n      this._tenantRecaptchaConfigs = {};\n      this._projectPasswordPolicy = null;\n      this._tenantPasswordPolicies = {};\n      // Tracks the last notified UID for state change listeners to prevent\n      // repeated calls to the callbacks. Undefined means it's never been\n      // called, whereas null means it's been called with a signed out user\n      this.lastNotifiedUid = undefined;\n      this.languageCode = null;\n      this.tenantId = null;\n      this.settings = {\n        appVerificationDisabledForTesting: false\n      };\n      this.frameworks = [];\n      this.name = app.name;\n      this.clientVersion = config.sdkClientVersion;\n    }\n    AuthImpl.prototype._initializeWithPersistence = function (persistenceHierarchy, popupRedirectResolver) {\n      var _this = this;\n      if (popupRedirectResolver) {\n        this._popupRedirectResolver = _getInstance(popupRedirectResolver);\n      }\n      // Have to check for app deletion throughout initialization (after each\n      // promise resolution)\n      this._initializationPromise = this.queue(function () {\n        return tslib.__awaiter(_this, undefined, undefined, function () {\n          var _a;\n          var _b, _c;\n          return tslib.__generator(this, function (_d) {\n            switch (_d.label) {\n              case 0:\n                if (this._deleted) {\n                  return [2 /*return*/];\n                }\n                _a = this;\n                return [4 /*yield*/, PersistenceUserManager.create(this, persistenceHierarchy)];\n              case 1:\n                _a.persistenceManager = _d.sent();\n                if (this._deleted) {\n                  return [2 /*return*/];\n                }\n                if (!((_b = this._popupRedirectResolver) === null || _b === undefined ? undefined : _b._shouldInitProactively)) return [3 /*break*/, 5];\n                _d.label = 2;\n              case 2:\n                _d.trys.push([2, 4,, 5]);\n                return [4 /*yield*/, this._popupRedirectResolver._initialize(this)];\n              case 3:\n                _d.sent();\n                return [3 /*break*/, 5];\n              case 4:\n                _d.sent();\n                return [3 /*break*/, 5];\n              case 5:\n                return [4 /*yield*/, this.initializeCurrentUser(popupRedirectResolver)];\n              case 6:\n                _d.sent();\n                this.lastNotifiedUid = ((_c = this.currentUser) === null || _c === undefined ? undefined : _c.uid) || null;\n                if (this._deleted) {\n                  return [2 /*return*/];\n                }\n                this._isInitialized = true;\n                return [2 /*return*/];\n            }\n          });\n        });\n      });\n      return this._initializationPromise;\n    };\n    /**\r\n     * If the persistence is changed in another window, the user manager will let us know\r\n     */\n    AuthImpl.prototype._onStorageEvent = function () {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var user;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (this._deleted) {\n                return [2 /*return*/];\n              }\n              return [4 /*yield*/, this.assertedPersistence.getCurrentUser()];\n            case 1:\n              user = _a.sent();\n              if (!this.currentUser && !user) {\n                // No change, do nothing (was signed out and remained signed out).\n                return [2 /*return*/];\n              }\n              if (!(this.currentUser && user && this.currentUser.uid === user.uid)) return [3 /*break*/, 3];\n              // Data update, simply copy data changes.\n              this._currentUser._assign(user);\n              // If tokens changed from previous user tokens, this will trigger\n              // notifyAuthListeners_.\n              return [4 /*yield*/, this.currentUser.getIdToken()];\n            case 2:\n              // If tokens changed from previous user tokens, this will trigger\n              // notifyAuthListeners_.\n              _a.sent();\n              return [2 /*return*/];\n            case 3:\n              // Update current Auth state. Either a new login or logout.\n              // Skip blocking callbacks, they should not apply to a change in another tab.\n              return [4 /*yield*/, this._updateCurrentUser(user, /* skipBeforeStateCallbacks */true)];\n            case 4:\n              // Update current Auth state. Either a new login or logout.\n              // Skip blocking callbacks, they should not apply to a change in another tab.\n              _a.sent();\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n    AuthImpl.prototype.initializeCurrentUserFromIdToken = function (idToken) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var response, user, err_1;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _a.trys.push([0, 4,, 6]);\n              return [4 /*yield*/, getAccountInfo(this, {\n                idToken: idToken\n              })];\n            case 1:\n              response = _a.sent();\n              return [4 /*yield*/, UserImpl._fromGetAccountInfoResponse(this, response, idToken)];\n            case 2:\n              user = _a.sent();\n              return [4 /*yield*/, this.directlySetCurrentUser(user)];\n            case 3:\n              _a.sent();\n              return [3 /*break*/, 6];\n            case 4:\n              err_1 = _a.sent();\n              console.warn('FirebaseServerApp could not login user with provided authIdToken: ', err_1);\n              return [4 /*yield*/, this.directlySetCurrentUser(null)];\n            case 5:\n              _a.sent();\n              return [3 /*break*/, 6];\n            case 6:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n    AuthImpl.prototype.initializeCurrentUser = function (popupRedirectResolver) {\n      var _a;\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var idToken_1, previouslyStoredUser, futureCurrentUser, needsTocheckMiddleware, redirectUserEventId, storedUserEventId, result, e_2;\n        var _this = this;\n        return tslib.__generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              if (app._isFirebaseServerApp(this.app)) {\n                idToken_1 = this.app.settings.authIdToken;\n                if (idToken_1) {\n                  // Start the auth operation in the next tick to allow a moment for the customer's app to\n                  // attach an emulator, if desired.\n                  return [2 /*return*/, new Promise(function (resolve) {\n                    setTimeout(function () {\n                      return _this.initializeCurrentUserFromIdToken(idToken_1).then(resolve, resolve);\n                    });\n                  })];\n                } else {\n                  return [2 /*return*/, this.directlySetCurrentUser(null)];\n                }\n              }\n              return [4 /*yield*/, this.assertedPersistence.getCurrentUser()];\n            case 1:\n              previouslyStoredUser = _b.sent();\n              futureCurrentUser = previouslyStoredUser;\n              needsTocheckMiddleware = false;\n              if (!(popupRedirectResolver && this.config.authDomain)) return [3 /*break*/, 4];\n              return [4 /*yield*/, this.getOrInitRedirectPersistenceManager()];\n            case 2:\n              _b.sent();\n              redirectUserEventId = (_a = this.redirectUser) === null || _a === undefined ? undefined : _a._redirectEventId;\n              storedUserEventId = futureCurrentUser === null || futureCurrentUser === undefined ? undefined : futureCurrentUser._redirectEventId;\n              return [4 /*yield*/, this.tryRedirectSignIn(popupRedirectResolver)];\n            case 3:\n              result = _b.sent();\n              // If the stored user (i.e. the old \"currentUser\") has a redirectId that\n              // matches the redirect user, then we want to initially sign in with the\n              // new user object from result.\n              // TODO(samgho): More thoroughly test all of this\n              if ((!redirectUserEventId || redirectUserEventId === storedUserEventId) && (result === null || result === undefined ? undefined : result.user)) {\n                futureCurrentUser = result.user;\n                needsTocheckMiddleware = true;\n              }\n              _b.label = 4;\n            case 4:\n              // If no user in persistence, there is no current user. Set to null.\n              if (!futureCurrentUser) {\n                return [2 /*return*/, this.directlySetCurrentUser(null)];\n              }\n              if (!!futureCurrentUser._redirectEventId) return [3 /*break*/, 9];\n              if (!needsTocheckMiddleware) return [3 /*break*/, 8];\n              _b.label = 5;\n            case 5:\n              _b.trys.push([5, 7,, 8]);\n              return [4 /*yield*/, this.beforeStateQueue.runMiddleware(futureCurrentUser)];\n            case 6:\n              _b.sent();\n              return [3 /*break*/, 8];\n            case 7:\n              e_2 = _b.sent();\n              futureCurrentUser = previouslyStoredUser;\n              // We know this is available since the bit is only set when the\n              // resolver is available\n              this._popupRedirectResolver._overrideRedirectResult(this, function () {\n                return Promise.reject(e_2);\n              });\n              return [3 /*break*/, 8];\n            case 8:\n              if (futureCurrentUser) {\n                return [2 /*return*/, this.reloadAndSetCurrentUserOrClear(futureCurrentUser)];\n              } else {\n                return [2 /*return*/, this.directlySetCurrentUser(null)];\n              }\n            case 9:\n              _assert(this._popupRedirectResolver, this, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n              return [4 /*yield*/, this.getOrInitRedirectPersistenceManager()];\n            case 10:\n              _b.sent();\n              // If the redirect user's event ID matches the current user's event ID,\n              // DO NOT reload the current user, otherwise they'll be cleared from storage.\n              // This is important for the reauthenticateWithRedirect() flow.\n              if (this.redirectUser && this.redirectUser._redirectEventId === futureCurrentUser._redirectEventId) {\n                return [2 /*return*/, this.directlySetCurrentUser(futureCurrentUser)];\n              }\n              return [2 /*return*/, this.reloadAndSetCurrentUserOrClear(futureCurrentUser)];\n          }\n        });\n      });\n    };\n    AuthImpl.prototype.tryRedirectSignIn = function (redirectResolver) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var result;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              result = null;\n              _a.label = 1;\n            case 1:\n              _a.trys.push([1, 3,, 5]);\n              return [4 /*yield*/, this._popupRedirectResolver._completeRedirectFn(this, redirectResolver, true)];\n            case 2:\n              // We know this._popupRedirectResolver is set since redirectResolver\n              // is passed in. The _completeRedirectFn expects the unwrapped extern.\n              result = _a.sent();\n              return [3 /*break*/, 5];\n            case 3:\n              _a.sent();\n              // Swallow any errors here; the code can retrieve them in\n              // getRedirectResult().\n              return [4 /*yield*/, this._setRedirectUser(null)];\n            case 4:\n              // Swallow any errors here; the code can retrieve them in\n              // getRedirectResult().\n              _a.sent();\n              return [3 /*break*/, 5];\n            case 5:\n              return [2 /*return*/, result];\n          }\n        });\n      });\n    };\n    AuthImpl.prototype.reloadAndSetCurrentUserOrClear = function (user) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var e_4;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _a.trys.push([0, 2,, 3]);\n              return [4 /*yield*/, _reloadWithoutSaving(user)];\n            case 1:\n              _a.sent();\n              return [3 /*break*/, 3];\n            case 2:\n              e_4 = _a.sent();\n              if ((e_4 === null || e_4 === undefined ? undefined : e_4.code) !== \"auth/\".concat(\"network-request-failed\" /* AuthErrorCode.NETWORK_REQUEST_FAILED */)) {\n                // Something's wrong with the user's token. Log them out and remove\n                // them from storage\n                return [2 /*return*/, this.directlySetCurrentUser(null)];\n              }\n              return [3 /*break*/, 3];\n            case 3:\n              return [2 /*return*/, this.directlySetCurrentUser(user)];\n          }\n        });\n      });\n    };\n    AuthImpl.prototype.useDeviceLanguage = function () {\n      this.languageCode = _getUserLanguage();\n    };\n    AuthImpl.prototype._delete = function () {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        return tslib.__generator(this, function (_a) {\n          this._deleted = true;\n          return [2 /*return*/];\n        });\n      });\n    };\n    AuthImpl.prototype.updateCurrentUser = function (userExtern) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var user;\n        return tslib.__generator(this, function (_a) {\n          if (app._isFirebaseServerApp(this.app)) {\n            return [2 /*return*/, Promise.reject(_serverAppCurrentUserOperationNotSupportedError(this))];\n          }\n          user = userExtern ? util.getModularInstance(userExtern) : null;\n          if (user) {\n            _assert(user.auth.config.apiKey === this.config.apiKey, this, \"invalid-user-token\" /* AuthErrorCode.INVALID_AUTH */);\n          }\n          return [2 /*return*/, this._updateCurrentUser(user && user._clone(this))];\n        });\n      });\n    };\n    AuthImpl.prototype._updateCurrentUser = function (user, skipBeforeStateCallbacks) {\n      if (skipBeforeStateCallbacks === undefined) {\n        skipBeforeStateCallbacks = false;\n      }\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var _this = this;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (this._deleted) {\n                return [2 /*return*/];\n              }\n              if (user) {\n                _assert(this.tenantId === user.tenantId, this, \"tenant-id-mismatch\" /* AuthErrorCode.TENANT_ID_MISMATCH */);\n              }\n              if (!!skipBeforeStateCallbacks) return [3 /*break*/, 2];\n              return [4 /*yield*/, this.beforeStateQueue.runMiddleware(user)];\n            case 1:\n              _a.sent();\n              _a.label = 2;\n            case 2:\n              return [2 /*return*/, this.queue(function () {\n                return tslib.__awaiter(_this, undefined, undefined, function () {\n                  return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        return [4 /*yield*/, this.directlySetCurrentUser(user)];\n                      case 1:\n                        _a.sent();\n                        this.notifyAuthListeners();\n                        return [2 /*return*/];\n                    }\n                  });\n                });\n              })];\n          }\n        });\n      });\n    };\n    AuthImpl.prototype.signOut = function () {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (app._isFirebaseServerApp(this.app)) {\n                return [2 /*return*/, Promise.reject(_serverAppCurrentUserOperationNotSupportedError(this))];\n              }\n              // Run first, to block _setRedirectUser() if any callbacks fail.\n              return [4 /*yield*/, this.beforeStateQueue.runMiddleware(null)];\n            case 1:\n              // Run first, to block _setRedirectUser() if any callbacks fail.\n              _a.sent();\n              if (!(this.redirectPersistenceManager || this._popupRedirectResolver)) return [3 /*break*/, 3];\n              return [4 /*yield*/, this._setRedirectUser(null)];\n            case 2:\n              _a.sent();\n              _a.label = 3;\n            case 3:\n              // Prevent callbacks from being called again in _updateCurrentUser, as\n              // they were already called in the first line.\n              return [2 /*return*/, this._updateCurrentUser(null, /* skipBeforeStateCallbacks */true)];\n          }\n        });\n      });\n    };\n    AuthImpl.prototype.setPersistence = function (persistence) {\n      var _this = this;\n      if (app._isFirebaseServerApp(this.app)) {\n        return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(this));\n      }\n      return this.queue(function () {\n        return tslib.__awaiter(_this, undefined, undefined, function () {\n          return tslib.__generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4 /*yield*/, this.assertedPersistence.setPersistence(_getInstance(persistence))];\n              case 1:\n                _a.sent();\n                return [2 /*return*/];\n            }\n          });\n        });\n      });\n    };\n    AuthImpl.prototype._getRecaptchaConfig = function () {\n      if (this.tenantId == null) {\n        return this._agentRecaptchaConfig;\n      } else {\n        return this._tenantRecaptchaConfigs[this.tenantId];\n      }\n    };\n    AuthImpl.prototype.validatePassword = function (password) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var passwordPolicy;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!!this._getPasswordPolicyInternal()) return [3 /*break*/, 2];\n              return [4 /*yield*/, this._updatePasswordPolicy()];\n            case 1:\n              _a.sent();\n              _a.label = 2;\n            case 2:\n              passwordPolicy = this._getPasswordPolicyInternal();\n              // Check that the policy schema version is supported by the SDK.\n              // TODO: Update this logic to use a max supported policy schema version once we have multiple schema versions.\n              if (passwordPolicy.schemaVersion !== this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION) {\n                return [2 /*return*/, Promise.reject(this._errorFactory.create(\"unsupported-password-policy-schema-version\" /* AuthErrorCode.UNSUPPORTED_PASSWORD_POLICY_SCHEMA_VERSION */, {}))];\n              }\n              return [2 /*return*/, passwordPolicy.validatePassword(password)];\n          }\n        });\n      });\n    };\n    AuthImpl.prototype._getPasswordPolicyInternal = function () {\n      if (this.tenantId === null) {\n        return this._projectPasswordPolicy;\n      } else {\n        return this._tenantPasswordPolicies[this.tenantId];\n      }\n    };\n    AuthImpl.prototype._updatePasswordPolicy = function () {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var response, passwordPolicy;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4 /*yield*/, _getPasswordPolicy(this)];\n            case 1:\n              response = _a.sent();\n              passwordPolicy = new PasswordPolicyImpl(response);\n              if (this.tenantId === null) {\n                this._projectPasswordPolicy = passwordPolicy;\n              } else {\n                this._tenantPasswordPolicies[this.tenantId] = passwordPolicy;\n              }\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n    AuthImpl.prototype._getPersistence = function () {\n      return this.assertedPersistence.persistence.type;\n    };\n    AuthImpl.prototype._updateErrorMap = function (errorMap) {\n      this._errorFactory = new util.ErrorFactory('auth', 'Firebase', errorMap());\n    };\n    AuthImpl.prototype.onAuthStateChanged = function (nextOrObserver, error, completed) {\n      return this.registerStateListener(this.authStateSubscription, nextOrObserver, error, completed);\n    };\n    AuthImpl.prototype.beforeAuthStateChanged = function (callback, onAbort) {\n      return this.beforeStateQueue.pushCallback(callback, onAbort);\n    };\n    AuthImpl.prototype.onIdTokenChanged = function (nextOrObserver, error, completed) {\n      return this.registerStateListener(this.idTokenSubscription, nextOrObserver, error, completed);\n    };\n    AuthImpl.prototype.authStateReady = function () {\n      var _this = this;\n      return new Promise(function (resolve, reject) {\n        if (_this.currentUser) {\n          resolve();\n        } else {\n          var unsubscribe_1 = _this.onAuthStateChanged(function () {\n            unsubscribe_1();\n            resolve();\n          }, reject);\n        }\n      });\n    };\n    /**\r\n     * Revokes the given access token. Currently only supports Apple OAuth access tokens.\r\n     */\n    AuthImpl.prototype.revokeAccessToken = function (token) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var idToken, request;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!this.currentUser) return [3 /*break*/, 3];\n              return [4 /*yield*/, this.currentUser.getIdToken()];\n            case 1:\n              idToken = _a.sent();\n              request = {\n                providerId: 'apple.com',\n                tokenType: \"ACCESS_TOKEN\" /* TokenType.ACCESS_TOKEN */,\n                token: token,\n                idToken: idToken\n              };\n              if (this.tenantId != null) {\n                request.tenantId = this.tenantId;\n              }\n              return [4 /*yield*/, revokeToken(this, request)];\n            case 2:\n              _a.sent();\n              _a.label = 3;\n            case 3:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n    AuthImpl.prototype.toJSON = function () {\n      var _a;\n      return {\n        apiKey: this.config.apiKey,\n        authDomain: this.config.authDomain,\n        appName: this.name,\n        currentUser: (_a = this._currentUser) === null || _a === undefined ? undefined : _a.toJSON()\n      };\n    };\n    AuthImpl.prototype._setRedirectUser = function (user, popupRedirectResolver) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var redirectManager;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4 /*yield*/, this.getOrInitRedirectPersistenceManager(popupRedirectResolver)];\n            case 1:\n              redirectManager = _a.sent();\n              return [2 /*return*/, user === null ? redirectManager.removeCurrentUser() : redirectManager.setCurrentUser(user)];\n          }\n        });\n      });\n    };\n    AuthImpl.prototype.getOrInitRedirectPersistenceManager = function (popupRedirectResolver) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var resolver, _a, _b;\n        return tslib.__generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              if (!!this.redirectPersistenceManager) return [3 /*break*/, 3];\n              resolver = popupRedirectResolver && _getInstance(popupRedirectResolver) || this._popupRedirectResolver;\n              _assert(resolver, this, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n              _a = this;\n              return [4 /*yield*/, PersistenceUserManager.create(this, [_getInstance(resolver._redirectPersistence)], \"redirectUser\" /* KeyName.REDIRECT_USER */)];\n            case 1:\n              _a.redirectPersistenceManager = _c.sent();\n              _b = this;\n              return [4 /*yield*/, this.redirectPersistenceManager.getCurrentUser()];\n            case 2:\n              _b.redirectUser = _c.sent();\n              _c.label = 3;\n            case 3:\n              return [2 /*return*/, this.redirectPersistenceManager];\n          }\n        });\n      });\n    };\n    AuthImpl.prototype._redirectUserForId = function (id) {\n      var _a, _b;\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var _this = this;\n        return tslib.__generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              if (!this._isInitialized) return [3 /*break*/, 2];\n              return [4 /*yield*/, this.queue(function () {\n                return tslib.__awaiter(_this, undefined, undefined, function () {\n                  return tslib.__generator(this, function (_a) {\n                    return [2 /*return*/];\n                  });\n                });\n              })];\n            case 1:\n              _c.sent();\n              _c.label = 2;\n            case 2:\n              if (((_a = this._currentUser) === null || _a === undefined ? undefined : _a._redirectEventId) === id) {\n                return [2 /*return*/, this._currentUser];\n              }\n              if (((_b = this.redirectUser) === null || _b === undefined ? undefined : _b._redirectEventId) === id) {\n                return [2 /*return*/, this.redirectUser];\n              }\n              return [2 /*return*/, null];\n          }\n        });\n      });\n    };\n    AuthImpl.prototype._persistUserIfCurrent = function (user) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var _this = this;\n        return tslib.__generator(this, function (_a) {\n          if (user === this.currentUser) {\n            return [2 /*return*/, this.queue(function () {\n              return tslib.__awaiter(_this, undefined, undefined, function () {\n                return tslib.__generator(this, function (_a) {\n                  return [2 /*return*/, this.directlySetCurrentUser(user)];\n                });\n              });\n            })];\n          }\n          return [2 /*return*/];\n        });\n      });\n    };\n    /** Notifies listeners only if the user is current */\n    AuthImpl.prototype._notifyListenersIfCurrent = function (user) {\n      if (user === this.currentUser) {\n        this.notifyAuthListeners();\n      }\n    };\n    AuthImpl.prototype._key = function () {\n      return \"\".concat(this.config.authDomain, \":\").concat(this.config.apiKey, \":\").concat(this.name);\n    };\n    AuthImpl.prototype._startProactiveRefresh = function () {\n      this.isProactiveRefreshEnabled = true;\n      if (this.currentUser) {\n        this._currentUser._startProactiveRefresh();\n      }\n    };\n    AuthImpl.prototype._stopProactiveRefresh = function () {\n      this.isProactiveRefreshEnabled = false;\n      if (this.currentUser) {\n        this._currentUser._stopProactiveRefresh();\n      }\n    };\n    Object.defineProperty(AuthImpl.prototype, \"_currentUser\", {\n      /** Returns the current user cast as the internal type */\n      get: function () {\n        return this.currentUser;\n      },\n      enumerable: false,\n      configurable: true\n    });\n    AuthImpl.prototype.notifyAuthListeners = function () {\n      var _a, _b;\n      if (!this._isInitialized) {\n        return;\n      }\n      this.idTokenSubscription.next(this.currentUser);\n      var currentUid = (_b = (_a = this.currentUser) === null || _a === undefined ? undefined : _a.uid) !== null && _b !== undefined ? _b : null;\n      if (this.lastNotifiedUid !== currentUid) {\n        this.lastNotifiedUid = currentUid;\n        this.authStateSubscription.next(this.currentUser);\n      }\n    };\n    AuthImpl.prototype.registerStateListener = function (subscription, nextOrObserver, error, completed) {\n      var _this = this;\n      if (this._deleted) {\n        return function () {};\n      }\n      var cb = typeof nextOrObserver === 'function' ? nextOrObserver : nextOrObserver.next.bind(nextOrObserver);\n      var isUnsubscribed = false;\n      var promise = this._isInitialized ? Promise.resolve() : this._initializationPromise;\n      _assert(promise, this, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n      // The callback needs to be called asynchronously per the spec.\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      promise.then(function () {\n        if (isUnsubscribed) {\n          return;\n        }\n        cb(_this.currentUser);\n      });\n      if (typeof nextOrObserver === 'function') {\n        var unsubscribe_2 = subscription.addObserver(nextOrObserver, error, completed);\n        return function () {\n          isUnsubscribed = true;\n          unsubscribe_2();\n        };\n      } else {\n        var unsubscribe_3 = subscription.addObserver(nextOrObserver);\n        return function () {\n          isUnsubscribed = true;\n          unsubscribe_3();\n        };\n      }\n    };\n    /**\r\n     * Unprotected (from race conditions) method to set the current user. This\r\n     * should only be called from within a queued callback. This is necessary\r\n     * because the queue shouldn't rely on another queued callback.\r\n     */\n    AuthImpl.prototype.directlySetCurrentUser = function (user) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (this.currentUser && this.currentUser !== user) {\n                this._currentUser._stopProactiveRefresh();\n              }\n              if (user && this.isProactiveRefreshEnabled) {\n                user._startProactiveRefresh();\n              }\n              this.currentUser = user;\n              if (!user) return [3 /*break*/, 2];\n              return [4 /*yield*/, this.assertedPersistence.setCurrentUser(user)];\n            case 1:\n              _a.sent();\n              return [3 /*break*/, 4];\n            case 2:\n              return [4 /*yield*/, this.assertedPersistence.removeCurrentUser()];\n            case 3:\n              _a.sent();\n              _a.label = 4;\n            case 4:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n    AuthImpl.prototype.queue = function (action) {\n      // In case something errors, the callback still should be called in order\n      // to keep the promise chain alive\n      this.operations = this.operations.then(action, action);\n      return this.operations;\n    };\n    Object.defineProperty(AuthImpl.prototype, \"assertedPersistence\", {\n      get: function () {\n        _assert(this.persistenceManager, this, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n        return this.persistenceManager;\n      },\n      enumerable: false,\n      configurable: true\n    });\n    AuthImpl.prototype._logFramework = function (framework) {\n      if (!framework || this.frameworks.includes(framework)) {\n        return;\n      }\n      this.frameworks.push(framework);\n      // Sort alphabetically so that \"FirebaseCore-web,FirebaseUI-web\" and\n      // \"FirebaseUI-web,FirebaseCore-web\" aren't viewed as different.\n      this.frameworks.sort();\n      this.clientVersion = _getClientVersion(this.config.clientPlatform, this._getFrameworks());\n    };\n    AuthImpl.prototype._getFrameworks = function () {\n      return this.frameworks;\n    };\n    AuthImpl.prototype._getAdditionalHeaders = function () {\n      var _a;\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var headers, heartbeatsHeader, appCheckToken;\n        var _b;\n        return tslib.__generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              headers = (_b = {}, _b[\"X-Client-Version\" /* HttpHeader.X_CLIENT_VERSION */] = this.clientVersion, _b);\n              if (this.app.options.appId) {\n                headers[\"X-Firebase-gmpid\" /* HttpHeader.X_FIREBASE_GMPID */] = this.app.options.appId;\n              }\n              return [4 /*yield*/, (_a = this.heartbeatServiceProvider.getImmediate({\n                optional: true\n              })) === null || _a === undefined ? undefined : _a.getHeartbeatsHeader()];\n            case 1:\n              heartbeatsHeader = _c.sent();\n              if (heartbeatsHeader) {\n                headers[\"X-Firebase-Client\" /* HttpHeader.X_FIREBASE_CLIENT */] = heartbeatsHeader;\n              }\n              return [4 /*yield*/, this._getAppCheckToken()];\n            case 2:\n              appCheckToken = _c.sent();\n              if (appCheckToken) {\n                headers[\"X-Firebase-AppCheck\" /* HttpHeader.X_FIREBASE_APP_CHECK */] = appCheckToken;\n              }\n              return [2 /*return*/, headers];\n          }\n        });\n      });\n    };\n    AuthImpl.prototype._getAppCheckToken = function () {\n      var _a;\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var appCheckTokenResult;\n        return tslib.__generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              return [4 /*yield*/, (_a = this.appCheckServiceProvider.getImmediate({\n                optional: true\n              })) === null || _a === undefined ? undefined : _a.getToken()];\n            case 1:\n              appCheckTokenResult = _b.sent();\n              if (appCheckTokenResult === null || appCheckTokenResult === undefined ? undefined : appCheckTokenResult.error) {\n                // Context: appCheck.getToken() will never throw even if an error happened.\n                // In the error case, a dummy token will be returned along with an error field describing\n                // the error. In general, we shouldn't care about the error condition and just use\n                // the token (actual or dummy) to send requests.\n                _logWarn(\"Error while retrieving App Check token: \".concat(appCheckTokenResult.error));\n              }\n              return [2 /*return*/, appCheckTokenResult === null || appCheckTokenResult === undefined ? undefined : appCheckTokenResult.token];\n          }\n        });\n      });\n    };\n    return AuthImpl;\n  }();\n  /**\r\n   * Method to be used to cast down to our private implementation of Auth.\r\n   * It will also handle unwrapping from the compat type if necessary\r\n   *\r\n   * @param auth Auth object passed in from developer\r\n   */\n  function _castAuth(auth) {\n    return util.getModularInstance(auth);\n  }\n  /** Helper class to wrap subscriber logic */\n  var Subscription = /** @class */function () {\n    function Subscription(auth) {\n      var _this = this;\n      this.auth = auth;\n      this.observer = null;\n      this.addObserver = util.createSubscribe(function (observer) {\n        return _this.observer = observer;\n      });\n    }\n    Object.defineProperty(Subscription.prototype, \"next\", {\n      get: function () {\n        _assert(this.observer, this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n        return this.observer.next.bind(this.observer);\n      },\n      enumerable: false,\n      configurable: true\n    });\n    return Subscription;\n  }();\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var externalJSProvider = {\n    loadJS: function () {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        return tslib.__generator(this, function (_a) {\n          throw new Error('Unable to load external scripts');\n        });\n      });\n    },\n    recaptchaV2Script: '',\n    recaptchaEnterpriseScript: '',\n    gapiScript: ''\n  };\n  function _setExternalJSProvider(p) {\n    externalJSProvider = p;\n  }\n  function _loadJS(url) {\n    return externalJSProvider.loadJS(url);\n  }\n  function _recaptchaV2ScriptUrl() {\n    return externalJSProvider.recaptchaV2Script;\n  }\n  function _recaptchaEnterpriseScriptUrl() {\n    return externalJSProvider.recaptchaEnterpriseScript;\n  }\n  function _gapiScriptUrl() {\n    return externalJSProvider.gapiScript;\n  }\n  function _generateCallbackName(prefix) {\n    return \"__\".concat(prefix).concat(Math.floor(Math.random() * 1000000));\n  }\n\n  /* eslint-disable @typescript-eslint/no-require-imports */\n  var RECAPTCHA_ENTERPRISE_VERIFIER_TYPE = 'recaptcha-enterprise';\n  var FAKE_TOKEN = 'NO_RECAPTCHA';\n  var RecaptchaEnterpriseVerifier = /** @class */function () {\n    /**\r\n     *\r\n     * @param authExtern - The corresponding Firebase {@link Auth} instance.\r\n     *\r\n     */\n    function RecaptchaEnterpriseVerifier(authExtern) {\n      /**\r\n       * Identifies the type of application verifier (e.g. \"recaptcha-enterprise\").\r\n       */\n      this.type = RECAPTCHA_ENTERPRISE_VERIFIER_TYPE;\n      this.auth = _castAuth(authExtern);\n    }\n    /**\r\n     * Executes the verification process.\r\n     *\r\n     * @returns A Promise for a token that can be used to assert the validity of a request.\r\n     */\n    RecaptchaEnterpriseVerifier.prototype.verify = function (action, forceRefresh) {\n      if (action === undefined) {\n        action = 'verify';\n      }\n      if (forceRefresh === undefined) {\n        forceRefresh = false;\n      }\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        function retrieveSiteKey(auth) {\n          return tslib.__awaiter(this, undefined, undefined, function () {\n            var _this = this;\n            return tslib.__generator(this, function (_a) {\n              if (!forceRefresh) {\n                if (auth.tenantId == null && auth._agentRecaptchaConfig != null) {\n                  return [2 /*return*/, auth._agentRecaptchaConfig.siteKey];\n                }\n                if (auth.tenantId != null && auth._tenantRecaptchaConfigs[auth.tenantId] !== undefined) {\n                  return [2 /*return*/, auth._tenantRecaptchaConfigs[auth.tenantId].siteKey];\n                }\n              }\n              return [2 /*return*/, new Promise(function (resolve, reject) {\n                return tslib.__awaiter(_this, undefined, undefined, function () {\n                  return tslib.__generator(this, function (_a) {\n                    getRecaptchaConfig(auth, {\n                      clientType: \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */,\n                      version: \"RECAPTCHA_ENTERPRISE\" /* RecaptchaVersion.ENTERPRISE */\n                    }).then(function (response) {\n                      if (response.recaptchaKey === undefined) {\n                        reject(new Error('recaptcha Enterprise site key undefined'));\n                      } else {\n                        var config = new RecaptchaConfig(response);\n                        if (auth.tenantId == null) {\n                          auth._agentRecaptchaConfig = config;\n                        } else {\n                          auth._tenantRecaptchaConfigs[auth.tenantId] = config;\n                        }\n                        return resolve(config.siteKey);\n                      }\n                    }).catch(function (error) {\n                      reject(error);\n                    });\n                    return [2 /*return*/];\n                  });\n                });\n              })];\n            });\n          });\n        }\n        function retrieveRecaptchaToken(siteKey, resolve, reject) {\n          var grecaptcha = window.grecaptcha;\n          if (isEnterprise(grecaptcha)) {\n            grecaptcha.enterprise.ready(function () {\n              grecaptcha.enterprise.execute(siteKey, {\n                action: action\n              }).then(function (token) {\n                resolve(token);\n              }).catch(function () {\n                resolve(FAKE_TOKEN);\n              });\n            });\n          } else {\n            reject(Error('No reCAPTCHA enterprise script loaded.'));\n          }\n        }\n        var _this = this;\n        return tslib.__generator(this, function (_a) {\n          return [2 /*return*/, new Promise(function (resolve, reject) {\n            retrieveSiteKey(_this.auth).then(function (siteKey) {\n              if (!forceRefresh && isEnterprise(window.grecaptcha)) {\n                retrieveRecaptchaToken(siteKey, resolve, reject);\n              } else {\n                if (typeof window === 'undefined') {\n                  reject(new Error('RecaptchaVerifier is only supported in browser'));\n                  return;\n                }\n                var url = _recaptchaEnterpriseScriptUrl();\n                if (url.length !== 0) {\n                  url += siteKey;\n                }\n                _loadJS(url).then(function () {\n                  retrieveRecaptchaToken(siteKey, resolve, reject);\n                }).catch(function (error) {\n                  reject(error);\n                });\n              }\n            }).catch(function (error) {\n              reject(error);\n            });\n          })];\n        });\n      });\n    };\n    return RecaptchaEnterpriseVerifier;\n  }();\n  function injectRecaptchaFields(auth, request, action, captchaResp) {\n    if (captchaResp === undefined) {\n      captchaResp = false;\n    }\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var verifier, captchaResponse, newRequest;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            verifier = new RecaptchaEnterpriseVerifier(auth);\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 5]);\n            return [4 /*yield*/, verifier.verify(action)];\n          case 2:\n            captchaResponse = _a.sent();\n            return [3 /*break*/, 5];\n          case 3:\n            _a.sent();\n            return [4 /*yield*/, verifier.verify(action, true)];\n          case 4:\n            captchaResponse = _a.sent();\n            return [3 /*break*/, 5];\n          case 5:\n            newRequest = tslib.__assign({}, request);\n            if (!captchaResp) {\n              Object.assign(newRequest, {\n                captchaResponse: captchaResponse\n              });\n            } else {\n              Object.assign(newRequest, {\n                'captchaResp': captchaResponse\n              });\n            }\n            Object.assign(newRequest, {\n              'clientType': \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */\n            });\n            Object.assign(newRequest, {\n              'recaptchaVersion': \"RECAPTCHA_ENTERPRISE\" /* RecaptchaVersion.ENTERPRISE */\n            });\n            return [2 /*return*/, newRequest];\n        }\n      });\n    });\n  }\n  function handleRecaptchaFlow(authInstance, request, actionName, actionMethod) {\n    var _a;\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var requestWithRecaptcha;\n      var _this = this;\n      return tslib.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!((_a = authInstance._getRecaptchaConfig()) === null || _a === undefined ? undefined : _a.isProviderEnabled(\"EMAIL_PASSWORD_PROVIDER\" /* RecaptchaProvider.EMAIL_PASSWORD_PROVIDER */))) return [3 /*break*/, 2];\n            return [4 /*yield*/, injectRecaptchaFields(authInstance, request, actionName, actionName === \"getOobCode\" /* RecaptchaActionName.GET_OOB_CODE */)];\n          case 1:\n            requestWithRecaptcha = _b.sent();\n            return [2 /*return*/, actionMethod(authInstance, requestWithRecaptcha)];\n          case 2:\n            return [2 /*return*/, actionMethod(authInstance, request).catch(function (error) {\n              return tslib.__awaiter(_this, undefined, undefined, function () {\n                var requestWithRecaptcha;\n                return tslib.__generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      if (!(error.code === \"auth/\".concat(\"missing-recaptcha-token\" /* AuthErrorCode.MISSING_RECAPTCHA_TOKEN */))) return [3 /*break*/, 2];\n                      console.log(\"\".concat(actionName, \" is protected by reCAPTCHA Enterprise for this project. Automatically triggering the reCAPTCHA flow and restarting the flow.\"));\n                      return [4 /*yield*/, injectRecaptchaFields(authInstance, request, actionName, actionName === \"getOobCode\" /* RecaptchaActionName.GET_OOB_CODE */)];\n                    case 1:\n                      requestWithRecaptcha = _a.sent();\n                      return [2 /*return*/, actionMethod(authInstance, requestWithRecaptcha)];\n                    case 2:\n                      return [2 /*return*/, Promise.reject(error)];\n                  }\n                });\n              });\n            })];\n        }\n      });\n    });\n  }\n  function _initializeRecaptchaConfig(auth) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var authInternal, response, config, verifier;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            authInternal = _castAuth(auth);\n            return [4 /*yield*/, getRecaptchaConfig(authInternal, {\n              clientType: \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */,\n              version: \"RECAPTCHA_ENTERPRISE\" /* RecaptchaVersion.ENTERPRISE */\n            })];\n          case 1:\n            response = _a.sent();\n            config = new RecaptchaConfig(response);\n            if (authInternal.tenantId == null) {\n              authInternal._agentRecaptchaConfig = config;\n            } else {\n              authInternal._tenantRecaptchaConfigs[authInternal.tenantId] = config;\n            }\n            if (config.isProviderEnabled(\"EMAIL_PASSWORD_PROVIDER\" /* RecaptchaProvider.EMAIL_PASSWORD_PROVIDER */)) {\n              verifier = new RecaptchaEnterpriseVerifier(authInternal);\n              void verifier.verify();\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Initializes an {@link Auth} instance with fine-grained control over\r\n   * {@link Dependencies}.\r\n   *\r\n   * @remarks\r\n   *\r\n   * This function allows more control over the {@link Auth} instance than\r\n   * {@link getAuth}. `getAuth` uses platform-specific defaults to supply\r\n   * the {@link Dependencies}. In general, `getAuth` is the easiest way to\r\n   * initialize Auth and works for most use cases. Use `initializeAuth` if you\r\n   * need control over which persistence layer is used, or to minimize bundle\r\n   * size if you're not using either `signInWithPopup` or `signInWithRedirect`.\r\n   *\r\n   * For example, if your app only uses anonymous accounts and you only want\r\n   * accounts saved for the current session, initialize `Auth` with:\r\n   *\r\n   * ```js\r\n   * const auth = initializeAuth(app, {\r\n   *   persistence: browserSessionPersistence,\r\n   *   popupRedirectResolver: undefined,\r\n   * });\r\n   * ```\r\n   *\r\n   * @public\r\n   */\n  function initializeAuth(app$1, deps) {\n    var provider = app._getProvider(app$1, 'auth');\n    if (provider.isInitialized()) {\n      var auth_1 = provider.getImmediate();\n      var initialOptions = provider.getOptions();\n      if (util.deepEqual(initialOptions, deps !== null && deps !== undefined ? deps : {})) {\n        return auth_1;\n      } else {\n        _fail(auth_1, \"already-initialized\" /* AuthErrorCode.ALREADY_INITIALIZED */);\n      }\n    }\n    var auth = provider.initialize({\n      options: deps\n    });\n    return auth;\n  }\n  function _initializeAuthInstance(auth, deps) {\n    var persistence = (deps === null || deps === undefined ? undefined : deps.persistence) || [];\n    var hierarchy = (Array.isArray(persistence) ? persistence : [persistence]).map(_getInstance);\n    if (deps === null || deps === undefined ? undefined : deps.errorMap) {\n      auth._updateErrorMap(deps.errorMap);\n    }\n    // This promise is intended to float; auth initialization happens in the\n    // background, meanwhile the auth object may be used by the app.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    auth._initializeWithPersistence(hierarchy, deps === null || deps === undefined ? undefined : deps.popupRedirectResolver);\n  }\n\n  /**\r\n   * Changes the {@link Auth} instance to communicate with the Firebase Auth Emulator, instead of production\r\n   * Firebase Auth services.\r\n   *\r\n   * @remarks\r\n   * This must be called synchronously immediately following the first call to\r\n   * {@link initializeAuth}.  Do not use with production credentials as emulator\r\n   * traffic is not encrypted.\r\n   *\r\n   *\r\n   * @example\r\n   * ```javascript\r\n   * connectAuthEmulator(auth, 'http://127.0.0.1:9099', { disableWarnings: true });\r\n   * ```\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   * @param url - The URL at which the emulator is running (eg, 'http://localhost:9099').\r\n   * @param options - Optional. `options.disableWarnings` defaults to `false`. Set it to\r\n   * `true` to disable the warning banner attached to the DOM.\r\n   *\r\n   * @public\r\n   */\n  function connectAuthEmulator(auth, url, options) {\n    var authInternal = _castAuth(auth);\n    _assert(authInternal._canInitEmulator, authInternal, \"emulator-config-failed\" /* AuthErrorCode.EMULATOR_CONFIG_FAILED */);\n    _assert(/^https?:\\/\\//.test(url), authInternal, \"invalid-emulator-scheme\" /* AuthErrorCode.INVALID_EMULATOR_SCHEME */);\n    var disableWarnings = !!(options === null || options === undefined ? undefined : options.disableWarnings);\n    var protocol = extractProtocol(url);\n    var _a = extractHostAndPort(url),\n      host = _a.host,\n      port = _a.port;\n    var portStr = port === null ? '' : \":\".concat(port);\n    // Always replace path with \"/\" (even if input url had no path at all, or had a different one).\n    authInternal.config.emulator = {\n      url: \"\".concat(protocol, \"//\").concat(host).concat(portStr, \"/\")\n    };\n    authInternal.settings.appVerificationDisabledForTesting = true;\n    authInternal.emulatorConfig = Object.freeze({\n      host: host,\n      port: port,\n      protocol: protocol.replace(':', ''),\n      options: Object.freeze({\n        disableWarnings: disableWarnings\n      })\n    });\n    if (!disableWarnings) {\n      emitEmulatorWarning();\n    }\n  }\n  function extractProtocol(url) {\n    var protocolEnd = url.indexOf(':');\n    return protocolEnd < 0 ? '' : url.substr(0, protocolEnd + 1);\n  }\n  function extractHostAndPort(url) {\n    var protocol = extractProtocol(url);\n    var authority = /(\\/\\/)?([^?#/]+)/.exec(url.substr(protocol.length)); // Between // and /, ? or #.\n    if (!authority) {\n      return {\n        host: '',\n        port: null\n      };\n    }\n    var hostAndPort = authority[2].split('@').pop() || ''; // Strip out \"username:password@\".\n    var bracketedIPv6 = /^(\\[[^\\]]+\\])(:|$)/.exec(hostAndPort);\n    if (bracketedIPv6) {\n      var host = bracketedIPv6[1];\n      return {\n        host: host,\n        port: parsePort(hostAndPort.substr(host.length + 1))\n      };\n    } else {\n      var _a = hostAndPort.split(':'),\n        host = _a[0],\n        port = _a[1];\n      return {\n        host: host,\n        port: parsePort(port)\n      };\n    }\n  }\n  function parsePort(portStr) {\n    if (!portStr) {\n      return null;\n    }\n    var port = Number(portStr);\n    if (isNaN(port)) {\n      return null;\n    }\n    return port;\n  }\n  function emitEmulatorWarning() {\n    function attachBanner() {\n      var el = document.createElement('p');\n      var sty = el.style;\n      el.innerText = 'Running in emulator mode. Do not use with production credentials.';\n      sty.position = 'fixed';\n      sty.width = '100%';\n      sty.backgroundColor = '#ffffff';\n      sty.border = '.1em solid #000000';\n      sty.color = '#b50000';\n      sty.bottom = '0px';\n      sty.left = '0px';\n      sty.margin = '0px';\n      sty.zIndex = '10000';\n      sty.textAlign = 'center';\n      el.classList.add('firebase-emulator-warning');\n      document.body.appendChild(el);\n    }\n    if (typeof console !== 'undefined' && typeof console.info === 'function') {\n      console.info(\"WARNING: You are using the Auth Emulator, which is intended for local testing only.  Do not use with production credentials.\");\n    }\n    if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n      if (document.readyState === 'loading') {\n        window.addEventListener('DOMContentLoaded', attachBanner);\n      } else {\n        attachBanner();\n      }\n    }\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Interface that represents the credentials returned by an {@link AuthProvider}.\r\n   *\r\n   * @remarks\r\n   * Implementations specify the details about each auth provider's credential requirements.\r\n   *\r\n   * @public\r\n   */\n  var AuthCredential = /** @class */function () {\n    /** @internal */\n    function AuthCredential(\n    /**\r\n     * The authentication provider ID for the credential.\r\n     *\r\n     * @remarks\r\n     * For example, 'facebook.com', or 'google.com'.\r\n     */\n    providerId,\n    /**\r\n     * The authentication sign in method for the credential.\r\n     *\r\n     * @remarks\r\n     * For example, {@link SignInMethod}.EMAIL_PASSWORD, or\r\n     * {@link SignInMethod}.EMAIL_LINK. This corresponds to the sign-in method\r\n     * identifier as returned in {@link fetchSignInMethodsForEmail}.\r\n     */\n    signInMethod) {\n      this.providerId = providerId;\n      this.signInMethod = signInMethod;\n    }\n    /**\r\n     * Returns a JSON-serializable representation of this object.\r\n     *\r\n     * @returns a JSON-serializable representation of this object.\r\n     */\n    AuthCredential.prototype.toJSON = function () {\n      return debugFail('not implemented');\n    };\n    /** @internal */\n    AuthCredential.prototype._getIdTokenResponse = function (_auth) {\n      return debugFail('not implemented');\n    };\n    /** @internal */\n    AuthCredential.prototype._linkToIdToken = function (_auth, _idToken) {\n      return debugFail('not implemented');\n    };\n    /** @internal */\n    AuthCredential.prototype._getReauthenticationResolver = function (_auth) {\n      return debugFail('not implemented');\n    };\n    return AuthCredential;\n  }();\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function resetPassword(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:resetPassword\" /* Endpoint.RESET_PASSWORD */, _addTidIfNecessary(auth, request))];\n      });\n    });\n  }\n  function updateEmailPassword(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:update\" /* Endpoint.SET_ACCOUNT_INFO */, request)];\n      });\n    });\n  }\n  // Used for linking an email/password account to an existing idToken. Uses the same request/response\n  // format as updateEmailPassword.\n  function linkEmailPassword(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signUp\" /* Endpoint.SIGN_UP */, request)];\n      });\n    });\n  }\n  function applyActionCode$1(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:update\" /* Endpoint.SET_ACCOUNT_INFO */, _addTidIfNecessary(auth, request))];\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function signInWithPassword(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithPassword\" /* Endpoint.SIGN_IN_WITH_PASSWORD */, _addTidIfNecessary(auth, request))];\n      });\n    });\n  }\n  function sendOobCode(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:sendOobCode\" /* Endpoint.SEND_OOB_CODE */, _addTidIfNecessary(auth, request))];\n      });\n    });\n  }\n  function sendEmailVerification$1(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, sendOobCode(auth, request)];\n      });\n    });\n  }\n  function sendPasswordResetEmail$1(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, sendOobCode(auth, request)];\n      });\n    });\n  }\n  function sendSignInLinkToEmail$1(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, sendOobCode(auth, request)];\n      });\n    });\n  }\n  function verifyAndChangeEmail(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, sendOobCode(auth, request)];\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function signInWithEmailLink$1(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithEmailLink\" /* Endpoint.SIGN_IN_WITH_EMAIL_LINK */, _addTidIfNecessary(auth, request))];\n      });\n    });\n  }\n  function signInWithEmailLinkForLinking(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithEmailLink\" /* Endpoint.SIGN_IN_WITH_EMAIL_LINK */, _addTidIfNecessary(auth, request))];\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Interface that represents the credentials returned by {@link EmailAuthProvider} for\r\n   * {@link ProviderId}.PASSWORD\r\n   *\r\n   * @remarks\r\n   * Covers both {@link SignInMethod}.EMAIL_PASSWORD and\r\n   * {@link SignInMethod}.EMAIL_LINK.\r\n   *\r\n   * @public\r\n   */\n  var EmailAuthCredential = /** @class */function (_super) {\n    tslib.__extends(EmailAuthCredential, _super);\n    /** @internal */\n    function EmailAuthCredential(/** @internal */\n    _email, /** @internal */\n    _password, signInMethod, /** @internal */\n    _tenantId) {\n      if (_tenantId === undefined) {\n        _tenantId = null;\n      }\n      var _this = _super.call(this, \"password\" /* ProviderId.PASSWORD */, signInMethod) || this;\n      _this._email = _email;\n      _this._password = _password;\n      _this._tenantId = _tenantId;\n      return _this;\n    }\n    /** @internal */\n    EmailAuthCredential._fromEmailAndPassword = function (email, password) {\n      return new EmailAuthCredential(email, password, \"password\" /* SignInMethod.EMAIL_PASSWORD */);\n    };\n    /** @internal */\n    EmailAuthCredential._fromEmailAndCode = function (email, oobCode, tenantId) {\n      if (tenantId === undefined) {\n        tenantId = null;\n      }\n      return new EmailAuthCredential(email, oobCode, \"emailLink\" /* SignInMethod.EMAIL_LINK */, tenantId);\n    };\n    /** {@inheritdoc AuthCredential.toJSON} */\n    EmailAuthCredential.prototype.toJSON = function () {\n      return {\n        email: this._email,\n        password: this._password,\n        signInMethod: this.signInMethod,\n        tenantId: this._tenantId\n      };\n    };\n    /**\r\n     * Static method to deserialize a JSON representation of an object into an {@link  AuthCredential}.\r\n     *\r\n     * @param json - Either `object` or the stringified representation of the object. When string is\r\n     * provided, `JSON.parse` would be called first.\r\n     *\r\n     * @returns If the JSON input does not represent an {@link AuthCredential}, null is returned.\r\n     */\n    EmailAuthCredential.fromJSON = function (json) {\n      var obj = typeof json === 'string' ? JSON.parse(json) : json;\n      if ((obj === null || obj === undefined ? undefined : obj.email) && (obj === null || obj === undefined ? undefined : obj.password)) {\n        if (obj.signInMethod === \"password\" /* SignInMethod.EMAIL_PASSWORD */) {\n          return this._fromEmailAndPassword(obj.email, obj.password);\n        } else if (obj.signInMethod === \"emailLink\" /* SignInMethod.EMAIL_LINK */) {\n          return this._fromEmailAndCode(obj.email, obj.password, obj.tenantId);\n        }\n      }\n      return null;\n    };\n    /** @internal */\n    EmailAuthCredential.prototype._getIdTokenResponse = function (auth) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var request;\n        return tslib.__generator(this, function (_a) {\n          switch (this.signInMethod) {\n            case \"password\" /* SignInMethod.EMAIL_PASSWORD */:\n              request = {\n                returnSecureToken: true,\n                email: this._email,\n                password: this._password,\n                clientType: \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */\n              };\n              return [2 /*return*/, handleRecaptchaFlow(auth, request, \"signInWithPassword\" /* RecaptchaActionName.SIGN_IN_WITH_PASSWORD */, signInWithPassword)];\n            case \"emailLink\" /* SignInMethod.EMAIL_LINK */:\n              return [2 /*return*/, signInWithEmailLink$1(auth, {\n                email: this._email,\n                oobCode: this._password\n              })];\n            default:\n              _fail(auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n          }\n          return [2 /*return*/];\n        });\n      });\n    };\n    /** @internal */\n    EmailAuthCredential.prototype._linkToIdToken = function (auth, idToken) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var request;\n        return tslib.__generator(this, function (_a) {\n          switch (this.signInMethod) {\n            case \"password\" /* SignInMethod.EMAIL_PASSWORD */:\n              request = {\n                idToken: idToken,\n                returnSecureToken: true,\n                email: this._email,\n                password: this._password,\n                clientType: \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */\n              };\n              return [2 /*return*/, handleRecaptchaFlow(auth, request, \"signUpPassword\" /* RecaptchaActionName.SIGN_UP_PASSWORD */, linkEmailPassword)];\n            case \"emailLink\" /* SignInMethod.EMAIL_LINK */:\n              return [2 /*return*/, signInWithEmailLinkForLinking(auth, {\n                idToken: idToken,\n                email: this._email,\n                oobCode: this._password\n              })];\n            default:\n              _fail(auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n          }\n          return [2 /*return*/];\n        });\n      });\n    };\n    /** @internal */\n    EmailAuthCredential.prototype._getReauthenticationResolver = function (auth) {\n      return this._getIdTokenResponse(auth);\n    };\n    return EmailAuthCredential;\n  }(AuthCredential);\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function signInWithIdp(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithIdp\" /* Endpoint.SIGN_IN_WITH_IDP */, _addTidIfNecessary(auth, request))];\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var IDP_REQUEST_URI$1 = 'http://localhost';\n  /**\r\n   * Represents the OAuth credentials returned by an {@link OAuthProvider}.\r\n   *\r\n   * @remarks\r\n   * Implementations specify the details about each auth provider's credential requirements.\r\n   *\r\n   * @public\r\n   */\n  var OAuthCredential = /** @class */function (_super) {\n    tslib.__extends(OAuthCredential, _super);\n    function OAuthCredential() {\n      var _this = _super !== null && _super.apply(this, arguments) || this;\n      _this.pendingToken = null;\n      return _this;\n    }\n    /** @internal */\n    OAuthCredential._fromParams = function (params) {\n      var cred = new OAuthCredential(params.providerId, params.signInMethod);\n      if (params.idToken || params.accessToken) {\n        // OAuth 2 and either ID token or access token.\n        if (params.idToken) {\n          cred.idToken = params.idToken;\n        }\n        if (params.accessToken) {\n          cred.accessToken = params.accessToken;\n        }\n        // Add nonce if available and no pendingToken is present.\n        if (params.nonce && !params.pendingToken) {\n          cred.nonce = params.nonce;\n        }\n        if (params.pendingToken) {\n          cred.pendingToken = params.pendingToken;\n        }\n      } else if (params.oauthToken && params.oauthTokenSecret) {\n        // OAuth 1 and OAuth token with token secret\n        cred.accessToken = params.oauthToken;\n        cred.secret = params.oauthTokenSecret;\n      } else {\n        _fail(\"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n      }\n      return cred;\n    };\n    /** {@inheritdoc AuthCredential.toJSON}  */\n    OAuthCredential.prototype.toJSON = function () {\n      return {\n        idToken: this.idToken,\n        accessToken: this.accessToken,\n        secret: this.secret,\n        nonce: this.nonce,\n        pendingToken: this.pendingToken,\n        providerId: this.providerId,\n        signInMethod: this.signInMethod\n      };\n    };\n    /**\r\n     * Static method to deserialize a JSON representation of an object into an\r\n     * {@link  AuthCredential}.\r\n     *\r\n     * @param json - Input can be either Object or the stringified representation of the object.\r\n     * When string is provided, JSON.parse would be called first.\r\n     *\r\n     * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\r\n     */\n    OAuthCredential.fromJSON = function (json) {\n      var obj = typeof json === 'string' ? JSON.parse(json) : json;\n      var providerId = obj.providerId,\n        signInMethod = obj.signInMethod,\n        rest = tslib.__rest(obj, [\"providerId\", \"signInMethod\"]);\n      if (!providerId || !signInMethod) {\n        return null;\n      }\n      var cred = new OAuthCredential(providerId, signInMethod);\n      cred.idToken = rest.idToken || undefined;\n      cred.accessToken = rest.accessToken || undefined;\n      cred.secret = rest.secret;\n      cred.nonce = rest.nonce;\n      cred.pendingToken = rest.pendingToken || null;\n      return cred;\n    };\n    /** @internal */\n    OAuthCredential.prototype._getIdTokenResponse = function (auth) {\n      var request = this.buildRequest();\n      return signInWithIdp(auth, request);\n    };\n    /** @internal */\n    OAuthCredential.prototype._linkToIdToken = function (auth, idToken) {\n      var request = this.buildRequest();\n      request.idToken = idToken;\n      return signInWithIdp(auth, request);\n    };\n    /** @internal */\n    OAuthCredential.prototype._getReauthenticationResolver = function (auth) {\n      var request = this.buildRequest();\n      request.autoCreate = false;\n      return signInWithIdp(auth, request);\n    };\n    OAuthCredential.prototype.buildRequest = function () {\n      var request = {\n        requestUri: IDP_REQUEST_URI$1,\n        returnSecureToken: true\n      };\n      if (this.pendingToken) {\n        request.pendingToken = this.pendingToken;\n      } else {\n        var postBody = {};\n        if (this.idToken) {\n          postBody['id_token'] = this.idToken;\n        }\n        if (this.accessToken) {\n          postBody['access_token'] = this.accessToken;\n        }\n        if (this.secret) {\n          postBody['oauth_token_secret'] = this.secret;\n        }\n        postBody['providerId'] = this.providerId;\n        if (this.nonce && !this.pendingToken) {\n          postBody['nonce'] = this.nonce;\n        }\n        request.postBody = util.querystring(postBody);\n      }\n      return request;\n    };\n    return OAuthCredential;\n  }(AuthCredential);\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var _a;\n  function sendPhoneVerificationCode(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:sendVerificationCode\" /* Endpoint.SEND_VERIFICATION_CODE */, _addTidIfNecessary(auth, request))];\n      });\n    });\n  }\n  function signInWithPhoneNumber$1(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithPhoneNumber\" /* Endpoint.SIGN_IN_WITH_PHONE_NUMBER */, _addTidIfNecessary(auth, request))];\n      });\n    });\n  }\n  function linkWithPhoneNumber$1(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var response;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithPhoneNumber\" /* Endpoint.SIGN_IN_WITH_PHONE_NUMBER */, _addTidIfNecessary(auth, request))];\n          case 1:\n            response = _a.sent();\n            if (response.temporaryProof) {\n              throw _makeTaggedError(auth, \"account-exists-with-different-credential\" /* AuthErrorCode.NEED_CONFIRMATION */, response);\n            }\n            return [2 /*return*/, response];\n        }\n      });\n    });\n  }\n  var VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_ = (_a = {}, _a[\"USER_NOT_FOUND\" /* ServerError.USER_NOT_FOUND */] = \"user-not-found\" /* AuthErrorCode.USER_DELETED */, _a);\n  function verifyPhoneNumberForExisting(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var apiRequest;\n      return tslib.__generator(this, function (_a) {\n        apiRequest = tslib.__assign(tslib.__assign({}, request), {\n          operation: 'REAUTH'\n        });\n        return [2 /*return*/, _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithPhoneNumber\" /* Endpoint.SIGN_IN_WITH_PHONE_NUMBER */, _addTidIfNecessary(auth, apiRequest), VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_)];\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Represents the credentials returned by {@link PhoneAuthProvider}.\r\n   *\r\n   * @public\r\n   */\n  var PhoneAuthCredential = /** @class */function (_super) {\n    tslib.__extends(PhoneAuthCredential, _super);\n    function PhoneAuthCredential(params) {\n      var _this = _super.call(this, \"phone\" /* ProviderId.PHONE */, \"phone\" /* SignInMethod.PHONE */) || this;\n      _this.params = params;\n      return _this;\n    }\n    /** @internal */\n    PhoneAuthCredential._fromVerification = function (verificationId, verificationCode) {\n      return new PhoneAuthCredential({\n        verificationId: verificationId,\n        verificationCode: verificationCode\n      });\n    };\n    /** @internal */\n    PhoneAuthCredential._fromTokenResponse = function (phoneNumber, temporaryProof) {\n      return new PhoneAuthCredential({\n        phoneNumber: phoneNumber,\n        temporaryProof: temporaryProof\n      });\n    };\n    /** @internal */\n    PhoneAuthCredential.prototype._getIdTokenResponse = function (auth) {\n      return signInWithPhoneNumber$1(auth, this._makeVerificationRequest());\n    };\n    /** @internal */\n    PhoneAuthCredential.prototype._linkToIdToken = function (auth, idToken) {\n      return linkWithPhoneNumber$1(auth, tslib.__assign({\n        idToken: idToken\n      }, this._makeVerificationRequest()));\n    };\n    /** @internal */\n    PhoneAuthCredential.prototype._getReauthenticationResolver = function (auth) {\n      return verifyPhoneNumberForExisting(auth, this._makeVerificationRequest());\n    };\n    /** @internal */\n    PhoneAuthCredential.prototype._makeVerificationRequest = function () {\n      var _a = this.params,\n        temporaryProof = _a.temporaryProof,\n        phoneNumber = _a.phoneNumber,\n        verificationId = _a.verificationId,\n        verificationCode = _a.verificationCode;\n      if (temporaryProof && phoneNumber) {\n        return {\n          temporaryProof: temporaryProof,\n          phoneNumber: phoneNumber\n        };\n      }\n      return {\n        sessionInfo: verificationId,\n        code: verificationCode\n      };\n    };\n    /** {@inheritdoc AuthCredential.toJSON} */\n    PhoneAuthCredential.prototype.toJSON = function () {\n      var obj = {\n        providerId: this.providerId\n      };\n      if (this.params.phoneNumber) {\n        obj.phoneNumber = this.params.phoneNumber;\n      }\n      if (this.params.temporaryProof) {\n        obj.temporaryProof = this.params.temporaryProof;\n      }\n      if (this.params.verificationCode) {\n        obj.verificationCode = this.params.verificationCode;\n      }\n      if (this.params.verificationId) {\n        obj.verificationId = this.params.verificationId;\n      }\n      return obj;\n    };\n    /** Generates a phone credential based on a plain object or a JSON string. */\n    PhoneAuthCredential.fromJSON = function (json) {\n      if (typeof json === 'string') {\n        json = JSON.parse(json);\n      }\n      var _a = json,\n        verificationId = _a.verificationId,\n        verificationCode = _a.verificationCode,\n        phoneNumber = _a.phoneNumber,\n        temporaryProof = _a.temporaryProof;\n      if (!verificationCode && !verificationId && !phoneNumber && !temporaryProof) {\n        return null;\n      }\n      return new PhoneAuthCredential({\n        verificationId: verificationId,\n        verificationCode: verificationCode,\n        phoneNumber: phoneNumber,\n        temporaryProof: temporaryProof\n      });\n    };\n    return PhoneAuthCredential;\n  }(AuthCredential);\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Maps the mode string in action code URL to Action Code Info operation.\r\n   *\r\n   * @param mode\r\n   */\n  function parseMode(mode) {\n    switch (mode) {\n      case 'recoverEmail':\n        return \"RECOVER_EMAIL\" /* ActionCodeOperation.RECOVER_EMAIL */;\n      case 'resetPassword':\n        return \"PASSWORD_RESET\" /* ActionCodeOperation.PASSWORD_RESET */;\n      case 'signIn':\n        return \"EMAIL_SIGNIN\" /* ActionCodeOperation.EMAIL_SIGNIN */;\n      case 'verifyEmail':\n        return \"VERIFY_EMAIL\" /* ActionCodeOperation.VERIFY_EMAIL */;\n      case 'verifyAndChangeEmail':\n        return \"VERIFY_AND_CHANGE_EMAIL\" /* ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL */;\n      case 'revertSecondFactorAddition':\n        return \"REVERT_SECOND_FACTOR_ADDITION\" /* ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION */;\n      default:\n        return null;\n    }\n  }\n  /**\r\n   * Helper to parse FDL links\r\n   *\r\n   * @param url\r\n   */\n  function parseDeepLink(url) {\n    var link = util.querystringDecode(util.extractQuerystring(url))['link'];\n    // Double link case (automatic redirect).\n    var doubleDeepLink = link ? util.querystringDecode(util.extractQuerystring(link))['deep_link_id'] : null;\n    // iOS custom scheme links.\n    var iOSDeepLink = util.querystringDecode(util.extractQuerystring(url))['deep_link_id'];\n    var iOSDoubleDeepLink = iOSDeepLink ? util.querystringDecode(util.extractQuerystring(iOSDeepLink))['link'] : null;\n    return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\n  }\n  /**\r\n   * A utility class to parse email action URLs such as password reset, email verification,\r\n   * email link sign in, etc.\r\n   *\r\n   * @public\r\n   */\n  var ActionCodeURL = /** @class */function () {\n    /**\r\n     * @param actionLink - The link from which to extract the URL.\r\n     * @returns The {@link ActionCodeURL} object, or null if the link is invalid.\r\n     *\r\n     * @internal\r\n     */\n    function ActionCodeURL(actionLink) {\n      var _a, _b, _c, _d, _e, _f;\n      var searchParams = util.querystringDecode(util.extractQuerystring(actionLink));\n      var apiKey = (_a = searchParams[\"apiKey\" /* QueryField.API_KEY */]) !== null && _a !== undefined ? _a : null;\n      var code = (_b = searchParams[\"oobCode\" /* QueryField.CODE */]) !== null && _b !== undefined ? _b : null;\n      var operation = parseMode((_c = searchParams[\"mode\" /* QueryField.MODE */]) !== null && _c !== undefined ? _c : null);\n      // Validate API key, code and mode.\n      _assert(apiKey && code && operation, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n      this.apiKey = apiKey;\n      this.operation = operation;\n      this.code = code;\n      this.continueUrl = (_d = searchParams[\"continueUrl\" /* QueryField.CONTINUE_URL */]) !== null && _d !== undefined ? _d : null;\n      this.languageCode = (_e = searchParams[\"languageCode\" /* QueryField.LANGUAGE_CODE */]) !== null && _e !== undefined ? _e : null;\n      this.tenantId = (_f = searchParams[\"tenantId\" /* QueryField.TENANT_ID */]) !== null && _f !== undefined ? _f : null;\n    }\n    /**\r\n     * Parses the email action link string and returns an {@link ActionCodeURL} if the link is valid,\r\n     * otherwise returns null.\r\n     *\r\n     * @param link  - The email action link string.\r\n     * @returns The {@link ActionCodeURL} object, or null if the link is invalid.\r\n     *\r\n     * @public\r\n     */\n    ActionCodeURL.parseLink = function (link) {\n      var actionLink = parseDeepLink(link);\n      try {\n        return new ActionCodeURL(actionLink);\n      } catch (_a) {\n        return null;\n      }\n    };\n    return ActionCodeURL;\n  }();\n  /**\r\n   * Parses the email action link string and returns an {@link ActionCodeURL} if\r\n   * the link is valid, otherwise returns null.\r\n   *\r\n   * @public\r\n   */\n  function parseActionCodeURL(link) {\n    return ActionCodeURL.parseLink(link);\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Provider for generating {@link EmailAuthCredential}.\r\n   *\r\n   * @public\r\n   */\n  var EmailAuthProvider = /** @class */function () {\n    function EmailAuthProvider() {\n      /**\r\n       * Always set to {@link ProviderId}.PASSWORD, even for email link.\r\n       */\n      this.providerId = EmailAuthProvider.PROVIDER_ID;\n    }\n    /**\r\n     * Initialize an {@link AuthCredential} using an email and password.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * const authCredential = EmailAuthProvider.credential(email, password);\r\n     * const userCredential = await signInWithCredential(auth, authCredential);\r\n     * ```\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n     * ```\r\n     *\r\n     * @param email - Email address.\r\n     * @param password - User account password.\r\n     * @returns The auth provider credential.\r\n     */\n    EmailAuthProvider.credential = function (email, password) {\n      return EmailAuthCredential._fromEmailAndPassword(email, password);\n    };\n    /**\r\n     * Initialize an {@link AuthCredential} using an email and an email link after a sign in with\r\n     * email link operation.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * const authCredential = EmailAuthProvider.credentialWithLink(auth, email, emailLink);\r\n     * const userCredential = await signInWithCredential(auth, authCredential);\r\n     * ```\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * await sendSignInLinkToEmail(auth, email);\r\n     * // Obtain emailLink from user.\r\n     * const userCredential = await signInWithEmailLink(auth, email, emailLink);\r\n     * ```\r\n     *\r\n     * @param auth - The {@link Auth} instance used to verify the link.\r\n     * @param email - Email address.\r\n     * @param emailLink - Sign-in email link.\r\n     * @returns - The auth provider credential.\r\n     */\n    EmailAuthProvider.credentialWithLink = function (email, emailLink) {\n      var actionCodeUrl = ActionCodeURL.parseLink(emailLink);\n      _assert(actionCodeUrl, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n      return EmailAuthCredential._fromEmailAndCode(email, actionCodeUrl.code, actionCodeUrl.tenantId);\n    };\n    /**\r\n     * Always set to {@link ProviderId}.PASSWORD, even for email link.\r\n     */\n    EmailAuthProvider.PROVIDER_ID = \"password\" /* ProviderId.PASSWORD */;\n    /**\r\n     * Always set to {@link SignInMethod}.EMAIL_PASSWORD.\r\n     */\n    EmailAuthProvider.EMAIL_PASSWORD_SIGN_IN_METHOD = \"password\" /* SignInMethod.EMAIL_PASSWORD */;\n    /**\r\n     * Always set to {@link SignInMethod}.EMAIL_LINK.\r\n     */\n    EmailAuthProvider.EMAIL_LINK_SIGN_IN_METHOD = \"emailLink\" /* SignInMethod.EMAIL_LINK */;\n    return EmailAuthProvider;\n  }();\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * The base class for all Federated providers (OAuth (including OIDC), SAML).\r\n   *\r\n   * This class is not meant to be instantiated directly.\r\n   *\r\n   * @public\r\n   */\n  var FederatedAuthProvider = /** @class */function () {\n    /**\r\n     * Constructor for generic OAuth providers.\r\n     *\r\n     * @param providerId - Provider for which credentials should be generated.\r\n     */\n    function FederatedAuthProvider(providerId) {\n      this.providerId = providerId;\n      /** @internal */\n      this.defaultLanguageCode = null;\n      /** @internal */\n      this.customParameters = {};\n    }\n    /**\r\n     * Set the language gode.\r\n     *\r\n     * @param languageCode - language code\r\n     */\n    FederatedAuthProvider.prototype.setDefaultLanguage = function (languageCode) {\n      this.defaultLanguageCode = languageCode;\n    };\n    /**\r\n     * Sets the OAuth custom parameters to pass in an OAuth request for popup and redirect sign-in\r\n     * operations.\r\n     *\r\n     * @remarks\r\n     * For a detailed list, check the reserved required OAuth 2.0 parameters such as `client_id`,\r\n     * `redirect_uri`, `scope`, `response_type`, and `state` are not allowed and will be ignored.\r\n     *\r\n     * @param customOAuthParameters - The custom OAuth parameters to pass in the OAuth request.\r\n     */\n    FederatedAuthProvider.prototype.setCustomParameters = function (customOAuthParameters) {\n      this.customParameters = customOAuthParameters;\n      return this;\n    };\n    /**\r\n     * Retrieve the current list of {@link CustomParameters}.\r\n     */\n    FederatedAuthProvider.prototype.getCustomParameters = function () {\n      return this.customParameters;\n    };\n    return FederatedAuthProvider;\n  }();\n\n  /**\r\n   * @license\r\n   * Copyright 2019 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Common code to all OAuth providers. This is separate from the\r\n   * {@link OAuthProvider} so that child providers (like\r\n   * {@link GoogleAuthProvider}) don't inherit the `credential` instance method.\r\n   * Instead, they rely on a static `credential` method.\r\n   */\n  var BaseOAuthProvider = /** @class */function (_super) {\n    tslib.__extends(BaseOAuthProvider, _super);\n    function BaseOAuthProvider() {\n      var _this = _super !== null && _super.apply(this, arguments) || this;\n      /** @internal */\n      _this.scopes = [];\n      return _this;\n    }\n    /**\r\n     * Add an OAuth scope to the credential.\r\n     *\r\n     * @param scope - Provider OAuth scope to add.\r\n     */\n    BaseOAuthProvider.prototype.addScope = function (scope) {\n      // If not already added, add scope to list.\n      if (!this.scopes.includes(scope)) {\n        this.scopes.push(scope);\n      }\n      return this;\n    };\n    /**\r\n     * Retrieve the current list of OAuth scopes.\r\n     */\n    BaseOAuthProvider.prototype.getScopes = function () {\n      return tslib.__spreadArray([], this.scopes, true);\n    };\n    return BaseOAuthProvider;\n  }(FederatedAuthProvider);\n  /**\r\n   * Provider for generating generic {@link OAuthCredential}.\r\n   *\r\n   * @example\r\n   * ```javascript\r\n   * // Sign in using a redirect.\r\n   * const provider = new OAuthProvider('google.com');\r\n   * // Start a sign in process for an unauthenticated user.\r\n   * provider.addScope('profile');\r\n   * provider.addScope('email');\r\n   * await signInWithRedirect(auth, provider);\r\n   * // This will trigger a full page redirect away from your app\r\n   *\r\n   * // After returning from the redirect when your app initializes you can obtain the result\r\n   * const result = await getRedirectResult(auth);\r\n   * if (result) {\r\n   *   // This is the signed-in user\r\n   *   const user = result.user;\r\n   *   // This gives you a OAuth Access Token for the provider.\r\n   *   const credential = provider.credentialFromResult(auth, result);\r\n   *   const token = credential.accessToken;\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * ```javascript\r\n   * // Sign in using a popup.\r\n   * const provider = new OAuthProvider('google.com');\r\n   * provider.addScope('profile');\r\n   * provider.addScope('email');\r\n   * const result = await signInWithPopup(auth, provider);\r\n   *\r\n   * // The signed-in user info.\r\n   * const user = result.user;\r\n   * // This gives you a OAuth Access Token for the provider.\r\n   * const credential = provider.credentialFromResult(auth, result);\r\n   * const token = credential.accessToken;\r\n   * ```\r\n   * @public\r\n   */\n  var OAuthProvider = /** @class */function (_super) {\n    tslib.__extends(OAuthProvider, _super);\n    function OAuthProvider() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\r\n     * Creates an {@link OAuthCredential} from a JSON string or a plain object.\r\n     * @param json - A plain object or a JSON string\r\n     */\n    OAuthProvider.credentialFromJSON = function (json) {\n      var obj = typeof json === 'string' ? JSON.parse(json) : json;\n      _assert('providerId' in obj && 'signInMethod' in obj, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n      return OAuthCredential._fromParams(obj);\n    };\n    /**\r\n     * Creates a {@link OAuthCredential} from a generic OAuth provider's access token or ID token.\r\n     *\r\n     * @remarks\r\n     * The raw nonce is required when an ID token with a nonce field is provided. The SHA-256 hash of\r\n     * the raw nonce must match the nonce field in the ID token.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * // `googleUser` from the onsuccess Google Sign In callback.\r\n     * // Initialize a generate OAuth provider with a `google.com` providerId.\r\n     * const provider = new OAuthProvider('google.com');\r\n     * const credential = provider.credential({\r\n     *   idToken: googleUser.getAuthResponse().id_token,\r\n     * });\r\n     * const result = await signInWithCredential(credential);\r\n     * ```\r\n     *\r\n     * @param params - Either the options object containing the ID token, access token and raw nonce\r\n     * or the ID token string.\r\n     */\n    OAuthProvider.prototype.credential = function (params) {\n      return this._credential(tslib.__assign(tslib.__assign({}, params), {\n        nonce: params.rawNonce\n      }));\n    };\n    /** An internal credential method that accepts more permissive options */\n    OAuthProvider.prototype._credential = function (params) {\n      _assert(params.idToken || params.accessToken, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n      // For OAuthCredential, sign in method is same as providerId.\n      return OAuthCredential._fromParams(tslib.__assign(tslib.__assign({}, params), {\n        providerId: this.providerId,\n        signInMethod: this.providerId\n      }));\n    };\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\n    OAuthProvider.credentialFromResult = function (userCredential) {\n      return OAuthProvider.oauthCredentialFromTaggedObject(userCredential);\n    };\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\r\n     * thrown during a sign-in, link, or reauthenticate operation.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\n    OAuthProvider.credentialFromError = function (error) {\n      return OAuthProvider.oauthCredentialFromTaggedObject(error.customData || {});\n    };\n    OAuthProvider.oauthCredentialFromTaggedObject = function (_a) {\n      var tokenResponse = _a._tokenResponse;\n      if (!tokenResponse) {\n        return null;\n      }\n      var _b = tokenResponse,\n        oauthIdToken = _b.oauthIdToken,\n        oauthAccessToken = _b.oauthAccessToken,\n        oauthTokenSecret = _b.oauthTokenSecret,\n        pendingToken = _b.pendingToken,\n        nonce = _b.nonce,\n        providerId = _b.providerId;\n      if (!oauthAccessToken && !oauthTokenSecret && !oauthIdToken && !pendingToken) {\n        return null;\n      }\n      if (!providerId) {\n        return null;\n      }\n      try {\n        return new OAuthProvider(providerId)._credential({\n          idToken: oauthIdToken,\n          accessToken: oauthAccessToken,\n          nonce: nonce,\n          pendingToken: pendingToken\n        });\n      } catch (e) {\n        return null;\n      }\n    };\n    return OAuthProvider;\n  }(BaseOAuthProvider);\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.FACEBOOK.\r\n   *\r\n   * @example\r\n   * ```javascript\r\n   * // Sign in using a redirect.\r\n   * const provider = new FacebookAuthProvider();\r\n   * // Start a sign in process for an unauthenticated user.\r\n   * provider.addScope('user_birthday');\r\n   * await signInWithRedirect(auth, provider);\r\n   * // This will trigger a full page redirect away from your app\r\n   *\r\n   * // After returning from the redirect when your app initializes you can obtain the result\r\n   * const result = await getRedirectResult(auth);\r\n   * if (result) {\r\n   *   // This is the signed-in user\r\n   *   const user = result.user;\r\n   *   // This gives you a Facebook Access Token.\r\n   *   const credential = FacebookAuthProvider.credentialFromResult(result);\r\n   *   const token = credential.accessToken;\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * ```javascript\r\n   * // Sign in using a popup.\r\n   * const provider = new FacebookAuthProvider();\r\n   * provider.addScope('user_birthday');\r\n   * const result = await signInWithPopup(auth, provider);\r\n   *\r\n   * // The signed-in user info.\r\n   * const user = result.user;\r\n   * // This gives you a Facebook Access Token.\r\n   * const credential = FacebookAuthProvider.credentialFromResult(result);\r\n   * const token = credential.accessToken;\r\n   * ```\r\n   *\r\n   * @public\r\n   */\n  var FacebookAuthProvider = /** @class */function (_super) {\n    tslib.__extends(FacebookAuthProvider, _super);\n    function FacebookAuthProvider() {\n      return _super.call(this, \"facebook.com\" /* ProviderId.FACEBOOK */) || this;\n    }\n    /**\r\n     * Creates a credential for Facebook.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * // `event` from the Facebook auth.authResponseChange callback.\r\n     * const credential = FacebookAuthProvider.credential(event.authResponse.accessToken);\r\n     * const result = await signInWithCredential(credential);\r\n     * ```\r\n     *\r\n     * @param accessToken - Facebook access token.\r\n     */\n    FacebookAuthProvider.credential = function (accessToken) {\n      return OAuthCredential._fromParams({\n        providerId: FacebookAuthProvider.PROVIDER_ID,\n        signInMethod: FacebookAuthProvider.FACEBOOK_SIGN_IN_METHOD,\n        accessToken: accessToken\n      });\n    };\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\n    FacebookAuthProvider.credentialFromResult = function (userCredential) {\n      return FacebookAuthProvider.credentialFromTaggedObject(userCredential);\n    };\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\r\n     * thrown during a sign-in, link, or reauthenticate operation.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\n    FacebookAuthProvider.credentialFromError = function (error) {\n      return FacebookAuthProvider.credentialFromTaggedObject(error.customData || {});\n    };\n    FacebookAuthProvider.credentialFromTaggedObject = function (_a) {\n      var tokenResponse = _a._tokenResponse;\n      if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\n        return null;\n      }\n      if (!tokenResponse.oauthAccessToken) {\n        return null;\n      }\n      try {\n        return FacebookAuthProvider.credential(tokenResponse.oauthAccessToken);\n      } catch (_b) {\n        return null;\n      }\n    };\n    /** Always set to {@link SignInMethod}.FACEBOOK. */\n    FacebookAuthProvider.FACEBOOK_SIGN_IN_METHOD = \"facebook.com\" /* SignInMethod.FACEBOOK */;\n    /** Always set to {@link ProviderId}.FACEBOOK. */\n    FacebookAuthProvider.PROVIDER_ID = \"facebook.com\" /* ProviderId.FACEBOOK */;\n    return FacebookAuthProvider;\n  }(BaseOAuthProvider);\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.GOOGLE.\r\n   *\r\n   * @example\r\n   * ```javascript\r\n   * // Sign in using a redirect.\r\n   * const provider = new GoogleAuthProvider();\r\n   * // Start a sign in process for an unauthenticated user.\r\n   * provider.addScope('profile');\r\n   * provider.addScope('email');\r\n   * await signInWithRedirect(auth, provider);\r\n   * // This will trigger a full page redirect away from your app\r\n   *\r\n   * // After returning from the redirect when your app initializes you can obtain the result\r\n   * const result = await getRedirectResult(auth);\r\n   * if (result) {\r\n   *   // This is the signed-in user\r\n   *   const user = result.user;\r\n   *   // This gives you a Google Access Token.\r\n   *   const credential = GoogleAuthProvider.credentialFromResult(result);\r\n   *   const token = credential.accessToken;\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * ```javascript\r\n   * // Sign in using a popup.\r\n   * const provider = new GoogleAuthProvider();\r\n   * provider.addScope('profile');\r\n   * provider.addScope('email');\r\n   * const result = await signInWithPopup(auth, provider);\r\n   *\r\n   * // The signed-in user info.\r\n   * const user = result.user;\r\n   * // This gives you a Google Access Token.\r\n   * const credential = GoogleAuthProvider.credentialFromResult(result);\r\n   * const token = credential.accessToken;\r\n   * ```\r\n   *\r\n   * @public\r\n   */\n  var GoogleAuthProvider = /** @class */function (_super) {\n    tslib.__extends(GoogleAuthProvider, _super);\n    function GoogleAuthProvider() {\n      var _this = _super.call(this, \"google.com\" /* ProviderId.GOOGLE */) || this;\n      _this.addScope('profile');\n      return _this;\n    }\n    /**\r\n     * Creates a credential for Google. At least one of ID token and access token is required.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * // \\`googleUser\\` from the onsuccess Google Sign In callback.\r\n     * const credential = GoogleAuthProvider.credential(googleUser.getAuthResponse().id_token);\r\n     * const result = await signInWithCredential(credential);\r\n     * ```\r\n     *\r\n     * @param idToken - Google ID token.\r\n     * @param accessToken - Google access token.\r\n     */\n    GoogleAuthProvider.credential = function (idToken, accessToken) {\n      return OAuthCredential._fromParams({\n        providerId: GoogleAuthProvider.PROVIDER_ID,\n        signInMethod: GoogleAuthProvider.GOOGLE_SIGN_IN_METHOD,\n        idToken: idToken,\n        accessToken: accessToken\n      });\n    };\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\n    GoogleAuthProvider.credentialFromResult = function (userCredential) {\n      return GoogleAuthProvider.credentialFromTaggedObject(userCredential);\n    };\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\r\n     * thrown during a sign-in, link, or reauthenticate operation.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\n    GoogleAuthProvider.credentialFromError = function (error) {\n      return GoogleAuthProvider.credentialFromTaggedObject(error.customData || {});\n    };\n    GoogleAuthProvider.credentialFromTaggedObject = function (_a) {\n      var tokenResponse = _a._tokenResponse;\n      if (!tokenResponse) {\n        return null;\n      }\n      var _b = tokenResponse,\n        oauthIdToken = _b.oauthIdToken,\n        oauthAccessToken = _b.oauthAccessToken;\n      if (!oauthIdToken && !oauthAccessToken) {\n        // This could be an oauth 1 credential or a phone credential\n        return null;\n      }\n      try {\n        return GoogleAuthProvider.credential(oauthIdToken, oauthAccessToken);\n      } catch (_c) {\n        return null;\n      }\n    };\n    /** Always set to {@link SignInMethod}.GOOGLE. */\n    GoogleAuthProvider.GOOGLE_SIGN_IN_METHOD = \"google.com\" /* SignInMethod.GOOGLE */;\n    /** Always set to {@link ProviderId}.GOOGLE. */\n    GoogleAuthProvider.PROVIDER_ID = \"google.com\" /* ProviderId.GOOGLE */;\n    return GoogleAuthProvider;\n  }(BaseOAuthProvider);\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.GITHUB.\r\n   *\r\n   * @remarks\r\n   * GitHub requires an OAuth 2.0 redirect, so you can either handle the redirect directly, or use\r\n   * the {@link signInWithPopup} handler:\r\n   *\r\n   * @example\r\n   * ```javascript\r\n   * // Sign in using a redirect.\r\n   * const provider = new GithubAuthProvider();\r\n   * // Start a sign in process for an unauthenticated user.\r\n   * provider.addScope('repo');\r\n   * await signInWithRedirect(auth, provider);\r\n   * // This will trigger a full page redirect away from your app\r\n   *\r\n   * // After returning from the redirect when your app initializes you can obtain the result\r\n   * const result = await getRedirectResult(auth);\r\n   * if (result) {\r\n   *   // This is the signed-in user\r\n   *   const user = result.user;\r\n   *   // This gives you a GitHub Access Token.\r\n   *   const credential = GithubAuthProvider.credentialFromResult(result);\r\n   *   const token = credential.accessToken;\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * ```javascript\r\n   * // Sign in using a popup.\r\n   * const provider = new GithubAuthProvider();\r\n   * provider.addScope('repo');\r\n   * const result = await signInWithPopup(auth, provider);\r\n   *\r\n   * // The signed-in user info.\r\n   * const user = result.user;\r\n   * // This gives you a GitHub Access Token.\r\n   * const credential = GithubAuthProvider.credentialFromResult(result);\r\n   * const token = credential.accessToken;\r\n   * ```\r\n   * @public\r\n   */\n  var GithubAuthProvider = /** @class */function (_super) {\n    tslib.__extends(GithubAuthProvider, _super);\n    function GithubAuthProvider() {\n      return _super.call(this, \"github.com\" /* ProviderId.GITHUB */) || this;\n    }\n    /**\r\n     * Creates a credential for GitHub.\r\n     *\r\n     * @param accessToken - GitHub access token.\r\n     */\n    GithubAuthProvider.credential = function (accessToken) {\n      return OAuthCredential._fromParams({\n        providerId: GithubAuthProvider.PROVIDER_ID,\n        signInMethod: GithubAuthProvider.GITHUB_SIGN_IN_METHOD,\n        accessToken: accessToken\n      });\n    };\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\n    GithubAuthProvider.credentialFromResult = function (userCredential) {\n      return GithubAuthProvider.credentialFromTaggedObject(userCredential);\n    };\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\r\n     * thrown during a sign-in, link, or reauthenticate operation.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\n    GithubAuthProvider.credentialFromError = function (error) {\n      return GithubAuthProvider.credentialFromTaggedObject(error.customData || {});\n    };\n    GithubAuthProvider.credentialFromTaggedObject = function (_a) {\n      var tokenResponse = _a._tokenResponse;\n      if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\n        return null;\n      }\n      if (!tokenResponse.oauthAccessToken) {\n        return null;\n      }\n      try {\n        return GithubAuthProvider.credential(tokenResponse.oauthAccessToken);\n      } catch (_b) {\n        return null;\n      }\n    };\n    /** Always set to {@link SignInMethod}.GITHUB. */\n    GithubAuthProvider.GITHUB_SIGN_IN_METHOD = \"github.com\" /* SignInMethod.GITHUB */;\n    /** Always set to {@link ProviderId}.GITHUB. */\n    GithubAuthProvider.PROVIDER_ID = \"github.com\" /* ProviderId.GITHUB */;\n    return GithubAuthProvider;\n  }(BaseOAuthProvider);\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var IDP_REQUEST_URI = 'http://localhost';\n  /**\r\n   * @public\r\n   */\n  var SAMLAuthCredential = /** @class */function (_super) {\n    tslib.__extends(SAMLAuthCredential, _super);\n    /** @internal */\n    function SAMLAuthCredential(providerId, pendingToken) {\n      var _this = _super.call(this, providerId, providerId) || this;\n      _this.pendingToken = pendingToken;\n      return _this;\n    }\n    /** @internal */\n    SAMLAuthCredential.prototype._getIdTokenResponse = function (auth) {\n      var request = this.buildRequest();\n      return signInWithIdp(auth, request);\n    };\n    /** @internal */\n    SAMLAuthCredential.prototype._linkToIdToken = function (auth, idToken) {\n      var request = this.buildRequest();\n      request.idToken = idToken;\n      return signInWithIdp(auth, request);\n    };\n    /** @internal */\n    SAMLAuthCredential.prototype._getReauthenticationResolver = function (auth) {\n      var request = this.buildRequest();\n      request.autoCreate = false;\n      return signInWithIdp(auth, request);\n    };\n    /** {@inheritdoc AuthCredential.toJSON}  */\n    SAMLAuthCredential.prototype.toJSON = function () {\n      return {\n        signInMethod: this.signInMethod,\n        providerId: this.providerId,\n        pendingToken: this.pendingToken\n      };\n    };\n    /**\r\n     * Static method to deserialize a JSON representation of an object into an\r\n     * {@link  AuthCredential}.\r\n     *\r\n     * @param json - Input can be either Object or the stringified representation of the object.\r\n     * When string is provided, JSON.parse would be called first.\r\n     *\r\n     * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\r\n     */\n    SAMLAuthCredential.fromJSON = function (json) {\n      var obj = typeof json === 'string' ? JSON.parse(json) : json;\n      var providerId = obj.providerId,\n        signInMethod = obj.signInMethod,\n        pendingToken = obj.pendingToken;\n      if (!providerId || !signInMethod || !pendingToken || providerId !== signInMethod) {\n        return null;\n      }\n      return new SAMLAuthCredential(providerId, pendingToken);\n    };\n    /**\r\n     * Helper static method to avoid exposing the constructor to end users.\r\n     *\r\n     * @internal\r\n     */\n    SAMLAuthCredential._create = function (providerId, pendingToken) {\n      return new SAMLAuthCredential(providerId, pendingToken);\n    };\n    SAMLAuthCredential.prototype.buildRequest = function () {\n      return {\n        requestUri: IDP_REQUEST_URI,\n        returnSecureToken: true,\n        pendingToken: this.pendingToken\n      };\n    };\n    return SAMLAuthCredential;\n  }(AuthCredential);\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var SAML_PROVIDER_PREFIX = 'saml.';\n  /**\r\n   * An {@link AuthProvider} for SAML.\r\n   *\r\n   * @public\r\n   */\n  var SAMLAuthProvider = /** @class */function (_super) {\n    tslib.__extends(SAMLAuthProvider, _super);\n    /**\r\n     * Constructor. The providerId must start with \"saml.\"\r\n     * @param providerId - SAML provider ID.\r\n     */\n    function SAMLAuthProvider(providerId) {\n      _assert(providerId.startsWith(SAML_PROVIDER_PREFIX), \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n      return _super.call(this, providerId) || this;\n    }\n    /**\r\n     * Generates an {@link AuthCredential} from a {@link UserCredential} after a\r\n     * successful SAML flow completes.\r\n     *\r\n     * @remarks\r\n     *\r\n     * For example, to get an {@link AuthCredential}, you could write the\r\n     * following code:\r\n     *\r\n     * ```js\r\n     * const userCredential = await signInWithPopup(auth, samlProvider);\r\n     * const credential = SAMLAuthProvider.credentialFromResult(userCredential);\r\n     * ```\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\n    SAMLAuthProvider.credentialFromResult = function (userCredential) {\n      return SAMLAuthProvider.samlCredentialFromTaggedObject(userCredential);\n    };\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\r\n     * thrown during a sign-in, link, or reauthenticate operation.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\n    SAMLAuthProvider.credentialFromError = function (error) {\n      return SAMLAuthProvider.samlCredentialFromTaggedObject(error.customData || {});\n    };\n    /**\r\n     * Creates an {@link AuthCredential} from a JSON string or a plain object.\r\n     * @param json - A plain object or a JSON string\r\n     */\n    SAMLAuthProvider.credentialFromJSON = function (json) {\n      var credential = SAMLAuthCredential.fromJSON(json);\n      _assert(credential, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n      return credential;\n    };\n    SAMLAuthProvider.samlCredentialFromTaggedObject = function (_a) {\n      var tokenResponse = _a._tokenResponse;\n      if (!tokenResponse) {\n        return null;\n      }\n      var _b = tokenResponse,\n        pendingToken = _b.pendingToken,\n        providerId = _b.providerId;\n      if (!pendingToken || !providerId) {\n        return null;\n      }\n      try {\n        return SAMLAuthCredential._create(providerId, pendingToken);\n      } catch (e) {\n        return null;\n      }\n    };\n    return SAMLAuthProvider;\n  }(FederatedAuthProvider);\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.TWITTER.\r\n   *\r\n   * @example\r\n   * ```javascript\r\n   * // Sign in using a redirect.\r\n   * const provider = new TwitterAuthProvider();\r\n   * // Start a sign in process for an unauthenticated user.\r\n   * await signInWithRedirect(auth, provider);\r\n   * // This will trigger a full page redirect away from your app\r\n   *\r\n   * // After returning from the redirect when your app initializes you can obtain the result\r\n   * const result = await getRedirectResult(auth);\r\n   * if (result) {\r\n   *   // This is the signed-in user\r\n   *   const user = result.user;\r\n   *   // This gives you a Twitter Access Token and Secret.\r\n   *   const credential = TwitterAuthProvider.credentialFromResult(result);\r\n   *   const token = credential.accessToken;\r\n   *   const secret = credential.secret;\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * ```javascript\r\n   * // Sign in using a popup.\r\n   * const provider = new TwitterAuthProvider();\r\n   * const result = await signInWithPopup(auth, provider);\r\n   *\r\n   * // The signed-in user info.\r\n   * const user = result.user;\r\n   * // This gives you a Twitter Access Token and Secret.\r\n   * const credential = TwitterAuthProvider.credentialFromResult(result);\r\n   * const token = credential.accessToken;\r\n   * const secret = credential.secret;\r\n   * ```\r\n   *\r\n   * @public\r\n   */\n  var TwitterAuthProvider = /** @class */function (_super) {\n    tslib.__extends(TwitterAuthProvider, _super);\n    function TwitterAuthProvider() {\n      return _super.call(this, \"twitter.com\" /* ProviderId.TWITTER */) || this;\n    }\n    /**\r\n     * Creates a credential for Twitter.\r\n     *\r\n     * @param token - Twitter access token.\r\n     * @param secret - Twitter secret.\r\n     */\n    TwitterAuthProvider.credential = function (token, secret) {\n      return OAuthCredential._fromParams({\n        providerId: TwitterAuthProvider.PROVIDER_ID,\n        signInMethod: TwitterAuthProvider.TWITTER_SIGN_IN_METHOD,\n        oauthToken: token,\n        oauthTokenSecret: secret\n      });\n    };\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\n    TwitterAuthProvider.credentialFromResult = function (userCredential) {\n      return TwitterAuthProvider.credentialFromTaggedObject(userCredential);\n    };\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\r\n     * thrown during a sign-in, link, or reauthenticate operation.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\n    TwitterAuthProvider.credentialFromError = function (error) {\n      return TwitterAuthProvider.credentialFromTaggedObject(error.customData || {});\n    };\n    TwitterAuthProvider.credentialFromTaggedObject = function (_a) {\n      var tokenResponse = _a._tokenResponse;\n      if (!tokenResponse) {\n        return null;\n      }\n      var _b = tokenResponse,\n        oauthAccessToken = _b.oauthAccessToken,\n        oauthTokenSecret = _b.oauthTokenSecret;\n      if (!oauthAccessToken || !oauthTokenSecret) {\n        return null;\n      }\n      try {\n        return TwitterAuthProvider.credential(oauthAccessToken, oauthTokenSecret);\n      } catch (_c) {\n        return null;\n      }\n    };\n    /** Always set to {@link SignInMethod}.TWITTER. */\n    TwitterAuthProvider.TWITTER_SIGN_IN_METHOD = \"twitter.com\" /* SignInMethod.TWITTER */;\n    /** Always set to {@link ProviderId}.TWITTER. */\n    TwitterAuthProvider.PROVIDER_ID = \"twitter.com\" /* ProviderId.TWITTER */;\n    return TwitterAuthProvider;\n  }(BaseOAuthProvider);\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function signUp(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signUp\" /* Endpoint.SIGN_UP */, _addTidIfNecessary(auth, request))];\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var UserCredentialImpl = /** @class */function () {\n    function UserCredentialImpl(params) {\n      this.user = params.user;\n      this.providerId = params.providerId;\n      this._tokenResponse = params._tokenResponse;\n      this.operationType = params.operationType;\n    }\n    UserCredentialImpl._fromIdTokenResponse = function (auth, operationType, idTokenResponse, isAnonymous) {\n      if (isAnonymous === undefined) {\n        isAnonymous = false;\n      }\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var user, providerId, userCred;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4 /*yield*/, UserImpl._fromIdTokenResponse(auth, idTokenResponse, isAnonymous)];\n            case 1:\n              user = _a.sent();\n              providerId = providerIdForResponse(idTokenResponse);\n              userCred = new UserCredentialImpl({\n                user: user,\n                providerId: providerId,\n                _tokenResponse: idTokenResponse,\n                operationType: operationType\n              });\n              return [2 /*return*/, userCred];\n          }\n        });\n      });\n    };\n    UserCredentialImpl._forOperation = function (user, operationType, response) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var providerId;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4 /*yield*/, user._updateTokensIfNecessary(response, /* reload */true)];\n            case 1:\n              _a.sent();\n              providerId = providerIdForResponse(response);\n              return [2 /*return*/, new UserCredentialImpl({\n                user: user,\n                providerId: providerId,\n                _tokenResponse: response,\n                operationType: operationType\n              })];\n          }\n        });\n      });\n    };\n    return UserCredentialImpl;\n  }();\n  function providerIdForResponse(response) {\n    if (response.providerId) {\n      return response.providerId;\n    }\n    if ('phoneNumber' in response) {\n      return \"phone\" /* ProviderId.PHONE */;\n    }\n    return null;\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Asynchronously signs in as an anonymous user.\r\n   *\r\n   * @remarks\r\n   * If there is already an anonymous user signed in, that user will be returned; otherwise, a\r\n   * new anonymous user identity will be created and returned.\r\n   *\r\n   * This method is not supported by {@link Auth} instances created with a\r\n   * {@link @firebase/app#FirebaseServerApp}.\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   *\r\n   * @public\r\n   */\n  function signInAnonymously(auth) {\n    var _a;\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var authInternal, response, userCredential;\n      return tslib.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (app._isFirebaseServerApp(auth.app)) {\n              return [2 /*return*/, Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth))];\n            }\n            authInternal = _castAuth(auth);\n            return [4 /*yield*/, authInternal._initializationPromise];\n          case 1:\n            _b.sent();\n            if ((_a = authInternal.currentUser) === null || _a === undefined ? undefined : _a.isAnonymous) {\n              // If an anonymous user is already signed in, no need to sign them in again.\n              return [2 /*return*/, new UserCredentialImpl({\n                user: authInternal.currentUser,\n                providerId: null,\n                operationType: \"signIn\" /* OperationType.SIGN_IN */\n              })];\n            }\n            return [4 /*yield*/, signUp(authInternal, {\n              returnSecureToken: true\n            })];\n          case 2:\n            response = _b.sent();\n            return [4 /*yield*/, UserCredentialImpl._fromIdTokenResponse(authInternal, \"signIn\" /* OperationType.SIGN_IN */, response, true)];\n          case 3:\n            userCredential = _b.sent();\n            return [4 /*yield*/, authInternal._updateCurrentUser(userCredential.user)];\n          case 4:\n            _b.sent();\n            return [2 /*return*/, userCredential];\n        }\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var MultiFactorError = /** @class */function (_super) {\n    tslib.__extends(MultiFactorError, _super);\n    function MultiFactorError(auth, error, operationType, user) {\n      var _this = this;\n      var _a;\n      _this = _super.call(this, error.code, error.message) || this;\n      _this.operationType = operationType;\n      _this.user = user;\n      // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n      Object.setPrototypeOf(_this, MultiFactorError.prototype);\n      _this.customData = {\n        appName: auth.name,\n        tenantId: (_a = auth.tenantId) !== null && _a !== undefined ? _a : undefined,\n        _serverResponse: error.customData._serverResponse,\n        operationType: operationType\n      };\n      return _this;\n    }\n    MultiFactorError._fromErrorAndOperation = function (auth, error, operationType, user) {\n      return new MultiFactorError(auth, error, operationType, user);\n    };\n    return MultiFactorError;\n  }(util.FirebaseError);\n  function _processCredentialSavingMfaContextIfNecessary(auth, operationType, credential, user) {\n    var idTokenProvider = operationType === \"reauthenticate\" /* OperationType.REAUTHENTICATE */ ? credential._getReauthenticationResolver(auth) : credential._getIdTokenResponse(auth);\n    return idTokenProvider.catch(function (error) {\n      if (error.code === \"auth/\".concat(\"multi-factor-auth-required\" /* AuthErrorCode.MFA_REQUIRED */)) {\n        throw MultiFactorError._fromErrorAndOperation(auth, error, operationType, user);\n      }\n      throw error;\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Takes a set of UserInfo provider data and converts it to a set of names\r\n   */\n  function providerDataAsNames(providerData) {\n    return new Set(providerData.map(function (_a) {\n      var providerId = _a.providerId;\n      return providerId;\n    }).filter(function (pid) {\n      return !!pid;\n    }));\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2019 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Unlinks a provider from a user account.\r\n   *\r\n   * @param user - The user.\r\n   * @param providerId - The provider to unlink.\r\n   *\r\n   * @public\r\n   */\n  function unlink(user, providerId) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var userInternal, providerUserInfo, _a, _b, providersLeft;\n      var _c;\n      return tslib.__generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            userInternal = util.getModularInstance(user);\n            return [4 /*yield*/, _assertLinkedStatus(true, userInternal, providerId)];\n          case 1:\n            _d.sent();\n            _a = deleteLinkedAccounts;\n            _b = [userInternal.auth];\n            _c = {};\n            return [4 /*yield*/, userInternal.getIdToken()];\n          case 2:\n            return [4 /*yield*/, _a.apply(undefined, _b.concat([(_c.idToken = _d.sent(), _c.deleteProvider = [providerId], _c)]))];\n          case 3:\n            providerUserInfo = _d.sent().providerUserInfo;\n            providersLeft = providerDataAsNames(providerUserInfo || []);\n            userInternal.providerData = userInternal.providerData.filter(function (pd) {\n              return providersLeft.has(pd.providerId);\n            });\n            if (!providersLeft.has(\"phone\" /* ProviderId.PHONE */)) {\n              userInternal.phoneNumber = null;\n            }\n            return [4 /*yield*/, userInternal.auth._persistUserIfCurrent(userInternal)];\n          case 4:\n            _d.sent();\n            return [2 /*return*/, userInternal];\n        }\n      });\n    });\n  }\n  function _link(user, credential, bypassAuthState) {\n    if (bypassAuthState === undefined) {\n      bypassAuthState = false;\n    }\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var response, _a, _b, _c, _d, _e;\n      return tslib.__generator(this, function (_f) {\n        switch (_f.label) {\n          case 0:\n            _a = _logoutIfInvalidated;\n            _b = [user];\n            _d = (_c = credential)._linkToIdToken;\n            _e = [user.auth];\n            return [4 /*yield*/, user.getIdToken()];\n          case 1:\n            return [4 /*yield*/, _a.apply(undefined, _b.concat([_d.apply(_c, _e.concat([_f.sent()])), bypassAuthState]))];\n          case 2:\n            response = _f.sent();\n            return [2 /*return*/, UserCredentialImpl._forOperation(user, \"link\" /* OperationType.LINK */, response)];\n        }\n      });\n    });\n  }\n  function _assertLinkedStatus(expected, user, provider) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var providerIds, code;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, _reloadWithoutSaving(user)];\n          case 1:\n            _a.sent();\n            providerIds = providerDataAsNames(user.providerData);\n            code = expected === false ? \"provider-already-linked\" /* AuthErrorCode.PROVIDER_ALREADY_LINKED */ : \"no-such-provider\" /* AuthErrorCode.NO_SUCH_PROVIDER */;\n            _assert(providerIds.has(provider) === expected, user.auth, code);\n            return [2 /*return*/];\n        }\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2019 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function _reauthenticate(user, credential, bypassAuthState) {\n    if (bypassAuthState === undefined) {\n      bypassAuthState = false;\n    }\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var auth, operationType, response, parsed, localId, e_1;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            auth = user.auth;\n            if (app._isFirebaseServerApp(auth.app)) {\n              return [2 /*return*/, Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth))];\n            }\n            operationType = \"reauthenticate\" /* OperationType.REAUTHENTICATE */;\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, _logoutIfInvalidated(user, _processCredentialSavingMfaContextIfNecessary(auth, operationType, credential, user), bypassAuthState)];\n          case 2:\n            response = _a.sent();\n            _assert(response.idToken, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n            parsed = _parseToken(response.idToken);\n            _assert(parsed, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n            localId = parsed.sub;\n            _assert(user.uid === localId, auth, \"user-mismatch\" /* AuthErrorCode.USER_MISMATCH */);\n            return [2 /*return*/, UserCredentialImpl._forOperation(user, operationType, response)];\n          case 3:\n            e_1 = _a.sent();\n            // Convert user deleted error into user mismatch\n            if ((e_1 === null || e_1 === undefined ? undefined : e_1.code) === \"auth/\".concat(\"user-not-found\" /* AuthErrorCode.USER_DELETED */)) {\n              _fail(auth, \"user-mismatch\" /* AuthErrorCode.USER_MISMATCH */);\n            }\n            throw e_1;\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function _signInWithCredential(auth, credential, bypassAuthState) {\n    if (bypassAuthState === undefined) {\n      bypassAuthState = false;\n    }\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var operationType, response, userCredential;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (app._isFirebaseServerApp(auth.app)) {\n              return [2 /*return*/, Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth))];\n            }\n            operationType = \"signIn\" /* OperationType.SIGN_IN */;\n            return [4 /*yield*/, _processCredentialSavingMfaContextIfNecessary(auth, operationType, credential)];\n          case 1:\n            response = _a.sent();\n            return [4 /*yield*/, UserCredentialImpl._fromIdTokenResponse(auth, operationType, response)];\n          case 2:\n            userCredential = _a.sent();\n            if (!!bypassAuthState) return [3 /*break*/, 4];\n            return [4 /*yield*/, auth._updateCurrentUser(userCredential.user)];\n          case 3:\n            _a.sent();\n            _a.label = 4;\n          case 4:\n            return [2 /*return*/, userCredential];\n        }\n      });\n    });\n  }\n  /**\r\n   * Asynchronously signs in with the given credentials.\r\n   *\r\n   * @remarks\r\n   * An {@link AuthProvider} can be used to generate the credential.\r\n   *\r\n   * This method is not supported by {@link Auth} instances created with a\r\n   * {@link @firebase/app#FirebaseServerApp}.\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   * @param credential - The auth credential.\r\n   *\r\n   * @public\r\n   */\n  function signInWithCredential(auth, credential) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, _signInWithCredential(_castAuth(auth), credential)];\n      });\n    });\n  }\n  /**\r\n   * Links the user account with the given credentials.\r\n   *\r\n   * @remarks\r\n   * An {@link AuthProvider} can be used to generate the credential.\r\n   *\r\n   * @param user - The user.\r\n   * @param credential - The auth credential.\r\n   *\r\n   * @public\r\n   */\n  function linkWithCredential(user, credential) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var userInternal;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            userInternal = util.getModularInstance(user);\n            return [4 /*yield*/, _assertLinkedStatus(false, userInternal, credential.providerId)];\n          case 1:\n            _a.sent();\n            return [2 /*return*/, _link(userInternal, credential)];\n        }\n      });\n    });\n  }\n  /**\r\n   * Re-authenticates a user using a fresh credential.\r\n   *\r\n   * @remarks\r\n   * Use before operations such as {@link updatePassword} that require tokens from recent sign-in\r\n   * attempts. This method can be used to recover from a `CREDENTIAL_TOO_OLD_LOGIN_AGAIN` error\r\n   * or a `TOKEN_EXPIRED` error.\r\n   *\r\n   * This method is not supported on any {@link User} signed in by {@link Auth} instances\r\n   * created with a {@link @firebase/app#FirebaseServerApp}.\r\n   *\r\n   * @param user - The user.\r\n   * @param credential - The auth credential.\r\n   *\r\n   * @public\r\n   */\n  function reauthenticateWithCredential(user, credential) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, _reauthenticate(util.getModularInstance(user), credential)];\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function signInWithCustomToken$1(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithCustomToken\" /* Endpoint.SIGN_IN_WITH_CUSTOM_TOKEN */, _addTidIfNecessary(auth, request))];\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Asynchronously signs in using a custom token.\r\n   *\r\n   * @remarks\r\n   * Custom tokens are used to integrate Firebase Auth with existing auth systems, and must\r\n   * be generated by an auth backend using the\r\n   * {@link https://firebase.google.com/docs/reference/admin/node/admin.auth.Auth#createcustomtoken | createCustomToken}\r\n   * method in the {@link https://firebase.google.com/docs/auth/admin | Admin SDK} .\r\n   *\r\n   * Fails with an error if the token is invalid, expired, or not accepted by the Firebase Auth service.\r\n   *\r\n   * This method is not supported by {@link Auth} instances created with a\r\n   * {@link @firebase/app#FirebaseServerApp}.\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   * @param customToken - The custom token to sign in with.\r\n   *\r\n   * @public\r\n   */\n  function signInWithCustomToken(auth, customToken) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var authInternal, response, cred;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (app._isFirebaseServerApp(auth.app)) {\n              return [2 /*return*/, Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth))];\n            }\n            authInternal = _castAuth(auth);\n            return [4 /*yield*/, signInWithCustomToken$1(authInternal, {\n              token: customToken,\n              returnSecureToken: true\n            })];\n          case 1:\n            response = _a.sent();\n            return [4 /*yield*/, UserCredentialImpl._fromIdTokenResponse(authInternal, \"signIn\" /* OperationType.SIGN_IN */, response)];\n          case 2:\n            cred = _a.sent();\n            return [4 /*yield*/, authInternal._updateCurrentUser(cred.user)];\n          case 3:\n            _a.sent();\n            return [2 /*return*/, cred];\n        }\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var MultiFactorInfoImpl = /** @class */function () {\n    function MultiFactorInfoImpl(factorId, response) {\n      this.factorId = factorId;\n      this.uid = response.mfaEnrollmentId;\n      this.enrollmentTime = new Date(response.enrolledAt).toUTCString();\n      this.displayName = response.displayName;\n    }\n    MultiFactorInfoImpl._fromServerResponse = function (auth, enrollment) {\n      if ('phoneInfo' in enrollment) {\n        return PhoneMultiFactorInfoImpl._fromServerResponse(auth, enrollment);\n      } else if ('totpInfo' in enrollment) {\n        return TotpMultiFactorInfoImpl._fromServerResponse(auth, enrollment);\n      }\n      return _fail(auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n    };\n    return MultiFactorInfoImpl;\n  }();\n  var PhoneMultiFactorInfoImpl = /** @class */function (_super) {\n    tslib.__extends(PhoneMultiFactorInfoImpl, _super);\n    function PhoneMultiFactorInfoImpl(response) {\n      var _this = _super.call(this, \"phone\" /* FactorId.PHONE */, response) || this;\n      _this.phoneNumber = response.phoneInfo;\n      return _this;\n    }\n    PhoneMultiFactorInfoImpl._fromServerResponse = function (_auth, enrollment) {\n      return new PhoneMultiFactorInfoImpl(enrollment);\n    };\n    return PhoneMultiFactorInfoImpl;\n  }(MultiFactorInfoImpl);\n  var TotpMultiFactorInfoImpl = /** @class */function (_super) {\n    tslib.__extends(TotpMultiFactorInfoImpl, _super);\n    function TotpMultiFactorInfoImpl(response) {\n      return _super.call(this, \"totp\" /* FactorId.TOTP */, response) || this;\n    }\n    TotpMultiFactorInfoImpl._fromServerResponse = function (_auth, enrollment) {\n      return new TotpMultiFactorInfoImpl(enrollment);\n    };\n    return TotpMultiFactorInfoImpl;\n  }(MultiFactorInfoImpl);\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function _setActionCodeSettingsOnRequest(auth, request, actionCodeSettings) {\n    var _a;\n    _assert(((_a = actionCodeSettings.url) === null || _a === undefined ? undefined : _a.length) > 0, auth, \"invalid-continue-uri\" /* AuthErrorCode.INVALID_CONTINUE_URI */);\n    _assert(typeof actionCodeSettings.dynamicLinkDomain === 'undefined' || actionCodeSettings.dynamicLinkDomain.length > 0, auth, \"invalid-dynamic-link-domain\" /* AuthErrorCode.INVALID_DYNAMIC_LINK_DOMAIN */);\n    request.continueUrl = actionCodeSettings.url;\n    request.dynamicLinkDomain = actionCodeSettings.dynamicLinkDomain;\n    request.canHandleCodeInApp = actionCodeSettings.handleCodeInApp;\n    if (actionCodeSettings.iOS) {\n      _assert(actionCodeSettings.iOS.bundleId.length > 0, auth, \"missing-ios-bundle-id\" /* AuthErrorCode.MISSING_IOS_BUNDLE_ID */);\n      request.iOSBundleId = actionCodeSettings.iOS.bundleId;\n    }\n    if (actionCodeSettings.android) {\n      _assert(actionCodeSettings.android.packageName.length > 0, auth, \"missing-android-pkg-name\" /* AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME */);\n      request.androidInstallApp = actionCodeSettings.android.installApp;\n      request.androidMinimumVersionCode = actionCodeSettings.android.minimumVersion;\n      request.androidPackageName = actionCodeSettings.android.packageName;\n    }\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Updates the password policy cached in the {@link Auth} instance if a policy is already\r\n   * cached for the project or tenant.\r\n   *\r\n   * @remarks\r\n   * We only fetch the password policy if the password did not meet policy requirements and\r\n   * there is an existing policy cached. A developer must call validatePassword at least\r\n   * once for the cache to be automatically updated.\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   *\r\n   * @private\r\n   */\n  function recachePasswordPolicy(auth) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var authInternal;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            authInternal = _castAuth(auth);\n            if (!authInternal._getPasswordPolicyInternal()) return [3 /*break*/, 2];\n            return [4 /*yield*/, authInternal._updatePasswordPolicy()];\n          case 1:\n            _a.sent();\n            _a.label = 2;\n          case 2:\n            return [2 /*return*/];\n        }\n      });\n    });\n  }\n  /**\r\n   * Sends a password reset email to the given email address. This method does not throw an error when\r\n   * there's no user account with the given email address and\r\n   * {@link https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection | Email Enumeration Protection}\r\n   * is enabled.\r\n   *\r\n   * @remarks\r\n   * To complete the password reset, call {@link confirmPasswordReset} with the code supplied in\r\n   * the email sent to the user, along with the new password specified by the user.\r\n   *\r\n   * @example\r\n   * ```javascript\r\n   * const actionCodeSettings = {\r\n   *   url: 'https://www.example.com/?email=user@example.com',\r\n   *   iOS: {\r\n   *      bundleId: 'com.example.ios'\r\n   *   },\r\n   *   android: {\r\n   *     packageName: 'com.example.android',\r\n   *     installApp: true,\r\n   *     minimumVersion: '12'\r\n   *   },\r\n   *   handleCodeInApp: true\r\n   * };\r\n   * await sendPasswordResetEmail(auth, 'user@example.com', actionCodeSettings);\r\n   * // Obtain code from user.\r\n   * await confirmPasswordReset('user@example.com', code);\r\n   * ```\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   * @param email - The user's email address.\r\n   * @param actionCodeSettings - The {@link ActionCodeSettings}.\r\n   *\r\n   * @public\r\n   */\n  function sendPasswordResetEmail(auth, email, actionCodeSettings) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var authInternal, request;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            authInternal = _castAuth(auth);\n            request = {\n              requestType: \"PASSWORD_RESET\" /* ActionCodeOperation.PASSWORD_RESET */,\n              email: email,\n              clientType: \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */\n            };\n            if (actionCodeSettings) {\n              _setActionCodeSettingsOnRequest(authInternal, request, actionCodeSettings);\n            }\n            return [4 /*yield*/, handleRecaptchaFlow(authInternal, request, \"getOobCode\" /* RecaptchaActionName.GET_OOB_CODE */, sendPasswordResetEmail$1)];\n          case 1:\n            _a.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  }\n  /**\r\n   * Completes the password reset process, given a confirmation code and new password.\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   * @param oobCode - A confirmation code sent to the user.\r\n   * @param newPassword - The new password.\r\n   *\r\n   * @public\r\n   */\n  function confirmPasswordReset(auth, oobCode, newPassword) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var _this = this;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, resetPassword(util.getModularInstance(auth), {\n              oobCode: oobCode,\n              newPassword: newPassword\n            }).catch(function (error) {\n              return tslib.__awaiter(_this, undefined, undefined, function () {\n                return tslib.__generator(this, function (_a) {\n                  if (error.code === \"auth/\".concat(\"password-does-not-meet-requirements\" /* AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS */)) {\n                    void recachePasswordPolicy(auth);\n                  }\n                  throw error;\n                });\n              });\n            })];\n          case 1:\n            _a.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  }\n  /**\r\n   * Applies a verification code sent to the user by email or other out-of-band mechanism.\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   * @param oobCode - A verification code sent to the user.\r\n   *\r\n   * @public\r\n   */\n  function applyActionCode(auth, oobCode) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, applyActionCode$1(util.getModularInstance(auth), {\n              oobCode: oobCode\n            })];\n          case 1:\n            _a.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  }\n  /**\r\n   * Checks a verification code sent to the user by email or other out-of-band mechanism.\r\n   *\r\n   * @returns metadata about the code.\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   * @param oobCode - A verification code sent to the user.\r\n   *\r\n   * @public\r\n   */\n  function checkActionCode(auth, oobCode) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var authModular, response, operation, multiFactorInfo;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            authModular = util.getModularInstance(auth);\n            return [4 /*yield*/, resetPassword(authModular, {\n              oobCode: oobCode\n            })];\n          case 1:\n            response = _a.sent();\n            operation = response.requestType;\n            _assert(operation, authModular, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n            switch (operation) {\n              case \"EMAIL_SIGNIN\" /* ActionCodeOperation.EMAIL_SIGNIN */:\n                break;\n              case \"VERIFY_AND_CHANGE_EMAIL\" /* ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL */:\n                _assert(response.newEmail, authModular, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n                break;\n              case \"REVERT_SECOND_FACTOR_ADDITION\" /* ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION */:\n                _assert(response.mfaInfo, authModular, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n              // fall through\n              default:\n                _assert(response.email, authModular, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n            }\n            multiFactorInfo = null;\n            if (response.mfaInfo) {\n              multiFactorInfo = MultiFactorInfoImpl._fromServerResponse(_castAuth(authModular), response.mfaInfo);\n            }\n            return [2 /*return*/, {\n              data: {\n                email: (response.requestType === \"VERIFY_AND_CHANGE_EMAIL\" /* ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL */ ? response.newEmail : response.email) || null,\n                previousEmail: (response.requestType === \"VERIFY_AND_CHANGE_EMAIL\" /* ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL */ ? response.email : response.newEmail) || null,\n                multiFactorInfo: multiFactorInfo\n              },\n              operation: operation\n            }];\n        }\n      });\n    });\n  }\n  /**\r\n   * Checks a password reset code sent to the user by email or other out-of-band mechanism.\r\n   *\r\n   * @returns the user's email address if valid.\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   * @param code - A verification code sent to the user.\r\n   *\r\n   * @public\r\n   */\n  function verifyPasswordResetCode(auth, code) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var data;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, checkActionCode(util.getModularInstance(auth), code)];\n          case 1:\n            data = _a.sent().data;\n            // Email should always be present since a code was sent to it\n            return [2 /*return*/, data.email];\n        }\n      });\n    });\n  }\n  /**\r\n   * Creates a new user account associated with the specified email address and password.\r\n   *\r\n   * @remarks\r\n   * On successful creation of the user account, this user will also be signed in to your application.\r\n   *\r\n   * User account creation can fail if the account already exists or the password is invalid.\r\n   *\r\n   * This method is not supported on {@link Auth} instances created with a\r\n   * {@link @firebase/app#FirebaseServerApp}.\r\n   *\r\n   * Note: The email address acts as a unique identifier for the user and enables an email-based\r\n   * password reset. This function will create a new user account and set the initial user password.\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   * @param email - The user's email address.\r\n   * @param password - The user's chosen password.\r\n   *\r\n   * @public\r\n   */\n  function createUserWithEmailAndPassword(auth, email, password) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var authInternal, request, signUpResponse, response, userCredential;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (app._isFirebaseServerApp(auth.app)) {\n              return [2 /*return*/, Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth))];\n            }\n            authInternal = _castAuth(auth);\n            request = {\n              returnSecureToken: true,\n              email: email,\n              password: password,\n              clientType: \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */\n            };\n            signUpResponse = handleRecaptchaFlow(authInternal, request, \"signUpPassword\" /* RecaptchaActionName.SIGN_UP_PASSWORD */, signUp);\n            return [4 /*yield*/, signUpResponse.catch(function (error) {\n              if (error.code === \"auth/\".concat(\"password-does-not-meet-requirements\" /* AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS */)) {\n                void recachePasswordPolicy(auth);\n              }\n              throw error;\n            })];\n          case 1:\n            response = _a.sent();\n            return [4 /*yield*/, UserCredentialImpl._fromIdTokenResponse(authInternal, \"signIn\" /* OperationType.SIGN_IN */, response)];\n          case 2:\n            userCredential = _a.sent();\n            return [4 /*yield*/, authInternal._updateCurrentUser(userCredential.user)];\n          case 3:\n            _a.sent();\n            return [2 /*return*/, userCredential];\n        }\n      });\n    });\n  }\n  /**\r\n   * Asynchronously signs in using an email and password.\r\n   *\r\n   * @remarks\r\n   * Fails with an error if the email address and password do not match. When\r\n   * {@link https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection | Email Enumeration Protection}\r\n   * is enabled, this method fails with \"auth/invalid-credential\" in case of an invalid\r\n   * email/password.\r\n   *\r\n   * This method is not supported on {@link Auth} instances created with a\r\n   * {@link @firebase/app#FirebaseServerApp}.\r\n   *\r\n   * Note: The user's password is NOT the password used to access the user's email account. The\r\n   * email address serves as a unique identifier for the user, and the password is used to access\r\n   * the user's account in your Firebase project. See also: {@link createUserWithEmailAndPassword}.\r\n   *\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   * @param email - The users email address.\r\n   * @param password - The users password.\r\n   *\r\n   * @public\r\n   */\n  function signInWithEmailAndPassword(auth, email, password) {\n    var _this = this;\n    if (app._isFirebaseServerApp(auth.app)) {\n      return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth));\n    }\n    return signInWithCredential(util.getModularInstance(auth), EmailAuthProvider.credential(email, password)).catch(function (error) {\n      return tslib.__awaiter(_this, undefined, undefined, function () {\n        return tslib.__generator(this, function (_a) {\n          if (error.code === \"auth/\".concat(\"password-does-not-meet-requirements\" /* AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS */)) {\n            void recachePasswordPolicy(auth);\n          }\n          throw error;\n        });\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Sends a sign-in email link to the user with the specified email.\r\n   *\r\n   * @remarks\r\n   * The sign-in operation has to always be completed in the app unlike other out of band email\r\n   * actions (password reset and email verifications). This is because, at the end of the flow,\r\n   * the user is expected to be signed in and their Auth state persisted within the app.\r\n   *\r\n   * To complete sign in with the email link, call {@link signInWithEmailLink} with the email\r\n   * address and the email link supplied in the email sent to the user.\r\n   *\r\n   * @example\r\n   * ```javascript\r\n   * const actionCodeSettings = {\r\n   *   url: 'https://www.example.com/?email=user@example.com',\r\n   *   iOS: {\r\n   *      bundleId: 'com.example.ios'\r\n   *   },\r\n   *   android: {\r\n   *     packageName: 'com.example.android',\r\n   *     installApp: true,\r\n   *     minimumVersion: '12'\r\n   *   },\r\n   *   handleCodeInApp: true\r\n   * };\r\n   * await sendSignInLinkToEmail(auth, 'user@example.com', actionCodeSettings);\r\n   * // Obtain emailLink from the user.\r\n   * if(isSignInWithEmailLink(auth, emailLink)) {\r\n   *   await signInWithEmailLink(auth, 'user@example.com', emailLink);\r\n   * }\r\n   * ```\r\n   *\r\n   * @param authInternal - The {@link Auth} instance.\r\n   * @param email - The user's email address.\r\n   * @param actionCodeSettings - The {@link ActionCodeSettings}.\r\n   *\r\n   * @public\r\n   */\n  function sendSignInLinkToEmail(auth, email, actionCodeSettings) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      function setActionCodeSettings(request, actionCodeSettings) {\n        _assert(actionCodeSettings.handleCodeInApp, authInternal, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n        if (actionCodeSettings) {\n          _setActionCodeSettingsOnRequest(authInternal, request, actionCodeSettings);\n        }\n      }\n      var authInternal, request;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            authInternal = _castAuth(auth);\n            request = {\n              requestType: \"EMAIL_SIGNIN\" /* ActionCodeOperation.EMAIL_SIGNIN */,\n              email: email,\n              clientType: \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */\n            };\n            setActionCodeSettings(request, actionCodeSettings);\n            return [4 /*yield*/, handleRecaptchaFlow(authInternal, request, \"getOobCode\" /* RecaptchaActionName.GET_OOB_CODE */, sendSignInLinkToEmail$1)];\n          case 1:\n            _a.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  }\n  /**\r\n   * Checks if an incoming link is a sign-in with email link suitable for {@link signInWithEmailLink}.\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   * @param emailLink - The link sent to the user's email address.\r\n   *\r\n   * @public\r\n   */\n  function isSignInWithEmailLink(auth, emailLink) {\n    var actionCodeUrl = ActionCodeURL.parseLink(emailLink);\n    return (actionCodeUrl === null || actionCodeUrl === undefined ? undefined : actionCodeUrl.operation) === \"EMAIL_SIGNIN\" /* ActionCodeOperation.EMAIL_SIGNIN */;\n  }\n  /**\r\n   * Asynchronously signs in using an email and sign-in email link.\r\n   *\r\n   * @remarks\r\n   * If no link is passed, the link is inferred from the current URL.\r\n   *\r\n   * Fails with an error if the email address is invalid or OTP in email link expires.\r\n   *\r\n   * This method is not supported by {@link Auth} instances created with a\r\n   * {@link @firebase/app#FirebaseServerApp}.\r\n   *\r\n   * Note: Confirm the link is a sign-in email link before calling this method firebase.auth.Auth.isSignInWithEmailLink.\r\n   *\r\n   * @example\r\n   * ```javascript\r\n   * const actionCodeSettings = {\r\n   *   url: 'https://www.example.com/?email=user@example.com',\r\n   *   iOS: {\r\n   *      bundleId: 'com.example.ios'\r\n   *   },\r\n   *   android: {\r\n   *     packageName: 'com.example.android',\r\n   *     installApp: true,\r\n   *     minimumVersion: '12'\r\n   *   },\r\n   *   handleCodeInApp: true\r\n   * };\r\n   * await sendSignInLinkToEmail(auth, 'user@example.com', actionCodeSettings);\r\n   * // Obtain emailLink from the user.\r\n   * if(isSignInWithEmailLink(auth, emailLink)) {\r\n   *   await signInWithEmailLink(auth, 'user@example.com', emailLink);\r\n   * }\r\n   * ```\r\n   *\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   * @param email - The user's email address.\r\n   * @param emailLink - The link sent to the user's email address.\r\n   *\r\n   * @public\r\n   */\n  function signInWithEmailLink(auth, email, emailLink) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var authModular, credential;\n      return tslib.__generator(this, function (_a) {\n        if (app._isFirebaseServerApp(auth.app)) {\n          return [2 /*return*/, Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth))];\n        }\n        authModular = util.getModularInstance(auth);\n        credential = EmailAuthProvider.credentialWithLink(email, emailLink || _getCurrentUrl());\n        // Check if the tenant ID in the email link matches the tenant ID on Auth\n        // instance.\n        _assert(credential._tenantId === (authModular.tenantId || null), authModular, \"tenant-id-mismatch\" /* AuthErrorCode.TENANT_ID_MISMATCH */);\n        return [2 /*return*/, signInWithCredential(authModular, credential)];\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function createAuthUri(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:createAuthUri\" /* Endpoint.CREATE_AUTH_URI */, _addTidIfNecessary(auth, request))];\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Gets the list of possible sign in methods for the given email address. This method returns an\r\n   * empty list when\r\n   * {@link https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection | Email Enumeration Protection}\r\n   * is enabled, irrespective of the number of authentication methods available for the given email.\r\n   *\r\n   * @remarks\r\n   * This is useful to differentiate methods of sign-in for the same provider, eg.\r\n   * {@link EmailAuthProvider} which has 2 methods of sign-in,\r\n   * {@link SignInMethod}.EMAIL_PASSWORD and\r\n   * {@link SignInMethod}.EMAIL_LINK.\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   * @param email - The user's email address.\r\n   *\r\n   * Deprecated. Migrating off of this method is recommended as a security best-practice.\r\n   * Learn more in the Identity Platform documentation for\r\n   * {@link https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection | Email Enumeration Protection}.\r\n   * @public\r\n   */\n  function fetchSignInMethodsForEmail(auth, email) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var continueUri, request, signinMethods;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            continueUri = _isHttpOrHttps() ? _getCurrentUrl() : 'http://localhost';\n            request = {\n              identifier: email,\n              continueUri: continueUri\n            };\n            return [4 /*yield*/, createAuthUri(util.getModularInstance(auth), request)];\n          case 1:\n            signinMethods = _a.sent().signinMethods;\n            return [2 /*return*/, signinMethods || []];\n        }\n      });\n    });\n  }\n  /**\r\n   * Sends a verification email to a user.\r\n   *\r\n   * @remarks\r\n   * The verification process is completed by calling {@link applyActionCode}.\r\n   *\r\n   * @example\r\n   * ```javascript\r\n   * const actionCodeSettings = {\r\n   *   url: 'https://www.example.com/?email=user@example.com',\r\n   *   iOS: {\r\n   *      bundleId: 'com.example.ios'\r\n   *   },\r\n   *   android: {\r\n   *     packageName: 'com.example.android',\r\n   *     installApp: true,\r\n   *     minimumVersion: '12'\r\n   *   },\r\n   *   handleCodeInApp: true\r\n   * };\r\n   * await sendEmailVerification(user, actionCodeSettings);\r\n   * // Obtain code from the user.\r\n   * await applyActionCode(auth, code);\r\n   * ```\r\n   *\r\n   * @param user - The user.\r\n   * @param actionCodeSettings - The {@link ActionCodeSettings}.\r\n   *\r\n   * @public\r\n   */\n  function sendEmailVerification(user, actionCodeSettings) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var userInternal, idToken, request, email;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            userInternal = util.getModularInstance(user);\n            return [4 /*yield*/, user.getIdToken()];\n          case 1:\n            idToken = _a.sent();\n            request = {\n              requestType: \"VERIFY_EMAIL\" /* ActionCodeOperation.VERIFY_EMAIL */,\n              idToken: idToken\n            };\n            if (actionCodeSettings) {\n              _setActionCodeSettingsOnRequest(userInternal.auth, request, actionCodeSettings);\n            }\n            return [4 /*yield*/, sendEmailVerification$1(userInternal.auth, request)];\n          case 2:\n            email = _a.sent().email;\n            if (!(email !== user.email)) return [3 /*break*/, 4];\n            return [4 /*yield*/, user.reload()];\n          case 3:\n            _a.sent();\n            _a.label = 4;\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  }\n  /**\r\n   * Sends a verification email to a new email address.\r\n   *\r\n   * @remarks\r\n   * The user's email will be updated to the new one after being verified.\r\n   *\r\n   * If you have a custom email action handler, you can complete the verification process by calling\r\n   * {@link applyActionCode}.\r\n   *\r\n   * @example\r\n   * ```javascript\r\n   * const actionCodeSettings = {\r\n   *   url: 'https://www.example.com/?email=user@example.com',\r\n   *   iOS: {\r\n   *      bundleId: 'com.example.ios'\r\n   *   },\r\n   *   android: {\r\n   *     packageName: 'com.example.android',\r\n   *     installApp: true,\r\n   *     minimumVersion: '12'\r\n   *   },\r\n   *   handleCodeInApp: true\r\n   * };\r\n   * await verifyBeforeUpdateEmail(user, 'newemail@example.com', actionCodeSettings);\r\n   * // Obtain code from the user.\r\n   * await applyActionCode(auth, code);\r\n   * ```\r\n   *\r\n   * @param user - The user.\r\n   * @param newEmail - The new email address to be verified before update.\r\n   * @param actionCodeSettings - The {@link ActionCodeSettings}.\r\n   *\r\n   * @public\r\n   */\n  function verifyBeforeUpdateEmail(user, newEmail, actionCodeSettings) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var userInternal, idToken, request, email;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            userInternal = util.getModularInstance(user);\n            return [4 /*yield*/, user.getIdToken()];\n          case 1:\n            idToken = _a.sent();\n            request = {\n              requestType: \"VERIFY_AND_CHANGE_EMAIL\" /* ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL */,\n              idToken: idToken,\n              newEmail: newEmail\n            };\n            if (actionCodeSettings) {\n              _setActionCodeSettingsOnRequest(userInternal.auth, request, actionCodeSettings);\n            }\n            return [4 /*yield*/, verifyAndChangeEmail(userInternal.auth, request)];\n          case 2:\n            email = _a.sent().email;\n            if (!(email !== user.email)) return [3 /*break*/, 4];\n            // If the local copy of the email on user is outdated, reload the\n            // user.\n            return [4 /*yield*/, user.reload()];\n          case 3:\n            // If the local copy of the email on user is outdated, reload the\n            // user.\n            _a.sent();\n            _a.label = 4;\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function updateProfile$1(auth, request) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:update\" /* Endpoint.SET_ACCOUNT_INFO */, request)];\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Updates a user's profile data.\r\n   *\r\n   * @param user - The user.\r\n   * @param profile - The profile's `displayName` and `photoURL` to update.\r\n   *\r\n   * @public\r\n   */\n  function updateProfile(user, _a) {\n    var displayName = _a.displayName,\n      photoUrl = _a.photoURL;\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var userInternal, idToken, profileRequest, response, passwordProvider;\n      return tslib.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (displayName === undefined && photoUrl === undefined) {\n              return [2 /*return*/];\n            }\n            userInternal = util.getModularInstance(user);\n            return [4 /*yield*/, userInternal.getIdToken()];\n          case 1:\n            idToken = _b.sent();\n            profileRequest = {\n              idToken: idToken,\n              displayName: displayName,\n              photoUrl: photoUrl,\n              returnSecureToken: true\n            };\n            return [4 /*yield*/, _logoutIfInvalidated(userInternal, updateProfile$1(userInternal.auth, profileRequest))];\n          case 2:\n            response = _b.sent();\n            userInternal.displayName = response.displayName || null;\n            userInternal.photoURL = response.photoUrl || null;\n            passwordProvider = userInternal.providerData.find(function (_a) {\n              var providerId = _a.providerId;\n              return providerId === \"password\" /* ProviderId.PASSWORD */;\n            });\n            if (passwordProvider) {\n              passwordProvider.displayName = userInternal.displayName;\n              passwordProvider.photoURL = userInternal.photoURL;\n            }\n            return [4 /*yield*/, userInternal._updateTokensIfNecessary(response)];\n          case 3:\n            _b.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  }\n  /**\r\n   * Updates the user's email address.\r\n   *\r\n   * @remarks\r\n   * An email will be sent to the original email address (if it was set) that allows to revoke the\r\n   * email address change, in order to protect them from account hijacking.\r\n   *\r\n   * This method is not supported on any {@link User} signed in by {@link Auth} instances\r\n   * created with a {@link @firebase/app#FirebaseServerApp}.\r\n   *\r\n   * Important: this is a security sensitive operation that requires the user to have recently signed\r\n   * in. If this requirement isn't met, ask the user to authenticate again and then call\r\n   * {@link reauthenticateWithCredential}.\r\n   *\r\n   * @param user - The user.\r\n   * @param newEmail - The new email address.\r\n   *\r\n   * Throws \"auth/operation-not-allowed\" error when\r\n   * {@link https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection | Email Enumeration Protection}\r\n   * is enabled.\r\n   * Deprecated - Use {@link verifyBeforeUpdateEmail} instead.\r\n   *\r\n   * @public\r\n   */\n  function updateEmail(user, newEmail) {\n    var userInternal = util.getModularInstance(user);\n    if (app._isFirebaseServerApp(userInternal.auth.app)) {\n      return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(userInternal.auth));\n    }\n    return updateEmailOrPassword(userInternal, newEmail, null);\n  }\n  /**\r\n   * Updates the user's password.\r\n   *\r\n   * @remarks\r\n   * Important: this is a security sensitive operation that requires the user to have recently signed\r\n   * in. If this requirement isn't met, ask the user to authenticate again and then call\r\n   * {@link reauthenticateWithCredential}.\r\n   *\r\n   * @param user - The user.\r\n   * @param newPassword - The new password.\r\n   *\r\n   * @public\r\n   */\n  function updatePassword(user, newPassword) {\n    return updateEmailOrPassword(util.getModularInstance(user), null, newPassword);\n  }\n  function updateEmailOrPassword(user, email, password) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var auth, idToken, request, response;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            auth = user.auth;\n            return [4 /*yield*/, user.getIdToken()];\n          case 1:\n            idToken = _a.sent();\n            request = {\n              idToken: idToken,\n              returnSecureToken: true\n            };\n            if (email) {\n              request.email = email;\n            }\n            if (password) {\n              request.password = password;\n            }\n            return [4 /*yield*/, _logoutIfInvalidated(user, updateEmailPassword(auth, request))];\n          case 2:\n            response = _a.sent();\n            return [4 /*yield*/, user._updateTokensIfNecessary(response, /* reload */true)];\n          case 3:\n            _a.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2019 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Parse the `AdditionalUserInfo` from the ID token response.\r\n   *\r\n   */\n  function _fromIdTokenResponse(idTokenResponse) {\n    var _a, _b;\n    if (!idTokenResponse) {\n      return null;\n    }\n    var providerId = idTokenResponse.providerId;\n    var profile = idTokenResponse.rawUserInfo ? JSON.parse(idTokenResponse.rawUserInfo) : {};\n    var isNewUser = idTokenResponse.isNewUser || idTokenResponse.kind === \"identitytoolkit#SignupNewUserResponse\" /* IdTokenResponseKind.SignupNewUser */;\n    if (!providerId && (idTokenResponse === null || idTokenResponse === undefined ? undefined : idTokenResponse.idToken)) {\n      var signInProvider = (_b = (_a = _parseToken(idTokenResponse.idToken)) === null || _a === undefined ? undefined : _a.firebase) === null || _b === undefined ? undefined : _b['sign_in_provider'];\n      if (signInProvider) {\n        var filteredProviderId = signInProvider !== \"anonymous\" /* ProviderId.ANONYMOUS */ && signInProvider !== \"custom\" /* ProviderId.CUSTOM */ ? signInProvider : null;\n        // Uses generic class in accordance with the legacy SDK.\n        return new GenericAdditionalUserInfo(isNewUser, filteredProviderId);\n      }\n    }\n    if (!providerId) {\n      return null;\n    }\n    switch (providerId) {\n      case \"facebook.com\" /* ProviderId.FACEBOOK */:\n        return new FacebookAdditionalUserInfo(isNewUser, profile);\n      case \"github.com\" /* ProviderId.GITHUB */:\n        return new GithubAdditionalUserInfo(isNewUser, profile);\n      case \"google.com\" /* ProviderId.GOOGLE */:\n        return new GoogleAdditionalUserInfo(isNewUser, profile);\n      case \"twitter.com\" /* ProviderId.TWITTER */:\n        return new TwitterAdditionalUserInfo(isNewUser, profile, idTokenResponse.screenName || null);\n      case \"custom\" /* ProviderId.CUSTOM */:\n      case \"anonymous\" /* ProviderId.ANONYMOUS */:\n        return new GenericAdditionalUserInfo(isNewUser, null);\n      default:\n        return new GenericAdditionalUserInfo(isNewUser, providerId, profile);\n    }\n  }\n  var GenericAdditionalUserInfo = /** @class */function () {\n    function GenericAdditionalUserInfo(isNewUser, providerId, profile) {\n      if (profile === undefined) {\n        profile = {};\n      }\n      this.isNewUser = isNewUser;\n      this.providerId = providerId;\n      this.profile = profile;\n    }\n    return GenericAdditionalUserInfo;\n  }();\n  var FederatedAdditionalUserInfoWithUsername = /** @class */function (_super) {\n    tslib.__extends(FederatedAdditionalUserInfoWithUsername, _super);\n    function FederatedAdditionalUserInfoWithUsername(isNewUser, providerId, profile, username) {\n      var _this = _super.call(this, isNewUser, providerId, profile) || this;\n      _this.username = username;\n      return _this;\n    }\n    return FederatedAdditionalUserInfoWithUsername;\n  }(GenericAdditionalUserInfo);\n  var FacebookAdditionalUserInfo = /** @class */function (_super) {\n    tslib.__extends(FacebookAdditionalUserInfo, _super);\n    function FacebookAdditionalUserInfo(isNewUser, profile) {\n      return _super.call(this, isNewUser, \"facebook.com\" /* ProviderId.FACEBOOK */, profile) || this;\n    }\n    return FacebookAdditionalUserInfo;\n  }(GenericAdditionalUserInfo);\n  var GithubAdditionalUserInfo = /** @class */function (_super) {\n    tslib.__extends(GithubAdditionalUserInfo, _super);\n    function GithubAdditionalUserInfo(isNewUser, profile) {\n      return _super.call(this, isNewUser, \"github.com\" /* ProviderId.GITHUB */, profile, typeof (profile === null || profile === undefined ? undefined : profile.login) === 'string' ? profile === null || profile === undefined ? undefined : profile.login : null) || this;\n    }\n    return GithubAdditionalUserInfo;\n  }(FederatedAdditionalUserInfoWithUsername);\n  var GoogleAdditionalUserInfo = /** @class */function (_super) {\n    tslib.__extends(GoogleAdditionalUserInfo, _super);\n    function GoogleAdditionalUserInfo(isNewUser, profile) {\n      return _super.call(this, isNewUser, \"google.com\" /* ProviderId.GOOGLE */, profile) || this;\n    }\n    return GoogleAdditionalUserInfo;\n  }(GenericAdditionalUserInfo);\n  var TwitterAdditionalUserInfo = /** @class */function (_super) {\n    tslib.__extends(TwitterAdditionalUserInfo, _super);\n    function TwitterAdditionalUserInfo(isNewUser, profile, screenName) {\n      return _super.call(this, isNewUser, \"twitter.com\" /* ProviderId.TWITTER */, profile, screenName) || this;\n    }\n    return TwitterAdditionalUserInfo;\n  }(FederatedAdditionalUserInfoWithUsername);\n  /**\r\n   * Extracts provider specific {@link AdditionalUserInfo} for the given credential.\r\n   *\r\n   * @param userCredential - The user credential.\r\n   *\r\n   * @public\r\n   */\n  function getAdditionalUserInfo(userCredential) {\n    var _a = userCredential,\n      user = _a.user,\n      _tokenResponse = _a._tokenResponse;\n    if (user.isAnonymous && !_tokenResponse) {\n      // Handle the special case where signInAnonymously() gets called twice.\n      // No network call is made so there's nothing to actually fill this in\n      return {\n        providerId: null,\n        isNewUser: false,\n        profile: null\n      };\n    }\n    return _fromIdTokenResponse(_tokenResponse);\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  // Non-optional auth methods.\n  /**\r\n   * Changes the type of persistence on the {@link Auth} instance for the currently saved\r\n   * `Auth` session and applies this type of persistence for future sign-in requests, including\r\n   * sign-in with redirect requests.\r\n   *\r\n   * @remarks\r\n   * This makes it easy for a user signing in to specify whether their session should be\r\n   * remembered or not. It also makes it easier to never persist the `Auth` state for applications\r\n   * that are shared by other users or have sensitive data.\r\n   *\r\n   * This method does not work in a Node.js environment or with {@link Auth} instances created with a\r\n   * {@link @firebase/app#FirebaseServerApp}.\r\n   *\r\n   * @example\r\n   * ```javascript\r\n   * setPersistence(auth, browserSessionPersistence);\r\n   * ```\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   * @param persistence - The {@link Persistence} to use.\r\n   * @returns A `Promise` that resolves once the persistence change has completed\r\n   *\r\n   * @public\r\n   */\n  function setPersistence(auth, persistence) {\n    return util.getModularInstance(auth).setPersistence(persistence);\n  }\n  /**\r\n   * Loads the reCAPTCHA configuration into the `Auth` instance.\r\n   *\r\n   * @remarks\r\n   * This will load the reCAPTCHA config, which indicates whether the reCAPTCHA\r\n   * verification flow should be triggered for each auth provider, into the\r\n   * current Auth session.\r\n   *\r\n   * If initializeRecaptchaConfig() is not invoked, the auth flow will always start\r\n   * without reCAPTCHA verification. If the provider is configured to require reCAPTCHA\r\n   * verification, the SDK will transparently load the reCAPTCHA config and restart the\r\n   * auth flows.\r\n   *\r\n   * Thus, by calling this optional method, you will reduce the latency of future auth flows.\r\n   * Loading the reCAPTCHA config early will also enhance the signal collected by reCAPTCHA.\r\n   *\r\n   * This method does not work in a Node.js environment.\r\n   *\r\n   * @example\r\n   * ```javascript\r\n   * initializeRecaptchaConfig(auth);\r\n   * ```\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   *\r\n   * @public\r\n   */\n  function initializeRecaptchaConfig(auth) {\n    return _initializeRecaptchaConfig(auth);\n  }\n  /**\r\n   * Validates the password against the password policy configured for the project or tenant.\r\n   *\r\n   * @remarks\r\n   * If no tenant ID is set on the `Auth` instance, then this method will use the password\r\n   * policy configured for the project. Otherwise, this method will use the policy configured\r\n   * for the tenant. If a password policy has not been configured, then the default policy\r\n   * configured for all projects will be used.\r\n   *\r\n   * If an auth flow fails because a submitted password does not meet the password policy\r\n   * requirements and this method has previously been called, then this method will use the\r\n   * most recent policy available when called again.\r\n   *\r\n   * @example\r\n   * ```javascript\r\n   * validatePassword(auth, 'some-password');\r\n   * ```\r\n   *\r\n   * @param auth The {@link Auth} instance.\r\n   * @param password The password to validate.\r\n   *\r\n   * @public\r\n   */\n  function validatePassword(auth, password) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var authInternal;\n      return tslib.__generator(this, function (_a) {\n        authInternal = _castAuth(auth);\n        return [2 /*return*/, authInternal.validatePassword(password)];\n      });\n    });\n  }\n  /**\r\n   * Adds an observer for changes to the signed-in user's ID token.\r\n   *\r\n   * @remarks\r\n   * This includes sign-in, sign-out, and token refresh events.\r\n   * This will not be triggered automatically upon ID token expiration. Use {@link User.getIdToken} to refresh the ID token.\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   * @param nextOrObserver - callback triggered on change.\r\n   * @param error - Deprecated. This callback is never triggered. Errors\r\n   * on signing in/out can be caught in promises returned from\r\n   * sign-in/sign-out functions.\r\n   * @param completed - Deprecated. This callback is never triggered.\r\n   *\r\n   * @public\r\n   */\n  function onIdTokenChanged(auth, nextOrObserver, error, completed) {\n    return util.getModularInstance(auth).onIdTokenChanged(nextOrObserver, error, completed);\n  }\n  /**\r\n   * Adds a blocking callback that runs before an auth state change\r\n   * sets a new user.\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   * @param callback - callback triggered before new user value is set.\r\n   *   If this throws, it blocks the user from being set.\r\n   * @param onAbort - callback triggered if a later `beforeAuthStateChanged()`\r\n   *   callback throws, allowing you to undo any side effects.\r\n   */\n  function beforeAuthStateChanged(auth, callback, onAbort) {\n    return util.getModularInstance(auth).beforeAuthStateChanged(callback, onAbort);\n  }\n  /**\r\n   * Adds an observer for changes to the user's sign-in state.\r\n   *\r\n   * @remarks\r\n   * To keep the old behavior, see {@link onIdTokenChanged}.\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   * @param nextOrObserver - callback triggered on change.\r\n   * @param error - Deprecated. This callback is never triggered. Errors\r\n   * on signing in/out can be caught in promises returned from\r\n   * sign-in/sign-out functions.\r\n   * @param completed - Deprecated. This callback is never triggered.\r\n   *\r\n   * @public\r\n   */\n  function onAuthStateChanged(auth, nextOrObserver, error, completed) {\n    return util.getModularInstance(auth).onAuthStateChanged(nextOrObserver, error, completed);\n  }\n  /**\r\n   * Sets the current language to the default device/browser preference.\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   *\r\n   * @public\r\n   */\n  function useDeviceLanguage(auth) {\n    util.getModularInstance(auth).useDeviceLanguage();\n  }\n  /**\r\n   * Asynchronously sets the provided user as {@link Auth.currentUser} on the\r\n   * {@link Auth} instance.\r\n   *\r\n   * @remarks\r\n   * A new instance copy of the user provided will be made and set as currentUser.\r\n   *\r\n   * This will trigger {@link onAuthStateChanged} and {@link onIdTokenChanged} listeners\r\n   * like other sign in methods.\r\n   *\r\n   * The operation fails with an error if the user to be updated belongs to a different Firebase\r\n   * project.\r\n   *\r\n   * This method is not supported by {@link Auth} instances created with a\r\n   * {@link @firebase/app#FirebaseServerApp}.\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   * @param user - The new {@link User}.\r\n   *\r\n   * @public\r\n   */\n  function updateCurrentUser(auth, user) {\n    return util.getModularInstance(auth).updateCurrentUser(user);\n  }\n  /**\r\n   * Signs out the current user.\r\n   *\r\n   * @remarks\r\n   * This method is not supported by {@link Auth} instances created with a\r\n   * {@link @firebase/app#FirebaseServerApp}.\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   *\r\n   * @public\r\n   */\n  function signOut(auth) {\n    return util.getModularInstance(auth).signOut();\n  }\n  /**\r\n   * Revokes the given access token. Currently only supports Apple OAuth access tokens.\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   * @param token - The Apple OAuth access token.\r\n   *\r\n   * @public\r\n   */\n  function revokeAccessToken(auth, token) {\n    var authInternal = _castAuth(auth);\n    return authInternal.revokeAccessToken(token);\n  }\n  /**\r\n   * Deletes and signs out the user.\r\n   *\r\n   * @remarks\r\n   * Important: this is a security-sensitive operation that requires the user to have recently\r\n   * signed in. If this requirement isn't met, ask the user to authenticate again and then call\r\n   * {@link reauthenticateWithCredential}.\r\n   *\r\n   * @param user - The user.\r\n   *\r\n   * @public\r\n   */\n  function deleteUser(user) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2 /*return*/, util.getModularInstance(user).delete()];\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var MultiFactorSessionImpl = /** @class */function () {\n    function MultiFactorSessionImpl(type, credential, user) {\n      this.type = type;\n      this.credential = credential;\n      this.user = user;\n    }\n    MultiFactorSessionImpl._fromIdtoken = function (idToken, user) {\n      return new MultiFactorSessionImpl(\"enroll\" /* MultiFactorSessionType.ENROLL */, idToken, user);\n    };\n    MultiFactorSessionImpl._fromMfaPendingCredential = function (mfaPendingCredential) {\n      return new MultiFactorSessionImpl(\"signin\" /* MultiFactorSessionType.SIGN_IN */, mfaPendingCredential);\n    };\n    MultiFactorSessionImpl.prototype.toJSON = function () {\n      var _a;\n      var key = this.type === \"enroll\" /* MultiFactorSessionType.ENROLL */ ? 'idToken' : 'pendingCredential';\n      return {\n        multiFactorSession: (_a = {}, _a[key] = this.credential, _a)\n      };\n    };\n    MultiFactorSessionImpl.fromJSON = function (obj) {\n      var _a, _b;\n      if (obj === null || obj === undefined ? undefined : obj.multiFactorSession) {\n        if ((_a = obj.multiFactorSession) === null || _a === undefined ? undefined : _a.pendingCredential) {\n          return MultiFactorSessionImpl._fromMfaPendingCredential(obj.multiFactorSession.pendingCredential);\n        } else if ((_b = obj.multiFactorSession) === null || _b === undefined ? undefined : _b.idToken) {\n          return MultiFactorSessionImpl._fromIdtoken(obj.multiFactorSession.idToken);\n        }\n      }\n      return null;\n    };\n    return MultiFactorSessionImpl;\n  }();\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var MultiFactorResolverImpl = /** @class */function () {\n    function MultiFactorResolverImpl(session, hints, signInResolver) {\n      this.session = session;\n      this.hints = hints;\n      this.signInResolver = signInResolver;\n    }\n    /** @internal */\n    MultiFactorResolverImpl._fromError = function (authExtern, error) {\n      var _this = this;\n      var auth = _castAuth(authExtern);\n      var serverResponse = error.customData._serverResponse;\n      var hints = (serverResponse.mfaInfo || []).map(function (enrollment) {\n        return MultiFactorInfoImpl._fromServerResponse(auth, enrollment);\n      });\n      _assert(serverResponse.mfaPendingCredential, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n      var session = MultiFactorSessionImpl._fromMfaPendingCredential(serverResponse.mfaPendingCredential);\n      return new MultiFactorResolverImpl(session, hints, function (assertion) {\n        return tslib.__awaiter(_this, undefined, undefined, function () {\n          var mfaResponse, idTokenResponse, _a, userCredential;\n          return tslib.__generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                return [4 /*yield*/, assertion._process(auth, session)];\n              case 1:\n                mfaResponse = _b.sent();\n                // Clear out the unneeded fields from the old login response\n                delete serverResponse.mfaInfo;\n                delete serverResponse.mfaPendingCredential;\n                idTokenResponse = tslib.__assign(tslib.__assign({}, serverResponse), {\n                  idToken: mfaResponse.idToken,\n                  refreshToken: mfaResponse.refreshToken\n                });\n                _a = error.operationType;\n                switch (_a) {\n                  case \"signIn\" /* OperationType.SIGN_IN */:\n                    return [3 /*break*/, 2];\n                  case \"reauthenticate\" /* OperationType.REAUTHENTICATE */:\n                    return [3 /*break*/, 5];\n                }\n                return [3 /*break*/, 6];\n              case 2:\n                return [4 /*yield*/, UserCredentialImpl._fromIdTokenResponse(auth, error.operationType, idTokenResponse)];\n              case 3:\n                userCredential = _b.sent();\n                return [4 /*yield*/, auth._updateCurrentUser(userCredential.user)];\n              case 4:\n                _b.sent();\n                return [2 /*return*/, userCredential];\n              case 5:\n                _assert(error.user, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n                return [2 /*return*/, UserCredentialImpl._forOperation(error.user, error.operationType, idTokenResponse)];\n              case 6:\n                _fail(auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n                _b.label = 7;\n              case 7:\n                return [2 /*return*/];\n            }\n          });\n        });\n      });\n    };\n    MultiFactorResolverImpl.prototype.resolveSignIn = function (assertionExtern) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var assertion;\n        return tslib.__generator(this, function (_a) {\n          assertion = assertionExtern;\n          return [2 /*return*/, this.signInResolver(assertion)];\n        });\n      });\n    };\n    return MultiFactorResolverImpl;\n  }();\n  /**\r\n   * Provides a {@link MultiFactorResolver} suitable for completion of a\r\n   * multi-factor flow.\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   * @param error - The {@link MultiFactorError} raised during a sign-in, or\r\n   * reauthentication operation.\r\n   *\r\n   * @public\r\n   */\n  function getMultiFactorResolver(auth, error) {\n    var _a;\n    var authModular = util.getModularInstance(auth);\n    var errorInternal = error;\n    _assert(error.customData.operationType, authModular, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n    _assert((_a = errorInternal.customData._serverResponse) === null || _a === undefined ? undefined : _a.mfaPendingCredential, authModular, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n    return MultiFactorResolverImpl._fromError(authModular, errorInternal);\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function startEnrollPhoneMfa(auth, request) {\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts/mfaEnrollment:start\" /* Endpoint.START_MFA_ENROLLMENT */, _addTidIfNecessary(auth, request));\n  }\n  function finalizeEnrollPhoneMfa(auth, request) {\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts/mfaEnrollment:finalize\" /* Endpoint.FINALIZE_MFA_ENROLLMENT */, _addTidIfNecessary(auth, request));\n  }\n  function startEnrollTotpMfa(auth, request) {\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts/mfaEnrollment:start\" /* Endpoint.START_MFA_ENROLLMENT */, _addTidIfNecessary(auth, request));\n  }\n  function finalizeEnrollTotpMfa(auth, request) {\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts/mfaEnrollment:finalize\" /* Endpoint.FINALIZE_MFA_ENROLLMENT */, _addTidIfNecessary(auth, request));\n  }\n  function withdrawMfa(auth, request) {\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts/mfaEnrollment:withdraw\" /* Endpoint.WITHDRAW_MFA */, _addTidIfNecessary(auth, request));\n  }\n  var MultiFactorUserImpl = /** @class */function () {\n    function MultiFactorUserImpl(user) {\n      var _this = this;\n      this.user = user;\n      this.enrolledFactors = [];\n      user._onReload(function (userInfo) {\n        if (userInfo.mfaInfo) {\n          _this.enrolledFactors = userInfo.mfaInfo.map(function (enrollment) {\n            return MultiFactorInfoImpl._fromServerResponse(user.auth, enrollment);\n          });\n        }\n      });\n    }\n    MultiFactorUserImpl._fromUser = function (user) {\n      return new MultiFactorUserImpl(user);\n    };\n    MultiFactorUserImpl.prototype.getSession = function () {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var _a, _b;\n        return tslib.__generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              _b = (_a = MultiFactorSessionImpl)._fromIdtoken;\n              return [4 /*yield*/, this.user.getIdToken()];\n            case 1:\n              return [2 /*return*/, _b.apply(_a, [_c.sent(), this.user])];\n          }\n        });\n      });\n    };\n    MultiFactorUserImpl.prototype.enroll = function (assertionExtern, displayName) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var assertion, session, finalizeMfaResponse;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              assertion = assertionExtern;\n              return [4 /*yield*/, this.getSession()];\n            case 1:\n              session = _a.sent();\n              return [4 /*yield*/, _logoutIfInvalidated(this.user, assertion._process(this.user.auth, session, displayName))];\n            case 2:\n              finalizeMfaResponse = _a.sent();\n              // New tokens will be issued after enrollment of the new second factors.\n              // They need to be updated on the user.\n              return [4 /*yield*/, this.user._updateTokensIfNecessary(finalizeMfaResponse)];\n            case 3:\n              // New tokens will be issued after enrollment of the new second factors.\n              // They need to be updated on the user.\n              _a.sent();\n              // The user needs to be reloaded to get the new multi-factor information\n              // from server. USER_RELOADED event will be triggered and `enrolledFactors`\n              // will be updated.\n              return [2 /*return*/, this.user.reload()];\n          }\n        });\n      });\n    };\n    MultiFactorUserImpl.prototype.unenroll = function (infoOrUid) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var mfaEnrollmentId, idToken, idTokenResponse, e_1;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              mfaEnrollmentId = typeof infoOrUid === 'string' ? infoOrUid : infoOrUid.uid;\n              return [4 /*yield*/, this.user.getIdToken()];\n            case 1:\n              idToken = _a.sent();\n              _a.label = 2;\n            case 2:\n              _a.trys.push([2, 6,, 7]);\n              return [4 /*yield*/, _logoutIfInvalidated(this.user, withdrawMfa(this.user.auth, {\n                idToken: idToken,\n                mfaEnrollmentId: mfaEnrollmentId\n              }))];\n            case 3:\n              idTokenResponse = _a.sent();\n              // Remove the second factor from the user's list.\n              this.enrolledFactors = this.enrolledFactors.filter(function (_a) {\n                var uid = _a.uid;\n                return uid !== mfaEnrollmentId;\n              });\n              // Depending on whether the backend decided to revoke the user's session,\n              // the tokenResponse may be empty. If the tokens were not updated (and they\n              // are now invalid), reloading the user will discover this and invalidate\n              // the user's state accordingly.\n              return [4 /*yield*/, this.user._updateTokensIfNecessary(idTokenResponse)];\n            case 4:\n              // Depending on whether the backend decided to revoke the user's session,\n              // the tokenResponse may be empty. If the tokens were not updated (and they\n              // are now invalid), reloading the user will discover this and invalidate\n              // the user's state accordingly.\n              _a.sent();\n              return [4 /*yield*/, this.user.reload()];\n            case 5:\n              _a.sent();\n              return [3 /*break*/, 7];\n            case 6:\n              e_1 = _a.sent();\n              throw e_1;\n            case 7:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n    return MultiFactorUserImpl;\n  }();\n  var multiFactorUserCache = new WeakMap();\n  /**\r\n   * The {@link MultiFactorUser} corresponding to the user.\r\n   *\r\n   * @remarks\r\n   * This is used to access all multi-factor properties and operations related to the user.\r\n   *\r\n   * @param user - The user.\r\n   *\r\n   * @public\r\n   */\n  function multiFactor(user) {\n    var userModular = util.getModularInstance(user);\n    if (!multiFactorUserCache.has(userModular)) {\n      multiFactorUserCache.set(userModular, MultiFactorUserImpl._fromUser(userModular));\n    }\n    return multiFactorUserCache.get(userModular);\n  }\n  var name = \"@firebase/auth\";\n  var version = \"1.7.9\";\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var AuthInterop = /** @class */function () {\n    function AuthInterop(auth) {\n      this.auth = auth;\n      this.internalListeners = new Map();\n    }\n    AuthInterop.prototype.getUid = function () {\n      var _a;\n      this.assertAuthConfigured();\n      return ((_a = this.auth.currentUser) === null || _a === undefined ? undefined : _a.uid) || null;\n    };\n    AuthInterop.prototype.getToken = function (forceRefresh) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var accessToken;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              this.assertAuthConfigured();\n              return [4 /*yield*/, this.auth._initializationPromise];\n            case 1:\n              _a.sent();\n              if (!this.auth.currentUser) {\n                return [2 /*return*/, null];\n              }\n              return [4 /*yield*/, this.auth.currentUser.getIdToken(forceRefresh)];\n            case 2:\n              accessToken = _a.sent();\n              return [2 /*return*/, {\n                accessToken: accessToken\n              }];\n          }\n        });\n      });\n    };\n    AuthInterop.prototype.addAuthTokenListener = function (listener) {\n      this.assertAuthConfigured();\n      if (this.internalListeners.has(listener)) {\n        return;\n      }\n      var unsubscribe = this.auth.onIdTokenChanged(function (user) {\n        listener((user === null || user === undefined ? undefined : user.stsTokenManager.accessToken) || null);\n      });\n      this.internalListeners.set(listener, unsubscribe);\n      this.updateProactiveRefresh();\n    };\n    AuthInterop.prototype.removeAuthTokenListener = function (listener) {\n      this.assertAuthConfigured();\n      var unsubscribe = this.internalListeners.get(listener);\n      if (!unsubscribe) {\n        return;\n      }\n      this.internalListeners.delete(listener);\n      unsubscribe();\n      this.updateProactiveRefresh();\n    };\n    AuthInterop.prototype.assertAuthConfigured = function () {\n      _assert(this.auth._initializationPromise, \"dependent-sdk-initialized-before-auth\" /* AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH */);\n    };\n    AuthInterop.prototype.updateProactiveRefresh = function () {\n      if (this.internalListeners.size > 0) {\n        this.auth._startProactiveRefresh();\n      } else {\n        this.auth._stopProactiveRefresh();\n      }\n    };\n    return AuthInterop;\n  }();\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function getVersionForPlatform(clientPlatform) {\n    switch (clientPlatform) {\n      case \"Node\" /* ClientPlatform.NODE */:\n        return 'node';\n      case \"ReactNative\" /* ClientPlatform.REACT_NATIVE */:\n        return 'rn';\n      case \"Worker\" /* ClientPlatform.WORKER */:\n        return 'webworker';\n      case \"Cordova\" /* ClientPlatform.CORDOVA */:\n        return 'cordova';\n      case \"WebExtension\" /* ClientPlatform.WEB_EXTENSION */:\n        return 'web-extension';\n      default:\n        return undefined;\n    }\n  }\n  /** @internal */\n  function registerAuth(clientPlatform) {\n    app._registerComponent(new component.Component(\"auth\" /* _ComponentName.AUTH */, function (container, _a) {\n      var deps = _a.options;\n      var app = container.getProvider('app').getImmediate();\n      var heartbeatServiceProvider = container.getProvider('heartbeat');\n      var appCheckServiceProvider = container.getProvider('app-check-internal');\n      var _b = app.options,\n        apiKey = _b.apiKey,\n        authDomain = _b.authDomain;\n      _assert(apiKey && !apiKey.includes(':'), \"invalid-api-key\" /* AuthErrorCode.INVALID_API_KEY */, {\n        appName: app.name\n      });\n      var config = {\n        apiKey: apiKey,\n        authDomain: authDomain,\n        clientPlatform: clientPlatform,\n        apiHost: \"identitytoolkit.googleapis.com\" /* DefaultConfig.API_HOST */,\n        tokenApiHost: \"securetoken.googleapis.com\" /* DefaultConfig.TOKEN_API_HOST */,\n        apiScheme: \"https\" /* DefaultConfig.API_SCHEME */,\n        sdkClientVersion: _getClientVersion(clientPlatform)\n      };\n      var authInstance = new AuthImpl(app, heartbeatServiceProvider, appCheckServiceProvider, config);\n      _initializeAuthInstance(authInstance, deps);\n      return authInstance;\n    }, \"PUBLIC\" /* ComponentType.PUBLIC */)\n    /**\r\n     * Auth can only be initialized by explicitly calling getAuth() or initializeAuth()\r\n     * For why we do this, See go/firebase-next-auth-init\r\n     */.setInstantiationMode(\"EXPLICIT\" /* InstantiationMode.EXPLICIT */)\n    /**\r\n     * Because all firebase products that depend on auth depend on auth-internal directly,\r\n     * we need to initialize auth-internal after auth is initialized to make it available to other firebase products.\r\n     */.setInstanceCreatedCallback(function (container, _instanceIdentifier, _instance) {\n      var authInternalProvider = container.getProvider(\"auth-internal\" /* _ComponentName.AUTH_INTERNAL */);\n      authInternalProvider.initialize();\n    }));\n    app._registerComponent(new component.Component(\"auth-internal\" /* _ComponentName.AUTH_INTERNAL */, function (container) {\n      var auth = _castAuth(container.getProvider(\"auth\" /* _ComponentName.AUTH */).getImmediate());\n      return function (auth) {\n        return new AuthInterop(auth);\n      }(auth);\n    }, \"PRIVATE\" /* ComponentType.PRIVATE */).setInstantiationMode(\"EXPLICIT\" /* InstantiationMode.EXPLICIT */));\n    app.registerVersion(name, version, getVersionForPlatform(clientPlatform));\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n    app.registerVersion(name, version, 'cjs5');\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2021 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * An enum of factors that may be used for multifactor authentication.\r\n   *\r\n   * @public\r\n   */\n  var FactorId = {\n    /** Phone as second factor */\n    PHONE: 'phone',\n    TOTP: 'totp'\n  };\n  /**\r\n   * Enumeration of supported providers.\r\n   *\r\n   * @public\r\n   */\n  var ProviderId = {\n    /** Facebook provider ID */\n    FACEBOOK: 'facebook.com',\n    /** GitHub provider ID */\n    GITHUB: 'github.com',\n    /** Google provider ID */\n    GOOGLE: 'google.com',\n    /** Password provider */\n    PASSWORD: 'password',\n    /** Phone provider */\n    PHONE: 'phone',\n    /** Twitter provider ID */\n    TWITTER: 'twitter.com'\n  };\n  /**\r\n   * Enumeration of supported sign-in methods.\r\n   *\r\n   * @public\r\n   */\n  var SignInMethod = {\n    /** Email link sign in method */\n    EMAIL_LINK: 'emailLink',\n    /** Email/password sign in method */\n    EMAIL_PASSWORD: 'password',\n    /** Facebook sign in method */\n    FACEBOOK: 'facebook.com',\n    /** GitHub sign in method */\n    GITHUB: 'github.com',\n    /** Google sign in method */\n    GOOGLE: 'google.com',\n    /** Phone sign in method */\n    PHONE: 'phone',\n    /** Twitter sign in method */\n    TWITTER: 'twitter.com'\n  };\n  /**\r\n   * Enumeration of supported operation types.\r\n   *\r\n   * @public\r\n   */\n  var OperationType = {\n    /** Operation involving linking an additional provider to an already signed-in user. */\n    LINK: 'link',\n    /** Operation involving using a provider to reauthenticate an already signed-in user. */\n    REAUTHENTICATE: 'reauthenticate',\n    /** Operation involving signing in a user. */\n    SIGN_IN: 'signIn'\n  };\n  /**\r\n   * An enumeration of the possible email action types.\r\n   *\r\n   * @public\r\n   */\n  var ActionCodeOperation = {\n    /** The email link sign-in action. */\n    EMAIL_SIGNIN: 'EMAIL_SIGNIN',\n    /** The password reset action. */\n    PASSWORD_RESET: 'PASSWORD_RESET',\n    /** The email revocation action. */\n    RECOVER_EMAIL: 'RECOVER_EMAIL',\n    /** The revert second factor addition email action. */\n    REVERT_SECOND_FACTOR_ADDITION: 'REVERT_SECOND_FACTOR_ADDITION',\n    /** The revert second factor addition email action. */\n    VERIFY_AND_CHANGE_EMAIL: 'VERIFY_AND_CHANGE_EMAIL',\n    /** The email verification action. */\n    VERIFY_EMAIL: 'VERIFY_EMAIL'\n  };\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function startSignInPhoneMfa(auth, request) {\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts/mfaSignIn:start\" /* Endpoint.START_MFA_SIGN_IN */, _addTidIfNecessary(auth, request));\n  }\n  function finalizeSignInPhoneMfa(auth, request) {\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts/mfaSignIn:finalize\" /* Endpoint.FINALIZE_MFA_SIGN_IN */, _addTidIfNecessary(auth, request));\n  }\n  function finalizeSignInTotpMfa(auth, request) {\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts/mfaSignIn:finalize\" /* Endpoint.FINALIZE_MFA_SIGN_IN */, _addTidIfNecessary(auth, request));\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Lazy accessor for window, since the compat layer won't tree shake this out,\r\n   * we need to make sure not to mess with window unless we have to\r\n   */\n  function _window() {\n    return window;\n  }\n  function _setWindowLocation(url) {\n    _window().location.href = url;\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC.\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function _isWorker() {\n    return typeof _window()['WorkerGlobalScope'] !== 'undefined' && typeof _window()['importScripts'] === 'function';\n  }\n  function _getActiveServiceWorker() {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var registration;\n      return tslib.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!(navigator === null || navigator === undefined ? undefined : navigator.serviceWorker)) {\n              return [2 /*return*/, null];\n            }\n            _b.label = 1;\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, navigator.serviceWorker.ready];\n          case 2:\n            registration = _b.sent();\n            return [2 /*return*/, registration.active];\n          case 3:\n            _b.sent();\n            return [2 /*return*/, null];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  }\n  function _getServiceWorkerController() {\n    var _a;\n    return ((_a = navigator === null || navigator === undefined ? undefined : navigator.serviceWorker) === null || _a === undefined ? undefined : _a.controller) || null;\n  }\n  function _getWorkerGlobalScope() {\n    return _isWorker() ? self : null;\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var _SOLVE_TIME_MS = 500;\n  var _EXPIRATION_TIME_MS = 60000;\n  var _WIDGET_ID_START = 1000000000000;\n  var MockReCaptcha = /** @class */function () {\n    function MockReCaptcha(auth) {\n      this.auth = auth;\n      this.counter = _WIDGET_ID_START;\n      this._widgets = new Map();\n    }\n    MockReCaptcha.prototype.render = function (container, parameters) {\n      var id = this.counter;\n      this._widgets.set(id, new MockWidget(container, this.auth.name, parameters || {}));\n      this.counter++;\n      return id;\n    };\n    MockReCaptcha.prototype.reset = function (optWidgetId) {\n      var _a;\n      var id = optWidgetId || _WIDGET_ID_START;\n      void ((_a = this._widgets.get(id)) === null || _a === undefined ? undefined : _a.delete());\n      this._widgets.delete(id);\n    };\n    MockReCaptcha.prototype.getResponse = function (optWidgetId) {\n      var _a;\n      var id = optWidgetId || _WIDGET_ID_START;\n      return ((_a = this._widgets.get(id)) === null || _a === undefined ? undefined : _a.getResponse()) || '';\n    };\n    MockReCaptcha.prototype.execute = function (optWidgetId) {\n      var _a;\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var id;\n        return tslib.__generator(this, function (_b) {\n          id = optWidgetId || _WIDGET_ID_START;\n          void ((_a = this._widgets.get(id)) === null || _a === undefined ? undefined : _a.execute());\n          return [2 /*return*/, ''];\n        });\n      });\n    };\n    return MockReCaptcha;\n  }();\n  var MockWidget = /** @class */function () {\n    function MockWidget(containerOrId, appName, params) {\n      var _this = this;\n      this.params = params;\n      this.timerId = null;\n      this.deleted = false;\n      this.responseToken = null;\n      this.clickHandler = function () {\n        _this.execute();\n      };\n      var container = typeof containerOrId === 'string' ? document.getElementById(containerOrId) : containerOrId;\n      _assert(container, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */, {\n        appName: appName\n      });\n      this.container = container;\n      this.isVisible = this.params.size !== 'invisible';\n      if (this.isVisible) {\n        this.execute();\n      } else {\n        this.container.addEventListener('click', this.clickHandler);\n      }\n    }\n    MockWidget.prototype.getResponse = function () {\n      this.checkIfDeleted();\n      return this.responseToken;\n    };\n    MockWidget.prototype.delete = function () {\n      this.checkIfDeleted();\n      this.deleted = true;\n      if (this.timerId) {\n        clearTimeout(this.timerId);\n        this.timerId = null;\n      }\n      this.container.removeEventListener('click', this.clickHandler);\n    };\n    MockWidget.prototype.execute = function () {\n      var _this = this;\n      this.checkIfDeleted();\n      if (this.timerId) {\n        return;\n      }\n      this.timerId = window.setTimeout(function () {\n        _this.responseToken = generateRandomAlphaNumericString(50);\n        var _a = _this.params,\n          callback = _a.callback,\n          expiredCallback = _a[\"expired-callback\"];\n        if (callback) {\n          try {\n            callback(_this.responseToken);\n          } catch (e) {}\n        }\n        _this.timerId = window.setTimeout(function () {\n          _this.timerId = null;\n          _this.responseToken = null;\n          if (expiredCallback) {\n            try {\n              expiredCallback();\n            } catch (e) {}\n          }\n          if (_this.isVisible) {\n            _this.execute();\n          }\n        }, _EXPIRATION_TIME_MS);\n      }, _SOLVE_TIME_MS);\n    };\n    MockWidget.prototype.checkIfDeleted = function () {\n      if (this.deleted) {\n        throw new Error('reCAPTCHA mock was already deleted!');\n      }\n    };\n    return MockWidget;\n  }();\n  function generateRandomAlphaNumericString(len) {\n    var chars = [];\n    var allowedChars = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    for (var i = 0; i < len; i++) {\n      chars.push(allowedChars.charAt(Math.floor(Math.random() * allowedChars.length)));\n    }\n    return chars.join('');\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  // ReCaptcha will load using the same callback, so the callback function needs\n  // to be kept around\n  var _JSLOAD_CALLBACK = _generateCallbackName('rcb');\n  var NETWORK_TIMEOUT_DELAY = new Delay(30000, 60000);\n  /**\r\n   * Loader for the GReCaptcha library. There should only ever be one of this.\r\n   */\n  var ReCaptchaLoaderImpl = /** @class */function () {\n    function ReCaptchaLoaderImpl() {\n      var _a;\n      this.hostLanguage = '';\n      this.counter = 0;\n      /**\r\n       * Check for `render()` method. `window.grecaptcha` will exist if the Enterprise\r\n       * version of the ReCAPTCHA script was loaded by someone else (e.g. App Check) but\r\n       * `window.grecaptcha.render()` will not. Another load will add it.\r\n       */\n      this.librarySeparatelyLoaded = !!((_a = _window().grecaptcha) === null || _a === undefined ? undefined : _a.render);\n    }\n    ReCaptchaLoaderImpl.prototype.load = function (auth, hl) {\n      var _this = this;\n      if (hl === undefined) {\n        hl = '';\n      }\n      _assert(isHostLanguageValid(hl), auth, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n      if (this.shouldResolveImmediately(hl) && isV2(_window().grecaptcha)) {\n        return Promise.resolve(_window().grecaptcha);\n      }\n      return new Promise(function (resolve, reject) {\n        var networkTimeout = _window().setTimeout(function () {\n          reject(_createError(auth, \"network-request-failed\" /* AuthErrorCode.NETWORK_REQUEST_FAILED */));\n        }, NETWORK_TIMEOUT_DELAY.get());\n        _window()[_JSLOAD_CALLBACK] = function () {\n          _window().clearTimeout(networkTimeout);\n          delete _window()[_JSLOAD_CALLBACK];\n          var recaptcha = _window().grecaptcha;\n          if (!recaptcha || !isV2(recaptcha)) {\n            reject(_createError(auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */));\n            return;\n          }\n          // Wrap the recaptcha render function so that we know if the developer has\n          // called it separately\n          var render = recaptcha.render;\n          recaptcha.render = function (container, params) {\n            var widgetId = render(container, params);\n            _this.counter++;\n            return widgetId;\n          };\n          _this.hostLanguage = hl;\n          resolve(recaptcha);\n        };\n        var url = \"\".concat(_recaptchaV2ScriptUrl(), \"?\").concat(util.querystring({\n          onload: _JSLOAD_CALLBACK,\n          render: 'explicit',\n          hl: hl\n        }));\n        _loadJS(url).catch(function () {\n          clearTimeout(networkTimeout);\n          reject(_createError(auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */));\n        });\n      });\n    };\n    ReCaptchaLoaderImpl.prototype.clearedOneInstance = function () {\n      this.counter--;\n    };\n    ReCaptchaLoaderImpl.prototype.shouldResolveImmediately = function (hl) {\n      var _a;\n      // We can resolve immediately if:\n      //   • grecaptcha is already defined AND (\n      //     1. the requested language codes are the same OR\n      //     2. there exists already a ReCaptcha on the page\n      //     3. the library was already loaded by the app\n      // In cases (2) and (3), we _can't_ reload as it would break the recaptchas\n      // that are already in the page\n      return !!((_a = _window().grecaptcha) === null || _a === undefined ? undefined : _a.render) && (hl === this.hostLanguage || this.counter > 0 || this.librarySeparatelyLoaded);\n    };\n    return ReCaptchaLoaderImpl;\n  }();\n  function isHostLanguageValid(hl) {\n    return hl.length <= 6 && /^\\s*[a-zA-Z0-9\\-]*\\s*$/.test(hl);\n  }\n  var MockReCaptchaLoaderImpl = /** @class */function () {\n    function MockReCaptchaLoaderImpl() {}\n    MockReCaptchaLoaderImpl.prototype.load = function (auth) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        return tslib.__generator(this, function (_a) {\n          return [2 /*return*/, new MockReCaptcha(auth)];\n        });\n      });\n    };\n    MockReCaptchaLoaderImpl.prototype.clearedOneInstance = function () {};\n    return MockReCaptchaLoaderImpl;\n  }();\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var RECAPTCHA_VERIFIER_TYPE = 'recaptcha';\n  var DEFAULT_PARAMS = {\n    theme: 'light',\n    type: 'image'\n  };\n  /**\r\n   * An {@link https://www.google.com/recaptcha/ | reCAPTCHA}-based application verifier.\r\n   *\r\n   * @remarks\r\n   * `RecaptchaVerifier` does not work in a Node.js environment.\r\n   *\r\n   * @public\r\n   */\n  var RecaptchaVerifier = /** @class */function () {\n    /**\r\n     * @param authExtern - The corresponding Firebase {@link Auth} instance.\r\n     *\r\n     * @param containerOrId - The reCAPTCHA container parameter.\r\n     *\r\n     * @remarks\r\n     * This has different meaning depending on whether the reCAPTCHA is hidden or visible. For a\r\n     * visible reCAPTCHA the container must be empty. If a string is used, it has to correspond to\r\n     * an element ID. The corresponding element must also must be in the DOM at the time of\r\n     * initialization.\r\n     *\r\n     * @param parameters - The optional reCAPTCHA parameters.\r\n     *\r\n     * @remarks\r\n     * Check the reCAPTCHA docs for a comprehensive list. All parameters are accepted except for\r\n     * the sitekey. Firebase Auth backend provisions a reCAPTCHA for each project and will\r\n     * configure this upon rendering. For an invisible reCAPTCHA, a size key must have the value\r\n     * 'invisible'.\r\n     */\n    function RecaptchaVerifier(authExtern, containerOrId, parameters) {\n      if (parameters === undefined) {\n        parameters = tslib.__assign({}, DEFAULT_PARAMS);\n      }\n      this.parameters = parameters;\n      /**\r\n       * The application verifier type.\r\n       *\r\n       * @remarks\r\n       * For a reCAPTCHA verifier, this is 'recaptcha'.\r\n       */\n      this.type = RECAPTCHA_VERIFIER_TYPE;\n      this.destroyed = false;\n      this.widgetId = null;\n      this.tokenChangeListeners = new Set();\n      this.renderPromise = null;\n      this.recaptcha = null;\n      this.auth = _castAuth(authExtern);\n      this.isInvisible = this.parameters.size === 'invisible';\n      _assert(typeof document !== 'undefined', this.auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\n      var container = typeof containerOrId === 'string' ? document.getElementById(containerOrId) : containerOrId;\n      _assert(container, this.auth, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n      this.container = container;\n      this.parameters.callback = this.makeTokenCallback(this.parameters.callback);\n      this._recaptchaLoader = this.auth.settings.appVerificationDisabledForTesting ? new MockReCaptchaLoaderImpl() : new ReCaptchaLoaderImpl();\n      this.validateStartingState();\n      // TODO: Figure out if sdk version is needed\n    }\n    /**\r\n     * Waits for the user to solve the reCAPTCHA and resolves with the reCAPTCHA token.\r\n     *\r\n     * @returns A Promise for the reCAPTCHA token.\r\n     */\n    RecaptchaVerifier.prototype.verify = function () {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var id, recaptcha, response;\n        var _this = this;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              this.assertNotDestroyed();\n              return [4 /*yield*/, this.render()];\n            case 1:\n              id = _a.sent();\n              recaptcha = this.getAssertedRecaptcha();\n              response = recaptcha.getResponse(id);\n              if (response) {\n                return [2 /*return*/, response];\n              }\n              return [2 /*return*/, new Promise(function (resolve) {\n                var tokenChange = function (token) {\n                  if (!token) {\n                    return; // Ignore token expirations.\n                  }\n                  _this.tokenChangeListeners.delete(tokenChange);\n                  resolve(token);\n                };\n                _this.tokenChangeListeners.add(tokenChange);\n                if (_this.isInvisible) {\n                  recaptcha.execute(id);\n                }\n              })];\n          }\n        });\n      });\n    };\n    /**\r\n     * Renders the reCAPTCHA widget on the page.\r\n     *\r\n     * @returns A Promise that resolves with the reCAPTCHA widget ID.\r\n     */\n    RecaptchaVerifier.prototype.render = function () {\n      var _this = this;\n      try {\n        this.assertNotDestroyed();\n      } catch (e) {\n        // This method returns a promise. Since it's not async (we want to return the\n        // _same_ promise if rendering is still occurring), the API surface should\n        // reject with the error rather than just throw\n        return Promise.reject(e);\n      }\n      if (this.renderPromise) {\n        return this.renderPromise;\n      }\n      this.renderPromise = this.makeRenderPromise().catch(function (e) {\n        _this.renderPromise = null;\n        throw e;\n      });\n      return this.renderPromise;\n    };\n    /** @internal */\n    RecaptchaVerifier.prototype._reset = function () {\n      this.assertNotDestroyed();\n      if (this.widgetId !== null) {\n        this.getAssertedRecaptcha().reset(this.widgetId);\n      }\n    };\n    /**\r\n     * Clears the reCAPTCHA widget from the page and destroys the instance.\r\n     */\n    RecaptchaVerifier.prototype.clear = function () {\n      var _this = this;\n      this.assertNotDestroyed();\n      this.destroyed = true;\n      this._recaptchaLoader.clearedOneInstance();\n      if (!this.isInvisible) {\n        this.container.childNodes.forEach(function (node) {\n          _this.container.removeChild(node);\n        });\n      }\n    };\n    RecaptchaVerifier.prototype.validateStartingState = function () {\n      _assert(!this.parameters.sitekey, this.auth, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n      _assert(this.isInvisible || !this.container.hasChildNodes(), this.auth, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n      _assert(typeof document !== 'undefined', this.auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\n    };\n    RecaptchaVerifier.prototype.makeTokenCallback = function (existing) {\n      var _this = this;\n      return function (token) {\n        _this.tokenChangeListeners.forEach(function (listener) {\n          return listener(token);\n        });\n        if (typeof existing === 'function') {\n          existing(token);\n        } else if (typeof existing === 'string') {\n          var globalFunc = _window()[existing];\n          if (typeof globalFunc === 'function') {\n            globalFunc(token);\n          }\n        }\n      };\n    };\n    RecaptchaVerifier.prototype.assertNotDestroyed = function () {\n      _assert(!this.destroyed, this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n    };\n    RecaptchaVerifier.prototype.makeRenderPromise = function () {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var container, guaranteedEmpty;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4 /*yield*/, this.init()];\n            case 1:\n              _a.sent();\n              if (!this.widgetId) {\n                container = this.container;\n                if (!this.isInvisible) {\n                  guaranteedEmpty = document.createElement('div');\n                  container.appendChild(guaranteedEmpty);\n                  container = guaranteedEmpty;\n                }\n                this.widgetId = this.getAssertedRecaptcha().render(container, this.parameters);\n              }\n              return [2 /*return*/, this.widgetId];\n          }\n        });\n      });\n    };\n    RecaptchaVerifier.prototype.init = function () {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var _a, siteKey;\n        return tslib.__generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              _assert(_isHttpOrHttps() && !_isWorker(), this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n              return [4 /*yield*/, domReady()];\n            case 1:\n              _b.sent();\n              _a = this;\n              return [4 /*yield*/, this._recaptchaLoader.load(this.auth, this.auth.languageCode || undefined)];\n            case 2:\n              _a.recaptcha = _b.sent();\n              return [4 /*yield*/, getRecaptchaParams(this.auth)];\n            case 3:\n              siteKey = _b.sent();\n              _assert(siteKey, this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n              this.parameters.sitekey = siteKey;\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n    RecaptchaVerifier.prototype.getAssertedRecaptcha = function () {\n      _assert(this.recaptcha, this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n      return this.recaptcha;\n    };\n    return RecaptchaVerifier;\n  }();\n  function domReady() {\n    var resolver = null;\n    return new Promise(function (resolve) {\n      if (document.readyState === 'complete') {\n        resolve();\n        return;\n      }\n      // Document not ready, wait for load before resolving.\n      // Save resolver, so we can remove listener in case it was externally\n      // cancelled.\n      resolver = function () {\n        return resolve();\n      };\n      window.addEventListener('load', resolver);\n    }).catch(function (e) {\n      if (resolver) {\n        window.removeEventListener('load', resolver);\n      }\n      throw e;\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var ConfirmationResultImpl = /** @class */function () {\n    function ConfirmationResultImpl(verificationId, onConfirmation) {\n      this.verificationId = verificationId;\n      this.onConfirmation = onConfirmation;\n    }\n    ConfirmationResultImpl.prototype.confirm = function (verificationCode) {\n      var authCredential = PhoneAuthCredential._fromVerification(this.verificationId, verificationCode);\n      return this.onConfirmation(authCredential);\n    };\n    return ConfirmationResultImpl;\n  }();\n  /**\r\n   * Asynchronously signs in using a phone number.\r\n   *\r\n   * @remarks\r\n   * This method sends a code via SMS to the given\r\n   * phone number, and returns a {@link ConfirmationResult}. After the user\r\n   * provides the code sent to their phone, call {@link ConfirmationResult.confirm}\r\n   * with the code to sign the user in.\r\n   *\r\n   * For abuse prevention, this method also requires a {@link ApplicationVerifier}.\r\n   * This SDK includes a reCAPTCHA-based implementation, {@link RecaptchaVerifier}.\r\n   * This function can work on other platforms that do not support the\r\n   * {@link RecaptchaVerifier} (like React Native), but you need to use a\r\n   * third-party {@link ApplicationVerifier} implementation.\r\n   *\r\n   * This method does not work in a Node.js environment or with {@link Auth} instances created with a\r\n   * {@link @firebase/app#FirebaseServerApp}.\r\n   *\r\n   * @example\r\n   * ```javascript\r\n   * // 'recaptcha-container' is the ID of an element in the DOM.\r\n   * const applicationVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container');\r\n   * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\r\n   * // Obtain a verificationCode from the user.\r\n   * const credential = await confirmationResult.confirm(verificationCode);\r\n   * ```\r\n   *\r\n   * @param auth - The {@link Auth} instance.\r\n   * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\r\n   * @param appVerifier - The {@link ApplicationVerifier}.\r\n   *\r\n   * @public\r\n   */\n  function signInWithPhoneNumber(auth, phoneNumber, appVerifier) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var authInternal, verificationId;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (app._isFirebaseServerApp(auth.app)) {\n              return [2 /*return*/, Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth))];\n            }\n            authInternal = _castAuth(auth);\n            return [4 /*yield*/, _verifyPhoneNumber(authInternal, phoneNumber, util.getModularInstance(appVerifier))];\n          case 1:\n            verificationId = _a.sent();\n            return [2 /*return*/, new ConfirmationResultImpl(verificationId, function (cred) {\n              return signInWithCredential(authInternal, cred);\n            })];\n        }\n      });\n    });\n  }\n  /**\r\n   * Links the user account with the given phone number.\r\n   *\r\n   * @remarks\r\n   * This method does not work in a Node.js environment.\r\n   *\r\n   * @param user - The user.\r\n   * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\r\n   * @param appVerifier - The {@link ApplicationVerifier}.\r\n   *\r\n   * @public\r\n   */\n  function linkWithPhoneNumber(user, phoneNumber, appVerifier) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var userInternal, verificationId;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            userInternal = util.getModularInstance(user);\n            return [4 /*yield*/, _assertLinkedStatus(false, userInternal, \"phone\" /* ProviderId.PHONE */)];\n          case 1:\n            _a.sent();\n            return [4 /*yield*/, _verifyPhoneNumber(userInternal.auth, phoneNumber, util.getModularInstance(appVerifier))];\n          case 2:\n            verificationId = _a.sent();\n            return [2 /*return*/, new ConfirmationResultImpl(verificationId, function (cred) {\n              return linkWithCredential(userInternal, cred);\n            })];\n        }\n      });\n    });\n  }\n  /**\r\n   * Re-authenticates a user using a fresh phone credential.\r\n   *\r\n   * @remarks\r\n   * Use before operations such as {@link updatePassword} that require tokens from recent sign-in attempts.\r\n   *\r\n   * This method does not work in a Node.js environment or on any {@link User} signed in by\r\n   * {@link Auth} instances created with a {@link @firebase/app#FirebaseServerApp}.\r\n   *\r\n   * @param user - The user.\r\n   * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\r\n   * @param appVerifier - The {@link ApplicationVerifier}.\r\n   *\r\n   * @public\r\n   */\n  function reauthenticateWithPhoneNumber(user, phoneNumber, appVerifier) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var userInternal, verificationId;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            userInternal = util.getModularInstance(user);\n            if (app._isFirebaseServerApp(userInternal.auth.app)) {\n              return [2 /*return*/, Promise.reject(_serverAppCurrentUserOperationNotSupportedError(userInternal.auth))];\n            }\n            return [4 /*yield*/, _verifyPhoneNumber(userInternal.auth, phoneNumber, util.getModularInstance(appVerifier))];\n          case 1:\n            verificationId = _a.sent();\n            return [2 /*return*/, new ConfirmationResultImpl(verificationId, function (cred) {\n              return reauthenticateWithCredential(userInternal, cred);\n            })];\n        }\n      });\n    });\n  }\n  /**\r\n   * Returns a verification ID to be used in conjunction with the SMS code that is sent.\r\n   *\r\n   */\n  function _verifyPhoneNumber(auth, options, verifier) {\n    var _a;\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var recaptchaToken, phoneInfoOptions, session, response, mfaEnrollmentId, response, sessionInfo;\n      return tslib.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, verifier.verify()];\n          case 1:\n            recaptchaToken = _b.sent();\n            _b.label = 2;\n          case 2:\n            _b.trys.push([2,, 10, 11]);\n            _assert(typeof recaptchaToken === 'string', auth, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n            _assert(verifier.type === RECAPTCHA_VERIFIER_TYPE, auth, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n            phoneInfoOptions = undefined;\n            if (typeof options === 'string') {\n              phoneInfoOptions = {\n                phoneNumber: options\n              };\n            } else {\n              phoneInfoOptions = options;\n            }\n            if (!('session' in phoneInfoOptions)) return [3 /*break*/, 7];\n            session = phoneInfoOptions.session;\n            if (!('phoneNumber' in phoneInfoOptions)) return [3 /*break*/, 4];\n            _assert(session.type === \"enroll\" /* MultiFactorSessionType.ENROLL */, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n            return [4 /*yield*/, startEnrollPhoneMfa(auth, {\n              idToken: session.credential,\n              phoneEnrollmentInfo: {\n                phoneNumber: phoneInfoOptions.phoneNumber,\n                recaptchaToken: recaptchaToken\n              }\n            })];\n          case 3:\n            response = _b.sent();\n            return [2 /*return*/, response.phoneSessionInfo.sessionInfo];\n          case 4:\n            _assert(session.type === \"signin\" /* MultiFactorSessionType.SIGN_IN */, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n            mfaEnrollmentId = ((_a = phoneInfoOptions.multiFactorHint) === null || _a === undefined ? undefined : _a.uid) || phoneInfoOptions.multiFactorUid;\n            _assert(mfaEnrollmentId, auth, \"missing-multi-factor-info\" /* AuthErrorCode.MISSING_MFA_INFO */);\n            return [4 /*yield*/, startSignInPhoneMfa(auth, {\n              mfaPendingCredential: session.credential,\n              mfaEnrollmentId: mfaEnrollmentId,\n              phoneSignInInfo: {\n                recaptchaToken: recaptchaToken\n              }\n            })];\n          case 5:\n            response = _b.sent();\n            return [2 /*return*/, response.phoneResponseInfo.sessionInfo];\n          case 6:\n            return [3 /*break*/, 9];\n          case 7:\n            return [4 /*yield*/, sendPhoneVerificationCode(auth, {\n              phoneNumber: phoneInfoOptions.phoneNumber,\n              recaptchaToken: recaptchaToken\n            })];\n          case 8:\n            sessionInfo = _b.sent().sessionInfo;\n            return [2 /*return*/, sessionInfo];\n          case 9:\n            return [3 /*break*/, 11];\n          case 10:\n            verifier._reset();\n            return [7 /*endfinally*/];\n          case 11:\n            return [2 /*return*/];\n        }\n      });\n    });\n  }\n  /**\r\n   * Updates the user's phone number.\r\n   *\r\n   * @remarks\r\n   * This method does not work in a Node.js environment or on any {@link User} signed in by\r\n   * {@link Auth} instances created with a {@link @firebase/app#FirebaseServerApp}.\r\n   *\r\n   * @example\r\n   * ```\r\n   * // 'recaptcha-container' is the ID of an element in the DOM.\r\n   * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\r\n   * const provider = new PhoneAuthProvider(auth);\r\n   * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\r\n   * // Obtain the verificationCode from the user.\r\n   * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\r\n   * await updatePhoneNumber(user, phoneCredential);\r\n   * ```\r\n   *\r\n   * @param user - The user.\r\n   * @param credential - A credential authenticating the new phone number.\r\n   *\r\n   * @public\r\n   */\n  function updatePhoneNumber(user, credential) {\n    return tslib.__awaiter(this, undefined, undefined, function () {\n      var userInternal;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            userInternal = util.getModularInstance(user);\n            if (app._isFirebaseServerApp(userInternal.auth.app)) {\n              return [2 /*return*/, Promise.reject(_serverAppCurrentUserOperationNotSupportedError(userInternal.auth))];\n            }\n            return [4 /*yield*/, _link(userInternal, credential)];\n          case 1:\n            _a.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2020 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * Provider for generating an {@link PhoneAuthCredential}.\r\n   *\r\n   * @remarks\r\n   * `PhoneAuthProvider` does not work in a Node.js environment.\r\n   *\r\n   * @example\r\n   * ```javascript\r\n   * // 'recaptcha-container' is the ID of an element in the DOM.\r\n   * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\r\n   * const provider = new PhoneAuthProvider(auth);\r\n   * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\r\n   * // Obtain the verificationCode from the user.\r\n   * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\r\n   * const userCredential = await signInWithCredential(auth, phoneCredential);\r\n   * ```\r\n   *\r\n   * @public\r\n   */\n  var PhoneAuthProvider = /** @class */function () {\n    /**\r\n     * @param auth - The Firebase {@link Auth} instance in which sign-ins should occur.\r\n     *\r\n     */\n    function PhoneAuthProvider(auth) {\n      /** Always set to {@link ProviderId}.PHONE. */\n      this.providerId = PhoneAuthProvider.PROVIDER_ID;\n      this.auth = _castAuth(auth);\n    }\n    /**\r\n     *\r\n     * Starts a phone number authentication flow by sending a verification code to the given phone\r\n     * number.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * const provider = new PhoneAuthProvider(auth);\r\n     * const verificationId = await provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\r\n     * // Obtain verificationCode from the user.\r\n     * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\r\n     * const userCredential = await signInWithCredential(auth, authCredential);\r\n     * ```\r\n     *\r\n     * @example\r\n     * An alternative flow is provided using the `signInWithPhoneNumber` method.\r\n     * ```javascript\r\n     * const confirmationResult = signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\r\n     * // Obtain verificationCode from the user.\r\n     * const userCredential = confirmationResult.confirm(verificationCode);\r\n     * ```\r\n     *\r\n     * @param phoneInfoOptions - The user's {@link PhoneInfoOptions}. The phone number should be in\r\n     * E.164 format (e.g. +16505550101).\r\n     * @param applicationVerifier - For abuse prevention, this method also requires a\r\n     * {@link ApplicationVerifier}. This SDK includes a reCAPTCHA-based implementation,\r\n     * {@link RecaptchaVerifier}.\r\n     *\r\n     * @returns A Promise for a verification ID that can be passed to\r\n     * {@link PhoneAuthProvider.credential} to identify this flow..\r\n     */\n    PhoneAuthProvider.prototype.verifyPhoneNumber = function (phoneOptions, applicationVerifier) {\n      return _verifyPhoneNumber(this.auth, phoneOptions, util.getModularInstance(applicationVerifier));\n    };\n    /**\r\n     * Creates a phone auth credential, given the verification ID from\r\n     * {@link PhoneAuthProvider.verifyPhoneNumber} and the code that was sent to the user's\r\n     * mobile device.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * const provider = new PhoneAuthProvider(auth);\r\n     * const verificationId = provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\r\n     * // Obtain verificationCode from the user.\r\n     * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\r\n     * const userCredential = signInWithCredential(auth, authCredential);\r\n     * ```\r\n     *\r\n     * @example\r\n     * An alternative flow is provided using the `signInWithPhoneNumber` method.\r\n     * ```javascript\r\n     * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\r\n     * // Obtain verificationCode from the user.\r\n     * const userCredential = await confirmationResult.confirm(verificationCode);\r\n     * ```\r\n     *\r\n     * @param verificationId - The verification ID returned from {@link PhoneAuthProvider.verifyPhoneNumber}.\r\n     * @param verificationCode - The verification code sent to the user's mobile device.\r\n     *\r\n     * @returns The auth provider credential.\r\n     */\n    PhoneAuthProvider.credential = function (verificationId, verificationCode) {\n      return PhoneAuthCredential._fromVerification(verificationId, verificationCode);\n    };\n    /**\r\n     * Generates an {@link AuthCredential} from a {@link UserCredential}.\r\n     * @param userCredential - The user credential.\r\n     */\n    PhoneAuthProvider.credentialFromResult = function (userCredential) {\n      var credential = userCredential;\n      return PhoneAuthProvider.credentialFromTaggedObject(credential);\n    };\n    /**\r\n     * Returns an {@link AuthCredential} when passed an error.\r\n     *\r\n     * @remarks\r\n     *\r\n     * This method works for errors like\r\n     * `auth/account-exists-with-different-credentials`. This is useful for\r\n     * recovering when attempting to set a user's phone number but the number\r\n     * in question is already tied to another account. For example, the following\r\n     * code tries to update the current user's phone number, and if that\r\n     * fails, links the user with the account associated with that number:\r\n     *\r\n     * ```js\r\n     * const provider = new PhoneAuthProvider(auth);\r\n     * const verificationId = await provider.verifyPhoneNumber(number, verifier);\r\n     * try {\r\n     *   const code = ''; // Prompt the user for the verification code\r\n     *   await updatePhoneNumber(\r\n     *       auth.currentUser,\r\n     *       PhoneAuthProvider.credential(verificationId, code));\r\n     * } catch (e) {\r\n     *   if ((e as FirebaseError)?.code === 'auth/account-exists-with-different-credential') {\r\n     *     const cred = PhoneAuthProvider.credentialFromError(e);\r\n     *     await linkWithCredential(auth.currentUser, cred);\r\n     *   }\r\n     * }\r\n     *\r\n     * // At this point, auth.currentUser.phoneNumber === number.\r\n     * ```\r\n     *\r\n     * @param error - The error to generate a credential from.\r\n     */\n    PhoneAuthProvider.credentialFromError = function (error) {\n      return PhoneAuthProvider.credentialFromTaggedObject(error.customData || {});\n    };\n    PhoneAuthProvider.credentialFromTaggedObject = function (_a) {\n      var tokenResponse = _a._tokenResponse;\n      if (!tokenResponse) {\n        return null;\n      }\n      var _b = tokenResponse,\n        phoneNumber = _b.phoneNumber,\n        temporaryProof = _b.temporaryProof;\n      if (phoneNumber && temporaryProof) {\n        return PhoneAuthCredential._fromTokenResponse(phoneNumber, temporaryProof);\n      }\n      return null;\n    };\n    /** Always set to {@link ProviderId}.PHONE. */\n    PhoneAuthProvider.PROVIDER_ID = \"phone\" /* ProviderId.PHONE */;\n    /** Always set to {@link SignInMethod}.PHONE. */\n    PhoneAuthProvider.PHONE_SIGN_IN_METHOD = \"phone\" /* SignInMethod.PHONE */;\n    return PhoneAuthProvider;\n  }();\n  var MultiFactorAssertionImpl = /** @class */function () {\n    function MultiFactorAssertionImpl(factorId) {\n      this.factorId = factorId;\n    }\n    MultiFactorAssertionImpl.prototype._process = function (auth, session, displayName) {\n      switch (session.type) {\n        case \"enroll\" /* MultiFactorSessionType.ENROLL */:\n          return this._finalizeEnroll(auth, session.credential, displayName);\n        case \"signin\" /* MultiFactorSessionType.SIGN_IN */:\n          return this._finalizeSignIn(auth, session.credential);\n        default:\n          return debugFail('unexpected MultiFactorSessionType');\n      }\n    };\n    return MultiFactorAssertionImpl;\n  }();\n\n  /**\r\n   * {@inheritdoc PhoneMultiFactorAssertion}\r\n   *\r\n   * @public\r\n   */\n  var PhoneMultiFactorAssertionImpl = /** @class */function (_super) {\n    tslib.__extends(PhoneMultiFactorAssertionImpl, _super);\n    function PhoneMultiFactorAssertionImpl(credential) {\n      var _this = _super.call(this, \"phone\" /* FactorId.PHONE */) || this;\n      _this.credential = credential;\n      return _this;\n    }\n    /** @internal */\n    PhoneMultiFactorAssertionImpl._fromCredential = function (credential) {\n      return new PhoneMultiFactorAssertionImpl(credential);\n    };\n    /** @internal */\n    PhoneMultiFactorAssertionImpl.prototype._finalizeEnroll = function (auth, idToken, displayName) {\n      return finalizeEnrollPhoneMfa(auth, {\n        idToken: idToken,\n        displayName: displayName,\n        phoneVerificationInfo: this.credential._makeVerificationRequest()\n      });\n    };\n    /** @internal */\n    PhoneMultiFactorAssertionImpl.prototype._finalizeSignIn = function (auth, mfaPendingCredential) {\n      return finalizeSignInPhoneMfa(auth, {\n        mfaPendingCredential: mfaPendingCredential,\n        phoneVerificationInfo: this.credential._makeVerificationRequest()\n      });\n    };\n    return PhoneMultiFactorAssertionImpl;\n  }(MultiFactorAssertionImpl);\n  /**\r\n   * Provider for generating a {@link PhoneMultiFactorAssertion}.\r\n   *\r\n   * @public\r\n   */\n  var PhoneMultiFactorGenerator = /** @class */function () {\n    function PhoneMultiFactorGenerator() {}\n    /**\r\n     * Provides a {@link PhoneMultiFactorAssertion} to confirm ownership of the phone second factor.\r\n     *\r\n     * @remarks\r\n     * This method does not work in a Node.js environment.\r\n     *\r\n     * @param phoneAuthCredential - A credential provided by {@link PhoneAuthProvider.credential}.\r\n     * @returns A {@link PhoneMultiFactorAssertion} which can be used with\r\n     * {@link MultiFactorResolver.resolveSignIn}\r\n     */\n    PhoneMultiFactorGenerator.assertion = function (credential) {\n      return PhoneMultiFactorAssertionImpl._fromCredential(credential);\n    };\n    /**\r\n     * The identifier of the phone second factor: `phone`.\r\n     */\n    PhoneMultiFactorGenerator.FACTOR_ID = 'phone';\n    return PhoneMultiFactorGenerator;\n  }();\n\n  /**\r\n   * Provider for generating a {@link TotpMultiFactorAssertion}.\r\n   *\r\n   * @public\r\n   */\n  var TotpMultiFactorGenerator = /** @class */function () {\n    function TotpMultiFactorGenerator() {}\n    /**\r\n     * Provides a {@link TotpMultiFactorAssertion} to confirm ownership of\r\n     * the TOTP (time-based one-time password) second factor.\r\n     * This assertion is used to complete enrollment in TOTP second factor.\r\n     *\r\n     * @param secret A {@link TotpSecret} containing the shared secret key and other TOTP parameters.\r\n     * @param oneTimePassword One-time password from TOTP App.\r\n     * @returns A {@link TotpMultiFactorAssertion} which can be used with\r\n     * {@link MultiFactorUser.enroll}.\r\n     */\n    TotpMultiFactorGenerator.assertionForEnrollment = function (secret, oneTimePassword) {\n      return TotpMultiFactorAssertionImpl._fromSecret(secret, oneTimePassword);\n    };\n    /**\r\n     * Provides a {@link TotpMultiFactorAssertion} to confirm ownership of the TOTP second factor.\r\n     * This assertion is used to complete signIn with TOTP as the second factor.\r\n     *\r\n     * @param enrollmentId identifies the enrolled TOTP second factor.\r\n     * @param oneTimePassword One-time password from TOTP App.\r\n     * @returns A {@link TotpMultiFactorAssertion} which can be used with\r\n     * {@link MultiFactorResolver.resolveSignIn}.\r\n     */\n    TotpMultiFactorGenerator.assertionForSignIn = function (enrollmentId, oneTimePassword) {\n      return TotpMultiFactorAssertionImpl._fromEnrollmentId(enrollmentId, oneTimePassword);\n    };\n    /**\r\n     * Returns a promise to {@link TotpSecret} which contains the TOTP shared secret key and other parameters.\r\n     * Creates a TOTP secret as part of enrolling a TOTP second factor.\r\n     * Used for generating a QR code URL or inputting into a TOTP app.\r\n     * This method uses the auth instance corresponding to the user in the multiFactorSession.\r\n     *\r\n     * @param session The {@link MultiFactorSession} that the user is part of.\r\n     * @returns A promise to {@link TotpSecret}.\r\n     */\n    TotpMultiFactorGenerator.generateSecret = function (session) {\n      var _a;\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var mfaSession, response;\n        return tslib.__generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              mfaSession = session;\n              _assert(typeof ((_a = mfaSession.user) === null || _a === undefined ? undefined : _a.auth) !== 'undefined', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n              return [4 /*yield*/, startEnrollTotpMfa(mfaSession.user.auth, {\n                idToken: mfaSession.credential,\n                totpEnrollmentInfo: {}\n              })];\n            case 1:\n              response = _b.sent();\n              return [2 /*return*/, TotpSecret._fromStartTotpMfaEnrollmentResponse(response, mfaSession.user.auth)];\n          }\n        });\n      });\n    };\n    /**\r\n     * The identifier of the TOTP second factor: `totp`.\r\n     */\n    TotpMultiFactorGenerator.FACTOR_ID = \"totp\" /* FactorId.TOTP */;\n    return TotpMultiFactorGenerator;\n  }();\n  var TotpMultiFactorAssertionImpl = /** @class */function (_super) {\n    tslib.__extends(TotpMultiFactorAssertionImpl, _super);\n    function TotpMultiFactorAssertionImpl(otp, enrollmentId, secret) {\n      var _this = _super.call(this, \"totp\" /* FactorId.TOTP */) || this;\n      _this.otp = otp;\n      _this.enrollmentId = enrollmentId;\n      _this.secret = secret;\n      return _this;\n    }\n    /** @internal */\n    TotpMultiFactorAssertionImpl._fromSecret = function (secret, otp) {\n      return new TotpMultiFactorAssertionImpl(otp, undefined, secret);\n    };\n    /** @internal */\n    TotpMultiFactorAssertionImpl._fromEnrollmentId = function (enrollmentId, otp) {\n      return new TotpMultiFactorAssertionImpl(otp, enrollmentId);\n    };\n    /** @internal */\n    TotpMultiFactorAssertionImpl.prototype._finalizeEnroll = function (auth, idToken, displayName) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        return tslib.__generator(this, function (_a) {\n          _assert(typeof this.secret !== 'undefined', auth, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n          return [2 /*return*/, finalizeEnrollTotpMfa(auth, {\n            idToken: idToken,\n            displayName: displayName,\n            totpVerificationInfo: this.secret._makeTotpVerificationInfo(this.otp)\n          })];\n        });\n      });\n    };\n    /** @internal */\n    TotpMultiFactorAssertionImpl.prototype._finalizeSignIn = function (auth, mfaPendingCredential) {\n      return tslib.__awaiter(this, undefined, undefined, function () {\n        var totpVerificationInfo;\n        return tslib.__generator(this, function (_a) {\n          _assert(this.enrollmentId !== undefined && this.otp !== undefined, auth, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n          totpVerificationInfo = {\n            verificationCode: this.otp\n          };\n          return [2 /*return*/, finalizeSignInTotpMfa(auth, {\n            mfaPendingCredential: mfaPendingCredential,\n            mfaEnrollmentId: this.enrollmentId,\n            totpVerificationInfo: totpVerificationInfo\n          })];\n        });\n      });\n    };\n    return TotpMultiFactorAssertionImpl;\n  }(MultiFactorAssertionImpl);\n  /**\r\n   * Provider for generating a {@link TotpMultiFactorAssertion}.\r\n   *\r\n   * Stores the shared secret key and other parameters to generate time-based OTPs.\r\n   * Implements methods to retrieve the shared secret key and generate a QR code URL.\r\n   * @public\r\n   */\n  var TotpSecret = /** @class */function () {\n    // The public members are declared outside the constructor so the docs can be generated.\n    function TotpSecret(secretKey, hashingAlgorithm, codeLength, codeIntervalSeconds, enrollmentCompletionDeadline, sessionInfo, auth) {\n      this.sessionInfo = sessionInfo;\n      this.auth = auth;\n      this.secretKey = secretKey;\n      this.hashingAlgorithm = hashingAlgorithm;\n      this.codeLength = codeLength;\n      this.codeIntervalSeconds = codeIntervalSeconds;\n      this.enrollmentCompletionDeadline = enrollmentCompletionDeadline;\n    }\n    /** @internal */\n    TotpSecret._fromStartTotpMfaEnrollmentResponse = function (response, auth) {\n      return new TotpSecret(response.totpSessionInfo.sharedSecretKey, response.totpSessionInfo.hashingAlgorithm, response.totpSessionInfo.verificationCodeLength, response.totpSessionInfo.periodSec, new Date(response.totpSessionInfo.finalizeEnrollmentTime).toUTCString(), response.totpSessionInfo.sessionInfo, auth);\n    };\n    /** @internal */\n    TotpSecret.prototype._makeTotpVerificationInfo = function (otp) {\n      return {\n        sessionInfo: this.sessionInfo,\n        verificationCode: otp\n      };\n    };\n    /**\r\n     * Returns a QR code URL as described in\r\n     * https://github.com/google/google-authenticator/wiki/Key-Uri-Format\r\n     * This can be displayed to the user as a QR code to be scanned into a TOTP app like Google Authenticator.\r\n     * If the optional parameters are unspecified, an accountName of <userEmail> and issuer of <firebaseAppName> are used.\r\n     *\r\n     * @param accountName the name of the account/app along with a user identifier.\r\n     * @param issuer issuer of the TOTP (likely the app name).\r\n     * @returns A QR code URL string.\r\n     */\n    TotpSecret.prototype.generateQrCodeUrl = function (accountName, issuer) {\n      var _a;\n      var useDefaults = false;\n      if (_isEmptyString(accountName) || _isEmptyString(issuer)) {\n        useDefaults = true;\n      }\n      if (useDefaults) {\n        if (_isEmptyString(accountName)) {\n          accountName = ((_a = this.auth.currentUser) === null || _a === undefined ? undefined : _a.email) || 'unknownuser';\n        }\n        if (_isEmptyString(issuer)) {\n          issuer = this.auth.name;\n        }\n      }\n      return \"otpauth://totp/\".concat(issuer, \":\").concat(accountName, \"?secret=\").concat(this.secretKey, \"&issuer=\").concat(issuer, \"&algorithm=\").concat(this.hashingAlgorithm, \"&digits=\").concat(this.codeLength);\n    };\n    return TotpSecret;\n  }();\n  /** @internal */\n  function _isEmptyString(input) {\n    return typeof input === 'undefined' || (input === null || input === undefined ? undefined : input.length) === 0;\n  }\n  var STORAGE_AVAILABLE_KEY = '__sak';\n  exports.AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY = AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY;\n  exports.ActionCodeOperation = ActionCodeOperation;\n  exports.ActionCodeURL = ActionCodeURL;\n  exports.AuthCredential = AuthCredential;\n  exports.AuthImpl = AuthImpl;\n  exports.BaseOAuthProvider = BaseOAuthProvider;\n  exports.Delay = Delay;\n  exports.EmailAuthCredential = EmailAuthCredential;\n  exports.EmailAuthProvider = EmailAuthProvider;\n  exports.FacebookAuthProvider = FacebookAuthProvider;\n  exports.FactorId = FactorId;\n  exports.FederatedAuthProvider = FederatedAuthProvider;\n  exports.FetchProvider = FetchProvider;\n  exports.GithubAuthProvider = GithubAuthProvider;\n  exports.GoogleAuthProvider = GoogleAuthProvider;\n  exports.OAuthCredential = OAuthCredential;\n  exports.OAuthProvider = OAuthProvider;\n  exports.OperationType = OperationType;\n  exports.PhoneAuthCredential = PhoneAuthCredential;\n  exports.PhoneAuthProvider = PhoneAuthProvider;\n  exports.PhoneMultiFactorGenerator = PhoneMultiFactorGenerator;\n  exports.ProviderId = ProviderId;\n  exports.RecaptchaVerifier = RecaptchaVerifier;\n  exports.SAMLAuthCredential = SAMLAuthCredential;\n  exports.SAMLAuthProvider = SAMLAuthProvider;\n  exports.STORAGE_AVAILABLE_KEY = STORAGE_AVAILABLE_KEY;\n  exports.SignInMethod = SignInMethod;\n  exports.TotpMultiFactorGenerator = TotpMultiFactorGenerator;\n  exports.TotpSecret = TotpSecret;\n  exports.TwitterAuthProvider = TwitterAuthProvider;\n  exports.UserImpl = UserImpl;\n  exports._assert = _assert;\n  exports._assertInstanceOf = _assertInstanceOf;\n  exports._assertLinkedStatus = _assertLinkedStatus;\n  exports._castAuth = _castAuth;\n  exports._createError = _createError;\n  exports._emulatorUrl = _emulatorUrl;\n  exports._fail = _fail;\n  exports._gapiScriptUrl = _gapiScriptUrl;\n  exports._generateCallbackName = _generateCallbackName;\n  exports._getActiveServiceWorker = _getActiveServiceWorker;\n  exports._getClientVersion = _getClientVersion;\n  exports._getCurrentUrl = _getCurrentUrl;\n  exports._getInstance = _getInstance;\n  exports._getServiceWorkerController = _getServiceWorkerController;\n  exports._getWorkerGlobalScope = _getWorkerGlobalScope;\n  exports._isAndroid = _isAndroid;\n  exports._isChromeIOS = _isChromeIOS;\n  exports._isFirefox = _isFirefox;\n  exports._isIE10 = _isIE10;\n  exports._isIOS = _isIOS;\n  exports._isIOS7Or8 = _isIOS7Or8;\n  exports._isIOSStandalone = _isIOSStandalone;\n  exports._isMobileBrowser = _isMobileBrowser;\n  exports._isSafari = _isSafari;\n  exports._isWorker = _isWorker;\n  exports._link = _link;\n  exports._loadJS = _loadJS;\n  exports._logWarn = _logWarn;\n  exports._performApiRequest = _performApiRequest;\n  exports._persistenceKeyName = _persistenceKeyName;\n  exports._reauthenticate = _reauthenticate;\n  exports._serverAppCurrentUserOperationNotSupportedError = _serverAppCurrentUserOperationNotSupportedError;\n  exports._setExternalJSProvider = _setExternalJSProvider;\n  exports._setWindowLocation = _setWindowLocation;\n  exports._signInWithCredential = _signInWithCredential;\n  exports._window = _window;\n  exports.applyActionCode = applyActionCode;\n  exports.beforeAuthStateChanged = beforeAuthStateChanged;\n  exports.checkActionCode = checkActionCode;\n  exports.confirmPasswordReset = confirmPasswordReset;\n  exports.connectAuthEmulator = connectAuthEmulator;\n  exports.createUserWithEmailAndPassword = createUserWithEmailAndPassword;\n  exports.debugAssert = debugAssert;\n  exports.debugErrorMap = debugErrorMap;\n  exports.deleteUser = deleteUser;\n  exports.fetchSignInMethodsForEmail = fetchSignInMethodsForEmail;\n  exports.getAdditionalUserInfo = getAdditionalUserInfo;\n  exports.getIdToken = getIdToken;\n  exports.getIdTokenResult = getIdTokenResult;\n  exports.getMultiFactorResolver = getMultiFactorResolver;\n  exports.inMemoryPersistence = inMemoryPersistence;\n  exports.initializeAuth = initializeAuth;\n  exports.initializeRecaptchaConfig = initializeRecaptchaConfig;\n  exports.isSignInWithEmailLink = isSignInWithEmailLink;\n  exports.linkWithCredential = linkWithCredential;\n  exports.linkWithPhoneNumber = linkWithPhoneNumber;\n  exports.multiFactor = multiFactor;\n  exports.onAuthStateChanged = onAuthStateChanged;\n  exports.onIdTokenChanged = onIdTokenChanged;\n  exports.parseActionCodeURL = parseActionCodeURL;\n  exports.prodErrorMap = prodErrorMap;\n  exports.reauthenticateWithCredential = reauthenticateWithCredential;\n  exports.reauthenticateWithPhoneNumber = reauthenticateWithPhoneNumber;\n  exports.registerAuth = registerAuth;\n  exports.reload = reload;\n  exports.revokeAccessToken = revokeAccessToken;\n  exports.sendEmailVerification = sendEmailVerification;\n  exports.sendPasswordResetEmail = sendPasswordResetEmail;\n  exports.sendSignInLinkToEmail = sendSignInLinkToEmail;\n  exports.setPersistence = setPersistence;\n  exports.signInAnonymously = signInAnonymously;\n  exports.signInWithCredential = signInWithCredential;\n  exports.signInWithCustomToken = signInWithCustomToken;\n  exports.signInWithEmailAndPassword = signInWithEmailAndPassword;\n  exports.signInWithEmailLink = signInWithEmailLink;\n  exports.signInWithIdp = signInWithIdp;\n  exports.signInWithPhoneNumber = signInWithPhoneNumber;\n  exports.signOut = signOut;\n  exports.unlink = unlink;\n  exports.updateCurrentUser = updateCurrentUser;\n  exports.updateEmail = updateEmail;\n  exports.updatePassword = updatePassword;\n  exports.updatePhoneNumber = updatePhoneNumber;\n  exports.updateProfile = updateProfile;\n  exports.useDeviceLanguage = useDeviceLanguage;\n  exports.validatePassword = validatePassword;\n  exports.verifyBeforeUpdateEmail = verifyBeforeUpdateEmail;\n  exports.verifyPasswordResetCode = verifyPasswordResetCode;\n});","lineCount":9757,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"tslib"],[4,11,3,9],[4,14,3,12,"require"],[4,21,3,19],[4,22,3,19,"_dependencyMap"],[4,36,3,19],[4,39,3,27],[4,40,3,28],[5,2,4,0],[5,6,4,4,"app"],[5,9,4,7],[5,12,4,10,"require"],[5,19,4,17],[5,20,4,17,"_dependencyMap"],[5,34,4,17],[5,37,4,33],[5,38,4,34],[6,2,5,0],[6,6,5,4,"util"],[6,10,5,8],[6,13,5,11,"require"],[6,20,5,18],[6,21,5,18,"_dependencyMap"],[6,35,5,18],[6,38,5,35],[6,39,5,36],[7,2,6,0],[7,6,6,4,"component"],[7,15,6,13],[7,18,6,16,"require"],[7,25,6,23],[7,26,6,23,"_dependencyMap"],[7,40,6,23],[7,43,6,45],[7,44,6,46],[8,2,7,0],[8,6,7,4,"logger"],[8,12,7,10],[8,15,7,13,"require"],[8,22,7,20],[8,23,7,20,"_dependencyMap"],[8,37,7,20],[8,40,7,39],[8,41,7,40],[10,2,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,2,25,0],[26,11,25,9,"_debugErrorMap"],[26,25,25,23,"_debugErrorMap"],[26,26,25,23],[26,28,25,26],[27,4,26,4],[27,8,26,8,"_a"],[27,10,26,10],[28,4,27,4],[28,11,27,11,"_a"],[28,13,27,13],[28,16,27,16],[28,17,27,17],[28,18,27,18],[28,20,28,8,"_a"],[28,22,28,10],[28,23,28,11],[28,51,28,39],[28,52,28,40],[28,93,28,81],[28,96,28,84],[28,150,28,138],[28,152,29,8,"_a"],[28,154,29,10],[28,155,29,11],[28,171,29,27],[28,172,29,28],[28,207,29,63],[28,210,29,66],[28,212,29,68],[28,214,30,8,"_a"],[28,216,30,10],[28,217,30,11],[28,237,30,31],[28,238,30,32],[28,277,30,71],[28,468,32,70],[28,470,33,8,"_a"],[28,472,33,10],[28,473,33,11],[28,492,33,30],[28,493,33,31],[28,531,33,69],[28,682,35,26],[28,684,36,8,"_a"],[28,686,36,10],[28,687,36,11],[28,709,36,33],[28,710,36,34],[28,751,36,75],[28,915,38,37],[28,917,39,8,"_a"],[28,919,39,10],[28,920,39,11],[28,934,39,25],[28,935,39,26],[28,968,39,59],[28,1049,40,20],[28,1051,41,8,"_a"],[28,1053,41,10],[28,1054,41,11],[28,1073,41,30],[28,1074,41,31],[28,1112,41,69],[28,1115,41,72],[28,1148,41,105],[28,1150,42,8,"_a"],[28,1152,42,10],[28,1153,42,11],[28,1171,42,29],[28,1172,42,30],[28,1209,42,67],[28,1212,42,70],[28,1244,42,102],[28,1246,43,8,"_a"],[28,1248,43,10],[28,1249,43,11],[28,1276,43,38],[28,1277,43,39],[28,1323,43,85],[28,1326,43,88],[28,1396,43,158],[28,1398,44,8,"_a"],[28,1400,44,10],[28,1401,44,11],[28,1424,44,34],[28,1425,44,35],[28,1465,44,75],[28,1468,44,78],[28,1523,44,133],[28,1525,45,8,"_a"],[28,1527,45,10],[28,1528,45,11],[28,1551,45,34],[28,1552,45,35],[28,1603,45,86],[28,1714,46,49],[28,1716,47,8,"_a"],[28,1718,47,10],[28,1719,47,11],[28,1758,47,50],[28,1759,47,51],[28,1810,47,102],[28,1998,49,46],[28,2000,50,8,"_a"],[28,2002,50,10],[28,2003,50,11],[28,2031,50,39],[28,2032,50,40],[28,2079,50,87],[28,2176,51,25],[28,2178,52,8,"_a"],[28,2180,52,10],[28,2181,52,11],[28,2214,52,44],[28,2215,52,45],[28,2267,52,97],[28,2270,52,100],[28,2325,52,155],[28,2327,53,8,"_a"],[28,2329,53,10],[28,2330,53,11],[28,2352,53,33],[28,2353,53,34],[28,2386,53,67],[28,2389,53,70],[28,2446,53,127],[28,2448,54,8,"_a"],[28,2450,54,10],[28,2451,54,11],[28,2475,54,35],[28,2476,54,36],[28,2519,54,79],[28,2683,56,45],[28,2685,57,8,"_a"],[28,2687,57,10],[28,2688,57,11],[28,2709,57,32],[28,2710,57,33],[28,2747,57,70],[28,2750,57,73],[28,2780,57,103],[28,2782,58,8,"_a"],[28,2784,58,10],[28,2785,58,11],[28,2810,58,36],[28,2811,58,37],[28,2853,58,79],[28,2856,58,82],[28,2938,58,164],[28,2940,59,8,"_a"],[28,2942,59,10],[28,2943,59,11],[28,2959,59,27],[28,2960,59,28],[28,2995,59,63],[28,2998,59,66],[28,3035,59,103],[28,3037,60,8,"_a"],[28,3039,60,10],[28,3040,60,11],[28,3064,60,35],[28,3065,60,36],[28,3108,60,79],[28,3244,61,73],[28,3246,62,8,"_a"],[28,3248,62,10],[28,3249,62,11],[28,3265,62,27],[28,3266,62,28],[28,3301,62,63],[28,3304,62,66],[28,3374,62,136],[28,3376,63,8,"_a"],[28,3378,63,10],[28,3379,63,11],[28,3399,63,31],[28,3400,63,32],[28,3433,63,65],[28,3617,65,55],[28,3619,66,8,"_a"],[28,3621,66,10],[28,3622,66,11],[28,3642,66,31],[28,3643,66,32],[28,3682,66,71],[28,3685,66,74],[28,3722,66,111],[28,3724,67,8,"_a"],[28,3726,67,10],[28,3727,67,11],[28,3754,67,38],[28,3755,67,39],[28,3788,67,72],[28,3974,69,53],[28,3976,70,8,"_a"],[28,3978,70,10],[28,3979,70,11],[28,4001,70,33],[28,4002,70,34],[28,4043,70,75],[28,4046,70,78],[28,4100,70,132],[28,4102,71,8,"_a"],[28,4104,71,10],[28,4105,71,11],[28,4136,71,42],[28,4137,71,43],[28,4187,71,93],[28,4413,74,45],[28,4415,75,8,"_a"],[28,4417,75,10],[28,4418,75,11],[28,4440,75,33],[28,4441,75,34],[28,4482,75,75],[28,4485,75,78],[28,4556,75,149],[28,4558,76,8,"_a"],[28,4560,76,10],[28,4561,76,11],[28,4590,76,40],[28,4591,76,41],[28,4639,76,89],[28,4642,76,92],[28,4733,76,183],[28,4735,77,8,"_a"],[28,4737,77,10],[28,4738,77,11],[28,4753,77,26],[28,4754,77,27],[28,4788,77,61],[28,4791,77,64],[28,4830,77,103],[28,4832,78,8,"_a"],[28,4834,78,10],[28,4835,78,11],[28,4860,78,36],[28,4861,78,37],[28,4905,78,81],[28,4908,78,84],[28,4976,78,152],[28,4978,79,8,"_a"],[28,4980,79,10],[28,4981,79,11],[28,4998,79,28],[28,4999,79,29],[28,5035,79,65],[28,5038,79,68],[28,5107,79,137],[28,5109,80,8,"_a"],[28,5111,80,10],[28,5112,80,11],[28,5131,80,30],[28,5132,80,31],[28,5170,80,69],[28,5173,80,72],[28,5222,80,121],[28,5224,81,8,"_a"],[28,5226,81,10],[28,5227,81,11],[28,5247,81,31],[28,5248,81,32],[28,5287,81,71],[28,5290,81,74],[28,5360,81,144],[28,5362,82,8,"_a"],[28,5364,82,10],[28,5365,82,11],[28,5390,82,36],[28,5391,82,37],[28,5435,82,81],[28,5612,83,94],[28,5614,84,8,"_a"],[28,5616,84,10],[28,5617,84,11],[28,5647,84,41],[28,5648,84,42],[28,5688,84,82],[28,5691,84,85],[28,5771,84,165],[28,5773,85,8,"_a"],[28,5775,85,10],[28,5776,85,11],[28,5800,85,35],[28,5801,85,36],[28,5844,85,79],[28,5949,86,44],[28,5951,87,8,"_a"],[28,5953,87,10],[28,5954,87,11],[28,5979,87,36],[28,5980,87,37],[28,6024,87,81],[28,6116,88,32],[28,6118,89,8,"_a"],[28,6120,89,10],[28,6121,89,11],[28,6142,89,32],[28,6143,89,33],[28,6178,89,68],[28,6323,90,85],[28,6325,91,8,"_a"],[28,6327,91,10],[28,6328,91,11],[28,6349,91,32],[28,6350,91,33],[28,6387,91,70],[28,6496,92,48],[28,6498,93,8,"_a"],[28,6500,93,10],[28,6501,93,11],[28,6517,93,27],[28,6518,93,28],[28,6555,93,65],[28,6558,93,68],[28,6621,93,131],[28,6623,94,8,"_a"],[28,6625,94,10],[28,6626,94,11],[28,6652,94,37],[28,6653,94,38],[28,6693,94,78],[28,6696,94,81],[28,6779,94,164],[28,6781,95,8,"_a"],[28,6783,95,10],[28,6784,95,11],[28,6806,95,33],[28,6807,95,34],[28,6848,95,75],[28,7090,98,42],[28,7092,99,8,"_a"],[28,7094,99,10],[28,7095,99,11],[28,7116,99,32],[28,7117,99,33],[28,7157,99,73],[28,7160,99,76],[28,7199,99,115],[28,7201,100,8,"_a"],[28,7203,100,10],[28,7204,100,11],[28,7229,100,36],[28,7230,100,37],[28,7274,100,81],[28,7384,101,49],[28,7386,102,8,"_a"],[28,7388,102,10],[28,7389,102,11],[28,7405,102,27],[28,7406,102,28],[28,7441,102,63],[28,7616,103,94],[28,7618,104,8,"_a"],[28,7620,104,10],[28,7621,104,11],[28,7646,104,36],[28,7647,104,37],[28,7688,104,78],[28,7691,104,81],[28,7765,104,155],[28,7767,105,8,"_a"],[28,7769,105,10],[28,7770,105,11],[28,7789,105,30],[28,7790,105,31],[28,7828,105,69],[28,7831,105,72],[28,7874,105,115],[28,7876,106,8,"_a"],[28,7878,106,10],[28,7879,106,11],[28,7894,106,26],[28,7895,106,27],[28,7929,106,61],[28,7932,106,64],[28,7991,106,123],[28,7993,107,8,"_a"],[28,7995,107,10],[28,7996,107,11],[28,8022,107,37],[28,8023,107,38],[28,8072,107,87],[28,8075,107,90],[28,8165,107,180],[28,8167,108,8,"_a"],[28,8169,108,10],[28,8170,108,11],[28,8199,108,40],[28,8200,108,41],[28,8240,108,81],[28,8368,109,68],[28,8370,110,8,"_a"],[28,8372,110,10],[28,8373,110,11],[28,8397,110,35],[28,8398,110,36],[28,8441,110,79],[28,8571,111,73],[28,8573,112,8,"_a"],[28,8575,112,10],[28,8576,112,11],[28,8603,112,38],[28,8604,112,39],[28,8637,112,72],[28,8640,112,75],[28,8716,112,151],[28,8718,113,8,"_a"],[28,8720,113,10],[28,8721,113,11],[28,8743,113,33],[28,8744,113,34],[28,8785,113,75],[28,8788,113,78],[28,8837,113,127],[28,8839,114,8,"_a"],[28,8841,114,10],[28,8842,114,11],[28,8864,114,33],[28,8865,114,34],[28,8906,114,75],[28,8909,114,78],[28,8946,114,115],[28,8948,115,8,"_a"],[28,8950,115,10],[28,8951,115,11],[28,8974,115,34],[28,8975,115,35],[28,9017,115,77],[28,9020,115,80],[28,9087,115,147],[28,9089,116,8,"_a"],[28,9091,116,10],[28,9092,116,11],[28,9118,116,37],[28,9119,116,38],[28,9164,116,83],[28,9330,118,38],[28,9332,119,8,"_a"],[28,9334,119,10],[28,9335,119,11],[28,9353,119,29],[28,9354,119,30],[28,9391,119,67],[28,9394,119,70],[28,9433,119,109],[28,9435,120,8,"_a"],[28,9437,120,10],[28,9438,120,11],[28,9465,120,38],[28,9466,120,39],[28,9503,120,76],[28,9506,120,79],[28,9548,120,121],[28,9550,121,8,"_a"],[28,9552,121,10],[28,9553,121,11],[28,9583,121,41],[28,9584,121,42],[28,9624,121,82],[28,9627,121,85],[28,9693,121,151],[28,9695,122,8,"_a"],[28,9697,122,10],[28,9698,122,11],[28,9720,122,33],[28,9721,122,34],[28,9762,122,75],[28,9765,122,78],[28,9836,122,149],[28,9838,123,8,"_a"],[28,9840,123,10],[28,9841,123,11],[28,9866,123,36],[28,9867,123,37],[28,9908,123,78],[28,9911,123,81],[28,9981,123,151],[28,9983,124,8,"_a"],[28,9985,124,10],[28,9986,124,11],[28,9999,124,24],[28,10000,124,25],[28,10037,124,62],[28,10040,124,65],[28,10088,124,113],[28,10090,125,8,"_a"],[28,10092,125,10],[28,10093,125,11],[28,10122,125,40],[28,10123,125,41],[28,10162,125,80],[28,10165,125,83],[28,10239,125,157],[28,10241,126,8,"_a"],[28,10243,126,10],[28,10244,126,11],[28,10272,126,39],[28,10273,126,40],[28,10306,126,73],[28,10309,126,76],[28,10381,126,148],[28,10383,127,8,"_a"],[28,10385,127,10],[28,10386,127,11],[28,10428,127,53],[28,10429,127,54],[28,10467,127,92],[28,10621,129,28],[28,10623,130,8,"_a"],[28,10625,130,10],[28,10626,130,11],[28,10650,130,35],[28,10651,130,36],[28,10694,130,79],[28,10697,130,82],[28,10794,130,179],[28,10796,131,8,"_a"],[28,10798,131,10],[28,10799,131,11],[28,10814,131,26],[28,10815,131,27],[28,10849,131,61],[28,10852,131,64],[28,10889,131,101],[28,10891,132,8,"_a"],[28,10893,132,10],[28,10894,132,11],[28,10912,132,29],[28,10913,132,30],[28,10950,132,67],[28,10953,132,70],[28,11013,132,130],[28,11015,133,8,"_a"],[28,11017,133,10],[28,11018,133,11],[28,11029,133,22],[28,11030,133,23],[28,11060,133,53],[28,11168,134,46],[28,11170,135,8,"_a"],[28,11172,135,10],[28,11173,135,11],[28,11196,135,34],[28,11197,135,35],[28,11239,135,77],[28,11394,137,27],[28,11396,138,8,"_a"],[28,11398,138,10],[28,11399,138,11],[28,11444,138,56],[28,11445,138,57],[28,11489,138,101],[28,11671,140,47],[28,11673,141,8,"_a"],[28,11675,141,10],[28,11676,141,11],[28,11691,141,26],[28,11692,141,27],[28,11726,141,61],[28,11729,141,64],[28,11820,141,155],[28,11822,142,8,"_a"],[28,11824,142,10],[28,11825,142,11],[28,11847,142,33],[28,11848,142,34],[28,11889,142,75],[28,11892,142,78],[28,11964,142,150],[28,11966,143,8,"_a"],[28,11968,143,10],[28,11969,143,11],[28,11994,143,36],[28,11995,143,37],[28,12039,143,81],[28,12042,143,84],[28,12107,143,149],[28,12109,144,8,"_a"],[28,12111,144,10],[28,12112,144,11],[28,12128,144,27],[28,12129,144,28],[28,12164,144,63],[28,12167,144,66],[28,12226,144,125],[28,12228,145,8,"_a"],[28,12230,145,10],[28,12231,145,11],[28,12259,145,39],[28,12260,145,40],[28,12307,145,87],[28,12310,145,90],[28,12384,145,164],[28,12386,146,8,"_a"],[28,12388,146,10],[28,12389,146,11],[28,12417,146,39],[28,12418,146,40],[28,12465,146,87],[28,12468,146,90],[28,12518,146,140],[28,12520,147,8,"_a"],[28,12522,147,10],[28,12523,147,11],[28,12544,147,32],[28,12545,147,33],[28,12585,147,73],[28,12588,147,76],[28,12648,147,136],[28,12650,148,8,"_a"],[28,12652,148,10],[28,12653,148,11],[28,12683,148,41],[28,12684,148,42],[28,12735,148,93],[28,12738,148,96],[28,12794,148,152],[28,12796,149,8,"_a"],[28,12798,149,10],[28,12799,149,11],[28,12837,149,49],[28,12838,149,50],[28,12887,149,99],[28,12890,149,102],[28,12965,149,177],[28,12967,150,8,"_a"],[28,12969,150,10],[28,12970,150,11],[28,12990,150,31],[28,12991,150,32],[28,13030,150,71],[28,13033,150,74],[28,13102,150,143],[28,13104,151,8,"_a"],[28,13106,151,10],[28,13107,151,11],[28,13116,151,20],[28,13117,151,21],[28,13145,151,49],[28,13148,151,52],[28,13178,151,82],[28,13180,152,8,"_a"],[28,13182,152,10],[28,13183,152,11],[28,13203,152,31],[28,13204,152,32],[28,13238,152,66],[28,13241,152,69],[28,13313,152,141],[28,13315,153,8,"_a"],[28,13317,153,10],[28,13318,153,11],[28,13337,153,30],[28,13338,153,31],[28,13386,153,79],[28,13478,154,30],[28,13480,155,8,"_a"],[28,13482,155,10],[28,13483,155,11],[28,13510,155,38],[28,13511,155,39],[28,13551,155,79],[28,13660,156,49],[28,13662,157,8,"_a"],[28,13664,157,10],[28,13665,157,11],[28,13691,157,37],[28,13692,157,38],[28,13737,157,83],[28,13740,157,86],[28,13857,157,203],[28,13859,158,8,"_a"],[28,13861,158,10],[28,13862,158,11],[28,13892,158,41],[28,13893,158,42],[28,13937,158,86],[28,13940,158,89],[28,14014,158,163],[28,14016,159,8,"_a"],[28,14018,159,10],[28,14019,159,11],[28,14049,159,41],[28,14050,159,42],[28,14099,159,91],[28,14102,159,94],[28,14162,159,154],[28,14164,160,8,"_a"],[28,14166,160,10],[28,14167,160,11],[28,14185,160,29],[28,14186,160,30],[28,14223,160,67],[28,14226,160,70],[28,14268,160,112],[28,14270,161,8,"_a"],[28,14272,161,10],[28,14273,161,11],[28,14289,161,27],[28,14290,161,28],[28,14325,161,63],[28,14328,161,66],[28,14399,161,137],[28,14401,162,8,"_a"],[28,14403,162,10],[28,14404,162,11],[28,14420,162,27],[28,14421,162,28],[28,14454,162,61],[28,14548,163,32],[28,14550,164,8,"_a"],[28,14552,164,10],[28,14553,164,11],[28,14568,164,26],[28,14569,164,27],[28,14603,164,61],[28,14606,164,64],[28,14663,164,121],[28,14665,165,8,"_a"],[28,14667,165,10],[28,14668,165,11],[28,14683,165,26],[28,14684,165,27],[28,14718,165,61],[28,14721,165,64],[28,14799,165,142],[28,14801,166,8,"_a"],[28,14803,166,10],[28,14804,166,11],[28,14821,166,28],[28,14822,166,29],[28,14858,166,65],[28,14861,166,68],[28,14863,166,70],[28,14865,167,8,"_a"],[28,14867,167,10],[28,14868,167,11],[28,14883,167,26],[28,14884,167,27],[28,14918,167,61],[28,14921,167,64],[28,14970,167,113],[28,14972,168,8,"_a"],[28,14974,168,10],[28,14975,168,11],[28,15000,168,36],[28,15001,168,37],[28,15045,168,81],[28,15048,168,84],[28,15126,168,162],[28,15128,169,8,"_a"],[28,15130,169,10],[28,15131,169,11],[28,15152,169,32],[28,15153,169,33],[28,15193,169,73],[28,15423,172,44],[28,15425,173,8,"_a"],[28,15427,173,10],[28,15428,173,11],[28,15453,173,36],[28,15454,173,37],[28,15498,173,81],[28,15501,173,84],[28,15570,173,153],[28,15572,174,8,"_a"],[28,15574,174,10],[28,15575,174,11],[28,15600,174,36],[28,15601,174,37],[28,15645,174,81],[28,15648,174,84],[28,15717,174,153],[28,15719,175,8,"_a"],[28,15721,175,10],[28,15722,175,11],[28,15748,175,37],[28,15749,175,38],[28,15794,175,83],[28,15797,175,86],[28,15867,175,156],[28,15869,176,8,"_a"],[28,15871,176,10],[28,15872,176,11],[28,15895,176,34],[28,15896,176,35],[28,15938,176,77],[28,15941,176,80],[28,16008,176,147],[28,16010,177,8,"_a"],[28,16012,177,10],[28,16013,177,11],[28,16034,177,32],[28,16035,177,33],[28,16075,177,73],[28,16078,177,76],[28,16153,177,151],[28,16155,178,8,"_a"],[28,16157,178,10],[28,16158,178,11],[28,16185,178,38],[28,16186,178,39],[28,16232,178,85],[28,16235,178,88],[28,16306,178,159],[28,16308,179,8,"_a"],[28,16310,179,10],[28,16311,179,11],[28,16329,179,29],[28,16330,179,30],[28,16367,179,67],[28,16370,179,70],[28,16399,179,99],[28,16401,180,8,"_a"],[28,16403,180,10],[28,16404,180,11],[28,16431,180,38],[28,16432,180,39],[28,16478,180,85],[28,16481,180,88],[28,16552,180,159],[28,16554,181,8,"_a"],[28,16556,181,10],[28,16557,181,11],[28,16601,181,55],[28,16602,181,56],[28,16665,181,119],[28,16668,181,122],[28,16796,181,250],[28,16798,182,8,"_a"],[28,16800,182,10],[28,16801,182,11],[28,16838,182,48],[28,16839,182,49],[28,16895,182,105],[28,16898,182,108],[28,16944,182,154],[28,16946,183,8,"_a"],[28,16948,183,10],[29,2,184,0],[30,2,185,0],[30,11,185,9,"_prodErrorMap"],[30,24,185,22,"_prodErrorMap"],[30,25,185,22],[30,27,185,25],[31,4,186,4],[31,8,186,8,"_a"],[31,10,186,10],[32,4,187,4],[33,4,188,4],[34,4,189,4],[35,4,190,4],[35,11,190,11,"_a"],[35,13,190,13],[35,16,190,16],[35,17,190,17],[35,18,190,18],[35,20,191,8,"_a"],[35,22,191,10],[35,23,191,11],[35,62,191,50],[35,63,191,51],[35,114,191,102],[35,302,193,46],[35,304,194,8,"_a"],[35,306,194,10],[36,2,195,0],[37,2,196,0],[38,0,197,0],[39,0,198,0],[40,0,199,0],[41,0,200,0],[42,0,201,0],[43,0,202,0],[44,2,203,0],[44,6,203,4,"debugErrorMap"],[44,19,203,17],[44,22,203,20,"_debugErrorMap"],[44,36,203,34],[45,2,204,0],[46,0,205,0],[47,0,206,0],[48,0,207,0],[49,0,208,0],[50,0,209,0],[51,0,210,0],[52,2,211,0],[52,6,211,4,"prodErrorMap"],[52,18,211,16],[52,21,211,19,"_prodErrorMap"],[52,34,211,32],[53,2,212,0],[53,6,212,4,"_DEFAULT_AUTH_ERROR_FACTORY"],[53,33,212,31],[53,36,212,34],[53,40,212,38,"util"],[53,44,212,42],[53,45,212,43,"ErrorFactory"],[53,57,212,55],[53,58,212,56],[53,64,212,62],[53,66,212,64],[53,76,212,74],[53,78,212,76,"_prodErrorMap"],[53,91,212,89],[53,92,212,90],[53,93,212,91],[53,94,212,92],[54,2,213,0],[55,0,214,0],[56,0,215,0],[57,0,216,0],[58,0,217,0],[59,0,218,0],[60,0,219,0],[61,0,220,0],[62,0,221,0],[63,0,222,0],[64,0,223,0],[65,2,224,0],[65,6,224,4,"AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY"],[65,48,224,46],[65,51,224,49],[66,4,225,4,"ADMIN_ONLY_OPERATION"],[66,24,225,24],[66,26,225,26],[66,59,225,59],[67,4,226,4,"ARGUMENT_ERROR"],[67,18,226,18],[67,20,226,20],[67,41,226,41],[68,4,227,4,"APP_NOT_AUTHORIZED"],[68,22,227,22],[68,24,227,24],[68,49,227,49],[69,4,228,4,"APP_NOT_INSTALLED"],[69,21,228,21],[69,23,228,23],[69,47,228,47],[70,4,229,4,"CAPTCHA_CHECK_FAILED"],[70,24,229,24],[70,26,229,26],[70,53,229,53],[71,4,230,4,"CODE_EXPIRED"],[71,16,230,16],[71,18,230,18],[71,37,230,37],[72,4,231,4,"CORDOVA_NOT_READY"],[72,21,231,21],[72,23,231,23],[72,47,231,47],[73,4,232,4,"CORS_UNSUPPORTED"],[73,20,232,20],[73,22,232,22],[73,45,232,45],[74,4,233,4,"CREDENTIAL_ALREADY_IN_USE"],[74,29,233,29],[74,31,233,31],[74,63,233,63],[75,4,234,4,"CREDENTIAL_MISMATCH"],[75,23,234,23],[75,25,234,25],[75,53,234,53],[76,4,235,4,"CREDENTIAL_TOO_OLD_LOGIN_AGAIN"],[76,34,235,34],[76,36,235,36],[76,64,235,64],[77,4,236,4,"DEPENDENT_SDK_INIT_BEFORE_AUTH"],[77,34,236,34],[77,36,236,36],[77,80,236,80],[78,4,237,4,"DYNAMIC_LINK_NOT_ACTIVATED"],[78,30,237,30],[78,32,237,32],[78,65,237,65],[79,4,238,4,"EMAIL_CHANGE_NEEDS_VERIFICATION"],[79,35,238,35],[79,37,238,37],[79,75,238,75],[80,4,239,4,"EMAIL_EXISTS"],[80,16,239,16],[80,18,239,18],[80,45,239,45],[81,4,240,4,"EMULATOR_CONFIG_FAILED"],[81,26,240,26],[81,28,240,28],[81,57,240,57],[82,4,241,4,"EXPIRED_OOB_CODE"],[82,20,241,20],[82,22,241,22],[82,48,241,48],[83,4,242,4,"EXPIRED_POPUP_REQUEST"],[83,25,242,25],[83,27,242,27],[83,57,242,57],[84,4,243,4,"INTERNAL_ERROR"],[84,18,243,18],[84,20,243,20],[84,41,243,41],[85,4,244,4,"INVALID_API_KEY"],[85,19,244,19],[85,21,244,21],[85,43,244,43],[86,4,245,4,"INVALID_APP_CREDENTIAL"],[86,26,245,26],[86,28,245,28],[86,57,245,57],[87,4,246,4,"INVALID_APP_ID"],[87,18,246,18],[87,20,246,20],[87,41,246,41],[88,4,247,4,"INVALID_AUTH"],[88,16,247,16],[88,18,247,18],[88,43,247,43],[89,4,248,4,"INVALID_AUTH_EVENT"],[89,22,248,22],[89,24,248,24],[89,49,248,49],[90,4,249,4,"INVALID_CERT_HASH"],[90,21,249,21],[90,23,249,23],[90,47,249,47],[91,4,250,4,"INVALID_CODE"],[91,16,250,16],[91,18,250,18],[91,50,250,50],[92,4,251,4,"INVALID_CONTINUE_URI"],[92,24,251,24],[92,26,251,26],[92,53,251,53],[93,4,252,4,"INVALID_CORDOVA_CONFIGURATION"],[93,33,252,33],[93,35,252,35],[93,71,252,71],[94,4,253,4,"INVALID_CUSTOM_TOKEN"],[94,24,253,24],[94,26,253,26],[94,53,253,53],[95,4,254,4,"INVALID_DYNAMIC_LINK_DOMAIN"],[95,31,254,31],[95,33,254,33],[95,67,254,67],[96,4,255,4,"INVALID_EMAIL"],[96,17,255,17],[96,19,255,19],[96,39,255,39],[97,4,256,4,"INVALID_EMULATOR_SCHEME"],[97,27,256,27],[97,29,256,29],[97,59,256,59],[98,4,257,4,"INVALID_IDP_RESPONSE"],[98,24,257,24],[98,26,257,26],[98,51,257,51],[99,4,258,4,"INVALID_LOGIN_CREDENTIALS"],[99,29,258,29],[99,31,258,31],[99,56,258,56],[100,4,259,4,"INVALID_MESSAGE_PAYLOAD"],[100,27,259,27],[100,29,259,29],[100,59,259,59],[101,4,260,4,"INVALID_MFA_SESSION"],[101,23,260,23],[101,25,260,25],[101,60,260,60],[102,4,261,4,"INVALID_OAUTH_CLIENT_ID"],[102,27,261,27],[102,29,261,29],[102,59,261,59],[103,4,262,4,"INVALID_OAUTH_PROVIDER"],[103,26,262,26],[103,28,262,28],[103,57,262,57],[104,4,263,4,"INVALID_OOB_CODE"],[104,20,263,20],[104,22,263,22],[104,48,263,48],[105,4,264,4,"INVALID_ORIGIN"],[105,18,264,18],[105,20,264,20],[105,46,264,46],[106,4,265,4,"INVALID_PASSWORD"],[106,20,265,20],[106,22,265,22],[106,43,265,43],[107,4,266,4,"INVALID_PERSISTENCE"],[107,23,266,23],[107,25,266,25],[107,56,266,56],[108,4,267,4,"INVALID_PHONE_NUMBER"],[108,24,267,24],[108,26,267,26],[108,53,267,53],[109,4,268,4,"INVALID_PROVIDER_ID"],[109,23,268,23],[109,25,268,25],[109,51,268,51],[110,4,269,4,"INVALID_RECIPIENT_EMAIL"],[110,27,269,27],[110,29,269,29],[110,59,269,59],[111,4,270,4,"INVALID_SENDER"],[111,18,270,18],[111,20,270,20],[111,41,270,41],[112,4,271,4,"INVALID_SESSION_INFO"],[112,24,271,24],[112,26,271,26],[112,56,271,56],[113,4,272,4,"INVALID_TENANT_ID"],[113,21,272,21],[113,23,272,23],[113,47,272,47],[114,4,273,4,"MFA_INFO_NOT_FOUND"],[114,22,273,22],[114,24,273,24],[114,58,273,58],[115,4,274,4,"MFA_REQUIRED"],[115,16,274,16],[115,18,274,18],[115,51,274,51],[116,4,275,4,"MISSING_ANDROID_PACKAGE_NAME"],[116,32,275,32],[116,34,275,34],[116,65,275,65],[117,4,276,4,"MISSING_APP_CREDENTIAL"],[117,26,276,26],[117,28,276,28],[117,57,276,57],[118,4,277,4,"MISSING_AUTH_DOMAIN"],[118,23,277,23],[118,25,277,25],[118,59,277,59],[119,4,278,4,"MISSING_CODE"],[119,16,278,16],[119,18,278,18],[119,50,278,50],[120,4,279,4,"MISSING_CONTINUE_URI"],[120,24,279,24],[120,26,279,26],[120,53,279,53],[121,4,280,4,"MISSING_IFRAME_START"],[121,24,280,24],[121,26,280,26],[121,53,280,53],[122,4,281,4,"MISSING_IOS_BUNDLE_ID"],[122,25,281,25],[122,27,281,27],[122,55,281,55],[123,4,282,4,"MISSING_OR_INVALID_NONCE"],[123,28,282,28],[123,30,282,30],[123,61,282,61],[124,4,283,4,"MISSING_MFA_INFO"],[124,20,283,20],[124,22,283,22],[124,54,283,54],[125,4,284,4,"MISSING_MFA_SESSION"],[125,23,284,23],[125,25,284,25],[125,60,284,60],[126,4,285,4,"MISSING_PHONE_NUMBER"],[126,24,285,24],[126,26,285,26],[126,53,285,53],[127,4,286,4,"MISSING_SESSION_INFO"],[127,24,286,24],[127,26,286,26],[127,56,286,56],[128,4,287,4,"MODULE_DESTROYED"],[128,20,287,20],[128,22,287,22],[128,40,287,40],[129,4,288,4,"NEED_CONFIRMATION"],[129,21,288,21],[129,23,288,23],[129,70,288,70],[130,4,289,4,"NETWORK_REQUEST_FAILED"],[130,26,289,26],[130,28,289,28],[130,57,289,57],[131,4,290,4,"NULL_USER"],[131,13,290,13],[131,15,290,15],[131,31,290,31],[132,4,291,4,"NO_AUTH_EVENT"],[132,17,291,17],[132,19,291,19],[132,39,291,39],[133,4,292,4,"NO_SUCH_PROVIDER"],[133,20,292,20],[133,22,292,22],[133,45,292,45],[134,4,293,4,"OPERATION_NOT_ALLOWED"],[134,25,293,25],[134,27,293,27],[134,55,293,55],[135,4,294,4,"OPERATION_NOT_SUPPORTED"],[135,27,294,27],[135,29,294,29],[135,79,294,79],[136,4,295,4,"POPUP_BLOCKED"],[136,17,295,17],[136,19,295,19],[136,39,295,39],[137,4,296,4,"POPUP_CLOSED_BY_USER"],[137,24,296,24],[137,26,296,26],[137,53,296,53],[138,4,297,4,"PROVIDER_ALREADY_LINKED"],[138,27,297,27],[138,29,297,29],[138,59,297,59],[139,4,298,4,"QUOTA_EXCEEDED"],[139,18,298,18],[139,20,298,20],[139,41,298,41],[140,4,299,4,"REDIRECT_CANCELLED_BY_USER"],[140,30,299,30],[140,32,299,32],[140,65,299,65],[141,4,300,4,"REDIRECT_OPERATION_PENDING"],[141,30,300,30],[141,32,300,32],[141,65,300,65],[142,4,301,4,"REJECTED_CREDENTIAL"],[142,23,301,23],[142,25,301,25],[142,51,301,51],[143,4,302,4,"SECOND_FACTOR_ALREADY_ENROLLED"],[143,34,302,34],[143,36,302,36],[143,71,302,71],[144,4,303,4,"SECOND_FACTOR_LIMIT_EXCEEDED"],[144,32,303,32],[144,34,303,34],[144,77,303,77],[145,4,304,4,"TENANT_ID_MISMATCH"],[145,22,304,22],[145,24,304,24],[145,49,304,49],[146,4,305,4,"TIMEOUT"],[146,11,305,11],[146,13,305,13],[146,27,305,27],[147,4,306,4,"TOKEN_EXPIRED"],[147,17,306,17],[147,19,306,19],[147,44,306,44],[148,4,307,4,"TOO_MANY_ATTEMPTS_TRY_LATER"],[148,31,307,31],[148,33,307,33],[148,57,307,57],[149,4,308,4,"UNAUTHORIZED_DOMAIN"],[149,23,308,23],[149,25,308,25],[149,57,308,57],[150,4,309,4,"UNSUPPORTED_FIRST_FACTOR"],[150,28,309,28],[150,30,309,30],[150,61,309,61],[151,4,310,4,"UNSUPPORTED_PERSISTENCE"],[151,27,310,27],[151,29,310,29],[151,64,310,64],[152,4,311,4,"UNSUPPORTED_TENANT_OPERATION"],[152,32,311,32],[152,34,311,34],[152,69,311,69],[153,4,312,4,"UNVERIFIED_EMAIL"],[153,20,312,20],[153,22,312,22],[153,45,312,45],[154,4,313,4,"USER_CANCELLED"],[154,18,313,18],[154,20,313,20],[154,41,313,41],[155,4,314,4,"USER_DELETED"],[155,16,314,16],[155,18,314,18],[155,39,314,39],[156,4,315,4,"USER_DISABLED"],[156,17,315,17],[156,19,315,19],[156,39,315,39],[157,4,316,4,"USER_MISMATCH"],[157,17,316,17],[157,19,316,19],[157,39,316,39],[158,4,317,4,"USER_SIGNED_OUT"],[158,19,317,19],[158,21,317,21],[158,43,317,43],[159,4,318,4,"WEAK_PASSWORD"],[159,17,318,17],[159,19,318,19],[159,39,318,39],[160,4,319,4,"WEB_STORAGE_UNSUPPORTED"],[160,27,319,27],[160,29,319,29],[160,59,319,59],[161,4,320,4,"ALREADY_INITIALIZED"],[161,23,320,23],[161,25,320,25],[161,51,320,51],[162,4,321,4,"RECAPTCHA_NOT_ENABLED"],[162,25,321,25],[162,27,321,27],[162,55,321,55],[163,4,322,4,"MISSING_RECAPTCHA_TOKEN"],[163,27,322,27],[163,29,322,29],[163,59,322,59],[164,4,323,4,"INVALID_RECAPTCHA_TOKEN"],[164,27,323,27],[164,29,323,29],[164,59,323,59],[165,4,324,4,"INVALID_RECAPTCHA_ACTION"],[165,28,324,28],[165,30,324,30],[165,61,324,61],[166,4,325,4,"MISSING_CLIENT_TYPE"],[166,23,325,23],[166,25,325,25],[166,51,325,51],[167,4,326,4,"MISSING_RECAPTCHA_VERSION"],[167,29,326,29],[167,31,326,31],[167,63,326,63],[168,4,327,4,"INVALID_RECAPTCHA_VERSION"],[168,29,327,29],[168,31,327,31],[168,63,327,63],[169,4,328,4,"INVALID_REQ_TYPE"],[169,20,328,20],[169,22,328,22],[170,2,329,0],[170,3,329,1],[172,2,331,0],[173,0,332,0],[174,0,333,0],[175,0,334,0],[176,0,335,0],[177,0,336,0],[178,0,337,0],[179,0,338,0],[180,0,339,0],[181,0,340,0],[182,0,341,0],[183,0,342,0],[184,0,343,0],[185,0,344,0],[186,0,345,0],[187,0,346,0],[188,2,347,0],[188,6,347,4,"logClient"],[188,15,347,13],[188,18,347,16],[188,22,347,20,"logger"],[188,28,347,26],[188,29,347,27,"Logger"],[188,35,347,33],[188,36,347,34],[188,52,347,50],[188,53,347,51],[189,2,348,0],[189,11,348,9,"_logWarn"],[189,19,348,17,"_logWarn"],[189,20,348,18,"msg"],[189,23,348,21],[189,25,348,23],[190,4,349,4],[190,8,349,8,"args"],[190,12,349,12],[190,15,349,15],[190,17,349,17],[191,4,350,4],[191,9,350,9],[191,13,350,13,"_i"],[191,15,350,15],[191,18,350,18],[191,19,350,19],[191,21,350,21,"_i"],[191,23,350,23],[191,26,350,26,"arguments"],[191,35,350,35],[191,36,350,36,"length"],[191,42,350,42],[191,44,350,44,"_i"],[191,46,350,46],[191,48,350,48],[191,50,350,50],[192,6,351,8,"args"],[192,10,351,12],[192,11,351,13,"_i"],[192,13,351,15],[192,16,351,18],[192,17,351,19],[192,18,351,20],[192,21,351,23,"arguments"],[192,30,351,32],[192,31,351,33,"_i"],[192,33,351,35],[192,34,351,36],[193,4,352,4],[194,4,353,4],[194,8,353,8,"logClient"],[194,17,353,17],[194,18,353,18,"logLevel"],[194,26,353,26],[194,30,353,30,"logger"],[194,36,353,36],[194,37,353,37,"LogLevel"],[194,45,353,45],[194,46,353,46,"WARN"],[194,50,353,50],[194,52,353,52],[195,6,354,8,"logClient"],[195,15,354,17],[195,16,354,18,"warn"],[195,20,354,22],[195,21,354,23,"apply"],[195,26,354,28],[195,27,354,29,"logClient"],[195,36,354,38],[195,38,354,40,"tslib"],[195,43,354,45],[195,44,354,46,"__spreadArray"],[195,57,354,59],[195,58,354,60],[195,59,354,61],[195,67,354,69],[195,68,354,70,"concat"],[195,74,354,76],[195,75,354,77,"app"],[195,78,354,80],[195,79,354,81,"SDK_VERSION"],[195,90,354,92],[195,92,354,94],[195,97,354,99],[195,98,354,100],[195,99,354,101,"concat"],[195,105,354,107],[195,106,354,108,"msg"],[195,109,354,111],[195,110,354,112],[195,111,354,113],[195,113,354,115,"args"],[195,117,354,119],[195,119,354,121],[195,124,354,126],[195,125,354,127],[195,126,354,128],[196,4,355,4],[197,2,356,0],[198,2,357,0],[198,11,357,9,"_logError"],[198,20,357,18,"_logError"],[198,21,357,19,"msg"],[198,24,357,22],[198,26,357,24],[199,4,358,4],[199,8,358,8,"args"],[199,12,358,12],[199,15,358,15],[199,17,358,17],[200,4,359,4],[200,9,359,9],[200,13,359,13,"_i"],[200,15,359,15],[200,18,359,18],[200,19,359,19],[200,21,359,21,"_i"],[200,23,359,23],[200,26,359,26,"arguments"],[200,35,359,35],[200,36,359,36,"length"],[200,42,359,42],[200,44,359,44,"_i"],[200,46,359,46],[200,48,359,48],[200,50,359,50],[201,6,360,8,"args"],[201,10,360,12],[201,11,360,13,"_i"],[201,13,360,15],[201,16,360,18],[201,17,360,19],[201,18,360,20],[201,21,360,23,"arguments"],[201,30,360,32],[201,31,360,33,"_i"],[201,33,360,35],[201,34,360,36],[202,4,361,4],[203,4,362,4],[203,8,362,8,"logClient"],[203,17,362,17],[203,18,362,18,"logLevel"],[203,26,362,26],[203,30,362,30,"logger"],[203,36,362,36],[203,37,362,37,"LogLevel"],[203,45,362,45],[203,46,362,46,"ERROR"],[203,51,362,51],[203,53,362,53],[204,6,363,8,"logClient"],[204,15,363,17],[204,16,363,18,"error"],[204,21,363,23],[204,22,363,24,"apply"],[204,27,363,29],[204,28,363,30,"logClient"],[204,37,363,39],[204,39,363,41,"tslib"],[204,44,363,46],[204,45,363,47,"__spreadArray"],[204,58,363,60],[204,59,363,61],[204,60,363,62],[204,68,363,70],[204,69,363,71,"concat"],[204,75,363,77],[204,76,363,78,"app"],[204,79,363,81],[204,80,363,82,"SDK_VERSION"],[204,91,363,93],[204,93,363,95],[204,98,363,100],[204,99,363,101],[204,100,363,102,"concat"],[204,106,363,108],[204,107,363,109,"msg"],[204,110,363,112],[204,111,363,113],[204,112,363,114],[204,114,363,116,"args"],[204,118,363,120],[204,120,363,122],[204,125,363,127],[204,126,363,128],[204,127,363,129],[205,4,364,4],[206,2,365,0],[208,2,367,0],[209,0,368,0],[210,0,369,0],[211,0,370,0],[212,0,371,0],[213,0,372,0],[214,0,373,0],[215,0,374,0],[216,0,375,0],[217,0,376,0],[218,0,377,0],[219,0,378,0],[220,0,379,0],[221,0,380,0],[222,0,381,0],[223,0,382,0],[224,2,383,0],[224,11,383,9,"_fail"],[224,16,383,14,"_fail"],[224,17,383,15,"authOrCode"],[224,27,383,25],[224,29,383,27],[225,4,384,4],[225,8,384,8,"rest"],[225,12,384,12],[225,15,384,15],[225,17,384,17],[226,4,385,4],[226,9,385,9],[226,13,385,13,"_i"],[226,15,385,15],[226,18,385,18],[226,19,385,19],[226,21,385,21,"_i"],[226,23,385,23],[226,26,385,26,"arguments"],[226,35,385,35],[226,36,385,36,"length"],[226,42,385,42],[226,44,385,44,"_i"],[226,46,385,46],[226,48,385,48],[226,50,385,50],[227,6,386,8,"rest"],[227,10,386,12],[227,11,386,13,"_i"],[227,13,386,15],[227,16,386,18],[227,17,386,19],[227,18,386,20],[227,21,386,23,"arguments"],[227,30,386,32],[227,31,386,33,"_i"],[227,33,386,35],[227,34,386,36],[228,4,387,4],[229,4,388,4],[229,10,388,10,"createErrorInternal"],[229,29,388,29],[229,30,388,30,"apply"],[229,35,388,35],[229,36,388,35,"undefined"],[229,45,388,35],[229,47,388,44,"tslib"],[229,52,388,49],[229,53,388,50,"__spreadArray"],[229,66,388,63],[229,67,388,64],[229,68,388,65,"authOrCode"],[229,78,388,75],[229,79,388,76],[229,81,388,78,"rest"],[229,85,388,82],[229,87,388,84],[229,92,388,89],[229,93,388,90],[229,94,388,91],[230,2,389,0],[231,2,390,0],[231,11,390,9,"_createError"],[231,23,390,21,"_createError"],[231,24,390,22,"authOrCode"],[231,34,390,32],[231,36,390,34],[232,4,391,4],[232,8,391,8,"rest"],[232,12,391,12],[232,15,391,15],[232,17,391,17],[233,4,392,4],[233,9,392,9],[233,13,392,13,"_i"],[233,15,392,15],[233,18,392,18],[233,19,392,19],[233,21,392,21,"_i"],[233,23,392,23],[233,26,392,26,"arguments"],[233,35,392,35],[233,36,392,36,"length"],[233,42,392,42],[233,44,392,44,"_i"],[233,46,392,46],[233,48,392,48],[233,50,392,50],[234,6,393,8,"rest"],[234,10,393,12],[234,11,393,13,"_i"],[234,13,393,15],[234,16,393,18],[234,17,393,19],[234,18,393,20],[234,21,393,23,"arguments"],[234,30,393,32],[234,31,393,33,"_i"],[234,33,393,35],[234,34,393,36],[235,4,394,4],[236,4,395,4],[236,11,395,11,"createErrorInternal"],[236,30,395,30],[236,31,395,31,"apply"],[236,36,395,36],[236,37,395,36,"undefined"],[236,46,395,36],[236,48,395,45,"tslib"],[236,53,395,50],[236,54,395,51,"__spreadArray"],[236,67,395,64],[236,68,395,65],[236,69,395,66,"authOrCode"],[236,79,395,76],[236,80,395,77],[236,82,395,79,"rest"],[236,86,395,83],[236,88,395,85],[236,93,395,90],[236,94,395,91],[236,95,395,92],[237,2,396,0],[238,2,397,0],[238,11,397,9,"_errorWithCustomMessage"],[238,34,397,32,"_errorWithCustomMessage"],[238,35,397,33,"auth"],[238,39,397,37],[238,41,397,39,"code"],[238,45,397,43],[238,47,397,45,"message"],[238,54,397,52],[238,56,397,54],[239,4,398,4],[239,8,398,8,"_a"],[239,10,398,10],[240,4,399,4],[240,8,399,8,"errorMap"],[240,16,399,16],[240,19,399,19,"tslib"],[240,24,399,24],[240,25,399,25,"__assign"],[240,33,399,33],[240,34,399,34,"tslib"],[240,39,399,39],[240,40,399,40,"__assign"],[240,48,399,48],[240,49,399,49],[240,50,399,50],[240,51,399,51],[240,53,399,53,"prodErrorMap"],[240,65,399,65],[240,66,399,66],[240,67,399,67],[240,68,399,68],[240,71,399,71,"_a"],[240,73,399,73],[240,76,399,76],[240,77,399,77],[240,78,399,78],[240,80,399,80,"_a"],[240,82,399,82],[240,83,399,83,"code"],[240,87,399,87],[240,88,399,88],[240,91,399,91,"message"],[240,98,399,98],[240,100,399,100,"_a"],[240,102,399,102],[240,103,399,103],[240,104,399,104],[241,4,400,4],[241,8,400,8,"factory"],[241,15,400,15],[241,18,400,18],[241,22,400,22,"util"],[241,26,400,26],[241,27,400,27,"ErrorFactory"],[241,39,400,39],[241,40,400,40],[241,46,400,46],[241,48,400,48],[241,58,400,58],[241,60,400,60,"errorMap"],[241,68,400,68],[241,69,400,69],[242,4,401,4],[242,11,401,11,"factory"],[242,18,401,18],[242,19,401,19,"create"],[242,25,401,25],[242,26,401,26,"code"],[242,30,401,30],[242,32,401,32],[243,6,402,8,"appName"],[243,13,402,15],[243,15,402,17,"auth"],[243,19,402,21],[243,20,402,22,"name"],[244,4,403,4],[244,5,403,5],[244,6,403,6],[245,2,404,0],[246,2,405,0],[246,11,405,9,"_serverAppCurrentUserOperationNotSupportedError"],[246,58,405,56,"_serverAppCurrentUserOperationNotSupportedError"],[246,59,405,57,"auth"],[246,63,405,61],[246,65,405,63],[247,4,406,4],[247,11,406,11,"_errorWithCustomMessage"],[247,34,406,34],[247,35,406,35,"auth"],[247,39,406,39],[247,41,406,41],[247,86,406,86],[247,87,406,87],[247,132,406,132],[247,228,406,228],[247,229,406,229],[248,2,407,0],[249,2,408,0],[249,11,408,9,"_assertInstanceOf"],[249,28,408,26,"_assertInstanceOf"],[249,29,408,27,"auth"],[249,33,408,31],[249,35,408,33,"object"],[249,41,408,39],[249,43,408,41,"instance"],[249,51,408,49],[249,53,408,51],[250,4,409,4],[250,8,409,8,"constructorInstance"],[250,27,409,27],[250,30,409,30,"instance"],[250,38,409,38],[251,4,410,4],[251,8,410,8],[251,10,410,10,"object"],[251,16,410,16],[251,28,410,28,"constructorInstance"],[251,47,410,47],[251,48,410,48],[251,50,410,50],[252,6,411,8],[252,10,411,12,"constructorInstance"],[252,29,411,31],[252,30,411,32,"name"],[252,34,411,36],[252,39,411,41,"object"],[252,45,411,47],[252,46,411,48,"constructor"],[252,57,411,59],[252,58,411,60,"name"],[252,62,411,64],[252,64,411,66],[253,8,412,12,"_fail"],[253,13,412,17],[253,14,412,18,"auth"],[253,18,412,22],[253,20,412,24],[253,36,412,40],[253,37,412,41],[253,71,412,75],[253,72,412,76],[254,6,413,8],[255,6,414,8],[255,12,414,14,"_errorWithCustomMessage"],[255,35,414,37],[255,36,414,38,"auth"],[255,40,414,42],[255,42,414,44],[255,58,414,60],[255,59,414,61],[255,95,414,97],[255,105,414,107],[255,106,414,108,"concat"],[255,112,414,114],[255,113,414,115,"object"],[255,119,414,121],[255,120,414,122,"constructor"],[255,131,414,133],[255,132,414,134,"name"],[255,136,414,138],[255,138,414,140],[255,174,414,176],[255,175,414,177],[255,178,415,12],[255,231,415,65],[255,232,415,66],[256,4,416,4],[257,2,417,0],[258,2,418,0],[258,11,418,9,"createErrorInternal"],[258,30,418,28,"createErrorInternal"],[258,31,418,29,"authOrCode"],[258,41,418,39],[258,43,418,41],[259,4,419,4],[259,8,419,8,"_a"],[259,10,419,10],[260,4,420,4],[260,8,420,8,"rest"],[260,12,420,12],[260,15,420,15],[260,17,420,17],[261,4,421,4],[261,9,421,9],[261,13,421,13,"_i"],[261,15,421,15],[261,18,421,18],[261,19,421,19],[261,21,421,21,"_i"],[261,23,421,23],[261,26,421,26,"arguments"],[261,35,421,35],[261,36,421,36,"length"],[261,42,421,42],[261,44,421,44,"_i"],[261,46,421,46],[261,48,421,48],[261,50,421,50],[262,6,422,8,"rest"],[262,10,422,12],[262,11,422,13,"_i"],[262,13,422,15],[262,16,422,18],[262,17,422,19],[262,18,422,20],[262,21,422,23,"arguments"],[262,30,422,32],[262,31,422,33,"_i"],[262,33,422,35],[262,34,422,36],[263,4,423,4],[264,4,424,4],[264,8,424,8],[264,15,424,15,"authOrCode"],[264,25,424,25],[264,30,424,30],[264,38,424,38],[264,40,424,40],[265,6,425,8],[265,10,425,12,"code"],[265,14,425,16],[265,17,425,19,"rest"],[265,21,425,23],[265,22,425,24],[265,23,425,25],[265,24,425,26],[266,6,426,8],[266,10,426,12,"fullParams"],[266,20,426,22],[266,23,426,25,"tslib"],[266,28,426,30],[266,29,426,31,"__spreadArray"],[266,42,426,44],[266,43,426,45],[266,45,426,47],[266,47,426,49,"rest"],[266,51,426,53],[266,52,426,54,"slice"],[266,57,426,59],[266,58,426,60],[266,59,426,61],[266,60,426,62],[266,62,426,64],[266,66,426,68],[266,67,426,69],[267,6,427,8],[267,10,427,12,"fullParams"],[267,20,427,22],[267,21,427,23],[267,22,427,24],[267,23,427,25],[267,25,427,27],[268,8,428,12,"fullParams"],[268,18,428,22],[268,19,428,23],[268,20,428,24],[268,21,428,25],[268,22,428,26,"appName"],[268,29,428,33],[268,32,428,36,"authOrCode"],[268,42,428,46],[268,43,428,47,"name"],[268,47,428,51],[269,6,429,8],[270,6,430,8],[270,13,430,15],[270,14,430,16,"_a"],[270,16,430,18],[270,19,430,21,"authOrCode"],[270,29,430,31],[270,30,430,32,"_errorFactory"],[270,43,430,45],[270,45,430,47,"create"],[270,51,430,53],[270,52,430,54,"apply"],[270,57,430,59],[270,58,430,60,"_a"],[270,60,430,62],[270,62,430,64,"tslib"],[270,67,430,69],[270,68,430,70,"__spreadArray"],[270,81,430,83],[270,82,430,84],[270,83,430,85,"code"],[270,87,430,89],[270,88,430,90],[270,90,430,92,"fullParams"],[270,100,430,102],[270,102,430,104],[270,107,430,109],[270,108,430,110],[270,109,430,111],[271,4,431,4],[272,4,432,4],[272,11,432,11,"_DEFAULT_AUTH_ERROR_FACTORY"],[272,38,432,38],[272,39,432,39,"create"],[272,45,432,45],[272,46,432,46,"apply"],[272,51,432,51],[272,52,432,52,"_DEFAULT_AUTH_ERROR_FACTORY"],[272,79,432,79],[272,81,432,81,"tslib"],[272,86,432,86],[272,87,432,87,"__spreadArray"],[272,100,432,100],[272,101,432,101],[272,102,432,102,"authOrCode"],[272,112,432,112],[272,113,432,113],[272,115,432,115,"rest"],[272,119,432,119],[272,121,432,121],[272,126,432,126],[272,127,432,127],[272,128,432,128],[273,2,433,0],[274,2,434,0],[274,11,434,9,"_assert"],[274,18,434,16,"_assert"],[274,19,434,17,"assertion"],[274,28,434,26],[274,30,434,28,"authOrCode"],[274,40,434,38],[274,42,434,40],[275,4,435,4],[275,8,435,8,"rest"],[275,12,435,12],[275,15,435,15],[275,17,435,17],[276,4,436,4],[276,9,436,9],[276,13,436,13,"_i"],[276,15,436,15],[276,18,436,18],[276,19,436,19],[276,21,436,21,"_i"],[276,23,436,23],[276,26,436,26,"arguments"],[276,35,436,35],[276,36,436,36,"length"],[276,42,436,42],[276,44,436,44,"_i"],[276,46,436,46],[276,48,436,48],[276,50,436,50],[277,6,437,8,"rest"],[277,10,437,12],[277,11,437,13,"_i"],[277,13,437,15],[277,16,437,18],[277,17,437,19],[277,18,437,20],[277,21,437,23,"arguments"],[277,30,437,32],[277,31,437,33,"_i"],[277,33,437,35],[277,34,437,36],[278,4,438,4],[279,4,439,4],[279,8,439,8],[279,9,439,9,"assertion"],[279,18,439,18],[279,20,439,20],[280,6,440,8],[280,12,440,14,"createErrorInternal"],[280,31,440,33],[280,32,440,34,"apply"],[280,37,440,39],[280,38,440,39,"undefined"],[280,47,440,39],[280,49,440,48,"tslib"],[280,54,440,53],[280,55,440,54,"__spreadArray"],[280,68,440,67],[280,69,440,68],[280,70,440,69,"authOrCode"],[280,80,440,79],[280,81,440,80],[280,83,440,82,"rest"],[280,87,440,86],[280,89,440,88],[280,94,440,93],[280,95,440,94],[280,96,440,95],[281,4,441,4],[282,2,442,0],[283,2,443,0],[284,0,444,0],[285,0,445,0],[286,0,446,0],[287,0,447,0],[288,0,448,0],[289,2,449,0],[289,11,449,9,"debugFail"],[289,20,449,18,"debugFail"],[289,21,449,19,"failure"],[289,28,449,26],[289,30,449,28],[290,4,450,4],[291,4,451,4],[292,4,452,4],[292,8,452,8,"message"],[292,15,452,15],[292,18,452,18],[292,47,452,47],[292,50,452,50,"failure"],[292,57,452,57],[293,4,453,4,"_logError"],[293,13,453,13],[293,14,453,14,"message"],[293,21,453,21],[293,22,453,22],[294,4,454,4],[295,4,455,4],[296,4,456,4],[297,4,457,4],[297,10,457,10],[297,14,457,14,"Error"],[297,19,457,19],[297,20,457,20,"message"],[297,27,457,27],[297,28,457,28],[298,2,458,0],[299,2,459,0],[300,0,460,0],[301,0,461,0],[302,0,462,0],[303,0,463,0],[304,0,464,0],[305,0,465,0],[306,2,466,0],[306,11,466,9,"debugAssert"],[306,22,466,20,"debugAssert"],[306,23,466,21,"assertion"],[306,32,466,30],[306,34,466,32,"message"],[306,41,466,39],[306,43,466,41],[307,4,467,4],[307,8,467,8],[307,9,467,9,"assertion"],[307,18,467,18],[307,20,467,20],[308,6,468,8,"debugFail"],[308,15,468,17],[308,16,468,18,"message"],[308,23,468,25],[308,24,468,26],[309,4,469,4],[310,2,470,0],[312,2,472,0],[313,0,473,0],[314,0,474,0],[315,0,475,0],[316,0,476,0],[317,0,477,0],[318,0,478,0],[319,0,479,0],[320,0,480,0],[321,0,481,0],[322,0,482,0],[323,0,483,0],[324,0,484,0],[325,0,485,0],[326,0,486,0],[327,0,487,0],[328,2,488,0],[328,11,488,9,"_getCurrentUrl"],[328,25,488,23,"_getCurrentUrl"],[328,26,488,23],[328,28,488,26],[329,4,489,4],[329,8,489,8,"_a"],[329,10,489,10],[330,4,490,4],[330,11,490,12],[330,18,490,19,"self"],[330,22,490,23],[330,27,490,28],[330,38,490,39],[330,43,490,44],[330,44,490,45,"_a"],[330,46,490,47],[330,49,490,50,"self"],[330,53,490,54],[330,54,490,55,"location"],[330,62,490,63],[330,68,490,69],[330,72,490,73],[330,76,490,77,"_a"],[330,78,490,79],[330,83,490,79,"undefined"],[330,92,490,90],[330,95,490,90,"undefined"],[330,104,490,90],[330,107,490,102,"_a"],[330,109,490,104],[330,110,490,105,"href"],[330,114,490,109],[330,115,490,110],[330,119,490,115],[330,121,490,117],[331,2,491,0],[332,2,492,0],[332,11,492,9,"_isHttpOrHttps"],[332,25,492,23,"_isHttpOrHttps"],[332,26,492,23],[332,28,492,26],[333,4,493,4],[333,11,493,11,"_getCurrentScheme"],[333,28,493,28],[333,29,493,29],[333,30,493,30],[333,35,493,35],[333,42,493,42],[333,46,493,46,"_getCurrentScheme"],[333,63,493,63],[333,64,493,64],[333,65,493,65],[333,70,493,70],[333,78,493,78],[334,2,494,0],[335,2,495,0],[335,11,495,9,"_getCurrentScheme"],[335,28,495,26,"_getCurrentScheme"],[335,29,495,26],[335,31,495,29],[336,4,496,4],[336,8,496,8,"_a"],[336,10,496,10],[337,4,497,4],[337,11,497,12],[337,18,497,19,"self"],[337,22,497,23],[337,27,497,28],[337,38,497,39],[337,43,497,44],[337,44,497,45,"_a"],[337,46,497,47],[337,49,497,50,"self"],[337,53,497,54],[337,54,497,55,"location"],[337,62,497,63],[337,68,497,69],[337,72,497,73],[337,76,497,77,"_a"],[337,78,497,79],[337,83,497,79,"undefined"],[337,92,497,90],[337,95,497,90,"undefined"],[337,104,497,90],[337,107,497,102,"_a"],[337,109,497,104],[337,110,497,105,"protocol"],[337,118,497,113],[337,119,497,114],[337,123,497,119],[337,127,497,123],[338,2,498,0],[340,2,500,0],[341,0,501,0],[342,0,502,0],[343,0,503,0],[344,0,504,0],[345,0,505,0],[346,0,506,0],[347,0,507,0],[348,0,508,0],[349,0,509,0],[350,0,510,0],[351,0,511,0],[352,0,512,0],[353,0,513,0],[354,0,514,0],[355,0,515,0],[356,2,516,0],[357,0,517,0],[358,0,518,0],[359,2,519,0],[359,11,519,9,"_isOnline"],[359,20,519,18,"_isOnline"],[359,21,519,18],[359,23,519,21],[360,4,520,4],[360,8,520,8],[360,15,520,15,"navigator"],[360,24,520,24],[360,29,520,29],[360,40,520,40],[360,44,521,8,"navigator"],[360,53,521,17],[360,57,522,8],[360,65,522,16],[360,69,522,20,"navigator"],[360,78,522,29],[360,82,523,8],[360,89,523,15,"navigator"],[360,98,523,24],[360,99,523,25,"onLine"],[360,105,523,31],[360,110,523,36],[360,119,523,45],[361,4,524,8],[362,4,525,8],[363,4,526,8],[364,4,527,8],[365,4,528,8],[366,4,529,9,"_isHttpOrHttps"],[366,18,529,23],[366,19,529,24],[366,20,529,25],[366,24,529,29,"util"],[366,28,529,33],[366,29,529,34,"isBrowserExtension"],[366,47,529,52],[366,48,529,53],[366,49,529,54],[366,53,529,58],[366,65,529,70],[366,69,529,74,"navigator"],[366,78,529,83],[366,79,529,84],[366,81,529,86],[367,6,530,8],[367,13,530,15,"navigator"],[367,22,530,24],[367,23,530,25,"onLine"],[367,29,530,31],[368,4,531,4],[369,4,532,4],[370,4,533,4],[370,11,533,11],[370,15,533,15],[371,2,534,0],[372,2,535,0],[372,11,535,9,"_getUserLanguage"],[372,27,535,25,"_getUserLanguage"],[372,28,535,25],[372,30,535,28],[373,4,536,4],[373,8,536,8],[373,15,536,15,"navigator"],[373,24,536,24],[373,29,536,29],[373,40,536,40],[373,42,536,42],[374,6,537,8],[374,13,537,15],[374,17,537,19],[375,4,538,4],[376,4,539,4],[376,8,539,8,"navigatorLanguage"],[376,25,539,25],[376,28,539,28,"navigator"],[376,37,539,37],[377,4,540,4],[378,6,541,4],[379,6,542,5,"navigatorLanguage"],[379,23,542,22],[379,24,542,23,"languages"],[379,33,542,32],[379,37,542,36,"navigatorLanguage"],[379,54,542,53],[379,55,542,54,"languages"],[379,64,542,63],[379,65,542,64],[379,66,542,65],[379,67,542,66],[380,6,543,8],[381,6,544,8],[382,6,545,8,"navigatorLanguage"],[382,23,545,25],[382,24,545,26,"language"],[382,32,545,34],[383,6,546,8],[384,6,547,8],[385,4,547,12],[386,2,548,0],[388,2,550,0],[389,0,551,0],[390,0,552,0],[391,0,553,0],[392,0,554,0],[393,0,555,0],[394,0,556,0],[395,0,557,0],[396,0,558,0],[397,0,559,0],[398,0,560,0],[399,0,561,0],[400,0,562,0],[401,0,563,0],[402,0,564,0],[403,0,565,0],[404,2,566,0],[405,0,567,0],[406,0,568,0],[407,0,569,0],[408,0,570,0],[409,2,571,0],[409,6,571,4,"Delay"],[409,11,571,9],[409,14,571,12],[409,27,571,27],[409,39,571,39],[410,4,572,4],[410,13,572,13,"Delay"],[410,18,572,18,"Delay"],[410,19,572,19,"shortDelay"],[410,29,572,29],[410,31,572,31,"longDelay"],[410,40,572,40],[410,42,572,42],[411,6,573,8],[411,10,573,12],[411,11,573,13,"shortDelay"],[411,21,573,23],[411,24,573,26,"shortDelay"],[411,34,573,36],[412,6,574,8],[412,10,574,12],[412,11,574,13,"longDelay"],[412,20,574,22],[412,23,574,25,"longDelay"],[412,32,574,34],[413,6,575,8],[414,6,576,8,"debugAssert"],[414,17,576,19],[414,18,576,20,"longDelay"],[414,27,576,29],[414,30,576,32,"shortDelay"],[414,40,576,42],[414,42,576,44],[414,87,576,89],[414,88,576,90],[415,6,577,8],[415,10,577,12],[415,11,577,13,"isMobile"],[415,19,577,21],[415,22,577,24,"util"],[415,26,577,28],[415,27,577,29,"isMobileCordova"],[415,42,577,44],[415,43,577,45],[415,44,577,46],[415,48,577,50,"util"],[415,52,577,54],[415,53,577,55,"isReactNative"],[415,66,577,68],[415,67,577,69],[415,68,577,70],[416,4,578,4],[417,4,579,4,"Delay"],[417,9,579,9],[417,10,579,10,"prototype"],[417,19,579,19],[417,20,579,20,"get"],[417,23,579,23],[417,26,579,26],[417,38,579,38],[418,6,580,8],[418,10,580,12],[418,11,580,13,"_isOnline"],[418,20,580,22],[418,21,580,23],[418,22,580,24],[418,24,580,26],[419,8,581,12],[420,8,582,12],[420,15,582,19,"Math"],[420,19,582,23],[420,20,582,24,"min"],[420,23,582,27],[420,24,582,28],[420,28,582,32],[420,29,582,33],[420,53,582,57],[420,57,582,61],[420,58,582,62,"shortDelay"],[420,68,582,72],[420,69,582,73],[421,6,583,8],[422,6,584,8],[423,6,585,8],[424,6,586,8],[425,6,587,8],[426,6,588,8],[426,13,588,15],[426,17,588,19],[426,18,588,20,"isMobile"],[426,26,588,28],[426,29,588,31],[426,33,588,35],[426,34,588,36,"longDelay"],[426,43,588,45],[426,46,588,48],[426,50,588,52],[426,51,588,53,"shortDelay"],[426,61,588,63],[427,4,589,4],[427,5,589,5],[428,4,590,4],[428,11,590,11,"Delay"],[428,16,590,16],[429,2,591,0],[429,3,591,1],[429,4,591,2],[429,5,591,4],[431,2,593,0],[432,0,594,0],[433,0,595,0],[434,0,596,0],[435,0,597,0],[436,0,598,0],[437,0,599,0],[438,0,600,0],[439,0,601,0],[440,0,602,0],[441,0,603,0],[442,0,604,0],[443,0,605,0],[444,0,606,0],[445,0,607,0],[446,0,608,0],[447,2,609,0],[447,11,609,9,"_emulatorUrl"],[447,23,609,21,"_emulatorUrl"],[447,24,609,22,"config"],[447,30,609,28],[447,32,609,30,"path"],[447,36,609,34],[447,38,609,36],[448,4,610,4,"debugAssert"],[448,15,610,15],[448,16,610,16,"config"],[448,22,610,22],[448,23,610,23,"emulator"],[448,31,610,31],[448,33,610,33],[448,69,610,69],[448,70,610,70],[449,4,611,4],[449,8,611,8,"url"],[449,11,611,11],[449,14,611,14,"config"],[449,20,611,20],[449,21,611,21,"emulator"],[449,29,611,29],[449,30,611,30,"url"],[449,33,611,33],[450,4,612,4],[450,8,612,8],[450,9,612,9,"path"],[450,13,612,13],[450,15,612,15],[451,6,613,8],[451,13,613,15,"url"],[451,16,613,18],[452,4,614,4],[453,4,615,4],[453,11,615,11],[453,13,615,13],[453,14,615,14,"concat"],[453,20,615,20],[453,21,615,21,"url"],[453,24,615,24],[453,25,615,25],[453,26,615,26,"concat"],[453,32,615,32],[453,33,615,33,"path"],[453,37,615,37],[453,38,615,38,"startsWith"],[453,48,615,48],[453,49,615,49],[453,52,615,52],[453,53,615,53],[453,56,615,56,"path"],[453,60,615,60],[453,61,615,61,"slice"],[453,66,615,66],[453,67,615,67],[453,68,615,68],[453,69,615,69],[453,72,615,72,"path"],[453,76,615,76],[453,77,615,77],[454,2,616,0],[456,2,618,0],[457,0,619,0],[458,0,620,0],[459,0,621,0],[460,0,622,0],[461,0,623,0],[462,0,624,0],[463,0,625,0],[464,0,626,0],[465,0,627,0],[466,0,628,0],[467,0,629,0],[468,0,630,0],[469,0,631,0],[470,0,632,0],[471,0,633,0],[472,2,634,0],[472,6,634,4,"FetchProvider"],[472,19,634,17],[472,22,634,20],[472,35,634,35],[472,47,634,47],[473,4,635,4],[473,13,635,13,"FetchProvider"],[473,26,635,26,"FetchProvider"],[473,27,635,26],[473,29,635,29],[473,30,636,4],[474,4,637,4,"FetchProvider"],[474,17,637,17],[474,18,637,18,"initialize"],[474,28,637,28],[474,31,637,31],[474,41,637,41,"fetchImpl"],[474,50,637,50],[474,52,637,52,"headersImpl"],[474,63,637,63],[474,65,637,65,"responseImpl"],[474,77,637,77],[474,79,637,79],[475,6,638,8],[475,10,638,12],[475,11,638,13,"fetchImpl"],[475,20,638,22],[475,23,638,25,"fetchImpl"],[475,32,638,34],[476,6,639,8],[476,10,639,12,"headersImpl"],[476,21,639,23],[476,23,639,25],[477,8,640,12],[477,12,640,16],[477,13,640,17,"headersImpl"],[477,24,640,28],[477,27,640,31,"headersImpl"],[477,38,640,42],[478,6,641,8],[479,6,642,8],[479,10,642,12,"responseImpl"],[479,22,642,24],[479,24,642,26],[480,8,643,12],[480,12,643,16],[480,13,643,17,"responseImpl"],[480,25,643,29],[480,28,643,32,"responseImpl"],[480,40,643,44],[481,6,644,8],[482,4,645,4],[482,5,645,5],[483,4,646,4,"FetchProvider"],[483,17,646,17],[483,18,646,18,"fetch"],[483,23,646,23],[483,26,646,26],[483,38,646,38],[484,6,647,8],[484,10,647,12],[484,14,647,16],[484,15,647,17,"fetchImpl"],[484,24,647,26],[484,26,647,28],[485,8,648,12],[485,15,648,19],[485,19,648,23],[485,20,648,24,"fetchImpl"],[485,29,648,33],[486,6,649,8],[487,6,650,8],[487,10,650,12],[487,17,650,19,"self"],[487,21,650,23],[487,26,650,28],[487,37,650,39],[487,41,650,43],[487,48,650,50],[487,52,650,54,"self"],[487,56,650,58],[487,58,650,60],[488,8,651,12],[488,15,651,19,"self"],[488,19,651,23],[488,20,651,24,"fetch"],[488,25,651,29],[489,6,652,8],[490,6,653,8],[490,10,653,12],[490,17,653,19,"globalThis"],[490,27,653,29],[490,32,653,34],[490,43,653,45],[490,47,653,49,"globalThis"],[490,57,653,59],[490,58,653,60,"fetch"],[490,63,653,65],[490,65,653,67],[491,8,654,12],[491,15,654,19,"globalThis"],[491,25,654,29],[491,26,654,30,"fetch"],[491,31,654,35],[492,6,655,8],[493,6,656,8],[493,10,656,12],[493,17,656,19,"fetch"],[493,22,656,24],[493,27,656,29],[493,38,656,40],[493,40,656,42],[494,8,657,12],[494,15,657,19,"fetch"],[494,20,657,24],[495,6,658,8],[496,6,659,8,"debugFail"],[496,15,659,17],[496,16,659,18],[496,129,659,131],[496,130,659,132],[497,4,660,4],[497,5,660,5],[498,4,661,4,"FetchProvider"],[498,17,661,17],[498,18,661,18,"headers"],[498,25,661,25],[498,28,661,28],[498,40,661,40],[499,6,662,8],[499,10,662,12],[499,14,662,16],[499,15,662,17,"headersImpl"],[499,26,662,28],[499,28,662,30],[500,8,663,12],[500,15,663,19],[500,19,663,23],[500,20,663,24,"headersImpl"],[500,31,663,35],[501,6,664,8],[502,6,665,8],[502,10,665,12],[502,17,665,19,"self"],[502,21,665,23],[502,26,665,28],[502,37,665,39],[502,41,665,43],[502,50,665,52],[502,54,665,56,"self"],[502,58,665,60],[502,60,665,62],[503,8,666,12],[503,15,666,19,"self"],[503,19,666,23],[503,20,666,24,"Headers"],[503,27,666,31],[504,6,667,8],[505,6,668,8],[505,10,668,12],[505,17,668,19,"globalThis"],[505,27,668,29],[505,32,668,34],[505,43,668,45],[505,47,668,49,"globalThis"],[505,57,668,59],[505,58,668,60,"Headers"],[505,65,668,67],[505,67,668,69],[506,8,669,12],[506,15,669,19,"globalThis"],[506,25,669,29],[506,26,669,30,"Headers"],[506,33,669,37],[507,6,670,8],[508,6,671,8],[508,10,671,12],[508,17,671,19,"Headers"],[508,24,671,26],[508,29,671,31],[508,40,671,42],[508,42,671,44],[509,8,672,12],[509,15,672,19,"Headers"],[509,22,672,26],[510,6,673,8],[511,6,674,8,"debugFail"],[511,15,674,17],[511,16,674,18],[511,131,674,133],[511,132,674,134],[512,4,675,4],[512,5,675,5],[513,4,676,4,"FetchProvider"],[513,17,676,17],[513,18,676,18,"response"],[513,26,676,26],[513,29,676,29],[513,41,676,41],[514,6,677,8],[514,10,677,12],[514,14,677,16],[514,15,677,17,"responseImpl"],[514,27,677,29],[514,29,677,31],[515,8,678,12],[515,15,678,19],[515,19,678,23],[515,20,678,24,"responseImpl"],[515,32,678,36],[516,6,679,8],[517,6,680,8],[517,10,680,12],[517,17,680,19,"self"],[517,21,680,23],[517,26,680,28],[517,37,680,39],[517,41,680,43],[517,51,680,53],[517,55,680,57,"self"],[517,59,680,61],[517,61,680,63],[518,8,681,12],[518,15,681,19,"self"],[518,19,681,23],[518,20,681,24,"Response"],[518,28,681,32],[519,6,682,8],[520,6,683,8],[520,10,683,12],[520,17,683,19,"globalThis"],[520,27,683,29],[520,32,683,34],[520,43,683,45],[520,47,683,49,"globalThis"],[520,57,683,59],[520,58,683,60,"Response"],[520,66,683,68],[520,68,683,70],[521,8,684,12],[521,15,684,19,"globalThis"],[521,25,684,29],[521,26,684,30,"Response"],[521,34,684,38],[522,6,685,8],[523,6,686,8],[523,10,686,12],[523,17,686,19,"Response"],[523,25,686,27],[523,30,686,32],[523,41,686,43],[523,43,686,45],[524,8,687,12],[524,15,687,19,"Response"],[524,23,687,27],[525,6,688,8],[526,6,689,8,"debugFail"],[526,15,689,17],[526,16,689,18],[526,132,689,134],[526,133,689,135],[527,4,690,4],[527,5,690,5],[528,4,691,4],[528,11,691,11,"FetchProvider"],[528,24,691,24],[529,2,692,0],[529,3,692,1],[529,4,692,2],[529,5,692,4],[531,2,694,0],[532,0,695,0],[533,0,696,0],[534,0,697,0],[535,0,698,0],[536,0,699,0],[537,0,700,0],[538,0,701,0],[539,0,702,0],[540,0,703,0],[541,0,704,0],[542,0,705,0],[543,0,706,0],[544,0,707,0],[545,0,708,0],[546,0,709,0],[547,2,710,0],[547,6,710,4,"_a$1"],[547,10,710,8],[548,2,711,0],[549,0,712,0],[550,0,713,0],[551,2,714,0],[551,6,714,4,"SERVER_ERROR_MAP"],[551,22,714,20],[551,26,714,24,"_a$1"],[551,30,714,28],[551,33,714,31],[551,34,714,32],[551,35,714,33],[552,2,715,4],[553,2,716,4,"_a$1"],[553,6,716,8],[553,7,716,9],[553,28,716,30],[553,29,716,31],[553,67,716,69],[553,70,716,72],[553,93,716,95],[553,94,716,96],[554,2,717,4],[555,2,718,4,"_a$1"],[555,6,718,8],[555,7,718,9],[555,29,718,31],[555,30,718,32],[555,69,718,71],[555,72,718,74],[555,88,718,90],[555,89,718,91],[556,2,719,4],[557,2,720,4,"_a$1"],[557,6,720,8],[557,7,720,9],[557,27,720,29],[557,28,720,30],[557,65,720,67],[557,68,720,70],[557,83,720,85],[557,84,720,86],[558,2,721,4],[559,2,722,4,"_a$1"],[559,6,722,8],[559,7,722,9],[559,29,722,31],[559,30,722,32],[559,69,722,71],[559,72,722,74],[559,88,722,90],[559,89,722,91],[560,2,723,4],[561,2,724,4,"_a$1"],[561,6,724,8],[561,7,724,9],[561,25,724,27],[561,26,724,28],[561,61,724,63],[561,64,724,66],[561,80,724,82],[561,81,724,83],[562,2,725,4],[563,2,726,4,"_a$1"],[563,6,726,8],[563,7,726,9],[563,25,726,27],[563,26,726,28],[563,61,726,63],[563,64,726,66],[563,82,726,84],[563,83,726,85],[564,2,727,4],[565,2,728,4],[566,2,729,4,"_a$1"],[566,6,729,8],[566,7,729,9],[566,34,729,36],[566,35,729,37],[566,79,729,81],[566,82,729,84],[566,102,729,104],[566,103,729,105],[567,2,730,4],[568,2,731,4,"_a$1"],[568,6,731,8],[568,7,731,9],[568,21,731,23],[568,22,731,24],[568,53,731,55],[568,56,731,58],[568,78,731,80],[568,79,731,81],[568,113,732,4,"_a$1"],[568,117,732,8],[568,118,732,9],[568,143,732,34],[568,144,732,35],[568,186,732,77],[568,189,732,80],[568,212,732,103],[568,213,732,104],[569,2,733,4],[570,2,734,4,"_a$1"],[570,6,734,8],[570,7,734,9],[570,29,734,31],[570,30,734,32],[570,69,734,71],[570,72,734,74],[570,92,734,94],[570,93,734,95],[570,133,735,4,"_a$1"],[570,137,735,8],[570,138,735,9],[570,161,735,32],[570,162,735,33],[570,202,735,73],[570,205,735,76],[570,225,735,96],[570,226,735,97],[570,266,736,4,"_a$1"],[570,270,736,8],[570,271,736,9],[570,305,736,43],[570,306,736,44],[570,357,736,95],[570,360,736,98],[570,387,736,125],[570,388,736,126],[571,2,737,4],[572,2,738,4,"_a$1"],[572,6,738,8],[572,7,738,9],[572,25,738,27],[572,26,738,28],[572,61,738,63],[572,64,738,66],[572,80,738,82],[572,81,738,83],[573,2,739,4],[574,2,740,4,"_a$1"],[574,6,740,8],[574,7,740,9],[574,24,740,26],[574,25,740,27],[574,59,740,61],[574,62,740,64],[574,78,740,80],[574,79,740,81],[574,113,741,4,"_a$1"],[574,117,741,8],[574,118,741,9],[574,147,741,38],[574,148,741,39],[574,194,741,85],[574,197,741,88],[574,216,741,107],[574,217,741,108],[574,266,742,4,"_a$1"],[574,270,742,8],[574,271,742,9],[574,289,742,27],[574,290,742,28],[574,325,742,63],[574,328,742,66],[574,349,742,87],[574,350,742,88],[574,388,743,4,"_a$1"],[574,392,743,8],[574,393,743,9],[574,411,743,27],[574,412,743,28],[574,447,743,63],[574,450,743,66],[574,471,743,87],[574,472,743,88],[575,2,744,4],[576,2,745,4,"_a$1"],[576,6,745,8],[576,7,745,9],[576,25,745,27],[576,26,745,28],[576,61,745,63],[576,64,745,66],[576,80,745,82],[576,81,745,83],[577,2,746,4],[578,2,747,4,"_a$1"],[578,6,747,8],[578,7,747,9],[578,39,747,41],[578,40,747,42],[578,89,747,91],[578,92,747,94],[578,115,747,117],[578,116,747,118],[578,168,748,4,"_a$1"],[578,172,748,8],[578,173,748,9],[578,191,748,27],[578,192,748,28],[578,227,748,63],[578,230,748,66],[578,250,748,86],[578,251,748,87],[578,285,749,4,"_a$1"],[578,289,749,8],[578,290,749,9],[578,305,749,24],[578,306,749,25],[578,338,749,57],[578,341,749,60],[578,361,749,80],[578,362,749,81],[578,397,750,4,"_a$1"],[578,401,750,8],[578,402,750,9],[578,418,750,25],[578,419,750,26],[578,452,750,59],[578,455,750,62],[578,475,750,82],[578,476,750,83],[579,2,751,4],[580,2,752,4,"_a$1"],[580,6,752,8],[580,7,752,9],[580,36,752,38],[580,37,752,39],[580,83,752,85],[580,86,752,88],[580,105,752,107],[580,106,752,108],[580,155,753,4,"_a$1"],[580,159,753,8],[580,160,753,9],[580,197,753,46],[580,198,753,47],[580,252,753,101],[580,255,753,104],[580,292,753,141],[580,293,753,142],[581,2,754,4],[582,2,755,4,"_a$1"],[582,6,755,8],[582,7,755,9],[582,21,755,23],[582,22,755,24],[582,53,755,55],[582,56,755,58],[582,83,755,85],[582,84,755,86],[582,118,756,4,"_a$1"],[582,122,756,8],[582,123,756,9],[582,145,756,31],[582,146,756,32],[582,185,756,71],[582,188,756,74],[582,213,756,99],[582,214,756,100],[582,256,757,4,"_a$1"],[582,260,757,8],[582,261,757,9],[582,286,757,34],[582,287,757,35],[582,329,757,77],[582,332,757,80],[582,352,757,100],[582,353,757,101],[582,393,758,4,"_a$1"],[582,397,758,8],[582,398,758,9],[582,420,758,31],[582,421,758,32],[582,460,758,71],[582,463,758,74],[582,488,758,99],[582,489,758,100],[582,531,759,4,"_a$1"],[582,535,759,8],[582,536,759,9],[582,553,759,26],[582,554,759,27],[582,588,759,61],[582,591,759,64],[582,605,759,78],[582,606,759,79],[583,2,760,4],[584,2,761,4],[585,2,762,4],[586,2,763,4,"_a$1"],[586,6,763,8],[586,7,763,9],[586,37,763,39],[586,38,763,40],[586,85,763,87],[586,88,763,90],[586,114,763,116],[586,115,763,117],[586,165,764,4,"_a$1"],[586,169,764,8],[586,170,764,9],[586,191,764,30],[586,192,764,31],[586,230,764,69],[586,233,764,72],[586,260,764,99],[586,261,764,100],[587,2,765,4],[588,2,766,4,"_a$1"],[588,6,766,8],[588,7,766,9],[588,32,766,34],[588,33,766,35],[588,75,766,77],[588,78,766,80],[588,103,766,105],[588,104,766,106],[589,2,767,4],[590,2,768,4,"_a$1"],[590,6,768,8],[590,7,768,9],[590,29,768,31],[590,30,768,32],[590,69,768,71],[590,72,768,74],[590,100,768,102],[590,101,768,103],[591,2,769,4],[592,2,770,4,"_a$1"],[592,6,770,8],[592,7,770,9],[592,39,770,41],[592,40,770,42],[592,89,770,91],[592,92,770,94],[592,122,770,124],[592,123,770,125],[592,164,771,4,"_a$1"],[592,168,771,8],[592,169,771,9],[592,195,771,35],[592,196,771,36],[592,239,771,79],[592,242,771,82],[592,271,771,111],[592,272,771,112],[592,312,772,4,"_a$1"],[592,316,772,8],[592,317,772,9],[592,344,772,36],[592,345,772,37],[592,389,772,81],[592,392,772,84],[592,419,772,111],[592,420,772,112],[592,458,773,4,"_a$1"],[592,462,773,8],[592,463,773,9],[592,495,773,41],[592,496,773,42],[592,545,773,91],[592,548,773,94],[592,578,773,124],[592,579,773,125],[592,620,774,4,"_a$1"],[592,624,774,8],[592,625,774,9],[592,647,774,31],[592,648,774,32],[592,687,774,71],[592,690,774,74],[592,720,774,104],[592,721,774,105],[592,773,775,4,"_a$1"],[592,777,775,8],[592,778,775,9],[592,808,775,39],[592,809,775,40],[592,856,775,87],[592,859,775,90],[592,897,775,128],[592,898,775,129],[593,2,776,4],[594,2,777,4,"_a$1"],[594,6,777,8],[594,7,777,9],[594,41,777,43],[594,42,777,44],[594,93,777,95],[594,96,777,98],[594,112,777,114],[594,113,777,115],[595,2,778,4],[596,2,779,4,"_a$1"],[596,6,779,8],[596,7,779,9],[596,30,779,32],[596,31,779,33],[596,71,779,73],[596,74,779,76],[596,97,779,99],[596,98,779,100],[596,141,780,4,"_a$1"],[596,145,780,8],[596,146,780,9],[596,171,780,34],[596,172,780,35],[596,214,780,77],[596,217,780,80],[596,242,780,105],[596,243,780,106],[596,288,781,4,"_a$1"],[596,292,781,8],[596,293,781,9],[596,318,781,34],[596,319,781,35],[596,361,781,77],[596,364,781,80],[596,389,781,105],[596,390,781,106],[596,435,782,4,"_a$1"],[596,439,782,8],[596,440,782,9],[596,466,782,35],[596,467,782,36],[596,510,782,79],[596,513,782,82],[596,539,782,108],[596,540,782,109],[596,586,783,4,"_a$1"],[596,590,783,8],[596,591,783,9],[596,612,783,30],[596,613,783,31],[596,651,783,69],[596,654,783,72],[596,675,783,93],[596,676,783,94],[596,717,784,4,"_a$1"],[596,721,784,8],[596,722,784,9],[596,749,784,36],[596,750,784,37],[596,794,784,81],[596,797,784,84],[596,824,784,111],[596,825,784,112],[596,872,785,4,"_a$1"],[596,876,785,8],[596,877,785,9],[596,904,785,36],[596,905,785,37],[596,949,785,81],[596,952,785,84],[596,979,785,111],[596,980,785,112],[596,1027,786,4,"_a$1"],[596,1031,786,8],[596,1032,786,9],[596,1050,786,27],[596,1051,786,28],[596,1086,786,63],[596,1089,786,66],[596,1107,786,84],[596,1108,786,85],[596,1146,787,4,"_a$1"],[596,1150,787,8],[596,1151,787,9],[598,2,789,0],[599,0,790,0],[600,0,791,0],[601,0,792,0],[602,0,793,0],[603,0,794,0],[604,0,795,0],[605,0,796,0],[606,0,797,0],[607,0,798,0],[608,0,799,0],[609,0,800,0],[610,0,801,0],[611,0,802,0],[612,0,803,0],[613,0,804,0],[614,2,805,0],[614,6,805,4,"DEFAULT_API_TIMEOUT_MS"],[614,28,805,26],[614,31,805,29],[614,35,805,33,"Delay"],[614,40,805,38],[614,41,805,39],[614,46,805,44],[614,48,805,46],[614,53,805,51],[614,54,805,52],[615,2,806,0],[615,11,806,9,"_addTidIfNecessary"],[615,29,806,27,"_addTidIfNecessary"],[615,30,806,28,"auth"],[615,34,806,32],[615,36,806,34,"request"],[615,43,806,41],[615,45,806,43],[616,4,807,4],[616,8,807,8,"auth"],[616,12,807,12],[616,13,807,13,"tenantId"],[616,21,807,21],[616,25,807,25],[616,26,807,26,"request"],[616,33,807,33],[616,34,807,34,"tenantId"],[616,42,807,42],[616,44,807,44],[617,6,808,8],[617,13,808,15,"tslib"],[617,18,808,20],[617,19,808,21,"__assign"],[617,27,808,29],[617,28,808,30,"tslib"],[617,33,808,35],[617,34,808,36,"__assign"],[617,42,808,44],[617,43,808,45],[617,44,808,46],[617,45,808,47],[617,47,808,49,"request"],[617,54,808,56],[617,55,808,57],[617,57,808,59],[618,8,808,61,"tenantId"],[618,16,808,69],[618,18,808,71,"auth"],[618,22,808,75],[618,23,808,76,"tenantId"],[619,6,808,85],[619,7,808,86],[619,8,808,87],[620,4,809,4],[621,4,810,4],[621,11,810,11,"request"],[621,18,810,18],[622,2,811,0],[623,2,812,0],[623,11,812,9,"_performApiRequest"],[623,29,812,27,"_performApiRequest"],[623,30,812,28,"auth"],[623,34,812,32],[623,36,812,34,"method"],[623,42,812,40],[623,44,812,42,"path"],[623,48,812,46],[623,50,812,48,"request"],[623,57,812,55],[623,59,812,57,"customErrorMap"],[623,73,812,71],[623,75,812,73],[624,4,813,4],[624,8,813,8,"customErrorMap"],[624,22,813,22],[624,27,813,22,"undefined"],[624,36,813,33],[624,38,813,35],[625,6,813,37,"customErrorMap"],[625,20,813,51],[625,23,813,54],[625,24,813,55],[625,25,813,56],[626,4,813,58],[627,4,814,4],[627,11,814,11,"tslib"],[627,16,814,16],[627,17,814,17,"__awaiter"],[627,26,814,26],[627,27,814,27],[627,31,814,31],[627,33,814,31,"undefined"],[627,42,814,31],[627,44,814,31,"undefined"],[627,53,814,31],[627,55,814,49],[627,67,814,61],[628,6,815,8],[628,10,815,12,"_this"],[628,15,815,17],[628,18,815,20],[628,22,815,24],[629,6,816,8],[629,13,816,15,"tslib"],[629,18,816,20],[629,19,816,21,"__generator"],[629,30,816,32],[629,31,816,33],[629,35,816,37],[629,37,816,39],[629,47,816,49,"_a"],[629,49,816,51],[629,51,816,53],[630,8,817,12],[630,15,817,19],[630,16,817,20],[630,17,817,21],[630,18,817,22],[630,30,817,34,"_performFetchWithErrorHandling"],[630,60,817,64],[630,61,817,65,"auth"],[630,65,817,69],[630,67,817,71,"customErrorMap"],[630,81,817,85],[630,83,817,87],[630,95,817,99],[631,10,817,101],[631,17,817,108,"tslib"],[631,22,817,113],[631,23,817,114,"__awaiter"],[631,32,817,123],[631,33,817,124,"_this"],[631,38,817,129],[631,40,817,129,"undefined"],[631,49,817,129],[631,51,817,129,"undefined"],[631,60,817,129],[631,62,817,147],[631,74,817,159],[632,12,818,20],[632,16,818,24,"body"],[632,20,818,28],[632,22,818,30,"params"],[632,28,818,36],[632,30,818,38,"query"],[632,35,818,43],[632,37,818,45,"headers"],[632,44,818,52],[632,46,818,54,"fetchArgs"],[632,55,818,63],[633,12,819,20],[633,19,819,27,"tslib"],[633,24,819,32],[633,25,819,33,"__generator"],[633,36,819,44],[633,37,819,45],[633,41,819,49],[633,43,819,51],[633,53,819,61,"_a"],[633,55,819,63],[633,57,819,65],[634,14,820,24],[634,22,820,32,"_a"],[634,24,820,34],[634,25,820,35,"label"],[634,30,820,40],[635,16,821,28],[635,21,821,33],[635,22,821,34],[636,18,822,32,"body"],[636,22,822,36],[636,25,822,39],[636,26,822,40],[636,27,822,41],[637,18,823,32,"params"],[637,24,823,38],[637,27,823,41],[637,28,823,42],[637,29,823,43],[638,18,824,32],[638,22,824,36,"request"],[638,29,824,43],[638,31,824,45],[639,20,825,36],[639,24,825,40,"method"],[639,30,825,46],[639,35,825,51],[639,40,825,56],[639,41,825,57],[639,63,825,79],[640,22,826,40,"params"],[640,28,826,46],[640,31,826,49,"request"],[640,38,826,56],[641,20,827,36],[641,21,827,37],[641,27,828,41],[642,22,829,40,"body"],[642,26,829,44],[642,29,829,47],[643,24,830,44,"body"],[643,28,830,48],[643,30,830,50,"JSON"],[643,34,830,54],[643,35,830,55,"stringify"],[643,44,830,64],[643,45,830,65,"request"],[643,52,830,72],[644,22,831,40],[644,23,831,41],[645,20,832,36],[646,18,833,32],[647,18,834,32,"query"],[647,23,834,37],[647,26,834,40,"util"],[647,30,834,44],[647,31,834,45,"querystring"],[647,42,834,56],[647,43,834,57,"tslib"],[647,48,834,62],[647,49,834,63,"__assign"],[647,57,834,71],[647,58,834,72],[648,20,834,74,"key"],[648,23,834,77],[648,25,834,79,"auth"],[648,29,834,83],[648,30,834,84,"config"],[648,36,834,90],[648,37,834,91,"apiKey"],[649,18,834,98],[649,19,834,99],[649,21,834,101,"params"],[649,27,834,107],[649,28,834,108],[649,29,834,109],[649,30,834,110,"slice"],[649,35,834,115],[649,36,834,116],[649,37,834,117],[649,38,834,118],[650,18,835,32],[650,25,835,39],[650,26,835,40],[650,27,835,41],[650,28,835,42],[650,39,835,53,"auth"],[650,43,835,57],[650,44,835,58,"_getAdditionalHeaders"],[650,65,835,79],[650,66,835,80],[650,67,835,81],[650,68,835,82],[651,16,836,28],[651,21,836,33],[651,22,836,34],[652,18,837,32,"headers"],[652,25,837,39],[652,28,837,42,"_a"],[652,30,837,44],[652,31,837,45,"sent"],[652,35,837,49],[652,36,837,50],[652,37,837,51],[653,18,838,32,"headers"],[653,25,838,39],[653,26,838,40],[653,40,838,54],[653,41,838,55],[653,71,838,85],[653,74,838,88],[653,92,838,106],[654,18,839,32],[654,22,839,36,"auth"],[654,26,839,40],[654,27,839,41,"languageCode"],[654,39,839,53],[654,41,839,55],[655,20,840,36,"headers"],[655,27,840,43],[655,28,840,44],[655,47,840,63],[655,48,840,64],[655,83,840,99],[655,86,840,102,"auth"],[655,90,840,106],[655,91,840,107,"languageCode"],[655,103,840,119],[656,18,841,32],[657,18,842,32,"fetchArgs"],[657,27,842,41],[657,30,842,44,"tslib"],[657,35,842,49],[657,36,842,50,"__assign"],[657,44,842,58],[657,45,842,59],[658,20,842,61,"method"],[658,26,842,67],[658,28,842,69,"method"],[658,34,842,75],[659,20,842,77,"headers"],[659,27,842,84],[659,29,842,86,"headers"],[660,18,842,94],[660,19,842,95],[660,21,842,97,"body"],[660,25,842,101],[660,26,842,102],[661,18,843,32],[662,0,844,0],[663,0,845,0],[664,0,846,0],[665,18,847,32],[665,22,847,36],[665,23,847,37,"util"],[665,27,847,41],[665,28,847,42,"isCloudflareWorker"],[665,46,847,60],[665,47,847,61],[665,48,847,62],[665,50,847,64],[666,20,848,36,"fetchArgs"],[666,29,848,45],[666,30,848,46,"referrerPolicy"],[666,44,848,60],[666,47,848,63],[666,60,848,76],[667,18,849,32],[668,18,850,32],[668,25,850,39],[668,26,850,40],[668,27,850,41],[668,28,850,42],[668,40,850,54,"FetchProvider"],[668,53,850,67],[668,54,850,68,"fetch"],[668,59,850,73],[668,60,850,74],[668,61,850,75],[668,62,850,76,"_getFinalTarget"],[668,77,850,91],[668,78,850,92,"auth"],[668,82,850,96],[668,84,850,98,"auth"],[668,88,850,102],[668,89,850,103,"config"],[668,95,850,109],[668,96,850,110,"apiHost"],[668,103,850,117],[668,105,850,119,"path"],[668,109,850,123],[668,111,850,125,"query"],[668,116,850,130],[668,117,850,131],[668,119,850,133,"fetchArgs"],[668,128,850,142],[668,129,850,143],[668,130,850,144],[669,14,851,24],[670,12,852,20],[670,13,852,21],[670,14,852,22],[671,10,853,16],[671,11,853,17],[671,12,853,18],[672,8,853,20],[672,9,853,21],[672,10,853,22],[672,11,853,23],[673,6,854,8],[673,7,854,9],[673,8,854,10],[674,4,855,4],[674,5,855,5],[674,6,855,6],[675,2,856,0],[676,2,857,0],[676,11,857,9,"_performFetchWithErrorHandling"],[676,41,857,39,"_performFetchWithErrorHandling"],[676,42,857,40,"auth"],[676,46,857,44],[676,48,857,46,"customErrorMap"],[676,62,857,60],[676,64,857,62,"fetchFn"],[676,71,857,69],[676,73,857,71],[677,4,858,4],[677,11,858,11,"tslib"],[677,16,858,16],[677,17,858,17,"__awaiter"],[677,26,858,26],[677,27,858,27],[677,31,858,31],[677,33,858,31,"undefined"],[677,42,858,31],[677,44,858,31,"undefined"],[677,53,858,31],[677,55,858,49],[677,67,858,61],[678,6,859,8],[678,10,859,12,"errorMap"],[678,18,859,20],[678,20,859,22,"networkTimeout"],[678,34,859,36],[678,36,859,38,"response"],[678,44,859,46],[678,46,859,48,"json"],[678,50,859,52],[678,52,859,54,"errorMessage"],[678,64,859,66],[678,66,859,68,"_a"],[678,68,859,70],[678,70,859,72,"serverErrorCode"],[678,85,859,87],[678,87,859,89,"serverErrorMessage"],[678,105,859,107],[678,107,859,109,"authError"],[678,116,859,118],[678,118,859,120,"e_1"],[678,121,859,123],[679,6,860,8],[679,13,860,15,"tslib"],[679,18,860,20],[679,19,860,21,"__generator"],[679,30,860,32],[679,31,860,33],[679,35,860,37],[679,37,860,39],[679,47,860,49,"_b"],[679,49,860,51],[679,51,860,53],[680,8,861,12],[680,16,861,20,"_b"],[680,18,861,22],[680,19,861,23,"label"],[680,24,861,28],[681,10,862,16],[681,15,862,21],[681,16,862,22],[682,12,863,20,"auth"],[682,16,863,24],[682,17,863,25,"_canInitEmulator"],[682,33,863,41],[682,36,863,44],[682,41,863,49],[683,12,864,20,"errorMap"],[683,20,864,28],[683,23,864,31,"tslib"],[683,28,864,36],[683,29,864,37,"__assign"],[683,37,864,45],[683,38,864,46,"tslib"],[683,43,864,51],[683,44,864,52,"__assign"],[683,52,864,60],[683,53,864,61],[683,54,864,62],[683,55,864,63],[683,57,864,65,"SERVER_ERROR_MAP"],[683,73,864,81],[683,74,864,82],[683,76,864,84,"customErrorMap"],[683,90,864,98],[683,91,864,99],[684,12,865,20,"_b"],[684,14,865,22],[684,15,865,23,"label"],[684,20,865,28],[684,23,865,31],[684,24,865,32],[685,10,866,16],[685,15,866,21],[685,16,866,22],[686,12,867,20,"_b"],[686,14,867,22],[686,15,867,23,"trys"],[686,19,867,27],[686,20,867,28,"push"],[686,24,867,32],[686,25,867,33],[686,26,867,34],[686,27,867,35],[686,29,867,37],[686,30,867,38],[686,33,867,42],[686,34,867,43],[686,35,867,44],[686,36,867,45],[687,12,868,20,"networkTimeout"],[687,26,868,34],[687,29,868,37],[687,33,868,41,"NetworkTimeout"],[687,47,868,55],[687,48,868,56,"auth"],[687,52,868,60],[687,53,868,61],[688,12,869,20],[688,19,869,27],[688,20,869,28],[688,21,869,29],[688,22,869,30],[688,33,869,41,"Promise"],[688,40,869,48],[688,41,869,49,"race"],[688,45,869,53],[688,46,869,54],[688,47,870,28,"fetchFn"],[688,54,870,35],[688,55,870,36],[688,56,870,37],[688,58,871,28,"networkTimeout"],[688,72,871,42],[688,73,871,43,"promise"],[688,80,871,50],[688,81,872,25],[688,82,872,26],[688,83,872,27],[689,10,873,16],[689,15,873,21],[689,16,873,22],[690,12,874,20,"response"],[690,20,874,28],[690,23,874,31,"_b"],[690,25,874,33],[690,26,874,34,"sent"],[690,30,874,38],[690,31,874,39],[690,32,874,40],[691,12,875,20],[692,12,876,20],[693,12,877,20,"networkTimeout"],[693,26,877,34],[693,27,877,35,"clearNetworkTimeout"],[693,46,877,54],[693,47,877,55],[693,48,877,56],[694,12,878,20],[694,19,878,27],[694,20,878,28],[694,21,878,29],[694,22,878,30],[694,33,878,41,"response"],[694,41,878,49],[694,42,878,50,"json"],[694,46,878,54],[694,47,878,55],[694,48,878,56],[694,49,878,57],[695,10,879,16],[695,15,879,21],[695,16,879,22],[696,12,880,20,"json"],[696,16,880,24],[696,19,880,27,"_b"],[696,21,880,29],[696,22,880,30,"sent"],[696,26,880,34],[696,27,880,35],[696,28,880,36],[697,12,881,20],[697,16,881,24],[697,34,881,42],[697,38,881,46,"json"],[697,42,881,50],[697,44,881,52],[698,14,882,24],[698,20,882,30,"_makeTaggedError"],[698,36,882,46],[698,37,882,47,"auth"],[698,41,882,51],[698,43,882,53],[698,85,882,95],[698,86,882,96],[698,125,882,135,"json"],[698,129,882,139],[698,130,882,140],[699,12,883,20],[700,12,884,20],[700,16,884,24,"response"],[700,24,884,32],[700,25,884,33,"ok"],[700,27,884,35],[700,31,884,39],[700,33,884,41],[700,47,884,55],[700,51,884,59,"json"],[700,55,884,63],[700,56,884,64],[700,58,884,66],[701,14,885,24],[701,21,885,31],[701,22,885,32],[701,23,885,33],[701,24,885,34],[701,36,885,46,"json"],[701,40,885,50],[701,41,885,51],[702,12,886,20],[702,13,886,21],[702,19,887,25],[703,14,888,24,"errorMessage"],[703,26,888,36],[703,29,888,39,"response"],[703,37,888,47],[703,38,888,48,"ok"],[703,40,888,50],[703,43,888,53,"json"],[703,47,888,57],[703,48,888,58,"errorMessage"],[703,60,888,70],[703,63,888,73,"json"],[703,67,888,77],[703,68,888,78,"error"],[703,73,888,83],[703,74,888,84,"message"],[703,81,888,91],[704,14,889,24,"_a"],[704,16,889,26],[704,19,889,29,"errorMessage"],[704,31,889,41],[704,32,889,42,"split"],[704,37,889,47],[704,38,889,48],[704,43,889,53],[704,44,889,54],[704,46,889,56,"serverErrorCode"],[704,61,889,71],[704,64,889,74,"_a"],[704,66,889,76],[704,67,889,77],[704,68,889,78],[704,69,889,79],[704,71,889,81,"serverErrorMessage"],[704,89,889,99],[704,92,889,102,"_a"],[704,94,889,104],[704,95,889,105],[704,96,889,106],[704,97,889,107],[705,14,890,24],[705,18,890,28,"serverErrorCode"],[705,33,890,43],[705,38,890,48],[705,72,890,82],[705,73,890,83],[705,125,890,135],[706,16,891,28],[706,22,891,34,"_makeTaggedError"],[706,38,891,50],[706,39,891,51,"auth"],[706,43,891,55],[706,45,891,57],[706,72,891,84],[706,73,891,85],[706,120,891,132,"json"],[706,124,891,136],[706,125,891,137],[707,14,892,24],[707,15,892,25],[707,21,893,29],[707,25,893,33,"serverErrorCode"],[707,40,893,48],[707,45,893,53],[707,59,893,67],[707,60,893,68],[707,92,893,100],[708,16,894,28],[708,22,894,34,"_makeTaggedError"],[708,38,894,50],[708,39,894,51,"auth"],[708,43,894,55],[708,45,894,57],[708,67,894,79],[708,68,894,80],[708,102,894,114,"json"],[708,106,894,118],[708,107,894,119],[709,14,895,24],[709,15,895,25],[709,21,896,29],[709,25,896,33,"serverErrorCode"],[709,40,896,48],[709,45,896,53],[709,60,896,68],[709,61,896,69],[709,94,896,102],[710,16,897,28],[710,22,897,34,"_makeTaggedError"],[710,38,897,50],[710,39,897,51,"auth"],[710,43,897,55],[710,45,897,57],[710,60,897,72],[710,61,897,73],[710,96,897,108,"json"],[710,100,897,112],[710,101,897,113],[711,14,898,24],[712,14,899,24,"authError"],[712,23,899,33],[712,26,899,36,"errorMap"],[712,34,899,44],[712,35,899,45,"serverErrorCode"],[712,50,899,60],[712,51,899,61],[712,55,900,28,"serverErrorCode"],[712,70,900,43],[712,71,901,33,"toLowerCase"],[712,82,901,44],[712,83,901,45],[712,84,901,46],[712,85,902,33,"replace"],[712,92,902,40],[712,93,902,41],[712,102,902,50],[712,104,902,52],[712,107,902,55],[712,108,902,56],[713,14,903,24],[713,18,903,28,"serverErrorMessage"],[713,36,903,46],[713,38,903,48],[714,16,904,28],[714,22,904,34,"_errorWithCustomMessage"],[714,45,904,57],[714,46,904,58,"auth"],[714,50,904,62],[714,52,904,64,"authError"],[714,61,904,73],[714,63,904,75,"serverErrorMessage"],[714,81,904,93],[714,82,904,94],[715,14,905,24],[715,15,905,25],[715,21,906,29],[716,16,907,28,"_fail"],[716,21,907,33],[716,22,907,34,"auth"],[716,26,907,38],[716,28,907,40,"authError"],[716,37,907,49],[716,38,907,50],[717,14,908,24],[718,12,909,20],[719,12,910,20],[719,19,910,27],[719,20,910,28],[719,21,910,29],[719,22,910,30],[719,33,910,41],[719,34,910,42],[719,35,910,43],[720,10,911,16],[720,15,911,21],[720,16,911,22],[721,12,912,20,"e_1"],[721,15,912,23],[721,18,912,26,"_b"],[721,20,912,28],[721,21,912,29,"sent"],[721,25,912,33],[721,26,912,34],[721,27,912,35],[722,12,913,20],[722,16,913,24,"e_1"],[722,19,913,27],[722,31,913,39,"util"],[722,35,913,43],[722,36,913,44,"FirebaseError"],[722,49,913,57],[722,51,913,59],[723,14,914,24],[723,20,914,30,"e_1"],[723,23,914,33],[724,12,915,20],[725,12,916,20],[726,12,917,20],[727,12,918,20],[728,12,919,20,"_fail"],[728,17,919,25],[728,18,919,26,"auth"],[728,22,919,30],[728,24,919,32],[728,48,919,56],[728,49,919,57],[728,93,919,101],[729,14,919,103],[729,23,919,112],[729,25,919,114,"String"],[729,31,919,120],[729,32,919,121,"e_1"],[729,35,919,124],[730,12,919,126],[730,13,919,127],[730,14,919,128],[731,12,920,20],[731,19,920,27],[731,20,920,28],[731,21,920,29],[731,22,920,30],[731,33,920,41],[731,34,920,42],[731,35,920,43],[732,10,921,16],[732,15,921,21],[732,16,921,22],[733,12,921,24],[733,19,921,31],[733,20,921,32],[733,21,921,33],[733,22,921,34],[733,33,921,45],[734,8,922,12],[735,6,923,8],[735,7,923,9],[735,8,923,10],[736,4,924,4],[736,5,924,5],[736,6,924,6],[737,2,925,0],[738,2,926,0],[738,11,926,9,"_performSignInRequest"],[738,32,926,30,"_performSignInRequest"],[738,33,926,31,"auth"],[738,37,926,35],[738,39,926,37,"method"],[738,45,926,43],[738,47,926,45,"path"],[738,51,926,49],[738,53,926,51,"request"],[738,60,926,58],[738,62,926,60,"customErrorMap"],[738,76,926,74],[738,78,926,76],[739,4,927,4],[739,8,927,8,"customErrorMap"],[739,22,927,22],[739,27,927,22,"undefined"],[739,36,927,33],[739,38,927,35],[740,6,927,37,"customErrorMap"],[740,20,927,51],[740,23,927,54],[740,24,927,55],[740,25,927,56],[741,4,927,58],[742,4,928,4],[742,11,928,11,"tslib"],[742,16,928,16],[742,17,928,17,"__awaiter"],[742,26,928,26],[742,27,928,27],[742,31,928,31],[742,33,928,31,"undefined"],[742,42,928,31],[742,44,928,31,"undefined"],[742,53,928,31],[742,55,928,49],[742,67,928,61],[743,6,929,8],[743,10,929,12,"serverResponse"],[743,24,929,26],[744,6,930,8],[744,13,930,15,"tslib"],[744,18,930,20],[744,19,930,21,"__generator"],[744,30,930,32],[744,31,930,33],[744,35,930,37],[744,37,930,39],[744,47,930,49,"_a"],[744,49,930,51],[744,51,930,53],[745,8,931,12],[745,16,931,20,"_a"],[745,18,931,22],[745,19,931,23,"label"],[745,24,931,28],[746,10,932,16],[746,15,932,21],[746,16,932,22],[747,12,932,24],[747,19,932,31],[747,20,932,32],[747,21,932,33],[747,22,932,34],[747,33,932,45,"_performApiRequest"],[747,51,932,63],[747,52,932,64,"auth"],[747,56,932,68],[747,58,932,70,"method"],[747,64,932,76],[747,66,932,78,"path"],[747,70,932,82],[747,72,932,84,"request"],[747,79,932,91],[747,81,932,93,"customErrorMap"],[747,95,932,107],[747,96,932,108],[747,97,932,109],[748,10,933,16],[748,15,933,21],[748,16,933,22],[749,12,934,20,"serverResponse"],[749,26,934,34],[749,29,934,38,"_a"],[749,31,934,40],[749,32,934,41,"sent"],[749,36,934,45],[749,37,934,46],[749,38,934,48],[750,12,935,20],[750,16,935,24],[750,38,935,46],[750,42,935,50,"serverResponse"],[750,56,935,64],[750,58,935,66],[751,14,936,24,"_fail"],[751,19,936,29],[751,20,936,30,"auth"],[751,24,936,34],[751,26,936,36],[751,54,936,64],[751,55,936,65],[751,89,936,99],[752,16,937,28,"_serverResponse"],[752,31,937,43],[752,33,937,45,"serverResponse"],[753,14,938,24],[753,15,938,25],[753,16,938,26],[754,12,939,20],[755,12,940,20],[755,19,940,27],[755,20,940,28],[755,21,940,29],[755,22,940,30],[755,34,940,42,"serverResponse"],[755,48,940,56],[755,49,940,57],[756,8,941,12],[757,6,942,8],[757,7,942,9],[757,8,942,10],[758,4,943,4],[758,5,943,5],[758,6,943,6],[759,2,944,0],[760,2,945,0],[760,11,945,9,"_getFinalTarget"],[760,26,945,24,"_getFinalTarget"],[760,27,945,25,"auth"],[760,31,945,29],[760,33,945,31,"host"],[760,37,945,35],[760,39,945,37,"path"],[760,43,945,41],[760,45,945,43,"query"],[760,50,945,48],[760,52,945,50],[761,4,946,4],[761,8,946,8,"base"],[761,12,946,12],[761,15,946,15],[761,17,946,17],[761,18,946,18,"concat"],[761,24,946,24],[761,25,946,25,"host"],[761,29,946,29],[761,30,946,30],[761,31,946,31,"concat"],[761,37,946,37],[761,38,946,38,"path"],[761,42,946,42],[761,44,946,44],[761,47,946,47],[761,48,946,48],[761,49,946,49,"concat"],[761,55,946,55],[761,56,946,56,"query"],[761,61,946,61],[761,62,946,62],[762,4,947,4],[762,8,947,8],[762,9,947,9,"auth"],[762,13,947,13],[762,14,947,14,"config"],[762,20,947,20],[762,21,947,21,"emulator"],[762,29,947,29],[762,31,947,31],[763,6,948,8],[763,13,948,15],[763,15,948,17],[763,16,948,18,"concat"],[763,22,948,24],[763,23,948,25,"auth"],[763,27,948,29],[763,28,948,30,"config"],[763,34,948,36],[763,35,948,37,"apiScheme"],[763,44,948,46],[763,46,948,48],[763,51,948,53],[763,52,948,54],[763,53,948,55,"concat"],[763,59,948,61],[763,60,948,62,"base"],[763,64,948,66],[763,65,948,67],[764,4,949,4],[765,4,950,4],[765,11,950,11,"_emulatorUrl"],[765,23,950,23],[765,24,950,24,"auth"],[765,28,950,28],[765,29,950,29,"config"],[765,35,950,35],[765,37,950,37,"base"],[765,41,950,41],[765,42,950,42],[766,2,951,0],[767,2,952,0],[767,11,952,9,"_parseEnforcementState"],[767,33,952,31,"_parseEnforcementState"],[767,34,952,32,"enforcementStateStr"],[767,53,952,51],[767,55,952,53],[768,4,953,4],[768,12,953,12,"enforcementStateStr"],[768,31,953,31],[769,6,954,8],[769,11,954,13],[769,20,954,22],[770,8,955,12],[770,15,955,19],[770,24,955,28],[770,25,955,29],[771,6,956,8],[771,11,956,13],[771,18,956,20],[772,8,957,12],[772,15,957,19],[772,22,957,26],[772,23,957,27],[773,6,958,8],[773,11,958,13],[773,16,958,18],[774,8,959,12],[774,15,959,19],[774,20,959,24],[774,21,959,25],[775,6,960,8],[776,8,961,12],[776,15,961,19],[776,46,961,50],[776,47,961,51],[777,4,962,4],[778,2,963,0],[779,2,964,0],[779,6,964,4,"NetworkTimeout"],[779,20,964,18],[779,23,964,21],[779,36,964,36],[779,48,964,48],[780,4,965,4],[780,13,965,13,"NetworkTimeout"],[780,27,965,27,"NetworkTimeout"],[780,28,965,28,"auth"],[780,32,965,32],[780,34,965,34],[781,6,966,8],[781,10,966,12,"_this"],[781,15,966,17],[781,18,966,20],[781,22,966,24],[782,6,967,8],[782,10,967,12],[782,11,967,13,"auth"],[782,15,967,17],[782,18,967,20,"auth"],[782,22,967,24],[783,6,968,8],[784,6,969,8],[785,6,970,8],[786,6,971,8],[786,10,971,12],[786,11,971,13,"timer"],[786,16,971,18],[786,19,971,21],[786,23,971,25],[787,6,972,8],[787,10,972,12],[787,11,972,13,"promise"],[787,18,972,20],[787,21,972,23],[787,25,972,27,"Promise"],[787,32,972,34],[787,33,972,35],[787,43,972,45,"_"],[787,44,972,46],[787,46,972,48,"reject"],[787,52,972,54],[787,54,972,56],[788,8,973,12,"_this"],[788,13,973,17],[788,14,973,18,"timer"],[788,19,973,23],[788,22,973,26,"setTimeout"],[788,32,973,36],[788,33,973,37],[788,45,973,49],[789,10,974,16],[789,17,974,23,"reject"],[789,23,974,29],[789,24,974,30,"_createError"],[789,36,974,42],[789,37,974,43,"_this"],[789,42,974,48],[789,43,974,49,"auth"],[789,47,974,53],[789,49,974,55],[789,73,974,79],[789,74,974,80],[789,116,974,122],[789,117,974,123],[789,118,974,124],[790,8,975,12],[790,9,975,13],[790,11,975,15,"DEFAULT_API_TIMEOUT_MS"],[790,33,975,37],[790,34,975,38,"get"],[790,37,975,41],[790,38,975,42],[790,39,975,43],[790,40,975,44],[791,6,976,8],[791,7,976,9],[791,8,976,10],[792,4,977,4],[793,4,978,4,"NetworkTimeout"],[793,18,978,18],[793,19,978,19,"prototype"],[793,28,978,28],[793,29,978,29,"clearNetworkTimeout"],[793,48,978,48],[793,51,978,51],[793,63,978,63],[794,6,979,8,"clearTimeout"],[794,18,979,20],[794,19,979,21],[794,23,979,25],[794,24,979,26,"timer"],[794,29,979,31],[794,30,979,32],[795,4,980,4],[795,5,980,5],[796,4,981,4],[796,11,981,11,"NetworkTimeout"],[796,25,981,25],[797,2,982,0],[797,3,982,1],[797,4,982,2],[797,5,982,4],[798,2,983,0],[798,11,983,9,"_makeTaggedError"],[798,27,983,25,"_makeTaggedError"],[798,28,983,26,"auth"],[798,32,983,30],[798,34,983,32,"code"],[798,38,983,36],[798,40,983,38,"response"],[798,48,983,46],[798,50,983,48],[799,4,984,4],[799,8,984,8,"errorParams"],[799,19,984,19],[799,22,984,22],[800,6,985,8,"appName"],[800,13,985,15],[800,15,985,17,"auth"],[800,19,985,21],[800,20,985,22,"name"],[801,4,986,4],[801,5,986,5],[802,4,987,4],[802,8,987,8,"response"],[802,16,987,16],[802,17,987,17,"email"],[802,22,987,22],[802,24,987,24],[803,6,988,8,"errorParams"],[803,17,988,19],[803,18,988,20,"email"],[803,23,988,25],[803,26,988,28,"response"],[803,34,988,36],[803,35,988,37,"email"],[803,40,988,42],[804,4,989,4],[805,4,990,4],[805,8,990,8,"response"],[805,16,990,16],[805,17,990,17,"phoneNumber"],[805,28,990,28],[805,30,990,30],[806,6,991,8,"errorParams"],[806,17,991,19],[806,18,991,20,"phoneNumber"],[806,29,991,31],[806,32,991,34,"response"],[806,40,991,42],[806,41,991,43,"phoneNumber"],[806,52,991,54],[807,4,992,4],[808,4,993,4],[808,8,993,8,"error"],[808,13,993,13],[808,16,993,16,"_createError"],[808,28,993,28],[808,29,993,29,"auth"],[808,33,993,33],[808,35,993,35,"code"],[808,39,993,39],[808,41,993,41,"errorParams"],[808,52,993,52],[808,53,993,53],[809,4,994,4],[810,4,995,4,"error"],[810,9,995,9],[810,10,995,10,"customData"],[810,20,995,20],[810,21,995,21,"_tokenResponse"],[810,35,995,35],[810,38,995,38,"response"],[810,46,995,46],[811,4,996,4],[811,11,996,11,"error"],[811,16,996,16],[812,2,997,0],[814,2,999,0],[815,0,1000,0],[816,0,1001,0],[817,0,1002,0],[818,0,1003,0],[819,0,1004,0],[820,0,1005,0],[821,0,1006,0],[822,0,1007,0],[823,0,1008,0],[824,0,1009,0],[825,0,1010,0],[826,0,1011,0],[827,0,1012,0],[828,0,1013,0],[829,0,1014,0],[830,2,1015,0],[830,11,1015,9,"isV2"],[830,15,1015,13,"isV2"],[830,16,1015,14,"grecaptcha"],[830,26,1015,24],[830,28,1015,26],[831,4,1016,4],[831,11,1016,12,"grecaptcha"],[831,21,1016,22],[831,26,1016,27,"undefined"],[831,35,1016,36],[831,39,1017,8,"grecaptcha"],[831,49,1017,18],[831,50,1017,19,"getResponse"],[831,61,1017,30],[831,66,1017,35,"undefined"],[831,75,1017,44],[832,2,1018,0],[833,2,1019,0],[833,11,1019,9,"isEnterprise"],[833,23,1019,21,"isEnterprise"],[833,24,1019,22,"grecaptcha"],[833,34,1019,32],[833,36,1019,34],[834,4,1020,4],[834,11,1020,12,"grecaptcha"],[834,21,1020,22],[834,26,1020,27,"undefined"],[834,35,1020,36],[834,39,1021,8,"grecaptcha"],[834,49,1021,18],[834,50,1021,19,"enterprise"],[834,60,1021,29],[834,65,1021,34,"undefined"],[834,74,1021,43],[835,2,1022,0],[836,2,1023,0],[836,6,1023,4,"RecaptchaConfig"],[836,21,1023,19],[836,24,1023,22],[836,37,1023,37],[836,49,1023,49],[837,4,1024,4],[837,13,1024,13,"RecaptchaConfig"],[837,28,1024,28,"RecaptchaConfig"],[837,29,1024,29,"response"],[837,37,1024,37],[837,39,1024,39],[838,6,1025,8],[839,0,1026,0],[840,0,1027,0],[841,6,1028,8],[841,10,1028,12],[841,11,1028,13,"siteKey"],[841,18,1028,20],[841,21,1028,23],[841,23,1028,25],[842,6,1029,8],[843,0,1030,0],[844,0,1031,0],[845,6,1032,8],[845,10,1032,12],[845,11,1032,13,"recaptchaEnforcementState"],[845,36,1032,38],[845,39,1032,41],[845,41,1032,43],[846,6,1033,8],[846,10,1033,12,"response"],[846,18,1033,20],[846,19,1033,21,"recaptchaKey"],[846,31,1033,33],[846,36,1033,38,"undefined"],[846,45,1033,47],[846,47,1033,49],[847,8,1034,12],[847,14,1034,18],[847,18,1034,22,"Error"],[847,23,1034,27],[847,24,1034,28],[847,48,1034,52],[847,49,1034,53],[848,6,1035,8],[849,6,1036,8],[850,6,1037,8],[850,10,1037,12],[850,11,1037,13,"siteKey"],[850,18,1037,20],[850,21,1037,23,"response"],[850,29,1037,31],[850,30,1037,32,"recaptchaKey"],[850,42,1037,44],[850,43,1037,45,"split"],[850,48,1037,50],[850,49,1037,51],[850,52,1037,54],[850,53,1037,55],[850,54,1037,56],[850,55,1037,57],[850,56,1037,58],[851,6,1038,8],[851,10,1038,12],[851,11,1038,13,"recaptchaEnforcementState"],[851,36,1038,38],[851,39,1038,41,"response"],[851,47,1038,49],[851,48,1038,50,"recaptchaEnforcementState"],[851,73,1038,75],[852,4,1039,4],[853,4,1040,4],[854,0,1041,0],[855,0,1042,0],[856,0,1043,0],[857,0,1044,0],[858,0,1045,0],[859,4,1046,4,"RecaptchaConfig"],[859,19,1046,19],[859,20,1046,20,"prototype"],[859,29,1046,29],[859,30,1046,30,"getProviderEnforcementState"],[859,57,1046,57],[859,60,1046,60],[859,70,1046,70,"providerStr"],[859,81,1046,81],[859,83,1046,83],[860,6,1047,8],[860,10,1047,12],[860,11,1047,13],[860,15,1047,17],[860,16,1047,18,"recaptchaEnforcementState"],[860,41,1047,43],[860,45,1048,12],[860,49,1048,16],[860,50,1048,17,"recaptchaEnforcementState"],[860,75,1048,42],[860,76,1048,43,"length"],[860,82,1048,49],[860,87,1048,54],[860,88,1048,55],[860,90,1048,57],[861,8,1049,12],[861,15,1049,19],[861,19,1049,23],[862,6,1050,8],[863,6,1051,8],[863,11,1051,13],[863,15,1051,17,"_i"],[863,17,1051,19],[863,20,1051,22],[863,21,1051,23],[863,23,1051,25,"_a"],[863,25,1051,27],[863,28,1051,30],[863,32,1051,34],[863,33,1051,35,"recaptchaEnforcementState"],[863,58,1051,60],[863,60,1051,62,"_i"],[863,62,1051,64],[863,65,1051,67,"_a"],[863,67,1051,69],[863,68,1051,70,"length"],[863,74,1051,76],[863,76,1051,78,"_i"],[863,78,1051,80],[863,80,1051,82],[863,82,1051,84],[864,8,1052,12],[864,12,1052,16,"recaptchaEnforcementState"],[864,37,1052,41],[864,40,1052,44,"_a"],[864,42,1052,46],[864,43,1052,47,"_i"],[864,45,1052,49],[864,46,1052,50],[865,8,1053,12],[865,12,1053,16,"recaptchaEnforcementState"],[865,37,1053,41],[865,38,1053,42,"provider"],[865,46,1053,50],[865,50,1054,16,"recaptchaEnforcementState"],[865,75,1054,41],[865,76,1054,42,"provider"],[865,84,1054,50],[865,89,1054,55,"providerStr"],[865,100,1054,66],[865,102,1054,68],[866,10,1055,16],[866,17,1055,23,"_parseEnforcementState"],[866,39,1055,45],[866,40,1055,46,"recaptchaEnforcementState"],[866,65,1055,71],[866,66,1055,72,"enforcementState"],[866,82,1055,88],[866,83,1055,89],[867,8,1056,12],[868,6,1057,8],[869,6,1058,8],[869,13,1058,15],[869,17,1058,19],[870,4,1059,4],[870,5,1059,5],[871,4,1060,4],[872,0,1061,0],[873,0,1062,0],[874,0,1063,0],[875,0,1064,0],[876,0,1065,0],[877,4,1066,4,"RecaptchaConfig"],[877,19,1066,19],[877,20,1066,20,"prototype"],[877,29,1066,29],[877,30,1066,30,"isProviderEnabled"],[877,47,1066,47],[877,50,1066,50],[877,60,1066,60,"providerStr"],[877,71,1066,71],[877,73,1066,73],[878,6,1067,8],[878,13,1067,16],[878,17,1067,20],[878,18,1067,21,"getProviderEnforcementState"],[878,45,1067,48],[878,46,1067,49,"providerStr"],[878,57,1067,60],[878,58,1067,61],[878,63,1068,12],[878,72,1068,21],[878,73,1068,22],[878,107,1069,12],[878,111,1069,16],[878,112,1069,17,"getProviderEnforcementState"],[878,139,1069,44],[878,140,1069,45,"providerStr"],[878,151,1069,56],[878,152,1069,57],[878,157,1069,62],[878,164,1069,69],[878,165,1069,70],[879,4,1070,4],[879,5,1070,5],[880,4,1071,4],[880,11,1071,11,"RecaptchaConfig"],[880,26,1071,26],[881,2,1072,0],[881,3,1072,1],[881,4,1072,2],[881,5,1072,4],[883,2,1074,0],[884,0,1075,0],[885,0,1076,0],[886,0,1077,0],[887,0,1078,0],[888,0,1079,0],[889,0,1080,0],[890,0,1081,0],[891,0,1082,0],[892,0,1083,0],[893,0,1084,0],[894,0,1085,0],[895,0,1086,0],[896,0,1087,0],[897,0,1088,0],[898,0,1089,0],[899,2,1090,0],[899,11,1090,9,"getRecaptchaParams"],[899,29,1090,27,"getRecaptchaParams"],[899,30,1090,28,"auth"],[899,34,1090,32],[899,36,1090,34],[900,4,1091,4],[900,11,1091,11,"tslib"],[900,16,1091,16],[900,17,1091,17,"__awaiter"],[900,26,1091,26],[900,27,1091,27],[900,31,1091,31],[900,33,1091,31,"undefined"],[900,42,1091,31],[900,44,1091,31,"undefined"],[900,53,1091,31],[900,55,1091,49],[900,67,1091,61],[901,6,1092,8],[901,13,1092,15,"tslib"],[901,18,1092,20],[901,19,1092,21,"__generator"],[901,30,1092,32],[901,31,1092,33],[901,35,1092,37],[901,37,1092,39],[901,47,1092,49,"_a"],[901,49,1092,51],[901,51,1092,53],[902,8,1093,12],[902,16,1093,20,"_a"],[902,18,1093,22],[902,19,1093,23,"label"],[902,24,1093,28],[903,10,1094,16],[903,15,1094,21],[903,16,1094,22],[904,12,1094,24],[904,19,1094,31],[904,20,1094,32],[904,21,1094,33],[904,22,1094,34],[904,33,1094,45,"_performApiRequest"],[904,51,1094,63],[904,52,1094,64,"auth"],[904,56,1094,68],[904,58,1094,70],[904,63,1094,75],[904,64,1094,76],[904,86,1094,98],[904,107,1094,119],[904,108,1094,120],[904,142,1094,154],[904,143,1094,155],[904,144,1094,156],[905,10,1095,16],[905,15,1095,21],[905,16,1095,22],[906,12,1095,24],[906,19,1095,31],[906,20,1095,32],[906,21,1095,33],[906,22,1095,34],[906,34,1095,48,"_a"],[906,36,1095,50],[906,37,1095,51,"sent"],[906,41,1095,55],[906,42,1095,56],[906,43,1095,57],[906,44,1095,59,"recaptchaSiteKey"],[906,60,1095,75],[906,64,1095,79],[906,66,1095,81],[906,67,1095,83],[907,8,1096,12],[908,6,1097,8],[908,7,1097,9],[908,8,1097,10],[909,4,1098,4],[909,5,1098,5],[909,6,1098,6],[910,2,1099,0],[911,2,1100,0],[911,11,1100,9,"getRecaptchaConfig"],[911,29,1100,27,"getRecaptchaConfig"],[911,30,1100,28,"auth"],[911,34,1100,32],[911,36,1100,34,"request"],[911,43,1100,41],[911,45,1100,43],[912,4,1101,4],[912,11,1101,11,"tslib"],[912,16,1101,16],[912,17,1101,17,"__awaiter"],[912,26,1101,26],[912,27,1101,27],[912,31,1101,31],[912,33,1101,31,"undefined"],[912,42,1101,31],[912,44,1101,31,"undefined"],[912,53,1101,31],[912,55,1101,49],[912,67,1101,61],[913,6,1102,8],[913,13,1102,15,"tslib"],[913,18,1102,20],[913,19,1102,21,"__generator"],[913,30,1102,32],[913,31,1102,33],[913,35,1102,37],[913,37,1102,39],[913,47,1102,49,"_a"],[913,49,1102,51],[913,51,1102,53],[914,8,1103,12],[914,15,1103,19],[914,16,1103,20],[914,17,1103,21],[914,18,1103,22],[914,30,1103,34,"_performApiRequest"],[914,48,1103,52],[914,49,1103,53,"auth"],[914,53,1103,57],[914,55,1103,59],[914,60,1103,64],[914,61,1103,65],[914,83,1103,87],[914,104,1103,108],[914,105,1103,109],[914,142,1103,146,"_addTidIfNecessary"],[914,160,1103,164],[914,161,1103,165,"auth"],[914,165,1103,169],[914,167,1103,171,"request"],[914,174,1103,178],[914,175,1103,179],[914,176,1103,180],[914,177,1103,181],[915,6,1104,8],[915,7,1104,9],[915,8,1104,10],[916,4,1105,4],[916,5,1105,5],[916,6,1105,6],[917,2,1106,0],[919,2,1108,0],[920,0,1109,0],[921,0,1110,0],[922,0,1111,0],[923,0,1112,0],[924,0,1113,0],[925,0,1114,0],[926,0,1115,0],[927,0,1116,0],[928,0,1117,0],[929,0,1118,0],[930,0,1119,0],[931,0,1120,0],[932,0,1121,0],[933,0,1122,0],[934,0,1123,0],[935,2,1124,0],[935,11,1124,9,"deleteAccount"],[935,24,1124,22,"deleteAccount"],[935,25,1124,23,"auth"],[935,29,1124,27],[935,31,1124,29,"request"],[935,38,1124,36],[935,40,1124,38],[936,4,1125,4],[936,11,1125,11,"tslib"],[936,16,1125,16],[936,17,1125,17,"__awaiter"],[936,26,1125,26],[936,27,1125,27],[936,31,1125,31],[936,33,1125,31,"undefined"],[936,42,1125,31],[936,44,1125,31,"undefined"],[936,53,1125,31],[936,55,1125,49],[936,67,1125,61],[937,6,1126,8],[937,13,1126,15,"tslib"],[937,18,1126,20],[937,19,1126,21,"__generator"],[937,30,1126,32],[937,31,1126,33],[937,35,1126,37],[937,37,1126,39],[937,47,1126,49,"_a"],[937,49,1126,51],[937,51,1126,53],[938,8,1127,12],[938,15,1127,19],[938,16,1127,20],[938,17,1127,21],[938,18,1127,22],[938,30,1127,34,"_performApiRequest"],[938,48,1127,52],[938,49,1127,53,"auth"],[938,53,1127,57],[938,55,1127,59],[938,61,1127,65],[938,62,1127,66],[938,85,1127,89],[938,106,1127,110],[938,107,1127,111],[938,138,1127,142,"request"],[938,145,1127,149],[938,146,1127,150],[938,147,1127,151],[939,6,1128,8],[939,7,1128,9],[939,8,1128,10],[940,4,1129,4],[940,5,1129,5],[940,6,1129,6],[941,2,1130,0],[942,2,1131,0],[942,11,1131,9,"deleteLinkedAccounts"],[942,31,1131,29,"deleteLinkedAccounts"],[942,32,1131,30,"auth"],[942,36,1131,34],[942,38,1131,36,"request"],[942,45,1131,43],[942,47,1131,45],[943,4,1132,4],[943,11,1132,11,"tslib"],[943,16,1132,16],[943,17,1132,17,"__awaiter"],[943,26,1132,26],[943,27,1132,27],[943,31,1132,31],[943,33,1132,31,"undefined"],[943,42,1132,31],[943,44,1132,31,"undefined"],[943,53,1132,31],[943,55,1132,49],[943,67,1132,61],[944,6,1133,8],[944,13,1133,15,"tslib"],[944,18,1133,20],[944,19,1133,21,"__generator"],[944,30,1133,32],[944,31,1133,33],[944,35,1133,37],[944,37,1133,39],[944,47,1133,49,"_a"],[944,49,1133,51],[944,51,1133,53],[945,8,1134,12],[945,15,1134,19],[945,16,1134,20],[945,17,1134,21],[945,18,1134,22],[945,30,1134,34,"_performApiRequest"],[945,48,1134,52],[945,49,1134,53,"auth"],[945,53,1134,57],[945,55,1134,59],[945,61,1134,65],[945,62,1134,66],[945,85,1134,89],[945,106,1134,110],[945,107,1134,111],[945,140,1134,144,"request"],[945,147,1134,151],[945,148,1134,152],[945,149,1134,153],[946,6,1135,8],[946,7,1135,9],[946,8,1135,10],[947,4,1136,4],[947,5,1136,5],[947,6,1136,6],[948,2,1137,0],[949,2,1138,0],[949,11,1138,9,"getAccountInfo"],[949,25,1138,23,"getAccountInfo"],[949,26,1138,24,"auth"],[949,30,1138,28],[949,32,1138,30,"request"],[949,39,1138,37],[949,41,1138,39],[950,4,1139,4],[950,11,1139,11,"tslib"],[950,16,1139,16],[950,17,1139,17,"__awaiter"],[950,26,1139,26],[950,27,1139,27],[950,31,1139,31],[950,33,1139,31,"undefined"],[950,42,1139,31],[950,44,1139,31,"undefined"],[950,53,1139,31],[950,55,1139,49],[950,67,1139,61],[951,6,1140,8],[951,13,1140,15,"tslib"],[951,18,1140,20],[951,19,1140,21,"__generator"],[951,30,1140,32],[951,31,1140,33],[951,35,1140,37],[951,37,1140,39],[951,47,1140,49,"_a"],[951,49,1140,51],[951,51,1140,53],[952,8,1141,12],[952,15,1141,19],[952,16,1141,20],[952,17,1141,21],[952,18,1141,22],[952,30,1141,34,"_performApiRequest"],[952,48,1141,52],[952,49,1141,53,"auth"],[952,53,1141,57],[952,55,1141,59],[952,61,1141,65],[952,62,1141,66],[952,85,1141,89],[952,106,1141,110],[952,107,1141,111],[952,140,1141,144,"request"],[952,147,1141,151],[952,148,1141,152],[952,149,1141,153],[953,6,1142,8],[953,7,1142,9],[953,8,1142,10],[954,4,1143,4],[954,5,1143,5],[954,6,1143,6],[955,2,1144,0],[957,2,1146,0],[958,0,1147,0],[959,0,1148,0],[960,0,1149,0],[961,0,1150,0],[962,0,1151,0],[963,0,1152,0],[964,0,1153,0],[965,0,1154,0],[966,0,1155,0],[967,0,1156,0],[968,0,1157,0],[969,0,1158,0],[970,0,1159,0],[971,0,1160,0],[972,0,1161,0],[973,2,1162,0],[973,11,1162,9,"utcTimestampToDateString"],[973,35,1162,33,"utcTimestampToDateString"],[973,36,1162,34,"utcTimestamp"],[973,48,1162,46],[973,50,1162,48],[974,4,1163,4],[974,8,1163,8],[974,9,1163,9,"utcTimestamp"],[974,21,1163,21],[974,23,1163,23],[975,6,1164,8],[975,13,1164,15,"undefined"],[975,22,1164,24],[976,4,1165,4],[977,4,1166,4],[977,8,1166,8],[978,6,1167,8],[979,6,1168,8],[979,10,1168,12,"date"],[979,14,1168,16],[979,17,1168,19],[979,21,1168,23,"Date"],[979,25,1168,27],[979,26,1168,28,"Number"],[979,32,1168,34],[979,33,1168,35,"utcTimestamp"],[979,45,1168,47],[979,46,1168,48],[979,47,1168,49],[980,6,1169,8],[981,6,1170,8],[981,10,1170,12],[981,11,1170,13,"isNaN"],[981,16,1170,18],[981,17,1170,19,"date"],[981,21,1170,23],[981,22,1170,24,"getTime"],[981,29,1170,31],[981,30,1170,32],[981,31,1170,33],[981,32,1170,34],[981,34,1170,36],[982,8,1171,12],[983,8,1172,12],[983,15,1172,19,"date"],[983,19,1172,23],[983,20,1172,24,"toUTCString"],[983,31,1172,35],[983,32,1172,36],[983,33,1172,37],[984,6,1173,8],[985,4,1174,4],[985,5,1174,5],[985,6,1175,4],[985,13,1175,11,"e"],[985,14,1175,12],[985,16,1175,14],[986,6,1176,8],[987,4,1176,8],[988,4,1178,4],[988,11,1178,11,"undefined"],[988,20,1178,20],[989,2,1179,0],[991,2,1181,0],[992,0,1182,0],[993,0,1183,0],[994,0,1184,0],[995,0,1185,0],[996,0,1186,0],[997,0,1187,0],[998,0,1188,0],[999,0,1189,0],[1000,0,1190,0],[1001,0,1191,0],[1002,0,1192,0],[1003,0,1193,0],[1004,0,1194,0],[1005,0,1195,0],[1006,0,1196,0],[1007,2,1197,0],[1008,0,1198,0],[1009,0,1199,0],[1010,0,1200,0],[1011,0,1201,0],[1012,0,1202,0],[1013,0,1203,0],[1014,0,1204,0],[1015,0,1205,0],[1016,0,1206,0],[1017,0,1207,0],[1018,0,1208,0],[1019,2,1209,0],[1019,11,1209,9,"getIdToken"],[1019,21,1209,19,"getIdToken"],[1019,22,1209,20,"user"],[1019,26,1209,24],[1019,28,1209,26,"forceRefresh"],[1019,40,1209,38],[1019,42,1209,40],[1020,4,1210,4],[1020,8,1210,8,"forceRefresh"],[1020,20,1210,20],[1020,25,1210,20,"undefined"],[1020,34,1210,31],[1020,36,1210,33],[1021,6,1210,35,"forceRefresh"],[1021,18,1210,47],[1021,21,1210,50],[1021,26,1210,55],[1022,4,1210,57],[1023,4,1211,4],[1023,11,1211,11,"util"],[1023,15,1211,15],[1023,16,1211,16,"getModularInstance"],[1023,34,1211,34],[1023,35,1211,35,"user"],[1023,39,1211,39],[1023,40,1211,40],[1023,41,1211,41,"getIdToken"],[1023,51,1211,51],[1023,52,1211,52,"forceRefresh"],[1023,64,1211,64],[1023,65,1211,65],[1024,2,1212,0],[1025,2,1213,0],[1026,0,1214,0],[1027,0,1215,0],[1028,0,1216,0],[1029,0,1217,0],[1030,0,1218,0],[1031,0,1219,0],[1032,0,1220,0],[1033,0,1221,0],[1034,0,1222,0],[1035,0,1223,0],[1036,0,1224,0],[1037,2,1225,0],[1037,11,1225,9,"getIdTokenResult"],[1037,27,1225,25,"getIdTokenResult"],[1037,28,1225,26,"user"],[1037,32,1225,30],[1037,34,1225,32,"forceRefresh"],[1037,46,1225,44],[1037,48,1225,46],[1038,4,1226,4],[1038,8,1226,8,"forceRefresh"],[1038,20,1226,20],[1038,25,1226,20,"undefined"],[1038,34,1226,31],[1038,36,1226,33],[1039,6,1226,35,"forceRefresh"],[1039,18,1226,47],[1039,21,1226,50],[1039,26,1226,55],[1040,4,1226,57],[1041,4,1227,4],[1041,11,1227,11,"tslib"],[1041,16,1227,16],[1041,17,1227,17,"__awaiter"],[1041,26,1227,26],[1041,27,1227,27],[1041,31,1227,31],[1041,33,1227,31,"undefined"],[1041,42,1227,31],[1041,44,1227,31,"undefined"],[1041,53,1227,31],[1041,55,1227,49],[1041,67,1227,61],[1042,6,1228,8],[1042,10,1228,12,"userInternal"],[1042,22,1228,24],[1042,24,1228,26,"token"],[1042,29,1228,31],[1042,31,1228,33,"claims"],[1042,37,1228,39],[1042,39,1228,41,"firebase"],[1042,47,1228,49],[1042,49,1228,51,"signInProvider"],[1042,63,1228,65],[1043,6,1229,8],[1043,13,1229,15,"tslib"],[1043,18,1229,20],[1043,19,1229,21,"__generator"],[1043,30,1229,32],[1043,31,1229,33],[1043,35,1229,37],[1043,37,1229,39],[1043,47,1229,49,"_a"],[1043,49,1229,51],[1043,51,1229,53],[1044,8,1230,12],[1044,16,1230,20,"_a"],[1044,18,1230,22],[1044,19,1230,23,"label"],[1044,24,1230,28],[1045,10,1231,16],[1045,15,1231,21],[1045,16,1231,22],[1046,12,1232,20,"userInternal"],[1046,24,1232,32],[1046,27,1232,35,"util"],[1046,31,1232,39],[1046,32,1232,40,"getModularInstance"],[1046,50,1232,58],[1046,51,1232,59,"user"],[1046,55,1232,63],[1046,56,1232,64],[1047,12,1233,20],[1047,19,1233,27],[1047,20,1233,28],[1047,21,1233,29],[1047,22,1233,30],[1047,33,1233,41,"userInternal"],[1047,45,1233,53],[1047,46,1233,54,"getIdToken"],[1047,56,1233,64],[1047,57,1233,65,"forceRefresh"],[1047,69,1233,77],[1047,70,1233,78],[1047,71,1233,79],[1048,10,1234,16],[1048,15,1234,21],[1048,16,1234,22],[1049,12,1235,20,"token"],[1049,17,1235,25],[1049,20,1235,28,"_a"],[1049,22,1235,30],[1049,23,1235,31,"sent"],[1049,27,1235,35],[1049,28,1235,36],[1049,29,1235,37],[1050,12,1236,20,"claims"],[1050,18,1236,26],[1050,21,1236,29,"_parseToken"],[1050,32,1236,40],[1050,33,1236,41,"token"],[1050,38,1236,46],[1050,39,1236,47],[1051,12,1237,20,"_assert"],[1051,19,1237,27],[1051,20,1237,28,"claims"],[1051,26,1237,34],[1051,30,1237,38,"claims"],[1051,36,1237,44],[1051,37,1237,45,"exp"],[1051,40,1237,48],[1051,44,1237,52,"claims"],[1051,50,1237,58],[1051,51,1237,59,"auth_time"],[1051,60,1237,68],[1051,64,1237,72,"claims"],[1051,70,1237,78],[1051,71,1237,79,"iat"],[1051,74,1237,82],[1051,76,1237,84,"userInternal"],[1051,88,1237,96],[1051,89,1237,97,"auth"],[1051,93,1237,101],[1051,95,1237,103],[1051,111,1237,119],[1051,112,1237,120],[1051,146,1237,154],[1051,147,1237,155],[1052,12,1238,20,"firebase"],[1052,20,1238,28],[1052,23,1238,31],[1052,30,1238,38,"claims"],[1052,36,1238,44],[1052,37,1238,45,"firebase"],[1052,45,1238,53],[1052,50,1238,58],[1052,58,1238,66],[1052,61,1238,69,"claims"],[1052,67,1238,75],[1052,68,1238,76,"firebase"],[1052,76,1238,84],[1052,79,1238,87,"undefined"],[1052,88,1238,96],[1053,12,1239,20,"signInProvider"],[1053,26,1239,34],[1053,29,1239,37,"firebase"],[1053,37,1239,45],[1053,42,1239,50],[1053,46,1239,54],[1053,50,1239,58,"firebase"],[1053,58,1239,66],[1053,63,1239,66,"undefined"],[1053,72,1239,77],[1053,75,1239,77,"undefined"],[1053,84,1239,77],[1053,87,1239,89,"firebase"],[1053,95,1239,97],[1053,96,1239,98],[1053,114,1239,116],[1053,115,1239,117],[1054,12,1240,20],[1054,19,1240,27],[1054,20,1240,28],[1054,21,1240,29],[1054,22,1240,30],[1054,34,1240,42],[1055,14,1241,28,"claims"],[1055,20,1241,34],[1055,22,1241,36,"claims"],[1055,28,1241,42],[1056,14,1242,28,"token"],[1056,19,1242,33],[1056,21,1242,35,"token"],[1056,26,1242,40],[1057,14,1243,28,"authTime"],[1057,22,1243,36],[1057,24,1243,38,"utcTimestampToDateString"],[1057,48,1243,62],[1057,49,1243,63,"secondsStringToMilliseconds"],[1057,76,1243,90],[1057,77,1243,91,"claims"],[1057,83,1243,97],[1057,84,1243,98,"auth_time"],[1057,93,1243,107],[1057,94,1243,108],[1057,95,1243,109],[1058,14,1244,28,"issuedAtTime"],[1058,26,1244,40],[1058,28,1244,42,"utcTimestampToDateString"],[1058,52,1244,66],[1058,53,1244,67,"secondsStringToMilliseconds"],[1058,80,1244,94],[1058,81,1244,95,"claims"],[1058,87,1244,101],[1058,88,1244,102,"iat"],[1058,91,1244,105],[1058,92,1244,106],[1058,93,1244,107],[1059,14,1245,28,"expirationTime"],[1059,28,1245,42],[1059,30,1245,44,"utcTimestampToDateString"],[1059,54,1245,68],[1059,55,1245,69,"secondsStringToMilliseconds"],[1059,82,1245,96],[1059,83,1245,97,"claims"],[1059,89,1245,103],[1059,90,1245,104,"exp"],[1059,93,1245,107],[1059,94,1245,108],[1059,95,1245,109],[1060,14,1246,28,"signInProvider"],[1060,28,1246,42],[1060,30,1246,44,"signInProvider"],[1060,44,1246,58],[1060,48,1246,62],[1060,52,1246,66],[1061,14,1247,28,"signInSecondFactor"],[1061,32,1247,46],[1061,34,1247,48],[1061,35,1247,49,"firebase"],[1061,43,1247,57],[1061,48,1247,62],[1061,52,1247,66],[1061,56,1247,70,"firebase"],[1061,64,1247,78],[1061,69,1247,78,"undefined"],[1061,78,1247,89],[1061,81,1247,89,"undefined"],[1061,90,1247,89],[1061,93,1247,101,"firebase"],[1061,101,1247,109],[1061,102,1247,110],[1061,125,1247,133],[1061,126,1247,134],[1061,131,1247,139],[1062,12,1248,24],[1062,13,1248,25],[1062,14,1248,26],[1063,8,1249,12],[1064,6,1250,8],[1064,7,1250,9],[1064,8,1250,10],[1065,4,1251,4],[1065,5,1251,5],[1065,6,1251,6],[1066,2,1252,0],[1067,2,1253,0],[1067,11,1253,9,"secondsStringToMilliseconds"],[1067,38,1253,36,"secondsStringToMilliseconds"],[1067,39,1253,37,"seconds"],[1067,46,1253,44],[1067,48,1253,46],[1068,4,1254,4],[1068,11,1254,11,"Number"],[1068,17,1254,17],[1068,18,1254,18,"seconds"],[1068,25,1254,25],[1068,26,1254,26],[1068,29,1254,29],[1068,33,1254,33],[1069,2,1255,0],[1070,2,1256,0],[1070,11,1256,9,"_parseToken"],[1070,22,1256,20,"_parseToken"],[1070,23,1256,21,"token"],[1070,28,1256,26],[1070,30,1256,28],[1071,4,1257,4],[1071,8,1257,8,"_a"],[1071,10,1257,10],[1071,13,1257,13,"token"],[1071,18,1257,18],[1071,19,1257,19,"split"],[1071,24,1257,24],[1071,25,1257,25],[1071,28,1257,28],[1071,29,1257,29],[1072,6,1257,31,"algorithm"],[1072,15,1257,40],[1072,18,1257,43,"_a"],[1072,20,1257,45],[1072,21,1257,46],[1072,22,1257,47],[1072,23,1257,48],[1073,6,1257,50,"payload"],[1073,13,1257,57],[1073,16,1257,60,"_a"],[1073,18,1257,62],[1073,19,1257,63],[1073,20,1257,64],[1073,21,1257,65],[1074,6,1257,67,"signature"],[1074,15,1257,76],[1074,18,1257,79,"_a"],[1074,20,1257,81],[1074,21,1257,82],[1074,22,1257,83],[1074,23,1257,84],[1075,4,1258,4],[1075,8,1258,8,"algorithm"],[1075,17,1258,17],[1075,22,1258,22,"undefined"],[1075,31,1258,31],[1075,35,1259,8,"payload"],[1075,42,1259,15],[1075,47,1259,20,"undefined"],[1075,56,1259,29],[1075,60,1260,8,"signature"],[1075,69,1260,17],[1075,74,1260,22,"undefined"],[1075,83,1260,31],[1075,85,1260,33],[1076,6,1261,8,"_logError"],[1076,15,1261,17],[1076,16,1261,18],[1076,64,1261,66],[1076,65,1261,67],[1077,6,1262,8],[1077,13,1262,15],[1077,17,1262,19],[1078,4,1263,4],[1079,4,1264,4],[1079,8,1264,8],[1080,6,1265,8],[1080,10,1265,12,"decoded"],[1080,17,1265,19],[1080,20,1265,22,"util"],[1080,24,1265,26],[1080,25,1265,27,"base64Decode"],[1080,37,1265,39],[1080,38,1265,40,"payload"],[1080,45,1265,47],[1080,46,1265,48],[1081,6,1266,8],[1081,10,1266,12],[1081,11,1266,13,"decoded"],[1081,18,1266,20],[1081,20,1266,22],[1082,8,1267,12,"_logError"],[1082,17,1267,21],[1082,18,1267,22],[1082,55,1267,59],[1082,56,1267,60],[1083,8,1268,12],[1083,15,1268,19],[1083,19,1268,23],[1084,6,1269,8],[1085,6,1270,8],[1085,13,1270,15,"JSON"],[1085,17,1270,19],[1085,18,1270,20,"parse"],[1085,23,1270,25],[1085,24,1270,26,"decoded"],[1085,31,1270,33],[1085,32,1270,34],[1086,4,1271,4],[1086,5,1271,5],[1086,6,1272,4],[1086,13,1272,11,"e"],[1086,14,1272,12],[1086,16,1272,14],[1087,6,1273,8,"_logError"],[1087,15,1273,17],[1087,16,1273,18],[1087,58,1273,60],[1087,60,1273,62,"e"],[1087,61,1273,63],[1087,66,1273,68],[1087,70,1273,72],[1087,74,1273,76,"e"],[1087,75,1273,77],[1087,80,1273,77,"undefined"],[1087,89,1273,88],[1087,92,1273,88,"undefined"],[1087,101,1273,88],[1087,104,1273,100,"e"],[1087,105,1273,101],[1087,106,1273,102,"toString"],[1087,114,1273,110],[1087,115,1273,111],[1087,116,1273,112],[1087,117,1273,113],[1088,6,1274,8],[1088,13,1274,15],[1088,17,1274,19],[1089,4,1275,4],[1090,2,1276,0],[1091,2,1277,0],[1092,0,1278,0],[1093,0,1279,0],[1094,2,1280,0],[1094,11,1280,9,"_tokenExpiresIn"],[1094,26,1280,24,"_tokenExpiresIn"],[1094,27,1280,25,"token"],[1094,32,1280,30],[1094,34,1280,32],[1095,4,1281,4],[1095,8,1281,8,"parsedToken"],[1095,19,1281,19],[1095,22,1281,22,"_parseToken"],[1095,33,1281,33],[1095,34,1281,34,"token"],[1095,39,1281,39],[1095,40,1281,40],[1096,4,1282,4,"_assert"],[1096,11,1282,11],[1096,12,1282,12,"parsedToken"],[1096,23,1282,23],[1096,25,1282,25],[1096,41,1282,41],[1096,42,1282,42],[1096,76,1282,76],[1096,77,1282,77],[1097,4,1283,4,"_assert"],[1097,11,1283,11],[1097,12,1283,12],[1097,19,1283,19,"parsedToken"],[1097,30,1283,30],[1097,31,1283,31,"exp"],[1097,34,1283,34],[1097,39,1283,39],[1097,50,1283,50],[1097,52,1283,52],[1097,68,1283,68],[1097,69,1283,69],[1097,103,1283,103],[1097,104,1283,104],[1098,4,1284,4,"_assert"],[1098,11,1284,11],[1098,12,1284,12],[1098,19,1284,19,"parsedToken"],[1098,30,1284,30],[1098,31,1284,31,"iat"],[1098,34,1284,34],[1098,39,1284,39],[1098,50,1284,50],[1098,52,1284,52],[1098,68,1284,68],[1098,69,1284,69],[1098,103,1284,103],[1098,104,1284,104],[1099,4,1285,4],[1099,11,1285,11,"Number"],[1099,17,1285,17],[1099,18,1285,18,"parsedToken"],[1099,29,1285,29],[1099,30,1285,30,"exp"],[1099,33,1285,33],[1099,34,1285,34],[1099,37,1285,37,"Number"],[1099,43,1285,43],[1099,44,1285,44,"parsedToken"],[1099,55,1285,55],[1099,56,1285,56,"iat"],[1099,59,1285,59],[1099,60,1285,60],[1100,2,1286,0],[1102,2,1288,0],[1103,0,1289,0],[1104,0,1290,0],[1105,0,1291,0],[1106,0,1292,0],[1107,0,1293,0],[1108,0,1294,0],[1109,0,1295,0],[1110,0,1296,0],[1111,0,1297,0],[1112,0,1298,0],[1113,0,1299,0],[1114,0,1300,0],[1115,0,1301,0],[1116,0,1302,0],[1117,0,1303,0],[1118,2,1304,0],[1118,11,1304,9,"_logoutIfInvalidated"],[1118,31,1304,29,"_logoutIfInvalidated"],[1118,32,1304,30,"user"],[1118,36,1304,34],[1118,38,1304,36,"promise"],[1118,45,1304,43],[1118,47,1304,45,"bypassAuthState"],[1118,62,1304,60],[1118,64,1304,62],[1119,4,1305,4],[1119,8,1305,8,"bypassAuthState"],[1119,23,1305,23],[1119,28,1305,23,"undefined"],[1119,37,1305,34],[1119,39,1305,36],[1120,6,1305,38,"bypassAuthState"],[1120,21,1305,53],[1120,24,1305,56],[1120,29,1305,61],[1121,4,1305,63],[1122,4,1306,4],[1122,11,1306,11,"tslib"],[1122,16,1306,16],[1122,17,1306,17,"__awaiter"],[1122,26,1306,26],[1122,27,1306,27],[1122,31,1306,31],[1122,33,1306,31,"undefined"],[1122,42,1306,31],[1122,44,1306,31,"undefined"],[1122,53,1306,31],[1122,55,1306,49],[1122,67,1306,61],[1123,6,1307,8],[1123,10,1307,12,"e_1"],[1123,13,1307,15],[1124,6,1308,8],[1124,13,1308,15,"tslib"],[1124,18,1308,20],[1124,19,1308,21,"__generator"],[1124,30,1308,32],[1124,31,1308,33],[1124,35,1308,37],[1124,37,1308,39],[1124,47,1308,49,"_a"],[1124,49,1308,51],[1124,51,1308,53],[1125,8,1309,12],[1125,16,1309,20,"_a"],[1125,18,1309,22],[1125,19,1309,23,"label"],[1125,24,1309,28],[1126,10,1310,16],[1126,15,1310,21],[1126,16,1310,22],[1127,12,1311,20],[1127,16,1311,24,"bypassAuthState"],[1127,31,1311,39],[1127,33,1311,41],[1128,14,1312,24],[1128,21,1312,31],[1128,22,1312,32],[1128,23,1312,33],[1128,24,1312,34],[1128,36,1312,46,"promise"],[1128,43,1312,53],[1128,44,1312,54],[1129,12,1313,20],[1130,12,1314,20,"_a"],[1130,14,1314,22],[1130,15,1314,23,"label"],[1130,20,1314,28],[1130,23,1314,31],[1130,24,1314,32],[1131,10,1315,16],[1131,15,1315,21],[1131,16,1315,22],[1132,12,1316,20,"_a"],[1132,14,1316,22],[1132,15,1316,23,"trys"],[1132,19,1316,27],[1132,20,1316,28,"push"],[1132,24,1316,32],[1132,25,1316,33],[1132,26,1316,34],[1132,27,1316,35],[1132,29,1316,37],[1132,30,1316,38],[1132,33,1316,42],[1132,34,1316,43],[1132,35,1316,44],[1132,36,1316,45],[1133,12,1317,20],[1133,19,1317,27],[1133,20,1317,28],[1133,21,1317,29],[1133,22,1317,30],[1133,33,1317,41,"promise"],[1133,40,1317,48],[1133,41,1317,49],[1134,10,1318,16],[1134,15,1318,21],[1134,16,1318,22],[1135,12,1318,24],[1135,19,1318,31],[1135,20,1318,32],[1135,21,1318,33],[1135,22,1318,34],[1135,34,1318,46,"_a"],[1135,36,1318,48],[1135,37,1318,49,"sent"],[1135,41,1318,53],[1135,42,1318,54],[1135,43,1318,55],[1135,44,1318,56],[1136,10,1319,16],[1136,15,1319,21],[1136,16,1319,22],[1137,12,1320,20,"e_1"],[1137,15,1320,23],[1137,18,1320,26,"_a"],[1137,20,1320,28],[1137,21,1320,29,"sent"],[1137,25,1320,33],[1137,26,1320,34],[1137,27,1320,35],[1138,12,1321,20],[1138,16,1321,24],[1138,18,1321,26,"e_1"],[1138,21,1321,29],[1138,33,1321,41,"util"],[1138,37,1321,45],[1138,38,1321,46,"FirebaseError"],[1138,51,1321,59],[1138,55,1321,63,"isUserInvalidated"],[1138,72,1321,80],[1138,73,1321,81,"e_1"],[1138,76,1321,84],[1138,77,1321,85],[1138,78,1321,86],[1138,80,1321,88],[1138,87,1321,95],[1138,88,1321,96],[1138,89,1321,97],[1138,90,1321,98],[1138,101,1321,109],[1138,102,1321,110],[1138,103,1321,111],[1139,12,1322,20],[1139,16,1322,24],[1139,18,1322,26,"user"],[1139,22,1322,30],[1139,23,1322,31,"auth"],[1139,27,1322,35],[1139,28,1322,36,"currentUser"],[1139,39,1322,47],[1139,44,1322,52,"user"],[1139,48,1322,56],[1139,49,1322,57],[1139,51,1322,59],[1139,58,1322,66],[1139,59,1322,67],[1139,60,1322,68],[1139,61,1322,69],[1139,72,1322,80],[1139,73,1322,81],[1139,74,1322,82],[1140,12,1323,20],[1140,19,1323,27],[1140,20,1323,28],[1140,21,1323,29],[1140,22,1323,30],[1140,33,1323,41,"user"],[1140,37,1323,45],[1140,38,1323,46,"auth"],[1140,42,1323,50],[1140,43,1323,51,"signOut"],[1140,50,1323,58],[1140,51,1323,59],[1140,52,1323,60],[1140,53,1323,61],[1141,10,1324,16],[1141,15,1324,21],[1141,16,1324,22],[1142,12,1325,20,"_a"],[1142,14,1325,22],[1142,15,1325,23,"sent"],[1142,19,1325,27],[1142,20,1325,28],[1142,21,1325,29],[1143,12,1326,20,"_a"],[1143,14,1326,22],[1143,15,1326,23,"label"],[1143,20,1326,28],[1143,23,1326,31],[1143,24,1326,32],[1144,10,1327,16],[1144,15,1327,21],[1144,16,1327,22],[1145,12,1327,24],[1145,18,1327,30,"e_1"],[1145,21,1327,33],[1146,10,1328,16],[1146,15,1328,21],[1146,16,1328,22],[1147,12,1328,24],[1147,19,1328,31],[1147,20,1328,32],[1147,21,1328,33],[1147,22,1328,34],[1147,33,1328,45],[1148,8,1329,12],[1149,6,1330,8],[1149,7,1330,9],[1149,8,1330,10],[1150,4,1331,4],[1150,5,1331,5],[1150,6,1331,6],[1151,2,1332,0],[1152,2,1333,0],[1152,11,1333,9,"isUserInvalidated"],[1152,28,1333,26,"isUserInvalidated"],[1152,29,1333,27,"_a"],[1152,31,1333,29],[1152,33,1333,31],[1153,4,1334,4],[1153,8,1334,8,"code"],[1153,12,1334,12],[1153,15,1334,15,"_a"],[1153,17,1334,17],[1153,18,1334,18,"code"],[1153,22,1334,22],[1154,4,1335,4],[1154,11,1335,12,"code"],[1154,15,1335,16],[1154,20,1335,21],[1154,27,1335,28],[1154,28,1335,29,"concat"],[1154,34,1335,35],[1154,35,1335,36],[1154,50,1335,51],[1154,51,1335,52],[1154,84,1335,85],[1154,85,1335,86],[1154,89,1336,8,"code"],[1154,93,1336,12],[1154,98,1336,17],[1154,105,1336,24],[1154,106,1336,25,"concat"],[1154,112,1336,31],[1154,113,1336,32],[1154,133,1336,52],[1154,134,1336,53],[1154,167,1336,86],[1154,168,1336,87],[1155,2,1337,0],[1157,2,1339,0],[1158,0,1340,0],[1159,0,1341,0],[1160,0,1342,0],[1161,0,1343,0],[1162,0,1344,0],[1163,0,1345,0],[1164,0,1346,0],[1165,0,1347,0],[1166,0,1348,0],[1167,0,1349,0],[1168,0,1350,0],[1169,0,1351,0],[1170,0,1352,0],[1171,0,1353,0],[1172,0,1354,0],[1173,2,1355,0],[1173,6,1355,4,"ProactiveRefresh"],[1173,22,1355,20],[1173,25,1355,23],[1173,38,1355,38],[1173,50,1355,50],[1174,4,1356,4],[1174,13,1356,13,"ProactiveRefresh"],[1174,29,1356,29,"ProactiveRefresh"],[1174,30,1356,30,"user"],[1174,34,1356,34],[1174,36,1356,36],[1175,6,1357,8],[1175,10,1357,12],[1175,11,1357,13,"user"],[1175,15,1357,17],[1175,18,1357,20,"user"],[1175,22,1357,24],[1176,6,1358,8],[1176,10,1358,12],[1176,11,1358,13,"isRunning"],[1176,20,1358,22],[1176,23,1358,25],[1176,28,1358,30],[1177,6,1359,8],[1178,6,1360,8],[1179,6,1361,8],[1180,6,1362,8],[1181,6,1363,8],[1181,10,1363,12],[1181,11,1363,13,"timerId"],[1181,18,1363,20],[1181,21,1363,23],[1181,25,1363,27],[1182,6,1364,8],[1182,10,1364,12],[1182,11,1364,13,"errorBackoff"],[1182,23,1364,25],[1182,26,1364,28],[1182,31,1364,33],[1182,32,1364,34],[1183,4,1365,4],[1184,4,1366,4,"ProactiveRefresh"],[1184,20,1366,20],[1184,21,1366,21,"prototype"],[1184,30,1366,30],[1184,31,1366,31,"_start"],[1184,37,1366,37],[1184,40,1366,40],[1184,52,1366,52],[1185,6,1367,8],[1185,10,1367,12],[1185,14,1367,16],[1185,15,1367,17,"isRunning"],[1185,24,1367,26],[1185,26,1367,28],[1186,8,1368,12],[1187,6,1369,8],[1188,6,1370,8],[1188,10,1370,12],[1188,11,1370,13,"isRunning"],[1188,20,1370,22],[1188,23,1370,25],[1188,27,1370,29],[1189,6,1371,8],[1189,10,1371,12],[1189,11,1371,13,"schedule"],[1189,19,1371,21],[1189,20,1371,22],[1189,21,1371,23],[1190,4,1372,4],[1190,5,1372,5],[1191,4,1373,4,"ProactiveRefresh"],[1191,20,1373,20],[1191,21,1373,21,"prototype"],[1191,30,1373,30],[1191,31,1373,31,"_stop"],[1191,36,1373,36],[1191,39,1373,39],[1191,51,1373,51],[1192,6,1374,8],[1192,10,1374,12],[1192,11,1374,13],[1192,15,1374,17],[1192,16,1374,18,"isRunning"],[1192,25,1374,27],[1192,27,1374,29],[1193,8,1375,12],[1194,6,1376,8],[1195,6,1377,8],[1195,10,1377,12],[1195,11,1377,13,"isRunning"],[1195,20,1377,22],[1195,23,1377,25],[1195,28,1377,30],[1196,6,1378,8],[1196,10,1378,12],[1196,14,1378,16],[1196,15,1378,17,"timerId"],[1196,22,1378,24],[1196,27,1378,29],[1196,31,1378,33],[1196,33,1378,35],[1197,8,1379,12,"clearTimeout"],[1197,20,1379,24],[1197,21,1379,25],[1197,25,1379,29],[1197,26,1379,30,"timerId"],[1197,33,1379,37],[1197,34,1379,38],[1198,6,1380,8],[1199,4,1381,4],[1199,5,1381,5],[1200,4,1382,4,"ProactiveRefresh"],[1200,20,1382,20],[1200,21,1382,21,"prototype"],[1200,30,1382,30],[1200,31,1382,31,"getInterval"],[1200,42,1382,42],[1200,45,1382,45],[1200,55,1382,55,"wasError"],[1200,63,1382,63],[1200,65,1382,65],[1201,6,1383,8],[1201,10,1383,12,"_a"],[1201,12,1383,14],[1202,6,1384,8],[1202,10,1384,12,"wasError"],[1202,18,1384,20],[1202,20,1384,22],[1203,8,1385,12],[1203,12,1385,16,"interval"],[1203,20,1385,24],[1203,23,1385,27],[1203,27,1385,31],[1203,28,1385,32,"errorBackoff"],[1203,40,1385,44],[1204,8,1386,12],[1204,12,1386,16],[1204,13,1386,17,"errorBackoff"],[1204,25,1386,29],[1204,28,1386,32,"Math"],[1204,32,1386,36],[1204,33,1386,37,"min"],[1204,36,1386,40],[1204,37,1386,41],[1204,41,1386,45],[1204,42,1386,46,"errorBackoff"],[1204,54,1386,58],[1204,57,1386,61],[1204,58,1386,62],[1204,60,1386,64],[1204,66,1386,70],[1204,67,1386,71],[1204,99,1386,103],[1204,100,1386,104],[1205,8,1387,12],[1205,15,1387,19,"interval"],[1205,23,1387,27],[1206,6,1388,8],[1206,7,1388,9],[1206,13,1389,13],[1207,8,1390,12],[1208,8,1391,12],[1208,12,1391,16],[1208,13,1391,17,"errorBackoff"],[1208,25,1391,29],[1208,28,1391,32],[1208,33,1391,37],[1208,34,1391,38],[1209,8,1392,12],[1209,12,1392,16,"expTime"],[1209,19,1392,23],[1209,22,1392,26],[1209,23,1392,27,"_a"],[1209,25,1392,29],[1209,28,1392,32],[1209,32,1392,36],[1209,33,1392,37,"user"],[1209,37,1392,41],[1209,38,1392,42,"stsTokenManager"],[1209,53,1392,57],[1209,54,1392,58,"expirationTime"],[1209,68,1392,72],[1209,74,1392,78],[1209,78,1392,82],[1209,82,1392,86,"_a"],[1209,84,1392,88],[1209,89,1392,88,"undefined"],[1209,98,1392,99],[1209,101,1392,102,"_a"],[1209,103,1392,104],[1209,106,1392,107],[1209,107,1392,108],[1210,8,1393,12],[1210,12,1393,16,"interval"],[1210,20,1393,24],[1210,23,1393,27,"expTime"],[1210,30,1393,34],[1210,33,1393,37,"Date"],[1210,37,1393,41],[1210,38,1393,42,"now"],[1210,41,1393,45],[1210,42,1393,46],[1210,43,1393,47],[1210,46,1393,50],[1210,52,1393,56],[1210,53,1393,57],[1211,8,1394,12],[1211,15,1394,19,"Math"],[1211,19,1394,23],[1211,20,1394,24,"max"],[1211,23,1394,27],[1211,24,1394,28],[1211,25,1394,29],[1211,27,1394,31,"interval"],[1211,35,1394,39],[1211,36,1394,40],[1212,6,1395,8],[1213,4,1396,4],[1213,5,1396,5],[1214,4,1397,4,"ProactiveRefresh"],[1214,20,1397,20],[1214,21,1397,21,"prototype"],[1214,30,1397,30],[1214,31,1397,31,"schedule"],[1214,39,1397,39],[1214,42,1397,42],[1214,52,1397,52,"wasError"],[1214,60,1397,60],[1214,62,1397,62],[1215,6,1398,8],[1215,10,1398,12,"_this"],[1215,15,1398,17],[1215,18,1398,20],[1215,22,1398,24],[1216,6,1399,8],[1216,10,1399,12,"wasError"],[1216,18,1399,20],[1216,23,1399,20,"undefined"],[1216,32,1399,31],[1216,34,1399,33],[1217,8,1399,35,"wasError"],[1217,16,1399,43],[1217,19,1399,46],[1217,24,1399,51],[1218,6,1399,53],[1219,6,1400,8],[1219,10,1400,12],[1219,11,1400,13],[1219,15,1400,17],[1219,16,1400,18,"isRunning"],[1219,25,1400,27],[1219,27,1400,29],[1220,8,1401,12],[1221,8,1402,12],[1222,6,1403,8],[1223,6,1404,8],[1223,10,1404,12,"interval"],[1223,18,1404,20],[1223,21,1404,23],[1223,25,1404,27],[1223,26,1404,28,"getInterval"],[1223,37,1404,39],[1223,38,1404,40,"wasError"],[1223,46,1404,48],[1223,47,1404,49],[1224,6,1405,8],[1224,10,1405,12],[1224,11,1405,13,"timerId"],[1224,18,1405,20],[1224,21,1405,23,"setTimeout"],[1224,31,1405,33],[1224,32,1405,34],[1224,44,1405,46],[1225,8,1405,48],[1225,15,1405,55,"tslib"],[1225,20,1405,60],[1225,21,1405,61,"__awaiter"],[1225,30,1405,70],[1225,31,1405,71,"_this"],[1225,36,1405,76],[1225,38,1405,76,"undefined"],[1225,47,1405,76],[1225,49,1405,76,"undefined"],[1225,58,1405,76],[1225,60,1405,94],[1225,72,1405,106],[1226,10,1406,12],[1226,17,1406,19,"tslib"],[1226,22,1406,24],[1226,23,1406,25,"__generator"],[1226,34,1406,36],[1226,35,1406,37],[1226,39,1406,41],[1226,41,1406,43],[1226,51,1406,53,"_a"],[1226,53,1406,55],[1226,55,1406,57],[1227,12,1407,16],[1227,20,1407,24,"_a"],[1227,22,1407,26],[1227,23,1407,27,"label"],[1227,28,1407,32],[1228,14,1408,20],[1228,19,1408,25],[1228,20,1408,26],[1229,16,1408,28],[1229,23,1408,35],[1229,24,1408,36],[1229,25,1408,37],[1229,26,1408,38],[1229,37,1408,49],[1229,41,1408,53],[1229,42,1408,54,"iteration"],[1229,51,1408,63],[1229,52,1408,64],[1229,53,1408,65],[1229,54,1408,66],[1230,14,1409,20],[1230,19,1409,25],[1230,20,1409,26],[1231,16,1410,24,"_a"],[1231,18,1410,26],[1231,19,1410,27,"sent"],[1231,23,1410,31],[1231,24,1410,32],[1231,25,1410,33],[1232,16,1411,24],[1232,23,1411,31],[1232,24,1411,32],[1232,25,1411,33],[1232,26,1411,34],[1232,37,1411,45],[1233,12,1412,16],[1234,10,1413,12],[1234,11,1413,13],[1234,12,1413,14],[1235,8,1414,8],[1235,9,1414,9],[1235,10,1414,10],[1236,6,1414,12],[1236,7,1414,13],[1236,9,1414,15,"interval"],[1236,17,1414,23],[1236,18,1414,24],[1237,4,1415,4],[1237,5,1415,5],[1238,4,1416,4,"ProactiveRefresh"],[1238,20,1416,20],[1238,21,1416,21,"prototype"],[1238,30,1416,30],[1238,31,1416,31,"iteration"],[1238,40,1416,40],[1238,43,1416,43],[1238,55,1416,55],[1239,6,1417,8],[1239,13,1417,15,"tslib"],[1239,18,1417,20],[1239,19,1417,21,"__awaiter"],[1239,28,1417,30],[1239,29,1417,31],[1239,33,1417,35],[1239,35,1417,35,"undefined"],[1239,44,1417,35],[1239,46,1417,35,"undefined"],[1239,55,1417,35],[1239,57,1417,53],[1239,69,1417,65],[1240,8,1418,12],[1240,12,1418,16,"e_1"],[1240,15,1418,19],[1241,8,1419,12],[1241,15,1419,19,"tslib"],[1241,20,1419,24],[1241,21,1419,25,"__generator"],[1241,32,1419,36],[1241,33,1419,37],[1241,37,1419,41],[1241,39,1419,43],[1241,49,1419,53,"_a"],[1241,51,1419,55],[1241,53,1419,57],[1242,10,1420,16],[1242,18,1420,24,"_a"],[1242,20,1420,26],[1242,21,1420,27,"label"],[1242,26,1420,32],[1243,12,1421,20],[1243,17,1421,25],[1243,18,1421,26],[1244,14,1422,24,"_a"],[1244,16,1422,26],[1244,17,1422,27,"trys"],[1244,21,1422,31],[1244,22,1422,32,"push"],[1244,26,1422,36],[1244,27,1422,37],[1244,28,1422,38],[1244,29,1422,39],[1244,31,1422,41],[1244,32,1422,42],[1244,35,1422,46],[1244,36,1422,47],[1244,37,1422,48],[1244,38,1422,49],[1245,14,1423,24],[1245,21,1423,31],[1245,22,1423,32],[1245,23,1423,33],[1245,24,1423,34],[1245,35,1423,45],[1245,39,1423,49],[1245,40,1423,50,"user"],[1245,44,1423,54],[1245,45,1423,55,"getIdToken"],[1245,55,1423,65],[1245,56,1423,66],[1245,60,1423,70],[1245,61,1423,71],[1245,62,1423,72],[1246,12,1424,20],[1246,17,1424,25],[1246,18,1424,26],[1247,14,1425,24,"_a"],[1247,16,1425,26],[1247,17,1425,27,"sent"],[1247,21,1425,31],[1247,22,1425,32],[1247,23,1425,33],[1248,14,1426,24],[1248,21,1426,31],[1248,22,1426,32],[1248,23,1426,33],[1248,24,1426,34],[1248,35,1426,45],[1248,36,1426,46],[1248,37,1426,47],[1249,12,1427,20],[1249,17,1427,25],[1249,18,1427,26],[1250,14,1428,24,"e_1"],[1250,17,1428,27],[1250,20,1428,30,"_a"],[1250,22,1428,32],[1250,23,1428,33,"sent"],[1250,27,1428,37],[1250,28,1428,38],[1250,29,1428,39],[1251,14,1429,24],[1252,14,1430,24],[1252,18,1430,28],[1252,19,1430,29,"e_1"],[1252,22,1430,32],[1252,27,1430,37],[1252,31,1430,41],[1252,35,1430,45,"e_1"],[1252,38,1430,48],[1252,43,1430,48,"undefined"],[1252,52,1430,59],[1252,55,1430,59,"undefined"],[1252,64,1430,59],[1252,67,1430,71,"e_1"],[1252,70,1430,74],[1252,71,1430,75,"code"],[1252,75,1430,79],[1252,81,1431,28],[1252,88,1431,35],[1252,89,1431,36,"concat"],[1252,95,1431,42],[1252,96,1431,43],[1252,120,1431,67],[1252,121,1431,68],[1252,163,1431,110],[1252,164,1431,111],[1252,166,1431,113],[1253,16,1432,28],[1253,20,1432,32],[1253,21,1432,33,"schedule"],[1253,29,1432,41],[1253,30,1432,42],[1253,44,1432,57],[1253,48,1432,61],[1253,49,1432,62],[1254,14,1433,24],[1255,14,1434,24],[1255,21,1434,31],[1255,22,1434,32],[1255,23,1434,33],[1255,24,1434,34],[1255,35,1434,45],[1256,12,1435,20],[1256,17,1435,25],[1256,18,1435,26],[1257,14,1436,24],[1257,18,1436,28],[1257,19,1436,29,"schedule"],[1257,27,1436,37],[1257,28,1436,38],[1257,29,1436,39],[1258,14,1437,24],[1258,21,1437,31],[1258,22,1437,32],[1258,23,1437,33],[1258,24,1437,34],[1258,35,1437,45],[1259,10,1438,16],[1260,8,1439,12],[1260,9,1439,13],[1260,10,1439,14],[1261,6,1440,8],[1261,7,1440,9],[1261,8,1440,10],[1262,4,1441,4],[1262,5,1441,5],[1263,4,1442,4],[1263,11,1442,11,"ProactiveRefresh"],[1263,27,1442,27],[1264,2,1443,0],[1264,3,1443,1],[1264,4,1443,2],[1264,5,1443,4],[1266,2,1445,0],[1267,0,1446,0],[1268,0,1447,0],[1269,0,1448,0],[1270,0,1449,0],[1271,0,1450,0],[1272,0,1451,0],[1273,0,1452,0],[1274,0,1453,0],[1275,0,1454,0],[1276,0,1455,0],[1277,0,1456,0],[1278,0,1457,0],[1279,0,1458,0],[1280,0,1459,0],[1281,0,1460,0],[1282,2,1461,0],[1282,6,1461,4,"UserMetadata"],[1282,18,1461,16],[1282,21,1461,19],[1282,34,1461,34],[1282,46,1461,46],[1283,4,1462,4],[1283,13,1462,13,"UserMetadata"],[1283,25,1462,25,"UserMetadata"],[1283,26,1462,26,"createdAt"],[1283,35,1462,35],[1283,37,1462,37,"lastLoginAt"],[1283,48,1462,48],[1283,50,1462,50],[1284,6,1463,8],[1284,10,1463,12],[1284,11,1463,13,"createdAt"],[1284,20,1463,22],[1284,23,1463,25,"createdAt"],[1284,32,1463,34],[1285,6,1464,8],[1285,10,1464,12],[1285,11,1464,13,"lastLoginAt"],[1285,22,1464,24],[1285,25,1464,27,"lastLoginAt"],[1285,36,1464,38],[1286,6,1465,8],[1286,10,1465,12],[1286,11,1465,13,"_initializeTime"],[1286,26,1465,28],[1286,27,1465,29],[1286,28,1465,30],[1287,4,1466,4],[1288,4,1467,4,"UserMetadata"],[1288,16,1467,16],[1288,17,1467,17,"prototype"],[1288,26,1467,26],[1288,27,1467,27,"_initializeTime"],[1288,42,1467,42],[1288,45,1467,45],[1288,57,1467,57],[1289,6,1468,8],[1289,10,1468,12],[1289,11,1468,13,"lastSignInTime"],[1289,25,1468,27],[1289,28,1468,30,"utcTimestampToDateString"],[1289,52,1468,54],[1289,53,1468,55],[1289,57,1468,59],[1289,58,1468,60,"lastLoginAt"],[1289,69,1468,71],[1289,70,1468,72],[1290,6,1469,8],[1290,10,1469,12],[1290,11,1469,13,"creationTime"],[1290,23,1469,25],[1290,26,1469,28,"utcTimestampToDateString"],[1290,50,1469,52],[1290,51,1469,53],[1290,55,1469,57],[1290,56,1469,58,"createdAt"],[1290,65,1469,67],[1290,66,1469,68],[1291,4,1470,4],[1291,5,1470,5],[1292,4,1471,4,"UserMetadata"],[1292,16,1471,16],[1292,17,1471,17,"prototype"],[1292,26,1471,26],[1292,27,1471,27,"_copy"],[1292,32,1471,32],[1292,35,1471,35],[1292,45,1471,45,"metadata"],[1292,53,1471,53],[1292,55,1471,55],[1293,6,1472,8],[1293,10,1472,12],[1293,11,1472,13,"createdAt"],[1293,20,1472,22],[1293,23,1472,25,"metadata"],[1293,31,1472,33],[1293,32,1472,34,"createdAt"],[1293,41,1472,43],[1294,6,1473,8],[1294,10,1473,12],[1294,11,1473,13,"lastLoginAt"],[1294,22,1473,24],[1294,25,1473,27,"metadata"],[1294,33,1473,35],[1294,34,1473,36,"lastLoginAt"],[1294,45,1473,47],[1295,6,1474,8],[1295,10,1474,12],[1295,11,1474,13,"_initializeTime"],[1295,26,1474,28],[1295,27,1474,29],[1295,28,1474,30],[1296,4,1475,4],[1296,5,1475,5],[1297,4,1476,4,"UserMetadata"],[1297,16,1476,16],[1297,17,1476,17,"prototype"],[1297,26,1476,26],[1297,27,1476,27,"toJSON"],[1297,33,1476,33],[1297,36,1476,36],[1297,48,1476,48],[1298,6,1477,8],[1298,13,1477,15],[1299,8,1478,12,"createdAt"],[1299,17,1478,21],[1299,19,1478,23],[1299,23,1478,27],[1299,24,1478,28,"createdAt"],[1299,33,1478,37],[1300,8,1479,12,"lastLoginAt"],[1300,19,1479,23],[1300,21,1479,25],[1300,25,1479,29],[1300,26,1479,30,"lastLoginAt"],[1301,6,1480,8],[1301,7,1480,9],[1302,4,1481,4],[1302,5,1481,5],[1303,4,1482,4],[1303,11,1482,11,"UserMetadata"],[1303,23,1482,23],[1304,2,1483,0],[1304,3,1483,1],[1304,4,1483,2],[1304,5,1483,4],[1306,2,1485,0],[1307,0,1486,0],[1308,0,1487,0],[1309,0,1488,0],[1310,0,1489,0],[1311,0,1490,0],[1312,0,1491,0],[1313,0,1492,0],[1314,0,1493,0],[1315,0,1494,0],[1316,0,1495,0],[1317,0,1496,0],[1318,0,1497,0],[1319,0,1498,0],[1320,0,1499,0],[1321,0,1500,0],[1322,2,1501,0],[1322,11,1501,9,"_reloadWithoutSaving"],[1322,31,1501,29,"_reloadWithoutSaving"],[1322,32,1501,30,"user"],[1322,36,1501,34],[1322,38,1501,36],[1323,4,1502,4],[1323,8,1502,8,"_a"],[1323,10,1502,10],[1324,4,1503,4],[1324,11,1503,11,"tslib"],[1324,16,1503,16],[1324,17,1503,17,"__awaiter"],[1324,26,1503,26],[1324,27,1503,27],[1324,31,1503,31],[1324,33,1503,31,"undefined"],[1324,42,1503,31],[1324,44,1503,31,"undefined"],[1324,53,1503,31],[1324,55,1503,49],[1324,67,1503,61],[1325,6,1504,8],[1325,10,1504,12,"auth"],[1325,14,1504,16],[1325,16,1504,18,"idToken"],[1325,23,1504,25],[1325,25,1504,27,"response"],[1325,33,1504,35],[1325,35,1504,37,"coreAccount"],[1325,46,1504,48],[1325,48,1504,50,"newProviderData"],[1325,63,1504,65],[1325,65,1504,67,"providerData"],[1325,77,1504,79],[1325,79,1504,81,"oldIsAnonymous"],[1325,93,1504,95],[1325,95,1504,97,"newIsAnonymous"],[1325,109,1504,111],[1325,111,1504,113,"isAnonymous"],[1325,122,1504,124],[1325,124,1504,126,"updates"],[1325,131,1504,133],[1326,6,1505,8],[1326,13,1505,15,"tslib"],[1326,18,1505,20],[1326,19,1505,21,"__generator"],[1326,30,1505,32],[1326,31,1505,33],[1326,35,1505,37],[1326,37,1505,39],[1326,47,1505,49,"_b"],[1326,49,1505,51],[1326,51,1505,53],[1327,8,1506,12],[1327,16,1506,20,"_b"],[1327,18,1506,22],[1327,19,1506,23,"label"],[1327,24,1506,28],[1328,10,1507,16],[1328,15,1507,21],[1328,16,1507,22],[1329,12,1508,20,"auth"],[1329,16,1508,24],[1329,19,1508,27,"user"],[1329,23,1508,31],[1329,24,1508,32,"auth"],[1329,28,1508,36],[1330,12,1509,20],[1330,19,1509,27],[1330,20,1509,28],[1330,21,1509,29],[1330,22,1509,30],[1330,33,1509,41,"user"],[1330,37,1509,45],[1330,38,1509,46,"getIdToken"],[1330,48,1509,56],[1330,49,1509,57],[1330,50,1509,58],[1330,51,1509,59],[1331,10,1510,16],[1331,15,1510,21],[1331,16,1510,22],[1332,12,1511,20,"idToken"],[1332,19,1511,27],[1332,22,1511,30,"_b"],[1332,24,1511,32],[1332,25,1511,33,"sent"],[1332,29,1511,37],[1332,30,1511,38],[1332,31,1511,39],[1333,12,1512,20],[1333,19,1512,27],[1333,20,1512,28],[1333,21,1512,29],[1333,22,1512,30],[1333,33,1512,41,"_logoutIfInvalidated"],[1333,53,1512,61],[1333,54,1512,62,"user"],[1333,58,1512,66],[1333,60,1512,68,"getAccountInfo"],[1333,74,1512,82],[1333,75,1512,83,"auth"],[1333,79,1512,87],[1333,81,1512,89],[1334,14,1512,91,"idToken"],[1334,21,1512,98],[1334,23,1512,100,"idToken"],[1335,12,1512,108],[1335,13,1512,109],[1335,14,1512,110],[1335,15,1512,111],[1335,16,1512,112],[1336,10,1513,16],[1336,15,1513,21],[1336,16,1513,22],[1337,12,1514,20,"response"],[1337,20,1514,28],[1337,23,1514,31,"_b"],[1337,25,1514,33],[1337,26,1514,34,"sent"],[1337,30,1514,38],[1337,31,1514,39],[1337,32,1514,40],[1338,12,1515,20,"_assert"],[1338,19,1515,27],[1338,20,1515,28,"response"],[1338,28,1515,36],[1338,33,1515,41],[1338,37,1515,45],[1338,41,1515,49,"response"],[1338,49,1515,57],[1338,54,1515,57,"undefined"],[1338,63,1515,68],[1338,66,1515,68,"undefined"],[1338,75,1515,68],[1338,78,1515,80,"response"],[1338,86,1515,88],[1338,87,1515,89,"users"],[1338,92,1515,94],[1338,93,1515,95,"length"],[1338,99,1515,101],[1338,101,1515,103,"auth"],[1338,105,1515,107],[1338,107,1515,109],[1338,123,1515,125],[1338,124,1515,126],[1338,158,1515,160],[1338,159,1515,161],[1339,12,1516,20,"coreAccount"],[1339,23,1516,31],[1339,26,1516,34,"response"],[1339,34,1516,42],[1339,35,1516,43,"users"],[1339,40,1516,48],[1339,41,1516,49],[1339,42,1516,50],[1339,43,1516,51],[1340,12,1517,20,"user"],[1340,16,1517,24],[1340,17,1517,25,"_notifyReloadListener"],[1340,38,1517,46],[1340,39,1517,47,"coreAccount"],[1340,50,1517,58],[1340,51,1517,59],[1341,12,1518,20,"newProviderData"],[1341,27,1518,35],[1341,30,1518,38],[1341,31,1518,39],[1341,32,1518,40,"_a"],[1341,34,1518,42],[1341,37,1518,45,"coreAccount"],[1341,48,1518,56],[1341,49,1518,57,"providerUserInfo"],[1341,65,1518,73],[1341,71,1518,79],[1341,75,1518,83],[1341,79,1518,87,"_a"],[1341,81,1518,89],[1341,86,1518,89,"undefined"],[1341,95,1518,100],[1341,98,1518,100,"undefined"],[1341,107,1518,100],[1341,110,1518,112,"_a"],[1341,112,1518,114],[1341,113,1518,115,"length"],[1341,119,1518,121],[1341,123,1519,26,"extractProviderData"],[1341,142,1519,45],[1341,143,1519,46,"coreAccount"],[1341,154,1519,57],[1341,155,1519,58,"providerUserInfo"],[1341,171,1519,74],[1341,172,1519,75],[1341,175,1520,26],[1341,177,1520,28],[1342,12,1521,20,"providerData"],[1342,24,1521,32],[1342,27,1521,35,"mergeProviderData"],[1342,44,1521,52],[1342,45,1521,53,"user"],[1342,49,1521,57],[1342,50,1521,58,"providerData"],[1342,62,1521,70],[1342,64,1521,72,"newProviderData"],[1342,79,1521,87],[1342,80,1521,88],[1343,12,1522,20,"oldIsAnonymous"],[1343,26,1522,34],[1343,29,1522,37,"user"],[1343,33,1522,41],[1343,34,1522,42,"isAnonymous"],[1343,45,1522,53],[1344,12,1523,20,"newIsAnonymous"],[1344,26,1523,34],[1344,29,1523,37],[1344,31,1523,39,"user"],[1344,35,1523,43],[1344,36,1523,44,"email"],[1344,41,1523,49],[1344,45,1523,53,"coreAccount"],[1344,56,1523,64],[1344,57,1523,65,"passwordHash"],[1344,69,1523,77],[1344,70,1523,78],[1344,74,1523,82],[1344,76,1523,84,"providerData"],[1344,88,1523,96],[1344,93,1523,101],[1344,97,1523,105],[1344,101,1523,109,"providerData"],[1344,113,1523,121],[1344,118,1523,121,"undefined"],[1344,127,1523,132],[1344,130,1523,132,"undefined"],[1344,139,1523,132],[1344,142,1523,144,"providerData"],[1344,154,1523,156],[1344,155,1523,157,"length"],[1344,161,1523,163],[1344,162,1523,164],[1345,12,1524,20,"isAnonymous"],[1345,23,1524,31],[1345,26,1524,34],[1345,27,1524,35,"oldIsAnonymous"],[1345,41,1524,49],[1345,44,1524,52],[1345,49,1524,57],[1345,52,1524,60,"newIsAnonymous"],[1345,66,1524,74],[1346,12,1525,20,"updates"],[1346,19,1525,27],[1346,22,1525,30],[1347,14,1526,24,"uid"],[1347,17,1526,27],[1347,19,1526,29,"coreAccount"],[1347,30,1526,40],[1347,31,1526,41,"localId"],[1347,38,1526,48],[1348,14,1527,24,"displayName"],[1348,25,1527,35],[1348,27,1527,37,"coreAccount"],[1348,38,1527,48],[1348,39,1527,49,"displayName"],[1348,50,1527,60],[1348,54,1527,64],[1348,58,1527,68],[1349,14,1528,24,"photoURL"],[1349,22,1528,32],[1349,24,1528,34,"coreAccount"],[1349,35,1528,45],[1349,36,1528,46,"photoUrl"],[1349,44,1528,54],[1349,48,1528,58],[1349,52,1528,62],[1350,14,1529,24,"email"],[1350,19,1529,29],[1350,21,1529,31,"coreAccount"],[1350,32,1529,42],[1350,33,1529,43,"email"],[1350,38,1529,48],[1350,42,1529,52],[1350,46,1529,56],[1351,14,1530,24,"emailVerified"],[1351,27,1530,37],[1351,29,1530,39,"coreAccount"],[1351,40,1530,50],[1351,41,1530,51,"emailVerified"],[1351,54,1530,64],[1351,58,1530,68],[1351,63,1530,73],[1352,14,1531,24,"phoneNumber"],[1352,25,1531,35],[1352,27,1531,37,"coreAccount"],[1352,38,1531,48],[1352,39,1531,49,"phoneNumber"],[1352,50,1531,60],[1352,54,1531,64],[1352,58,1531,68],[1353,14,1532,24,"tenantId"],[1353,22,1532,32],[1353,24,1532,34,"coreAccount"],[1353,35,1532,45],[1353,36,1532,46,"tenantId"],[1353,44,1532,54],[1353,48,1532,58],[1353,52,1532,62],[1354,14,1533,24,"providerData"],[1354,26,1533,36],[1354,28,1533,38,"providerData"],[1354,40,1533,50],[1355,14,1534,24,"metadata"],[1355,22,1534,32],[1355,24,1534,34],[1355,28,1534,38,"UserMetadata"],[1355,40,1534,50],[1355,41,1534,51,"coreAccount"],[1355,52,1534,62],[1355,53,1534,63,"createdAt"],[1355,62,1534,72],[1355,64,1534,74,"coreAccount"],[1355,75,1534,85],[1355,76,1534,86,"lastLoginAt"],[1355,87,1534,97],[1355,88,1534,98],[1356,14,1535,24,"isAnonymous"],[1356,25,1535,35],[1356,27,1535,37,"isAnonymous"],[1357,12,1536,20],[1357,13,1536,21],[1358,12,1537,20,"Object"],[1358,18,1537,26],[1358,19,1537,27,"assign"],[1358,25,1537,33],[1358,26,1537,34,"user"],[1358,30,1537,38],[1358,32,1537,40,"updates"],[1358,39,1537,47],[1358,40,1537,48],[1359,12,1538,20],[1359,19,1538,27],[1359,20,1538,28],[1359,21,1538,29],[1359,22,1538,30],[1359,33,1538,41],[1360,8,1539,12],[1361,6,1540,8],[1361,7,1540,9],[1361,8,1540,10],[1362,4,1541,4],[1362,5,1541,5],[1362,6,1541,6],[1363,2,1542,0],[1364,2,1543,0],[1365,0,1544,0],[1366,0,1545,0],[1367,0,1546,0],[1368,0,1547,0],[1369,0,1548,0],[1370,0,1549,0],[1371,2,1550,0],[1371,11,1550,9,"reload"],[1371,17,1550,15,"reload"],[1371,18,1550,16,"user"],[1371,22,1550,20],[1371,24,1550,22],[1372,4,1551,4],[1372,11,1551,11,"tslib"],[1372,16,1551,16],[1372,17,1551,17,"__awaiter"],[1372,26,1551,26],[1372,27,1551,27],[1372,31,1551,31],[1372,33,1551,31,"undefined"],[1372,42,1551,31],[1372,44,1551,31,"undefined"],[1372,53,1551,31],[1372,55,1551,49],[1372,67,1551,61],[1373,6,1552,8],[1373,10,1552,12,"userInternal"],[1373,22,1552,24],[1374,6,1553,8],[1374,13,1553,15,"tslib"],[1374,18,1553,20],[1374,19,1553,21,"__generator"],[1374,30,1553,32],[1374,31,1553,33],[1374,35,1553,37],[1374,37,1553,39],[1374,47,1553,49,"_a"],[1374,49,1553,51],[1374,51,1553,53],[1375,8,1554,12],[1375,16,1554,20,"_a"],[1375,18,1554,22],[1375,19,1554,23,"label"],[1375,24,1554,28],[1376,10,1555,16],[1376,15,1555,21],[1376,16,1555,22],[1377,12,1556,20,"userInternal"],[1377,24,1556,32],[1377,27,1556,35,"util"],[1377,31,1556,39],[1377,32,1556,40,"getModularInstance"],[1377,50,1556,58],[1377,51,1556,59,"user"],[1377,55,1556,63],[1377,56,1556,64],[1378,12,1557,20],[1378,19,1557,27],[1378,20,1557,28],[1378,21,1557,29],[1378,22,1557,30],[1378,33,1557,41,"_reloadWithoutSaving"],[1378,53,1557,61],[1378,54,1557,62,"userInternal"],[1378,66,1557,74],[1378,67,1557,75],[1378,68,1557,76],[1379,10,1558,16],[1379,15,1558,21],[1379,16,1558,22],[1380,12,1559,20,"_a"],[1380,14,1559,22],[1380,15,1559,23,"sent"],[1380,19,1559,27],[1380,20,1559,28],[1380,21,1559,29],[1381,12,1560,20],[1382,12,1561,20],[1383,12,1562,20],[1384,12,1563,20],[1384,19,1563,27],[1384,20,1563,28],[1384,21,1563,29],[1384,22,1563,30],[1384,33,1563,41,"userInternal"],[1384,45,1563,53],[1384,46,1563,54,"auth"],[1384,50,1563,58],[1384,51,1563,59,"_persistUserIfCurrent"],[1384,72,1563,80],[1384,73,1563,81,"userInternal"],[1384,85,1563,93],[1384,86,1563,94],[1384,87,1563,95],[1385,10,1564,16],[1385,15,1564,21],[1385,16,1564,22],[1386,12,1565,20],[1387,12,1566,20],[1388,12,1567,20],[1389,12,1568,20,"_a"],[1389,14,1568,22],[1389,15,1568,23,"sent"],[1389,19,1568,27],[1389,20,1568,28],[1389,21,1568,29],[1390,12,1569,20,"userInternal"],[1390,24,1569,32],[1390,25,1569,33,"auth"],[1390,29,1569,37],[1390,30,1569,38,"_notifyListenersIfCurrent"],[1390,55,1569,63],[1390,56,1569,64,"userInternal"],[1390,68,1569,76],[1390,69,1569,77],[1391,12,1570,20],[1391,19,1570,27],[1391,20,1570,28],[1391,21,1570,29],[1391,22,1570,30],[1391,33,1570,41],[1392,8,1571,12],[1393,6,1572,8],[1393,7,1572,9],[1393,8,1572,10],[1394,4,1573,4],[1394,5,1573,5],[1394,6,1573,6],[1395,2,1574,0],[1396,2,1575,0],[1396,11,1575,9,"mergeProviderData"],[1396,28,1575,26,"mergeProviderData"],[1396,29,1575,27,"original"],[1396,37,1575,35],[1396,39,1575,37,"newData"],[1396,46,1575,44],[1396,48,1575,46],[1397,4,1576,4],[1397,8,1576,8,"deduped"],[1397,15,1576,15],[1397,18,1576,18,"original"],[1397,26,1576,26],[1397,27,1576,27,"filter"],[1397,33,1576,33],[1397,34,1576,34],[1397,44,1576,44,"o"],[1397,45,1576,45],[1397,47,1576,47],[1398,6,1576,49],[1398,13,1576,56],[1398,14,1576,57,"newData"],[1398,21,1576,64],[1398,22,1576,65,"some"],[1398,26,1576,69],[1398,27,1576,70],[1398,37,1576,80,"n"],[1398,38,1576,81],[1398,40,1576,83],[1399,8,1576,85],[1399,15,1576,92,"n"],[1399,16,1576,93],[1399,17,1576,94,"providerId"],[1399,27,1576,104],[1399,32,1576,109,"o"],[1399,33,1576,110],[1399,34,1576,111,"providerId"],[1399,44,1576,121],[1400,6,1576,123],[1400,7,1576,124],[1400,8,1576,125],[1401,4,1576,127],[1401,5,1576,128],[1401,6,1576,129],[1402,4,1577,4],[1402,11,1577,11,"tslib"],[1402,16,1577,16],[1402,17,1577,17,"__spreadArray"],[1402,30,1577,30],[1402,31,1577,31,"tslib"],[1402,36,1577,36],[1402,37,1577,37,"__spreadArray"],[1402,50,1577,50],[1402,51,1577,51],[1402,53,1577,53],[1402,55,1577,55,"deduped"],[1402,62,1577,62],[1402,64,1577,64],[1402,68,1577,68],[1402,69,1577,69],[1402,71,1577,71,"newData"],[1402,78,1577,78],[1402,80,1577,80],[1402,84,1577,84],[1402,85,1577,85],[1403,2,1578,0],[1404,2,1579,0],[1404,11,1579,9,"extractProviderData"],[1404,30,1579,28,"extractProviderData"],[1404,31,1579,29,"providers"],[1404,40,1579,38],[1404,42,1579,40],[1405,4,1580,4],[1405,11,1580,11,"providers"],[1405,20,1580,20],[1405,21,1580,21,"map"],[1405,24,1580,24],[1405,25,1580,25],[1405,35,1580,35,"_a"],[1405,37,1580,37],[1405,39,1580,39],[1406,6,1581,8],[1406,10,1581,12,"providerId"],[1406,20,1581,22],[1406,23,1581,25,"_a"],[1406,25,1581,27],[1406,26,1581,28,"providerId"],[1406,36,1581,38],[1407,8,1581,40,"provider"],[1407,16,1581,48],[1407,19,1581,51,"tslib"],[1407,24,1581,56],[1407,25,1581,57,"__rest"],[1407,31,1581,63],[1407,32,1581,64,"_a"],[1407,34,1581,66],[1407,36,1581,68],[1407,37,1581,69],[1407,49,1581,81],[1407,50,1581,82],[1407,51,1581,83],[1408,6,1582,8],[1408,13,1582,15],[1409,8,1583,12,"providerId"],[1409,18,1583,22],[1409,20,1583,24,"providerId"],[1409,30,1583,34],[1410,8,1584,12,"uid"],[1410,11,1584,15],[1410,13,1584,17,"provider"],[1410,21,1584,25],[1410,22,1584,26,"rawId"],[1410,27,1584,31],[1410,31,1584,35],[1410,33,1584,37],[1411,8,1585,12,"displayName"],[1411,19,1585,23],[1411,21,1585,25,"provider"],[1411,29,1585,33],[1411,30,1585,34,"displayName"],[1411,41,1585,45],[1411,45,1585,49],[1411,49,1585,53],[1412,8,1586,12,"email"],[1412,13,1586,17],[1412,15,1586,19,"provider"],[1412,23,1586,27],[1412,24,1586,28,"email"],[1412,29,1586,33],[1412,33,1586,37],[1412,37,1586,41],[1413,8,1587,12,"phoneNumber"],[1413,19,1587,23],[1413,21,1587,25,"provider"],[1413,29,1587,33],[1413,30,1587,34,"phoneNumber"],[1413,41,1587,45],[1413,45,1587,49],[1413,49,1587,53],[1414,8,1588,12,"photoURL"],[1414,16,1588,20],[1414,18,1588,22,"provider"],[1414,26,1588,30],[1414,27,1588,31,"photoUrl"],[1414,35,1588,39],[1414,39,1588,43],[1415,6,1589,8],[1415,7,1589,9],[1416,4,1590,4],[1416,5,1590,5],[1416,6,1590,6],[1417,2,1591,0],[1419,2,1593,0],[1420,0,1594,0],[1421,0,1595,0],[1422,0,1596,0],[1423,0,1597,0],[1424,0,1598,0],[1425,0,1599,0],[1426,0,1600,0],[1427,0,1601,0],[1428,0,1602,0],[1429,0,1603,0],[1430,0,1604,0],[1431,0,1605,0],[1432,0,1606,0],[1433,0,1607,0],[1434,0,1608,0],[1435,2,1609,0],[1435,11,1609,9,"requestStsToken"],[1435,26,1609,24,"requestStsToken"],[1435,27,1609,25,"auth"],[1435,31,1609,29],[1435,33,1609,31,"refreshToken"],[1435,45,1609,43],[1435,47,1609,45],[1436,4,1610,4],[1436,11,1610,11,"tslib"],[1436,16,1610,16],[1436,17,1610,17,"__awaiter"],[1436,26,1610,26],[1436,27,1610,27],[1436,31,1610,31],[1436,33,1610,31,"undefined"],[1436,42,1610,31],[1436,44,1610,31,"undefined"],[1436,53,1610,31],[1436,55,1610,49],[1436,67,1610,61],[1437,6,1611,8],[1437,10,1611,12,"response"],[1437,18,1611,20],[1438,6,1612,8],[1438,10,1612,12,"_this"],[1438,15,1612,17],[1438,18,1612,20],[1438,22,1612,24],[1439,6,1613,8],[1439,13,1613,15,"tslib"],[1439,18,1613,20],[1439,19,1613,21,"__generator"],[1439,30,1613,32],[1439,31,1613,33],[1439,35,1613,37],[1439,37,1613,39],[1439,47,1613,49,"_a"],[1439,49,1613,51],[1439,51,1613,53],[1440,8,1614,12],[1440,16,1614,20,"_a"],[1440,18,1614,22],[1440,19,1614,23,"label"],[1440,24,1614,28],[1441,10,1615,16],[1441,15,1615,21],[1441,16,1615,22],[1442,12,1615,24],[1442,19,1615,31],[1442,20,1615,32],[1442,21,1615,33],[1442,22,1615,34],[1442,33,1615,45,"_performFetchWithErrorHandling"],[1442,63,1615,75],[1442,64,1615,76,"auth"],[1442,68,1615,80],[1442,70,1615,82],[1442,71,1615,83],[1442,72,1615,84],[1442,74,1615,86],[1442,86,1615,98],[1443,14,1615,100],[1443,21,1615,107,"tslib"],[1443,26,1615,112],[1443,27,1615,113,"__awaiter"],[1443,36,1615,122],[1443,37,1615,123,"_this"],[1443,42,1615,128],[1443,44,1615,128,"undefined"],[1443,53,1615,128],[1443,55,1615,128,"undefined"],[1443,64,1615,128],[1443,66,1615,146],[1443,78,1615,158],[1444,16,1616,24],[1444,20,1616,28,"body"],[1444,24,1616,32],[1444,26,1616,34,"_a"],[1444,28,1616,36],[1444,30,1616,38,"tokenApiHost"],[1444,42,1616,50],[1444,44,1616,52,"apiKey"],[1444,50,1616,58],[1444,52,1616,60,"url"],[1444,55,1616,63],[1444,57,1616,65,"headers"],[1444,64,1616,72],[1445,16,1617,24],[1445,23,1617,31,"tslib"],[1445,28,1617,36],[1445,29,1617,37,"__generator"],[1445,40,1617,48],[1445,41,1617,49],[1445,45,1617,53],[1445,47,1617,55],[1445,57,1617,65,"_b"],[1445,59,1617,67],[1445,61,1617,69],[1446,18,1618,28],[1446,26,1618,36,"_b"],[1446,28,1618,38],[1446,29,1618,39,"label"],[1446,34,1618,44],[1447,20,1619,32],[1447,25,1619,37],[1447,26,1619,38],[1448,22,1620,36,"body"],[1448,26,1620,40],[1448,29,1620,43,"util"],[1448,33,1620,47],[1448,34,1620,48,"querystring"],[1448,45,1620,59],[1448,46,1620,60],[1449,24,1621,40],[1449,36,1621,52],[1449,38,1621,54],[1449,53,1621,69],[1450,24,1622,40],[1450,39,1622,55],[1450,41,1622,57,"refreshToken"],[1451,22,1623,36],[1451,23,1623,37],[1451,24,1623,38],[1451,25,1623,39,"slice"],[1451,30,1623,44],[1451,31,1623,45],[1451,32,1623,46],[1451,33,1623,47],[1452,22,1624,36,"_a"],[1452,24,1624,38],[1452,27,1624,41,"auth"],[1452,31,1624,45],[1452,32,1624,46,"config"],[1452,38,1624,52],[1452,40,1624,54,"tokenApiHost"],[1452,52,1624,66],[1452,55,1624,69,"_a"],[1452,57,1624,71],[1452,58,1624,72,"tokenApiHost"],[1452,70,1624,84],[1452,72,1624,86,"apiKey"],[1452,78,1624,92],[1452,81,1624,95,"_a"],[1452,83,1624,97],[1452,84,1624,98,"apiKey"],[1452,90,1624,104],[1453,22,1625,36,"url"],[1453,25,1625,39],[1453,28,1625,42,"_getFinalTarget"],[1453,43,1625,57],[1453,44,1625,58,"auth"],[1453,48,1625,62],[1453,50,1625,64,"tokenApiHost"],[1453,62,1625,76],[1453,64,1625,78],[1453,75,1625,89],[1453,76,1625,90],[1453,98,1625,112],[1453,104,1625,118],[1453,105,1625,119,"concat"],[1453,111,1625,125],[1453,112,1625,126,"apiKey"],[1453,118,1625,132],[1453,119,1625,133],[1453,120,1625,134],[1454,22,1626,36],[1454,29,1626,43],[1454,30,1626,44],[1454,31,1626,45],[1454,32,1626,46],[1454,43,1626,57,"auth"],[1454,47,1626,61],[1454,48,1626,62,"_getAdditionalHeaders"],[1454,69,1626,83],[1454,70,1626,84],[1454,71,1626,85],[1454,72,1626,86],[1455,20,1627,32],[1455,25,1627,37],[1455,26,1627,38],[1456,22,1628,36,"headers"],[1456,29,1628,43],[1456,32,1628,46,"_b"],[1456,34,1628,48],[1456,35,1628,49,"sent"],[1456,39,1628,53],[1456,40,1628,54],[1456,41,1628,55],[1457,22,1629,36,"headers"],[1457,29,1629,43],[1457,30,1629,44],[1457,44,1629,58],[1457,45,1629,59],[1457,75,1629,89],[1457,78,1629,92],[1457,113,1629,127],[1458,22,1630,36],[1458,29,1630,43],[1458,30,1630,44],[1458,31,1630,45],[1458,32,1630,46],[1458,44,1630,58,"FetchProvider"],[1458,57,1630,71],[1458,58,1630,72,"fetch"],[1458,63,1630,77],[1458,64,1630,78],[1458,65,1630,79],[1458,66,1630,80,"url"],[1458,69,1630,83],[1458,71,1630,85],[1459,24,1631,44,"method"],[1459,30,1631,50],[1459,32,1631,52],[1459,38,1631,58],[1459,39,1631,59],[1460,24,1632,44,"headers"],[1460,31,1632,51],[1460,33,1632,53,"headers"],[1460,40,1632,60],[1461,24,1633,44,"body"],[1461,28,1633,48],[1461,30,1633,50,"body"],[1462,22,1634,40],[1462,23,1634,41],[1462,24,1634,42],[1462,25,1634,43],[1463,18,1635,28],[1464,16,1636,24],[1464,17,1636,25],[1464,18,1636,26],[1465,14,1637,20],[1465,15,1637,21],[1465,16,1637,22],[1466,12,1637,24],[1466,13,1637,25],[1466,14,1637,26],[1466,15,1637,27],[1467,10,1638,16],[1467,15,1638,21],[1467,16,1638,22],[1468,12,1639,20,"response"],[1468,20,1639,28],[1468,23,1639,31,"_a"],[1468,25,1639,33],[1468,26,1639,34,"sent"],[1468,30,1639,38],[1468,31,1639,39],[1468,32,1639,40],[1469,12,1640,20],[1470,12,1641,20],[1470,19,1641,27],[1470,20,1641,28],[1470,21,1641,29],[1470,22,1641,30],[1470,34,1641,42],[1471,14,1642,28,"accessToken"],[1471,25,1642,39],[1471,27,1642,41,"response"],[1471,35,1642,49],[1471,36,1642,50,"access_token"],[1471,48,1642,62],[1472,14,1643,28,"expiresIn"],[1472,23,1643,37],[1472,25,1643,39,"response"],[1472,33,1643,47],[1472,34,1643,48,"expires_in"],[1472,44,1643,58],[1473,14,1644,28,"refreshToken"],[1473,26,1644,40],[1473,28,1644,42,"response"],[1473,36,1644,50],[1473,37,1644,51,"refresh_token"],[1474,12,1645,24],[1474,13,1645,25],[1474,14,1645,26],[1475,8,1646,12],[1476,6,1647,8],[1476,7,1647,9],[1476,8,1647,10],[1477,4,1648,4],[1477,5,1648,5],[1477,6,1648,6],[1478,2,1649,0],[1479,2,1650,0],[1479,11,1650,9,"revokeToken"],[1479,22,1650,20,"revokeToken"],[1479,23,1650,21,"auth"],[1479,27,1650,25],[1479,29,1650,27,"request"],[1479,36,1650,34],[1479,38,1650,36],[1480,4,1651,4],[1480,11,1651,11,"tslib"],[1480,16,1651,16],[1480,17,1651,17,"__awaiter"],[1480,26,1651,26],[1480,27,1651,27],[1480,31,1651,31],[1480,33,1651,31,"undefined"],[1480,42,1651,31],[1480,44,1651,31,"undefined"],[1480,53,1651,31],[1480,55,1651,49],[1480,67,1651,61],[1481,6,1652,8],[1481,13,1652,15,"tslib"],[1481,18,1652,20],[1481,19,1652,21,"__generator"],[1481,30,1652,32],[1481,31,1652,33],[1481,35,1652,37],[1481,37,1652,39],[1481,47,1652,49,"_a"],[1481,49,1652,51],[1481,51,1652,53],[1482,8,1653,12],[1482,15,1653,19],[1482,16,1653,20],[1482,17,1653,21],[1482,18,1653,22],[1482,30,1653,34,"_performApiRequest"],[1482,48,1653,52],[1482,49,1653,53,"auth"],[1482,53,1653,57],[1482,55,1653,59],[1482,61,1653,65],[1482,62,1653,66],[1482,85,1653,89],[1482,111,1653,115],[1482,112,1653,116],[1482,141,1653,145,"_addTidIfNecessary"],[1482,159,1653,163],[1482,160,1653,164,"auth"],[1482,164,1653,168],[1482,166,1653,170,"request"],[1482,173,1653,177],[1482,174,1653,178],[1482,175,1653,179],[1482,176,1653,180],[1483,6,1654,8],[1483,7,1654,9],[1483,8,1654,10],[1484,4,1655,4],[1484,5,1655,5],[1484,6,1655,6],[1485,2,1656,0],[1487,2,1658,0],[1488,0,1659,0],[1489,0,1660,0],[1490,0,1661,0],[1491,0,1662,0],[1492,0,1663,0],[1493,0,1664,0],[1494,0,1665,0],[1495,0,1666,0],[1496,0,1667,0],[1497,0,1668,0],[1498,0,1669,0],[1499,0,1670,0],[1500,0,1671,0],[1501,0,1672,0],[1502,0,1673,0],[1503,2,1674,0],[1504,0,1675,0],[1505,0,1676,0],[1506,0,1677,0],[1507,0,1678,0],[1508,0,1679,0],[1509,2,1680,0],[1509,6,1680,4,"StsTokenManager"],[1509,21,1680,19],[1509,24,1680,22],[1509,37,1680,37],[1509,49,1680,49],[1510,4,1681,4],[1510,13,1681,13,"StsTokenManager"],[1510,28,1681,28,"StsTokenManager"],[1510,29,1681,28],[1510,31,1681,31],[1511,6,1682,8],[1511,10,1682,12],[1511,11,1682,13,"refreshToken"],[1511,23,1682,25],[1511,26,1682,28],[1511,30,1682,32],[1512,6,1683,8],[1512,10,1683,12],[1512,11,1683,13,"accessToken"],[1512,22,1683,24],[1512,25,1683,27],[1512,29,1683,31],[1513,6,1684,8],[1513,10,1684,12],[1513,11,1684,13,"expirationTime"],[1513,25,1684,27],[1513,28,1684,30],[1513,32,1684,34],[1514,4,1685,4],[1515,4,1686,4,"Object"],[1515,10,1686,10],[1515,11,1686,11,"defineProperty"],[1515,25,1686,25],[1515,26,1686,26,"StsTokenManager"],[1515,41,1686,41],[1515,42,1686,42,"prototype"],[1515,51,1686,51],[1515,53,1686,53],[1515,64,1686,64],[1515,66,1686,66],[1516,6,1687,8,"get"],[1516,9,1687,11],[1516,11,1687,13],[1516,20,1687,13,"get"],[1516,21,1687,13],[1516,23,1687,25],[1517,8,1688,12],[1517,15,1688,20],[1517,16,1688,21],[1517,20,1688,25],[1517,21,1688,26,"expirationTime"],[1517,35,1688,40],[1517,39,1689,16,"Date"],[1517,43,1689,20],[1517,44,1689,21,"now"],[1517,47,1689,24],[1517,48,1689,25],[1517,49,1689,26],[1517,52,1689,29],[1517,56,1689,33],[1517,57,1689,34,"expirationTime"],[1517,71,1689,48],[1517,74,1689,51],[1517,79,1689,56],[1517,80,1689,57],[1518,6,1690,8],[1518,7,1690,9],[1519,6,1691,8,"enumerable"],[1519,16,1691,18],[1519,18,1691,20],[1519,23,1691,25],[1520,6,1692,8,"configurable"],[1520,18,1692,20],[1520,20,1692,22],[1521,4,1693,4],[1521,5,1693,5],[1521,6,1693,6],[1522,4,1694,4,"StsTokenManager"],[1522,19,1694,19],[1522,20,1694,20,"prototype"],[1522,29,1694,29],[1522,30,1694,30,"updateFromServerResponse"],[1522,54,1694,54],[1522,57,1694,57],[1522,67,1694,67,"response"],[1522,75,1694,75],[1522,77,1694,77],[1523,6,1695,8,"_assert"],[1523,13,1695,15],[1523,14,1695,16,"response"],[1523,22,1695,24],[1523,23,1695,25,"idToken"],[1523,30,1695,32],[1523,32,1695,34],[1523,48,1695,50],[1523,49,1695,51],[1523,83,1695,85],[1523,84,1695,86],[1524,6,1696,8,"_assert"],[1524,13,1696,15],[1524,14,1696,16],[1524,21,1696,23,"response"],[1524,29,1696,31],[1524,30,1696,32,"idToken"],[1524,37,1696,39],[1524,42,1696,44],[1524,53,1696,55],[1524,55,1696,57],[1524,71,1696,73],[1524,72,1696,74],[1524,106,1696,108],[1524,107,1696,109],[1525,6,1697,8,"_assert"],[1525,13,1697,15],[1525,14,1697,16],[1525,21,1697,23,"response"],[1525,29,1697,31],[1525,30,1697,32,"refreshToken"],[1525,42,1697,44],[1525,47,1697,49],[1525,58,1697,60],[1525,60,1697,62],[1525,76,1697,78],[1525,77,1697,79],[1525,111,1697,113],[1525,112,1697,114],[1526,6,1698,8],[1526,10,1698,12,"expiresIn"],[1526,19,1698,21],[1526,22,1698,24],[1526,33,1698,35],[1526,37,1698,39,"response"],[1526,45,1698,47],[1526,49,1698,51],[1526,56,1698,58,"response"],[1526,64,1698,66],[1526,65,1698,67,"expiresIn"],[1526,74,1698,76],[1526,79,1698,81],[1526,90,1698,92],[1526,93,1699,14,"Number"],[1526,99,1699,20],[1526,100,1699,21,"response"],[1526,108,1699,29],[1526,109,1699,30,"expiresIn"],[1526,118,1699,39],[1526,119,1699,40],[1526,122,1700,14,"_tokenExpiresIn"],[1526,137,1700,29],[1526,138,1700,30,"response"],[1526,146,1700,38],[1526,147,1700,39,"idToken"],[1526,154,1700,46],[1526,155,1700,47],[1527,6,1701,8],[1527,10,1701,12],[1527,11,1701,13,"updateTokensAndExpiration"],[1527,36,1701,38],[1527,37,1701,39,"response"],[1527,45,1701,47],[1527,46,1701,48,"idToken"],[1527,53,1701,55],[1527,55,1701,57,"response"],[1527,63,1701,65],[1527,64,1701,66,"refreshToken"],[1527,76,1701,78],[1527,78,1701,80,"expiresIn"],[1527,87,1701,89],[1527,88,1701,90],[1528,4,1702,4],[1528,5,1702,5],[1529,4,1703,4,"StsTokenManager"],[1529,19,1703,19],[1529,20,1703,20,"prototype"],[1529,29,1703,29],[1529,30,1703,30,"updateFromIdToken"],[1529,47,1703,47],[1529,50,1703,50],[1529,60,1703,60,"idToken"],[1529,67,1703,67],[1529,69,1703,69],[1530,6,1704,8,"_assert"],[1530,13,1704,15],[1530,14,1704,16,"idToken"],[1530,21,1704,23],[1530,22,1704,24,"length"],[1530,28,1704,30],[1530,33,1704,35],[1530,34,1704,36],[1530,36,1704,38],[1530,52,1704,54],[1530,53,1704,55],[1530,87,1704,89],[1530,88,1704,90],[1531,6,1705,8],[1531,10,1705,12,"expiresIn"],[1531,19,1705,21],[1531,22,1705,24,"_tokenExpiresIn"],[1531,37,1705,39],[1531,38,1705,40,"idToken"],[1531,45,1705,47],[1531,46,1705,48],[1532,6,1706,8],[1532,10,1706,12],[1532,11,1706,13,"updateTokensAndExpiration"],[1532,36,1706,38],[1532,37,1706,39,"idToken"],[1532,44,1706,46],[1532,46,1706,48],[1532,50,1706,52],[1532,52,1706,54,"expiresIn"],[1532,61,1706,63],[1532,62,1706,64],[1533,4,1707,4],[1533,5,1707,5],[1534,4,1708,4,"StsTokenManager"],[1534,19,1708,19],[1534,20,1708,20,"prototype"],[1534,29,1708,29],[1534,30,1708,30,"getToken"],[1534,38,1708,38],[1534,41,1708,41],[1534,51,1708,51,"auth"],[1534,55,1708,55],[1534,57,1708,57,"forceRefresh"],[1534,69,1708,69],[1534,71,1708,71],[1535,6,1709,8],[1535,10,1709,12,"forceRefresh"],[1535,22,1709,24],[1535,27,1709,24,"undefined"],[1535,36,1709,35],[1535,38,1709,37],[1536,8,1709,39,"forceRefresh"],[1536,20,1709,51],[1536,23,1709,54],[1536,28,1709,59],[1537,6,1709,61],[1538,6,1710,8],[1538,13,1710,15,"tslib"],[1538,18,1710,20],[1538,19,1710,21,"__awaiter"],[1538,28,1710,30],[1538,29,1710,31],[1538,33,1710,35],[1538,35,1710,35,"undefined"],[1538,44,1710,35],[1538,46,1710,35,"undefined"],[1538,55,1710,35],[1538,57,1710,53],[1538,69,1710,65],[1539,8,1711,12],[1539,15,1711,19,"tslib"],[1539,20,1711,24],[1539,21,1711,25,"__generator"],[1539,32,1711,36],[1539,33,1711,37],[1539,37,1711,41],[1539,39,1711,43],[1539,49,1711,53,"_a"],[1539,51,1711,55],[1539,53,1711,57],[1540,10,1712,16],[1540,18,1712,24,"_a"],[1540,20,1712,26],[1540,21,1712,27,"label"],[1540,26,1712,32],[1541,12,1713,20],[1541,17,1713,25],[1541,18,1713,26],[1542,14,1714,24],[1542,18,1714,28],[1542,19,1714,29,"forceRefresh"],[1542,31,1714,41],[1542,35,1714,45],[1542,39,1714,49],[1542,40,1714,50,"accessToken"],[1542,51,1714,61],[1542,55,1714,65],[1542,56,1714,66],[1542,60,1714,70],[1542,61,1714,71,"isExpired"],[1542,70,1714,80],[1542,72,1714,82],[1543,16,1715,28],[1543,23,1715,35],[1543,24,1715,36],[1543,25,1715,37],[1543,26,1715,38],[1543,38,1715,50],[1543,42,1715,54],[1543,43,1715,55,"accessToken"],[1543,54,1715,66],[1543,55,1715,67],[1544,14,1716,24],[1545,14,1717,24,"_assert"],[1545,21,1717,31],[1545,22,1717,32],[1545,26,1717,36],[1545,27,1717,37,"refreshToken"],[1545,39,1717,49],[1545,41,1717,51,"auth"],[1545,45,1717,55],[1545,47,1717,57],[1545,67,1717,77],[1545,68,1717,78],[1545,101,1717,111],[1545,102,1717,112],[1546,14,1718,24],[1546,18,1718,28],[1546,19,1718,29],[1546,23,1718,33],[1546,24,1718,34,"refreshToken"],[1546,36,1718,46],[1546,38,1718,48],[1546,45,1718,55],[1546,46,1718,56],[1546,47,1718,57],[1546,48,1718,58],[1546,59,1718,69],[1546,60,1718,70],[1546,61,1718,71],[1547,14,1719,24],[1547,21,1719,31],[1547,22,1719,32],[1547,23,1719,33],[1547,24,1719,34],[1547,35,1719,45],[1547,39,1719,49],[1547,40,1719,50,"refresh"],[1547,47,1719,57],[1547,48,1719,58,"auth"],[1547,52,1719,62],[1547,54,1719,64],[1547,58,1719,68],[1547,59,1719,69,"refreshToken"],[1547,71,1719,81],[1547,72,1719,82],[1547,73,1719,83],[1548,12,1720,20],[1548,17,1720,25],[1548,18,1720,26],[1549,14,1721,24,"_a"],[1549,16,1721,26],[1549,17,1721,27,"sent"],[1549,21,1721,31],[1549,22,1721,32],[1549,23,1721,33],[1550,14,1722,24],[1550,21,1722,31],[1550,22,1722,32],[1550,23,1722,33],[1550,24,1722,34],[1550,36,1722,46],[1550,40,1722,50],[1550,41,1722,51,"accessToken"],[1550,52,1722,62],[1550,53,1722,63],[1551,12,1723,20],[1551,17,1723,25],[1551,18,1723,26],[1552,14,1723,28],[1552,21,1723,35],[1552,22,1723,36],[1552,23,1723,37],[1552,24,1723,38],[1552,36,1723,50],[1552,40,1723,54],[1552,41,1723,55],[1553,10,1724,16],[1554,8,1725,12],[1554,9,1725,13],[1554,10,1725,14],[1555,6,1726,8],[1555,7,1726,9],[1555,8,1726,10],[1556,4,1727,4],[1556,5,1727,5],[1557,4,1728,4,"StsTokenManager"],[1557,19,1728,19],[1557,20,1728,20,"prototype"],[1557,29,1728,29],[1557,30,1728,30,"clearRefreshToken"],[1557,47,1728,47],[1557,50,1728,50],[1557,62,1728,62],[1558,6,1729,8],[1558,10,1729,12],[1558,11,1729,13,"refreshToken"],[1558,23,1729,25],[1558,26,1729,28],[1558,30,1729,32],[1559,4,1730,4],[1559,5,1730,5],[1560,4,1731,4,"StsTokenManager"],[1560,19,1731,19],[1560,20,1731,20,"prototype"],[1560,29,1731,29],[1560,30,1731,30,"refresh"],[1560,37,1731,37],[1560,40,1731,40],[1560,50,1731,50,"auth"],[1560,54,1731,54],[1560,56,1731,56,"oldToken"],[1560,64,1731,64],[1560,66,1731,66],[1561,6,1732,8],[1561,13,1732,15,"tslib"],[1561,18,1732,20],[1561,19,1732,21,"__awaiter"],[1561,28,1732,30],[1561,29,1732,31],[1561,33,1732,35],[1561,35,1732,35,"undefined"],[1561,44,1732,35],[1561,46,1732,35,"undefined"],[1561,55,1732,35],[1561,57,1732,53],[1561,69,1732,65],[1562,8,1733,12],[1562,12,1733,16,"_a"],[1562,14,1733,18],[1562,16,1733,20,"accessToken"],[1562,27,1733,31],[1562,29,1733,33,"refreshToken"],[1562,41,1733,45],[1562,43,1733,47,"expiresIn"],[1562,52,1733,56],[1563,8,1734,12],[1563,15,1734,19,"tslib"],[1563,20,1734,24],[1563,21,1734,25,"__generator"],[1563,32,1734,36],[1563,33,1734,37],[1563,37,1734,41],[1563,39,1734,43],[1563,49,1734,53,"_b"],[1563,51,1734,55],[1563,53,1734,57],[1564,10,1735,16],[1564,18,1735,24,"_b"],[1564,20,1735,26],[1564,21,1735,27,"label"],[1564,26,1735,32],[1565,12,1736,20],[1565,17,1736,25],[1565,18,1736,26],[1566,14,1736,28],[1566,21,1736,35],[1566,22,1736,36],[1566,23,1736,37],[1566,24,1736,38],[1566,35,1736,49,"requestStsToken"],[1566,50,1736,64],[1566,51,1736,65,"auth"],[1566,55,1736,69],[1566,57,1736,71,"oldToken"],[1566,65,1736,79],[1566,66,1736,80],[1566,67,1736,81],[1567,12,1737,20],[1567,17,1737,25],[1567,18,1737,26],[1568,14,1738,24,"_a"],[1568,16,1738,26],[1568,19,1738,29,"_b"],[1568,21,1738,31],[1568,22,1738,32,"sent"],[1568,26,1738,36],[1568,27,1738,37],[1568,28,1738,38],[1568,30,1738,40,"accessToken"],[1568,41,1738,51],[1568,44,1738,54,"_a"],[1568,46,1738,56],[1568,47,1738,57,"accessToken"],[1568,58,1738,68],[1568,60,1738,70,"refreshToken"],[1568,72,1738,82],[1568,75,1738,85,"_a"],[1568,77,1738,87],[1568,78,1738,88,"refreshToken"],[1568,90,1738,100],[1568,92,1738,102,"expiresIn"],[1568,101,1738,111],[1568,104,1738,114,"_a"],[1568,106,1738,116],[1568,107,1738,117,"expiresIn"],[1568,116,1738,126],[1569,14,1739,24],[1569,18,1739,28],[1569,19,1739,29,"updateTokensAndExpiration"],[1569,44,1739,54],[1569,45,1739,55,"accessToken"],[1569,56,1739,66],[1569,58,1739,68,"refreshToken"],[1569,70,1739,80],[1569,72,1739,82,"Number"],[1569,78,1739,88],[1569,79,1739,89,"expiresIn"],[1569,88,1739,98],[1569,89,1739,99],[1569,90,1739,100],[1570,14,1740,24],[1570,21,1740,31],[1570,22,1740,32],[1570,23,1740,33],[1570,24,1740,34],[1570,35,1740,45],[1571,10,1741,16],[1572,8,1742,12],[1572,9,1742,13],[1572,10,1742,14],[1573,6,1743,8],[1573,7,1743,9],[1573,8,1743,10],[1574,4,1744,4],[1574,5,1744,5],[1575,4,1745,4,"StsTokenManager"],[1575,19,1745,19],[1575,20,1745,20,"prototype"],[1575,29,1745,29],[1575,30,1745,30,"updateTokensAndExpiration"],[1575,55,1745,55],[1575,58,1745,58],[1575,68,1745,68,"accessToken"],[1575,79,1745,79],[1575,81,1745,81,"refreshToken"],[1575,93,1745,93],[1575,95,1745,95,"expiresInSec"],[1575,107,1745,107],[1575,109,1745,109],[1576,6,1746,8],[1576,10,1746,12],[1576,11,1746,13,"refreshToken"],[1576,23,1746,25],[1576,26,1746,28,"refreshToken"],[1576,38,1746,40],[1576,42,1746,44],[1576,46,1746,48],[1577,6,1747,8],[1577,10,1747,12],[1577,11,1747,13,"accessToken"],[1577,22,1747,24],[1577,25,1747,27,"accessToken"],[1577,36,1747,38],[1577,40,1747,42],[1577,44,1747,46],[1578,6,1748,8],[1578,10,1748,12],[1578,11,1748,13,"expirationTime"],[1578,25,1748,27],[1578,28,1748,30,"Date"],[1578,32,1748,34],[1578,33,1748,35,"now"],[1578,36,1748,38],[1578,37,1748,39],[1578,38,1748,40],[1578,41,1748,43,"expiresInSec"],[1578,53,1748,55],[1578,56,1748,58],[1578,60,1748,62],[1579,4,1749,4],[1579,5,1749,5],[1580,4,1750,4,"StsTokenManager"],[1580,19,1750,19],[1580,20,1750,20,"fromJSON"],[1580,28,1750,28],[1580,31,1750,31],[1580,41,1750,41,"appName"],[1580,48,1750,48],[1580,50,1750,50,"object"],[1580,56,1750,56],[1580,58,1750,58],[1581,6,1751,8],[1581,10,1751,12,"refreshToken"],[1581,22,1751,24],[1581,25,1751,27,"object"],[1581,31,1751,33],[1581,32,1751,34,"refreshToken"],[1581,44,1751,46],[1582,8,1751,48,"accessToken"],[1582,19,1751,59],[1582,22,1751,62,"object"],[1582,28,1751,68],[1582,29,1751,69,"accessToken"],[1582,40,1751,80],[1583,8,1751,82,"expirationTime"],[1583,22,1751,96],[1583,25,1751,99,"object"],[1583,31,1751,105],[1583,32,1751,106,"expirationTime"],[1583,46,1751,120],[1584,6,1752,8],[1584,10,1752,12,"manager"],[1584,17,1752,19],[1584,20,1752,22],[1584,24,1752,26,"StsTokenManager"],[1584,39,1752,41],[1584,40,1752,42],[1584,41,1752,43],[1585,6,1753,8],[1585,10,1753,12,"refreshToken"],[1585,22,1753,24],[1585,24,1753,26],[1586,8,1754,12,"_assert"],[1586,15,1754,19],[1586,16,1754,20],[1586,23,1754,27,"refreshToken"],[1586,35,1754,39],[1586,40,1754,44],[1586,48,1754,52],[1586,50,1754,54],[1586,66,1754,70],[1586,67,1754,71],[1586,103,1754,107],[1587,10,1755,16,"appName"],[1587,17,1755,23],[1587,19,1755,25,"appName"],[1588,8,1756,12],[1588,9,1756,13],[1588,10,1756,14],[1589,8,1757,12,"manager"],[1589,15,1757,19],[1589,16,1757,20,"refreshToken"],[1589,28,1757,32],[1589,31,1757,35,"refreshToken"],[1589,43,1757,47],[1590,6,1758,8],[1591,6,1759,8],[1591,10,1759,12,"accessToken"],[1591,21,1759,23],[1591,23,1759,25],[1592,8,1760,12,"_assert"],[1592,15,1760,19],[1592,16,1760,20],[1592,23,1760,27,"accessToken"],[1592,34,1760,38],[1592,39,1760,43],[1592,47,1760,51],[1592,49,1760,53],[1592,65,1760,69],[1592,66,1760,70],[1592,102,1760,106],[1593,10,1761,16,"appName"],[1593,17,1761,23],[1593,19,1761,25,"appName"],[1594,8,1762,12],[1594,9,1762,13],[1594,10,1762,14],[1595,8,1763,12,"manager"],[1595,15,1763,19],[1595,16,1763,20,"accessToken"],[1595,27,1763,31],[1595,30,1763,34,"accessToken"],[1595,41,1763,45],[1596,6,1764,8],[1597,6,1765,8],[1597,10,1765,12,"expirationTime"],[1597,24,1765,26],[1597,26,1765,28],[1598,8,1766,12,"_assert"],[1598,15,1766,19],[1598,16,1766,20],[1598,23,1766,27,"expirationTime"],[1598,37,1766,41],[1598,42,1766,46],[1598,50,1766,54],[1598,52,1766,56],[1598,68,1766,72],[1598,69,1766,73],[1598,105,1766,109],[1599,10,1767,16,"appName"],[1599,17,1767,23],[1599,19,1767,25,"appName"],[1600,8,1768,12],[1600,9,1768,13],[1600,10,1768,14],[1601,8,1769,12,"manager"],[1601,15,1769,19],[1601,16,1769,20,"expirationTime"],[1601,30,1769,34],[1601,33,1769,37,"expirationTime"],[1601,47,1769,51],[1602,6,1770,8],[1603,6,1771,8],[1603,13,1771,15,"manager"],[1603,20,1771,22],[1604,4,1772,4],[1604,5,1772,5],[1605,4,1773,4,"StsTokenManager"],[1605,19,1773,19],[1605,20,1773,20,"prototype"],[1605,29,1773,29],[1605,30,1773,30,"toJSON"],[1605,36,1773,36],[1605,39,1773,39],[1605,51,1773,51],[1606,6,1774,8],[1606,13,1774,15],[1607,8,1775,12,"refreshToken"],[1607,20,1775,24],[1607,22,1775,26],[1607,26,1775,30],[1607,27,1775,31,"refreshToken"],[1607,39,1775,43],[1608,8,1776,12,"accessToken"],[1608,19,1776,23],[1608,21,1776,25],[1608,25,1776,29],[1608,26,1776,30,"accessToken"],[1608,37,1776,41],[1609,8,1777,12,"expirationTime"],[1609,22,1777,26],[1609,24,1777,28],[1609,28,1777,32],[1609,29,1777,33,"expirationTime"],[1610,6,1778,8],[1610,7,1778,9],[1611,4,1779,4],[1611,5,1779,5],[1612,4,1780,4,"StsTokenManager"],[1612,19,1780,19],[1612,20,1780,20,"prototype"],[1612,29,1780,29],[1612,30,1780,30,"_assign"],[1612,37,1780,37],[1612,40,1780,40],[1612,50,1780,50,"stsTokenManager"],[1612,65,1780,65],[1612,67,1780,67],[1613,6,1781,8],[1613,10,1781,12],[1613,11,1781,13,"accessToken"],[1613,22,1781,24],[1613,25,1781,27,"stsTokenManager"],[1613,40,1781,42],[1613,41,1781,43,"accessToken"],[1613,52,1781,54],[1614,6,1782,8],[1614,10,1782,12],[1614,11,1782,13,"refreshToken"],[1614,23,1782,25],[1614,26,1782,28,"stsTokenManager"],[1614,41,1782,43],[1614,42,1782,44,"refreshToken"],[1614,54,1782,56],[1615,6,1783,8],[1615,10,1783,12],[1615,11,1783,13,"expirationTime"],[1615,25,1783,27],[1615,28,1783,30,"stsTokenManager"],[1615,43,1783,45],[1615,44,1783,46,"expirationTime"],[1615,58,1783,60],[1616,4,1784,4],[1616,5,1784,5],[1617,4,1785,4,"StsTokenManager"],[1617,19,1785,19],[1617,20,1785,20,"prototype"],[1617,29,1785,29],[1617,30,1785,30,"_clone"],[1617,36,1785,36],[1617,39,1785,39],[1617,51,1785,51],[1618,6,1786,8],[1618,13,1786,15,"Object"],[1618,19,1786,21],[1618,20,1786,22,"assign"],[1618,26,1786,28],[1618,27,1786,29],[1618,31,1786,33,"StsTokenManager"],[1618,46,1786,48],[1618,47,1786,49],[1618,48,1786,50],[1618,50,1786,52],[1618,54,1786,56],[1618,55,1786,57,"toJSON"],[1618,61,1786,63],[1618,62,1786,64],[1618,63,1786,65],[1618,64,1786,66],[1619,4,1787,4],[1619,5,1787,5],[1620,4,1788,4,"StsTokenManager"],[1620,19,1788,19],[1620,20,1788,20,"prototype"],[1620,29,1788,29],[1620,30,1788,30,"_performRefresh"],[1620,45,1788,45],[1620,48,1788,48],[1620,60,1788,60],[1621,6,1789,8],[1621,13,1789,15,"debugFail"],[1621,22,1789,24],[1621,23,1789,25],[1621,40,1789,42],[1621,41,1789,43],[1622,4,1790,4],[1622,5,1790,5],[1623,4,1791,4],[1623,11,1791,11,"StsTokenManager"],[1623,26,1791,26],[1624,2,1792,0],[1624,3,1792,1],[1624,4,1792,2],[1624,5,1792,4],[1626,2,1794,0],[1627,0,1795,0],[1628,0,1796,0],[1629,0,1797,0],[1630,0,1798,0],[1631,0,1799,0],[1632,0,1800,0],[1633,0,1801,0],[1634,0,1802,0],[1635,0,1803,0],[1636,0,1804,0],[1637,0,1805,0],[1638,0,1806,0],[1639,0,1807,0],[1640,0,1808,0],[1641,0,1809,0],[1642,2,1810,0],[1642,11,1810,9,"assertStringOrUndefined"],[1642,34,1810,32,"assertStringOrUndefined"],[1642,35,1810,33,"assertion"],[1642,44,1810,42],[1642,46,1810,44,"appName"],[1642,53,1810,51],[1642,55,1810,53],[1643,4,1811,4,"_assert"],[1643,11,1811,11],[1643,12,1811,12],[1643,19,1811,19,"assertion"],[1643,28,1811,28],[1643,33,1811,33],[1643,41,1811,41],[1643,45,1811,45],[1643,52,1811,52,"assertion"],[1643,61,1811,61],[1643,66,1811,66],[1643,77,1811,77],[1643,79,1811,79],[1643,95,1811,95],[1643,96,1811,96],[1643,132,1811,132],[1644,6,1811,134,"appName"],[1644,13,1811,141],[1644,15,1811,143,"appName"],[1645,4,1811,151],[1645,5,1811,152],[1645,6,1811,153],[1646,2,1812,0],[1647,2,1813,0],[1647,6,1813,4,"UserImpl"],[1647,14,1813,12],[1647,17,1813,15],[1647,30,1813,30],[1647,42,1813,42],[1648,4,1814,4],[1648,13,1814,13,"UserImpl"],[1648,21,1814,21,"UserImpl"],[1648,22,1814,22,"_a"],[1648,24,1814,24],[1648,26,1814,26],[1649,6,1815,8],[1649,10,1815,12,"uid"],[1649,13,1815,15],[1649,16,1815,18,"_a"],[1649,18,1815,20],[1649,19,1815,21,"uid"],[1649,22,1815,24],[1650,8,1815,26,"auth"],[1650,12,1815,30],[1650,15,1815,33,"_a"],[1650,17,1815,35],[1650,18,1815,36,"auth"],[1650,22,1815,40],[1651,8,1815,42,"stsTokenManager"],[1651,23,1815,57],[1651,26,1815,60,"_a"],[1651,28,1815,62],[1651,29,1815,63,"stsTokenManager"],[1651,44,1815,78],[1652,8,1815,80,"opt"],[1652,11,1815,83],[1652,14,1815,86,"tslib"],[1652,19,1815,91],[1652,20,1815,92,"__rest"],[1652,26,1815,98],[1652,27,1815,99,"_a"],[1652,29,1815,101],[1652,31,1815,103],[1652,32,1815,104],[1652,37,1815,109],[1652,39,1815,111],[1652,45,1815,117],[1652,47,1815,119],[1652,64,1815,136],[1652,65,1815,137],[1652,66,1815,138],[1653,6,1816,8],[1654,6,1817,8],[1654,10,1817,12],[1654,11,1817,13,"providerId"],[1654,21,1817,23],[1654,24,1817,26],[1654,34,1817,36],[1654,35,1817,37],[1655,6,1818,8],[1655,10,1818,12],[1655,11,1818,13,"proactiveRefresh"],[1655,27,1818,29],[1655,30,1818,32],[1655,34,1818,36,"ProactiveRefresh"],[1655,50,1818,52],[1655,51,1818,53],[1655,55,1818,57],[1655,56,1818,58],[1656,6,1819,8],[1656,10,1819,12],[1656,11,1819,13,"reloadUserInfo"],[1656,25,1819,27],[1656,28,1819,30],[1656,32,1819,34],[1657,6,1820,8],[1657,10,1820,12],[1657,11,1820,13,"reloadListener"],[1657,25,1820,27],[1657,28,1820,30],[1657,32,1820,34],[1658,6,1821,8],[1658,10,1821,12],[1658,11,1821,13,"uid"],[1658,14,1821,16],[1658,17,1821,19,"uid"],[1658,20,1821,22],[1659,6,1822,8],[1659,10,1822,12],[1659,11,1822,13,"auth"],[1659,15,1822,17],[1659,18,1822,20,"auth"],[1659,22,1822,24],[1660,6,1823,8],[1660,10,1823,12],[1660,11,1823,13,"stsTokenManager"],[1660,26,1823,28],[1660,29,1823,31,"stsTokenManager"],[1660,44,1823,46],[1661,6,1824,8],[1661,10,1824,12],[1661,11,1824,13,"accessToken"],[1661,22,1824,24],[1661,25,1824,27,"stsTokenManager"],[1661,40,1824,42],[1661,41,1824,43,"accessToken"],[1661,52,1824,54],[1662,6,1825,8],[1662,10,1825,12],[1662,11,1825,13,"displayName"],[1662,22,1825,24],[1662,25,1825,27,"opt"],[1662,28,1825,30],[1662,29,1825,31,"displayName"],[1662,40,1825,42],[1662,44,1825,46],[1662,48,1825,50],[1663,6,1826,8],[1663,10,1826,12],[1663,11,1826,13,"email"],[1663,16,1826,18],[1663,19,1826,21,"opt"],[1663,22,1826,24],[1663,23,1826,25,"email"],[1663,28,1826,30],[1663,32,1826,34],[1663,36,1826,38],[1664,6,1827,8],[1664,10,1827,12],[1664,11,1827,13,"emailVerified"],[1664,24,1827,26],[1664,27,1827,29,"opt"],[1664,30,1827,32],[1664,31,1827,33,"emailVerified"],[1664,44,1827,46],[1664,48,1827,50],[1664,53,1827,55],[1665,6,1828,8],[1665,10,1828,12],[1665,11,1828,13,"phoneNumber"],[1665,22,1828,24],[1665,25,1828,27,"opt"],[1665,28,1828,30],[1665,29,1828,31,"phoneNumber"],[1665,40,1828,42],[1665,44,1828,46],[1665,48,1828,50],[1666,6,1829,8],[1666,10,1829,12],[1666,11,1829,13,"photoURL"],[1666,19,1829,21],[1666,22,1829,24,"opt"],[1666,25,1829,27],[1666,26,1829,28,"photoURL"],[1666,34,1829,36],[1666,38,1829,40],[1666,42,1829,44],[1667,6,1830,8],[1667,10,1830,12],[1667,11,1830,13,"isAnonymous"],[1667,22,1830,24],[1667,25,1830,27,"opt"],[1667,28,1830,30],[1667,29,1830,31,"isAnonymous"],[1667,40,1830,42],[1667,44,1830,46],[1667,49,1830,51],[1668,6,1831,8],[1668,10,1831,12],[1668,11,1831,13,"tenantId"],[1668,19,1831,21],[1668,22,1831,24,"opt"],[1668,25,1831,27],[1668,26,1831,28,"tenantId"],[1668,34,1831,36],[1668,38,1831,40],[1668,42,1831,44],[1669,6,1832,8],[1669,10,1832,12],[1669,11,1832,13,"providerData"],[1669,23,1832,25],[1669,26,1832,28,"opt"],[1669,29,1832,31],[1669,30,1832,32,"providerData"],[1669,42,1832,44],[1669,45,1832,47,"tslib"],[1669,50,1832,52],[1669,51,1832,53,"__spreadArray"],[1669,64,1832,66],[1669,65,1832,67],[1669,67,1832,69],[1669,69,1832,71,"opt"],[1669,72,1832,74],[1669,73,1832,75,"providerData"],[1669,85,1832,87],[1669,87,1832,89],[1669,91,1832,93],[1669,92,1832,94],[1669,95,1832,97],[1669,97,1832,99],[1670,6,1833,8],[1670,10,1833,12],[1670,11,1833,13,"metadata"],[1670,19,1833,21],[1670,22,1833,24],[1670,26,1833,28,"UserMetadata"],[1670,38,1833,40],[1670,39,1833,41,"opt"],[1670,42,1833,44],[1670,43,1833,45,"createdAt"],[1670,52,1833,54],[1670,56,1833,58,"undefined"],[1670,65,1833,67],[1670,67,1833,69,"opt"],[1670,70,1833,72],[1670,71,1833,73,"lastLoginAt"],[1670,82,1833,84],[1670,86,1833,88,"undefined"],[1670,95,1833,97],[1670,96,1833,98],[1671,4,1834,4],[1672,4,1835,4,"UserImpl"],[1672,12,1835,12],[1672,13,1835,13,"prototype"],[1672,22,1835,22],[1672,23,1835,23,"getIdToken"],[1672,33,1835,33],[1672,36,1835,36],[1672,46,1835,46,"forceRefresh"],[1672,58,1835,58],[1672,60,1835,60],[1673,6,1836,8],[1673,13,1836,15,"tslib"],[1673,18,1836,20],[1673,19,1836,21,"__awaiter"],[1673,28,1836,30],[1673,29,1836,31],[1673,33,1836,35],[1673,35,1836,35,"undefined"],[1673,44,1836,35],[1673,46,1836,35,"undefined"],[1673,55,1836,35],[1673,57,1836,53],[1673,69,1836,65],[1674,8,1837,12],[1674,12,1837,16,"accessToken"],[1674,23,1837,27],[1675,8,1838,12],[1675,15,1838,19,"tslib"],[1675,20,1838,24],[1675,21,1838,25,"__generator"],[1675,32,1838,36],[1675,33,1838,37],[1675,37,1838,41],[1675,39,1838,43],[1675,49,1838,53,"_a"],[1675,51,1838,55],[1675,53,1838,57],[1676,10,1839,16],[1676,18,1839,24,"_a"],[1676,20,1839,26],[1676,21,1839,27,"label"],[1676,26,1839,32],[1677,12,1840,20],[1677,17,1840,25],[1677,18,1840,26],[1678,14,1840,28],[1678,21,1840,35],[1678,22,1840,36],[1678,23,1840,37],[1678,24,1840,38],[1678,35,1840,49,"_logoutIfInvalidated"],[1678,55,1840,69],[1678,56,1840,70],[1678,60,1840,74],[1678,62,1840,76],[1678,66,1840,80],[1678,67,1840,81,"stsTokenManager"],[1678,82,1840,96],[1678,83,1840,97,"getToken"],[1678,91,1840,105],[1678,92,1840,106],[1678,96,1840,110],[1678,97,1840,111,"auth"],[1678,101,1840,115],[1678,103,1840,117,"forceRefresh"],[1678,115,1840,129],[1678,116,1840,130],[1678,117,1840,131],[1678,118,1840,132],[1679,12,1841,20],[1679,17,1841,25],[1679,18,1841,26],[1680,14,1842,24,"accessToken"],[1680,25,1842,35],[1680,28,1842,38,"_a"],[1680,30,1842,40],[1680,31,1842,41,"sent"],[1680,35,1842,45],[1680,36,1842,46],[1680,37,1842,47],[1681,14,1843,24,"_assert"],[1681,21,1843,31],[1681,22,1843,32,"accessToken"],[1681,33,1843,43],[1681,35,1843,45],[1681,39,1843,49],[1681,40,1843,50,"auth"],[1681,44,1843,54],[1681,46,1843,56],[1681,62,1843,72],[1681,63,1843,73],[1681,97,1843,107],[1681,98,1843,108],[1682,14,1844,24],[1682,18,1844,28],[1682,20,1844,30],[1682,24,1844,34],[1682,25,1844,35,"accessToken"],[1682,36,1844,46],[1682,41,1844,51,"accessToken"],[1682,52,1844,62],[1682,53,1844,63],[1682,55,1844,65],[1682,62,1844,72],[1682,63,1844,73],[1682,64,1844,74],[1682,65,1844,75],[1682,76,1844,86],[1682,77,1844,87],[1682,78,1844,88],[1683,14,1845,24],[1683,18,1845,28],[1683,19,1845,29,"accessToken"],[1683,30,1845,40],[1683,33,1845,43,"accessToken"],[1683,44,1845,54],[1684,14,1846,24],[1684,21,1846,31],[1684,22,1846,32],[1684,23,1846,33],[1684,24,1846,34],[1684,35,1846,45],[1684,39,1846,49],[1684,40,1846,50,"auth"],[1684,44,1846,54],[1684,45,1846,55,"_persistUserIfCurrent"],[1684,66,1846,76],[1684,67,1846,77],[1684,71,1846,81],[1684,72,1846,82],[1684,73,1846,83],[1685,12,1847,20],[1685,17,1847,25],[1685,18,1847,26],[1686,14,1848,24,"_a"],[1686,16,1848,26],[1686,17,1848,27,"sent"],[1686,21,1848,31],[1686,22,1848,32],[1686,23,1848,33],[1687,14,1849,24],[1687,18,1849,28],[1687,19,1849,29,"auth"],[1687,23,1849,33],[1687,24,1849,34,"_notifyListenersIfCurrent"],[1687,49,1849,59],[1687,50,1849,60],[1687,54,1849,64],[1687,55,1849,65],[1688,14,1850,24,"_a"],[1688,16,1850,26],[1688,17,1850,27,"label"],[1688,22,1850,32],[1688,25,1850,35],[1688,26,1850,36],[1689,12,1851,20],[1689,17,1851,25],[1689,18,1851,26],[1690,14,1851,28],[1690,21,1851,35],[1690,22,1851,36],[1690,23,1851,37],[1690,24,1851,38],[1690,36,1851,50,"accessToken"],[1690,47,1851,61],[1690,48,1851,62],[1691,10,1852,16],[1692,8,1853,12],[1692,9,1853,13],[1692,10,1853,14],[1693,6,1854,8],[1693,7,1854,9],[1693,8,1854,10],[1694,4,1855,4],[1694,5,1855,5],[1695,4,1856,4,"UserImpl"],[1695,12,1856,12],[1695,13,1856,13,"prototype"],[1695,22,1856,22],[1695,23,1856,23,"getIdTokenResult"],[1695,39,1856,39],[1695,42,1856,42],[1695,52,1856,52,"forceRefresh"],[1695,64,1856,64],[1695,66,1856,66],[1696,6,1857,8],[1696,13,1857,15,"getIdTokenResult"],[1696,29,1857,31],[1696,30,1857,32],[1696,34,1857,36],[1696,36,1857,38,"forceRefresh"],[1696,48,1857,50],[1696,49,1857,51],[1697,4,1858,4],[1697,5,1858,5],[1698,4,1859,4,"UserImpl"],[1698,12,1859,12],[1698,13,1859,13,"prototype"],[1698,22,1859,22],[1698,23,1859,23,"reload"],[1698,29,1859,29],[1698,32,1859,32],[1698,44,1859,44],[1699,6,1860,8],[1699,13,1860,15,"reload"],[1699,19,1860,21],[1699,20,1860,22],[1699,24,1860,26],[1699,25,1860,27],[1700,4,1861,4],[1700,5,1861,5],[1701,4,1862,4,"UserImpl"],[1701,12,1862,12],[1701,13,1862,13,"prototype"],[1701,22,1862,22],[1701,23,1862,23,"_assign"],[1701,30,1862,30],[1701,33,1862,33],[1701,43,1862,43,"user"],[1701,47,1862,47],[1701,49,1862,49],[1702,6,1863,8],[1702,10,1863,12],[1702,14,1863,16],[1702,19,1863,21,"user"],[1702,23,1863,25],[1702,25,1863,27],[1703,8,1864,12],[1704,6,1865,8],[1705,6,1866,8,"_assert"],[1705,13,1866,15],[1705,14,1866,16],[1705,18,1866,20],[1705,19,1866,21,"uid"],[1705,22,1866,24],[1705,27,1866,29,"user"],[1705,31,1866,33],[1705,32,1866,34,"uid"],[1705,35,1866,37],[1705,37,1866,39],[1705,41,1866,43],[1705,42,1866,44,"auth"],[1705,46,1866,48],[1705,48,1866,50],[1705,64,1866,66],[1705,65,1866,67],[1705,99,1866,101],[1705,100,1866,102],[1706,6,1867,8],[1706,10,1867,12],[1706,11,1867,13,"displayName"],[1706,22,1867,24],[1706,25,1867,27,"user"],[1706,29,1867,31],[1706,30,1867,32,"displayName"],[1706,41,1867,43],[1707,6,1868,8],[1707,10,1868,12],[1707,11,1868,13,"photoURL"],[1707,19,1868,21],[1707,22,1868,24,"user"],[1707,26,1868,28],[1707,27,1868,29,"photoURL"],[1707,35,1868,37],[1708,6,1869,8],[1708,10,1869,12],[1708,11,1869,13,"email"],[1708,16,1869,18],[1708,19,1869,21,"user"],[1708,23,1869,25],[1708,24,1869,26,"email"],[1708,29,1869,31],[1709,6,1870,8],[1709,10,1870,12],[1709,11,1870,13,"emailVerified"],[1709,24,1870,26],[1709,27,1870,29,"user"],[1709,31,1870,33],[1709,32,1870,34,"emailVerified"],[1709,45,1870,47],[1710,6,1871,8],[1710,10,1871,12],[1710,11,1871,13,"phoneNumber"],[1710,22,1871,24],[1710,25,1871,27,"user"],[1710,29,1871,31],[1710,30,1871,32,"phoneNumber"],[1710,41,1871,43],[1711,6,1872,8],[1711,10,1872,12],[1711,11,1872,13,"isAnonymous"],[1711,22,1872,24],[1711,25,1872,27,"user"],[1711,29,1872,31],[1711,30,1872,32,"isAnonymous"],[1711,41,1872,43],[1712,6,1873,8],[1712,10,1873,12],[1712,11,1873,13,"tenantId"],[1712,19,1873,21],[1712,22,1873,24,"user"],[1712,26,1873,28],[1712,27,1873,29,"tenantId"],[1712,35,1873,37],[1713,6,1874,8],[1713,10,1874,12],[1713,11,1874,13,"providerData"],[1713,23,1874,25],[1713,26,1874,28,"user"],[1713,30,1874,32],[1713,31,1874,33,"providerData"],[1713,43,1874,45],[1713,44,1874,46,"map"],[1713,47,1874,49],[1713,48,1874,50],[1713,58,1874,60,"userInfo"],[1713,66,1874,68],[1713,68,1874,70],[1714,8,1874,72],[1714,15,1874,80,"tslib"],[1714,20,1874,85],[1714,21,1874,86,"__assign"],[1714,29,1874,94],[1714,30,1874,95],[1714,31,1874,96],[1714,32,1874,97],[1714,34,1874,99,"userInfo"],[1714,42,1874,107],[1714,43,1874,108],[1715,6,1874,111],[1715,7,1874,112],[1715,8,1874,113],[1716,6,1875,8],[1716,10,1875,12],[1716,11,1875,13,"metadata"],[1716,19,1875,21],[1716,20,1875,22,"_copy"],[1716,25,1875,27],[1716,26,1875,28,"user"],[1716,30,1875,32],[1716,31,1875,33,"metadata"],[1716,39,1875,41],[1716,40,1875,42],[1717,6,1876,8],[1717,10,1876,12],[1717,11,1876,13,"stsTokenManager"],[1717,26,1876,28],[1717,27,1876,29,"_assign"],[1717,34,1876,36],[1717,35,1876,37,"user"],[1717,39,1876,41],[1717,40,1876,42,"stsTokenManager"],[1717,55,1876,57],[1717,56,1876,58],[1718,4,1877,4],[1718,5,1877,5],[1719,4,1878,4,"UserImpl"],[1719,12,1878,12],[1719,13,1878,13,"prototype"],[1719,22,1878,22],[1719,23,1878,23,"_clone"],[1719,29,1878,29],[1719,32,1878,32],[1719,42,1878,42,"auth"],[1719,46,1878,46],[1719,48,1878,48],[1720,6,1879,8],[1720,10,1879,12,"newUser"],[1720,17,1879,19],[1720,20,1879,22],[1720,24,1879,26,"UserImpl"],[1720,32,1879,34],[1720,33,1879,35,"tslib"],[1720,38,1879,40],[1720,39,1879,41,"__assign"],[1720,47,1879,49],[1720,48,1879,50,"tslib"],[1720,53,1879,55],[1720,54,1879,56,"__assign"],[1720,62,1879,64],[1720,63,1879,65],[1720,64,1879,66],[1720,65,1879,67],[1720,67,1879,69],[1720,71,1879,73],[1720,72,1879,74],[1720,74,1879,76],[1721,8,1879,78,"auth"],[1721,12,1879,82],[1721,14,1879,84,"auth"],[1721,18,1879,88],[1722,8,1879,90,"stsTokenManager"],[1722,23,1879,105],[1722,25,1879,107],[1722,29,1879,111],[1722,30,1879,112,"stsTokenManager"],[1722,45,1879,127],[1722,46,1879,128,"_clone"],[1722,52,1879,134],[1722,53,1879,135],[1723,6,1879,137],[1723,7,1879,138],[1723,8,1879,139],[1723,9,1879,140],[1724,6,1880,8,"newUser"],[1724,13,1880,15],[1724,14,1880,16,"metadata"],[1724,22,1880,24],[1724,23,1880,25,"_copy"],[1724,28,1880,30],[1724,29,1880,31],[1724,33,1880,35],[1724,34,1880,36,"metadata"],[1724,42,1880,44],[1724,43,1880,45],[1725,6,1881,8],[1725,13,1881,15,"newUser"],[1725,20,1881,22],[1726,4,1882,4],[1726,5,1882,5],[1727,4,1883,4,"UserImpl"],[1727,12,1883,12],[1727,13,1883,13,"prototype"],[1727,22,1883,22],[1727,23,1883,23,"_onReload"],[1727,32,1883,32],[1727,35,1883,35],[1727,45,1883,45,"callback"],[1727,53,1883,53],[1727,55,1883,55],[1728,6,1884,8],[1729,6,1885,8,"_assert"],[1729,13,1885,15],[1729,14,1885,16],[1729,15,1885,17],[1729,19,1885,21],[1729,20,1885,22,"reloadListener"],[1729,34,1885,36],[1729,36,1885,38],[1729,40,1885,42],[1729,41,1885,43,"auth"],[1729,45,1885,47],[1729,47,1885,49],[1729,63,1885,65],[1729,64,1885,66],[1729,98,1885,100],[1729,99,1885,101],[1730,6,1886,8],[1730,10,1886,12],[1730,11,1886,13,"reloadListener"],[1730,25,1886,27],[1730,28,1886,30,"callback"],[1730,36,1886,38],[1731,6,1887,8],[1731,10,1887,12],[1731,14,1887,16],[1731,15,1887,17,"reloadUserInfo"],[1731,29,1887,31],[1731,31,1887,33],[1732,8,1888,12],[1732,12,1888,16],[1732,13,1888,17,"_notifyReloadListener"],[1732,34,1888,38],[1732,35,1888,39],[1732,39,1888,43],[1732,40,1888,44,"reloadUserInfo"],[1732,54,1888,58],[1732,55,1888,59],[1733,8,1889,12],[1733,12,1889,16],[1733,13,1889,17,"reloadUserInfo"],[1733,27,1889,31],[1733,30,1889,34],[1733,34,1889,38],[1734,6,1890,8],[1735,4,1891,4],[1735,5,1891,5],[1736,4,1892,4,"UserImpl"],[1736,12,1892,12],[1736,13,1892,13,"prototype"],[1736,22,1892,22],[1736,23,1892,23,"_notifyReloadListener"],[1736,44,1892,44],[1736,47,1892,47],[1736,57,1892,57,"userInfo"],[1736,65,1892,65],[1736,67,1892,67],[1737,6,1893,8],[1737,10,1893,12],[1737,14,1893,16],[1737,15,1893,17,"reloadListener"],[1737,29,1893,31],[1737,31,1893,33],[1738,8,1894,12],[1738,12,1894,16],[1738,13,1894,17,"reloadListener"],[1738,27,1894,31],[1738,28,1894,32,"userInfo"],[1738,36,1894,40],[1738,37,1894,41],[1739,6,1895,8],[1739,7,1895,9],[1739,13,1896,13],[1740,8,1897,12],[1741,8,1898,12],[1741,12,1898,16],[1741,13,1898,17,"reloadUserInfo"],[1741,27,1898,31],[1741,30,1898,34,"userInfo"],[1741,38,1898,42],[1742,6,1899,8],[1743,4,1900,4],[1743,5,1900,5],[1744,4,1901,4,"UserImpl"],[1744,12,1901,12],[1744,13,1901,13,"prototype"],[1744,22,1901,22],[1744,23,1901,23,"_startProactiveRefresh"],[1744,45,1901,45],[1744,48,1901,48],[1744,60,1901,60],[1745,6,1902,8],[1745,10,1902,12],[1745,11,1902,13,"proactiveRefresh"],[1745,27,1902,29],[1745,28,1902,30,"_start"],[1745,34,1902,36],[1745,35,1902,37],[1745,36,1902,38],[1746,4,1903,4],[1746,5,1903,5],[1747,4,1904,4,"UserImpl"],[1747,12,1904,12],[1747,13,1904,13,"prototype"],[1747,22,1904,22],[1747,23,1904,23,"_stopProactiveRefresh"],[1747,44,1904,44],[1747,47,1904,47],[1747,59,1904,59],[1748,6,1905,8],[1748,10,1905,12],[1748,11,1905,13,"proactiveRefresh"],[1748,27,1905,29],[1748,28,1905,30,"_stop"],[1748,33,1905,35],[1748,34,1905,36],[1748,35,1905,37],[1749,4,1906,4],[1749,5,1906,5],[1750,4,1907,4,"UserImpl"],[1750,12,1907,12],[1750,13,1907,13,"prototype"],[1750,22,1907,22],[1750,23,1907,23,"_updateTokensIfNecessary"],[1750,47,1907,47],[1750,50,1907,50],[1750,60,1907,60,"response"],[1750,68,1907,68],[1750,70,1907,70,"reload"],[1750,76,1907,76],[1750,78,1907,78],[1751,6,1908,8],[1751,10,1908,12,"reload"],[1751,16,1908,18],[1751,21,1908,18,"undefined"],[1751,30,1908,29],[1751,32,1908,31],[1752,8,1908,33,"reload"],[1752,14,1908,39],[1752,17,1908,42],[1752,22,1908,47],[1753,6,1908,49],[1754,6,1909,8],[1754,13,1909,15,"tslib"],[1754,18,1909,20],[1754,19,1909,21,"__awaiter"],[1754,28,1909,30],[1754,29,1909,31],[1754,33,1909,35],[1754,35,1909,35,"undefined"],[1754,44,1909,35],[1754,46,1909,35,"undefined"],[1754,55,1909,35],[1754,57,1909,53],[1754,69,1909,65],[1755,8,1910,12],[1755,12,1910,16,"tokensRefreshed"],[1755,27,1910,31],[1756,8,1911,12],[1756,15,1911,19,"tslib"],[1756,20,1911,24],[1756,21,1911,25,"__generator"],[1756,32,1911,36],[1756,33,1911,37],[1756,37,1911,41],[1756,39,1911,43],[1756,49,1911,53,"_a"],[1756,51,1911,55],[1756,53,1911,57],[1757,10,1912,16],[1757,18,1912,24,"_a"],[1757,20,1912,26],[1757,21,1912,27,"label"],[1757,26,1912,32],[1758,12,1913,20],[1758,17,1913,25],[1758,18,1913,26],[1759,14,1914,24,"tokensRefreshed"],[1759,29,1914,39],[1759,32,1914,42],[1759,37,1914,47],[1760,14,1915,24],[1760,18,1915,28,"response"],[1760,26,1915,36],[1760,27,1915,37,"idToken"],[1760,34,1915,44],[1760,38,1916,28,"response"],[1760,46,1916,36],[1760,47,1916,37,"idToken"],[1760,54,1916,44],[1760,59,1916,49],[1760,63,1916,53],[1760,64,1916,54,"stsTokenManager"],[1760,79,1916,69],[1760,80,1916,70,"accessToken"],[1760,91,1916,81],[1760,93,1916,83],[1761,16,1917,28],[1761,20,1917,32],[1761,21,1917,33,"stsTokenManager"],[1761,36,1917,48],[1761,37,1917,49,"updateFromServerResponse"],[1761,61,1917,73],[1761,62,1917,74,"response"],[1761,70,1917,82],[1761,71,1917,83],[1762,16,1918,28,"tokensRefreshed"],[1762,31,1918,43],[1762,34,1918,46],[1762,38,1918,50],[1763,14,1919,24],[1764,14,1920,24],[1764,18,1920,28],[1764,19,1920,29,"reload"],[1764,25,1920,35],[1764,27,1920,37],[1764,34,1920,44],[1764,35,1920,45],[1764,36,1920,46],[1764,37,1920,47],[1764,48,1920,58],[1764,49,1920,59],[1764,50,1920,60],[1765,14,1921,24],[1765,21,1921,31],[1765,22,1921,32],[1765,23,1921,33],[1765,24,1921,34],[1765,35,1921,45,"_reloadWithoutSaving"],[1765,55,1921,65],[1765,56,1921,66],[1765,60,1921,70],[1765,61,1921,71],[1765,62,1921,72],[1766,12,1922,20],[1766,17,1922,25],[1766,18,1922,26],[1767,14,1923,24,"_a"],[1767,16,1923,26],[1767,17,1923,27,"sent"],[1767,21,1923,31],[1767,22,1923,32],[1767,23,1923,33],[1768,14,1924,24,"_a"],[1768,16,1924,26],[1768,17,1924,27,"label"],[1768,22,1924,32],[1768,25,1924,35],[1768,26,1924,36],[1769,12,1925,20],[1769,17,1925,25],[1769,18,1925,26],[1770,14,1925,28],[1770,21,1925,35],[1770,22,1925,36],[1770,23,1925,37],[1770,24,1925,38],[1770,35,1925,49],[1770,39,1925,53],[1770,40,1925,54,"auth"],[1770,44,1925,58],[1770,45,1925,59,"_persistUserIfCurrent"],[1770,66,1925,80],[1770,67,1925,81],[1770,71,1925,85],[1770,72,1925,86],[1770,73,1925,87],[1771,12,1926,20],[1771,17,1926,25],[1771,18,1926,26],[1772,14,1927,24,"_a"],[1772,16,1927,26],[1772,17,1927,27,"sent"],[1772,21,1927,31],[1772,22,1927,32],[1772,23,1927,33],[1773,14,1928,24],[1773,18,1928,28,"tokensRefreshed"],[1773,33,1928,43],[1773,35,1928,45],[1774,16,1929,28],[1774,20,1929,32],[1774,21,1929,33,"auth"],[1774,25,1929,37],[1774,26,1929,38,"_notifyListenersIfCurrent"],[1774,51,1929,63],[1774,52,1929,64],[1774,56,1929,68],[1774,57,1929,69],[1775,14,1930,24],[1776,14,1931,24],[1776,21,1931,31],[1776,22,1931,32],[1776,23,1931,33],[1776,24,1931,34],[1776,35,1931,45],[1777,10,1932,16],[1778,8,1933,12],[1778,9,1933,13],[1778,10,1933,14],[1779,6,1934,8],[1779,7,1934,9],[1779,8,1934,10],[1780,4,1935,4],[1780,5,1935,5],[1781,4,1936,4,"UserImpl"],[1781,12,1936,12],[1781,13,1936,13,"prototype"],[1781,22,1936,22],[1781,23,1936,23,"delete"],[1781,29,1936,29],[1781,32,1936,32],[1781,44,1936,44],[1782,6,1937,8],[1782,13,1937,15,"tslib"],[1782,18,1937,20],[1782,19,1937,21,"__awaiter"],[1782,28,1937,30],[1782,29,1937,31],[1782,33,1937,35],[1782,35,1937,35,"undefined"],[1782,44,1937,35],[1782,46,1937,35,"undefined"],[1782,55,1937,35],[1782,57,1937,53],[1782,69,1937,65],[1783,8,1938,12],[1783,12,1938,16,"idToken"],[1783,19,1938,23],[1784,8,1939,12],[1784,15,1939,19,"tslib"],[1784,20,1939,24],[1784,21,1939,25,"__generator"],[1784,32,1939,36],[1784,33,1939,37],[1784,37,1939,41],[1784,39,1939,43],[1784,49,1939,53,"_a"],[1784,51,1939,55],[1784,53,1939,57],[1785,10,1940,16],[1785,18,1940,24,"_a"],[1785,20,1940,26],[1785,21,1940,27,"label"],[1785,26,1940,32],[1786,12,1941,20],[1786,17,1941,25],[1786,18,1941,26],[1787,14,1942,24],[1787,18,1942,28,"app"],[1787,21,1942,31],[1787,22,1942,32,"_isFirebaseServerApp"],[1787,42,1942,52],[1787,43,1942,53],[1787,47,1942,57],[1787,48,1942,58,"auth"],[1787,52,1942,62],[1787,53,1942,63,"app"],[1787,56,1942,66],[1787,57,1942,67],[1787,59,1942,69],[1788,16,1943,28],[1788,23,1943,35],[1788,24,1943,36],[1788,25,1943,37],[1788,26,1943,38],[1788,38,1943,50,"Promise"],[1788,45,1943,57],[1788,46,1943,58,"reject"],[1788,52,1943,64],[1788,53,1943,65,"_serverAppCurrentUserOperationNotSupportedError"],[1788,100,1943,112],[1788,101,1943,113],[1788,105,1943,117],[1788,106,1943,118,"auth"],[1788,110,1943,122],[1788,111,1943,123],[1788,112,1943,124],[1788,113,1943,125],[1789,14,1944,24],[1790,14,1945,24],[1790,21,1945,31],[1790,22,1945,32],[1790,23,1945,33],[1790,24,1945,34],[1790,35,1945,45],[1790,39,1945,49],[1790,40,1945,50,"getIdToken"],[1790,50,1945,60],[1790,51,1945,61],[1790,52,1945,62],[1790,53,1945,63],[1791,12,1946,20],[1791,17,1946,25],[1791,18,1946,26],[1792,14,1947,24,"idToken"],[1792,21,1947,31],[1792,24,1947,34,"_a"],[1792,26,1947,36],[1792,27,1947,37,"sent"],[1792,31,1947,41],[1792,32,1947,42],[1792,33,1947,43],[1793,14,1948,24],[1793,21,1948,31],[1793,22,1948,32],[1793,23,1948,33],[1793,24,1948,34],[1793,35,1948,45,"_logoutIfInvalidated"],[1793,55,1948,65],[1793,56,1948,66],[1793,60,1948,70],[1793,62,1948,72,"deleteAccount"],[1793,75,1948,85],[1793,76,1948,86],[1793,80,1948,90],[1793,81,1948,91,"auth"],[1793,85,1948,95],[1793,87,1948,97],[1794,16,1948,99,"idToken"],[1794,23,1948,106],[1794,25,1948,108,"idToken"],[1795,14,1948,116],[1795,15,1948,117],[1795,16,1948,118],[1795,17,1948,119],[1795,18,1948,120],[1796,12,1949,20],[1796,17,1949,25],[1796,18,1949,26],[1797,14,1950,24,"_a"],[1797,16,1950,26],[1797,17,1950,27,"sent"],[1797,21,1950,31],[1797,22,1950,32],[1797,23,1950,33],[1798,14,1951,24],[1798,18,1951,28],[1798,19,1951,29,"stsTokenManager"],[1798,34,1951,44],[1798,35,1951,45,"clearRefreshToken"],[1798,52,1951,62],[1798,53,1951,63],[1798,54,1951,64],[1799,14,1952,24],[1800,14,1953,24],[1801,14,1954,24],[1801,21,1954,31],[1801,22,1954,32],[1801,23,1954,33],[1801,24,1954,34],[1801,36,1954,46],[1801,40,1954,50],[1801,41,1954,51,"auth"],[1801,45,1954,55],[1801,46,1954,56,"signOut"],[1801,53,1954,63],[1801,54,1954,64],[1801,55,1954,65],[1801,56,1954,66],[1802,10,1955,16],[1803,8,1956,12],[1803,9,1956,13],[1803,10,1956,14],[1804,6,1957,8],[1804,7,1957,9],[1804,8,1957,10],[1805,4,1958,4],[1805,5,1958,5],[1806,4,1959,4,"UserImpl"],[1806,12,1959,12],[1806,13,1959,13,"prototype"],[1806,22,1959,22],[1806,23,1959,23,"toJSON"],[1806,29,1959,29],[1806,32,1959,32],[1806,44,1959,44],[1807,6,1960,8],[1807,13,1960,15,"tslib"],[1807,18,1960,20],[1807,19,1960,21,"__assign"],[1807,27,1960,29],[1807,28,1960,30,"tslib"],[1807,33,1960,35],[1807,34,1960,36,"__assign"],[1807,42,1960,44],[1807,43,1960,45],[1808,8,1960,47,"uid"],[1808,11,1960,50],[1808,13,1960,52],[1808,17,1960,56],[1808,18,1960,57,"uid"],[1808,21,1960,60],[1809,8,1960,62,"email"],[1809,13,1960,67],[1809,15,1960,69],[1809,19,1960,73],[1809,20,1960,74,"email"],[1809,25,1960,79],[1809,29,1960,83,"undefined"],[1809,38,1960,92],[1810,8,1960,94,"emailVerified"],[1810,21,1960,107],[1810,23,1960,109],[1810,27,1960,113],[1810,28,1960,114,"emailVerified"],[1810,41,1960,127],[1811,8,1960,129,"displayName"],[1811,19,1960,140],[1811,21,1960,142],[1811,25,1960,146],[1811,26,1960,147,"displayName"],[1811,37,1960,158],[1811,41,1960,162,"undefined"],[1811,50,1960,171],[1812,8,1960,173,"isAnonymous"],[1812,19,1960,184],[1812,21,1960,186],[1812,25,1960,190],[1812,26,1960,191,"isAnonymous"],[1812,37,1960,202],[1813,8,1960,204,"photoURL"],[1813,16,1960,212],[1813,18,1960,214],[1813,22,1960,218],[1813,23,1960,219,"photoURL"],[1813,31,1960,227],[1813,35,1960,231,"undefined"],[1813,44,1960,240],[1814,8,1960,242,"phoneNumber"],[1814,19,1960,253],[1814,21,1960,255],[1814,25,1960,259],[1814,26,1960,260,"phoneNumber"],[1814,37,1960,271],[1814,41,1960,275,"undefined"],[1814,50,1960,284],[1815,8,1960,286,"tenantId"],[1815,16,1960,294],[1815,18,1960,296],[1815,22,1960,300],[1815,23,1960,301,"tenantId"],[1815,31,1960,309],[1815,35,1960,313,"undefined"],[1815,44,1960,322],[1816,8,1960,324,"providerData"],[1816,20,1960,336],[1816,22,1960,338],[1816,26,1960,342],[1816,27,1960,343,"providerData"],[1816,39,1960,355],[1816,40,1960,356,"map"],[1816,43,1960,359],[1816,44,1960,360],[1816,54,1960,370,"userInfo"],[1816,62,1960,378],[1816,64,1960,380],[1817,10,1960,382],[1817,17,1960,390,"tslib"],[1817,22,1960,395],[1817,23,1960,396,"__assign"],[1817,31,1960,404],[1817,32,1960,405],[1817,33,1960,406],[1817,34,1960,407],[1817,36,1960,409,"userInfo"],[1817,44,1960,417],[1817,45,1960,418],[1818,8,1960,421],[1818,9,1960,422],[1818,10,1960,423],[1819,8,1960,425,"stsTokenManager"],[1819,23,1960,440],[1819,25,1960,442],[1819,29,1960,446],[1819,30,1960,447,"stsTokenManager"],[1819,45,1960,462],[1819,46,1960,463,"toJSON"],[1819,52,1960,469],[1819,53,1960,470],[1819,54,1960,471],[1820,8,1961,12],[1821,8,1962,12],[1822,8,1963,12,"_redirectEventId"],[1822,24,1963,28],[1822,26,1963,30],[1822,30,1963,34],[1822,31,1963,35,"_redirectEventId"],[1823,6,1963,52],[1823,7,1963,53],[1823,9,1963,55],[1823,13,1963,59],[1823,14,1963,60,"metadata"],[1823,22,1963,68],[1823,23,1963,69,"toJSON"],[1823,29,1963,75],[1823,30,1963,76],[1823,31,1963,77],[1823,32,1963,78],[1823,34,1963,80],[1824,8,1964,12],[1825,8,1965,12,"apiKey"],[1825,14,1965,18],[1825,16,1965,20],[1825,20,1965,24],[1825,21,1965,25,"auth"],[1825,25,1965,29],[1825,26,1965,30,"config"],[1825,32,1965,36],[1825,33,1965,37,"apiKey"],[1825,39,1965,43],[1826,8,1965,45,"appName"],[1826,15,1965,52],[1826,17,1965,54],[1826,21,1965,58],[1826,22,1965,59,"auth"],[1826,26,1965,63],[1826,27,1965,64,"name"],[1827,6,1965,69],[1827,7,1965,70],[1827,8,1965,71],[1828,4,1966,4],[1828,5,1966,5],[1829,4,1967,4,"Object"],[1829,10,1967,10],[1829,11,1967,11,"defineProperty"],[1829,25,1967,25],[1829,26,1967,26,"UserImpl"],[1829,34,1967,34],[1829,35,1967,35,"prototype"],[1829,44,1967,44],[1829,46,1967,46],[1829,60,1967,60],[1829,62,1967,62],[1830,6,1968,8,"get"],[1830,9,1968,11],[1830,11,1968,13],[1830,20,1968,13,"get"],[1830,21,1968,13],[1830,23,1968,25],[1831,8,1969,12],[1831,15,1969,19],[1831,19,1969,23],[1831,20,1969,24,"stsTokenManager"],[1831,35,1969,39],[1831,36,1969,40,"refreshToken"],[1831,48,1969,52],[1831,52,1969,56],[1831,54,1969,58],[1832,6,1970,8],[1832,7,1970,9],[1833,6,1971,8,"enumerable"],[1833,16,1971,18],[1833,18,1971,20],[1833,23,1971,25],[1834,6,1972,8,"configurable"],[1834,18,1972,20],[1834,20,1972,22],[1835,4,1973,4],[1835,5,1973,5],[1835,6,1973,6],[1836,4,1974,4,"UserImpl"],[1836,12,1974,12],[1836,13,1974,13,"_fromJSON"],[1836,22,1974,22],[1836,25,1974,25],[1836,35,1974,35,"auth"],[1836,39,1974,39],[1836,41,1974,41,"object"],[1836,47,1974,47],[1836,49,1974,49],[1837,6,1975,8],[1837,10,1975,12,"_a"],[1837,12,1975,14],[1837,14,1975,16,"_b"],[1837,16,1975,18],[1837,18,1975,20,"_c"],[1837,20,1975,22],[1837,22,1975,24,"_d"],[1837,24,1975,26],[1837,26,1975,28,"_e"],[1837,28,1975,30],[1837,30,1975,32,"_f"],[1837,32,1975,34],[1837,34,1975,36,"_g"],[1837,36,1975,38],[1837,38,1975,40,"_h"],[1837,40,1975,42],[1838,6,1976,8],[1838,10,1976,12,"displayName"],[1838,21,1976,23],[1838,24,1976,26],[1838,25,1976,27,"_a"],[1838,27,1976,29],[1838,30,1976,32,"object"],[1838,36,1976,38],[1838,37,1976,39,"displayName"],[1838,48,1976,50],[1838,54,1976,56],[1838,58,1976,60],[1838,62,1976,64,"_a"],[1838,64,1976,66],[1838,69,1976,66,"undefined"],[1838,78,1976,77],[1838,81,1976,80,"_a"],[1838,83,1976,82],[1838,86,1976,85,"undefined"],[1838,95,1976,94],[1839,6,1977,8],[1839,10,1977,12,"email"],[1839,15,1977,17],[1839,18,1977,20],[1839,19,1977,21,"_b"],[1839,21,1977,23],[1839,24,1977,26,"object"],[1839,30,1977,32],[1839,31,1977,33,"email"],[1839,36,1977,38],[1839,42,1977,44],[1839,46,1977,48],[1839,50,1977,52,"_b"],[1839,52,1977,54],[1839,57,1977,54,"undefined"],[1839,66,1977,65],[1839,69,1977,68,"_b"],[1839,71,1977,70],[1839,74,1977,73,"undefined"],[1839,83,1977,82],[1840,6,1978,8],[1840,10,1978,12,"phoneNumber"],[1840,21,1978,23],[1840,24,1978,26],[1840,25,1978,27,"_c"],[1840,27,1978,29],[1840,30,1978,32,"object"],[1840,36,1978,38],[1840,37,1978,39,"phoneNumber"],[1840,48,1978,50],[1840,54,1978,56],[1840,58,1978,60],[1840,62,1978,64,"_c"],[1840,64,1978,66],[1840,69,1978,66,"undefined"],[1840,78,1978,77],[1840,81,1978,80,"_c"],[1840,83,1978,82],[1840,86,1978,85,"undefined"],[1840,95,1978,94],[1841,6,1979,8],[1841,10,1979,12,"photoURL"],[1841,18,1979,20],[1841,21,1979,23],[1841,22,1979,24,"_d"],[1841,24,1979,26],[1841,27,1979,29,"object"],[1841,33,1979,35],[1841,34,1979,36,"photoURL"],[1841,42,1979,44],[1841,48,1979,50],[1841,52,1979,54],[1841,56,1979,58,"_d"],[1841,58,1979,60],[1841,63,1979,60,"undefined"],[1841,72,1979,71],[1841,75,1979,74,"_d"],[1841,77,1979,76],[1841,80,1979,79,"undefined"],[1841,89,1979,88],[1842,6,1980,8],[1842,10,1980,12,"tenantId"],[1842,18,1980,20],[1842,21,1980,23],[1842,22,1980,24,"_e"],[1842,24,1980,26],[1842,27,1980,29,"object"],[1842,33,1980,35],[1842,34,1980,36,"tenantId"],[1842,42,1980,44],[1842,48,1980,50],[1842,52,1980,54],[1842,56,1980,58,"_e"],[1842,58,1980,60],[1842,63,1980,60,"undefined"],[1842,72,1980,71],[1842,75,1980,74,"_e"],[1842,77,1980,76],[1842,80,1980,79,"undefined"],[1842,89,1980,88],[1843,6,1981,8],[1843,10,1981,12,"_redirectEventId"],[1843,26,1981,28],[1843,29,1981,31],[1843,30,1981,32,"_f"],[1843,32,1981,34],[1843,35,1981,37,"object"],[1843,41,1981,43],[1843,42,1981,44,"_redirectEventId"],[1843,58,1981,60],[1843,64,1981,66],[1843,68,1981,70],[1843,72,1981,74,"_f"],[1843,74,1981,76],[1843,79,1981,76,"undefined"],[1843,88,1981,87],[1843,91,1981,90,"_f"],[1843,93,1981,92],[1843,96,1981,95,"undefined"],[1843,105,1981,104],[1844,6,1982,8],[1844,10,1982,12,"createdAt"],[1844,19,1982,21],[1844,22,1982,24],[1844,23,1982,25,"_g"],[1844,25,1982,27],[1844,28,1982,30,"object"],[1844,34,1982,36],[1844,35,1982,37,"createdAt"],[1844,44,1982,46],[1844,50,1982,52],[1844,54,1982,56],[1844,58,1982,60,"_g"],[1844,60,1982,62],[1844,65,1982,62,"undefined"],[1844,74,1982,73],[1844,77,1982,76,"_g"],[1844,79,1982,78],[1844,82,1982,81,"undefined"],[1844,91,1982,90],[1845,6,1983,8],[1845,10,1983,12,"lastLoginAt"],[1845,21,1983,23],[1845,24,1983,26],[1845,25,1983,27,"_h"],[1845,27,1983,29],[1845,30,1983,32,"object"],[1845,36,1983,38],[1845,37,1983,39,"lastLoginAt"],[1845,48,1983,50],[1845,54,1983,56],[1845,58,1983,60],[1845,62,1983,64,"_h"],[1845,64,1983,66],[1845,69,1983,66,"undefined"],[1845,78,1983,77],[1845,81,1983,80,"_h"],[1845,83,1983,82],[1845,86,1983,85,"undefined"],[1845,95,1983,94],[1846,6,1984,8],[1846,10,1984,12,"uid"],[1846,13,1984,15],[1846,16,1984,18,"object"],[1846,22,1984,24],[1846,23,1984,25,"uid"],[1846,26,1984,28],[1847,8,1984,30,"emailVerified"],[1847,21,1984,43],[1847,24,1984,46,"object"],[1847,30,1984,52],[1847,31,1984,53,"emailVerified"],[1847,44,1984,66],[1848,8,1984,68,"isAnonymous"],[1848,19,1984,79],[1848,22,1984,82,"object"],[1848,28,1984,88],[1848,29,1984,89,"isAnonymous"],[1848,40,1984,100],[1849,8,1984,102,"providerData"],[1849,20,1984,114],[1849,23,1984,117,"object"],[1849,29,1984,123],[1849,30,1984,124,"providerData"],[1849,42,1984,136],[1850,8,1984,138,"plainObjectTokenManager"],[1850,31,1984,161],[1850,34,1984,164,"object"],[1850,40,1984,170],[1850,41,1984,171,"stsTokenManager"],[1850,56,1984,186],[1851,6,1985,8,"_assert"],[1851,13,1985,15],[1851,14,1985,16,"uid"],[1851,17,1985,19],[1851,21,1985,23,"plainObjectTokenManager"],[1851,44,1985,46],[1851,46,1985,48,"auth"],[1851,50,1985,52],[1851,52,1985,54],[1851,68,1985,70],[1851,69,1985,71],[1851,103,1985,105],[1851,104,1985,106],[1852,6,1986,8],[1852,10,1986,12,"stsTokenManager"],[1852,25,1986,27],[1852,28,1986,30,"StsTokenManager"],[1852,43,1986,45],[1852,44,1986,46,"fromJSON"],[1852,52,1986,54],[1852,53,1986,55],[1852,57,1986,59],[1852,58,1986,60,"name"],[1852,62,1986,64],[1852,64,1986,66,"plainObjectTokenManager"],[1852,87,1986,89],[1852,88,1986,90],[1853,6,1987,8,"_assert"],[1853,13,1987,15],[1853,14,1987,16],[1853,21,1987,23,"uid"],[1853,24,1987,26],[1853,29,1987,31],[1853,37,1987,39],[1853,39,1987,41,"auth"],[1853,43,1987,45],[1853,45,1987,47],[1853,61,1987,63],[1853,62,1987,64],[1853,96,1987,98],[1853,97,1987,99],[1854,6,1988,8,"assertStringOrUndefined"],[1854,29,1988,31],[1854,30,1988,32,"displayName"],[1854,41,1988,43],[1854,43,1988,45,"auth"],[1854,47,1988,49],[1854,48,1988,50,"name"],[1854,52,1988,54],[1854,53,1988,55],[1855,6,1989,8,"assertStringOrUndefined"],[1855,29,1989,31],[1855,30,1989,32,"email"],[1855,35,1989,37],[1855,37,1989,39,"auth"],[1855,41,1989,43],[1855,42,1989,44,"name"],[1855,46,1989,48],[1855,47,1989,49],[1856,6,1990,8,"_assert"],[1856,13,1990,15],[1856,14,1990,16],[1856,21,1990,23,"emailVerified"],[1856,34,1990,36],[1856,39,1990,41],[1856,48,1990,50],[1856,50,1990,52,"auth"],[1856,54,1990,56],[1856,56,1990,58],[1856,72,1990,74],[1856,73,1990,75],[1856,107,1990,109],[1856,108,1990,110],[1857,6,1991,8,"_assert"],[1857,13,1991,15],[1857,14,1991,16],[1857,21,1991,23,"isAnonymous"],[1857,32,1991,34],[1857,37,1991,39],[1857,46,1991,48],[1857,48,1991,50,"auth"],[1857,52,1991,54],[1857,54,1991,56],[1857,70,1991,72],[1857,71,1991,73],[1857,105,1991,107],[1857,106,1991,108],[1858,6,1992,8,"assertStringOrUndefined"],[1858,29,1992,31],[1858,30,1992,32,"phoneNumber"],[1858,41,1992,43],[1858,43,1992,45,"auth"],[1858,47,1992,49],[1858,48,1992,50,"name"],[1858,52,1992,54],[1858,53,1992,55],[1859,6,1993,8,"assertStringOrUndefined"],[1859,29,1993,31],[1859,30,1993,32,"photoURL"],[1859,38,1993,40],[1859,40,1993,42,"auth"],[1859,44,1993,46],[1859,45,1993,47,"name"],[1859,49,1993,51],[1859,50,1993,52],[1860,6,1994,8,"assertStringOrUndefined"],[1860,29,1994,31],[1860,30,1994,32,"tenantId"],[1860,38,1994,40],[1860,40,1994,42,"auth"],[1860,44,1994,46],[1860,45,1994,47,"name"],[1860,49,1994,51],[1860,50,1994,52],[1861,6,1995,8,"assertStringOrUndefined"],[1861,29,1995,31],[1861,30,1995,32,"_redirectEventId"],[1861,46,1995,48],[1861,48,1995,50,"auth"],[1861,52,1995,54],[1861,53,1995,55,"name"],[1861,57,1995,59],[1861,58,1995,60],[1862,6,1996,8,"assertStringOrUndefined"],[1862,29,1996,31],[1862,30,1996,32,"createdAt"],[1862,39,1996,41],[1862,41,1996,43,"auth"],[1862,45,1996,47],[1862,46,1996,48,"name"],[1862,50,1996,52],[1862,51,1996,53],[1863,6,1997,8,"assertStringOrUndefined"],[1863,29,1997,31],[1863,30,1997,32,"lastLoginAt"],[1863,41,1997,43],[1863,43,1997,45,"auth"],[1863,47,1997,49],[1863,48,1997,50,"name"],[1863,52,1997,54],[1863,53,1997,55],[1864,6,1998,8],[1864,10,1998,12,"user"],[1864,14,1998,16],[1864,17,1998,19],[1864,21,1998,23,"UserImpl"],[1864,29,1998,31],[1864,30,1998,32],[1865,8,1999,12,"uid"],[1865,11,1999,15],[1865,13,1999,17,"uid"],[1865,16,1999,20],[1866,8,2000,12,"auth"],[1866,12,2000,16],[1866,14,2000,18,"auth"],[1866,18,2000,22],[1867,8,2001,12,"email"],[1867,13,2001,17],[1867,15,2001,19,"email"],[1867,20,2001,24],[1868,8,2002,12,"emailVerified"],[1868,21,2002,25],[1868,23,2002,27,"emailVerified"],[1868,36,2002,40],[1869,8,2003,12,"displayName"],[1869,19,2003,23],[1869,21,2003,25,"displayName"],[1869,32,2003,36],[1870,8,2004,12,"isAnonymous"],[1870,19,2004,23],[1870,21,2004,25,"isAnonymous"],[1870,32,2004,36],[1871,8,2005,12,"photoURL"],[1871,16,2005,20],[1871,18,2005,22,"photoURL"],[1871,26,2005,30],[1872,8,2006,12,"phoneNumber"],[1872,19,2006,23],[1872,21,2006,25,"phoneNumber"],[1872,32,2006,36],[1873,8,2007,12,"tenantId"],[1873,16,2007,20],[1873,18,2007,22,"tenantId"],[1873,26,2007,30],[1874,8,2008,12,"stsTokenManager"],[1874,23,2008,27],[1874,25,2008,29,"stsTokenManager"],[1874,40,2008,44],[1875,8,2009,12,"createdAt"],[1875,17,2009,21],[1875,19,2009,23,"createdAt"],[1875,28,2009,32],[1876,8,2010,12,"lastLoginAt"],[1876,19,2010,23],[1876,21,2010,25,"lastLoginAt"],[1877,6,2011,8],[1877,7,2011,9],[1877,8,2011,10],[1878,6,2012,8],[1878,10,2012,12,"providerData"],[1878,22,2012,24],[1878,26,2012,28,"Array"],[1878,31,2012,33],[1878,32,2012,34,"isArray"],[1878,39,2012,41],[1878,40,2012,42,"providerData"],[1878,52,2012,54],[1878,53,2012,55],[1878,55,2012,57],[1879,8,2013,12,"user"],[1879,12,2013,16],[1879,13,2013,17,"providerData"],[1879,25,2013,29],[1879,28,2013,32,"providerData"],[1879,40,2013,44],[1879,41,2013,45,"map"],[1879,44,2013,48],[1879,45,2013,49],[1879,55,2013,59,"userInfo"],[1879,63,2013,67],[1879,65,2013,69],[1880,10,2013,71],[1880,17,2013,79,"tslib"],[1880,22,2013,84],[1880,23,2013,85,"__assign"],[1880,31,2013,93],[1880,32,2013,94],[1880,33,2013,95],[1880,34,2013,96],[1880,36,2013,98,"userInfo"],[1880,44,2013,106],[1880,45,2013,107],[1881,8,2013,110],[1881,9,2013,111],[1881,10,2013,112],[1882,6,2014,8],[1883,6,2015,8],[1883,10,2015,12,"_redirectEventId"],[1883,26,2015,28],[1883,28,2015,30],[1884,8,2016,12,"user"],[1884,12,2016,16],[1884,13,2016,17,"_redirectEventId"],[1884,29,2016,33],[1884,32,2016,36,"_redirectEventId"],[1884,48,2016,52],[1885,6,2017,8],[1886,6,2018,8],[1886,13,2018,15,"user"],[1886,17,2018,19],[1887,4,2019,4],[1887,5,2019,5],[1888,4,2020,4],[1889,0,2021,0],[1890,0,2022,0],[1891,0,2023,0],[1892,0,2024,0],[1893,4,2025,4,"UserImpl"],[1893,12,2025,12],[1893,13,2025,13,"_fromIdTokenResponse"],[1893,33,2025,33],[1893,36,2025,36],[1893,46,2025,46,"auth"],[1893,50,2025,50],[1893,52,2025,52,"idTokenResponse"],[1893,67,2025,67],[1893,69,2025,69,"isAnonymous"],[1893,80,2025,80],[1893,82,2025,82],[1894,6,2026,8],[1894,10,2026,12,"isAnonymous"],[1894,21,2026,23],[1894,26,2026,23,"undefined"],[1894,35,2026,34],[1894,37,2026,36],[1895,8,2026,38,"isAnonymous"],[1895,19,2026,49],[1895,22,2026,52],[1895,27,2026,57],[1896,6,2026,59],[1897,6,2027,8],[1897,13,2027,15,"tslib"],[1897,18,2027,20],[1897,19,2027,21,"__awaiter"],[1897,28,2027,30],[1897,29,2027,31],[1897,33,2027,35],[1897,35,2027,35,"undefined"],[1897,44,2027,35],[1897,46,2027,35,"undefined"],[1897,55,2027,35],[1897,57,2027,53],[1897,69,2027,65],[1898,8,2028,12],[1898,12,2028,16,"stsTokenManager"],[1898,27,2028,31],[1898,29,2028,33,"user"],[1898,33,2028,37],[1899,8,2029,12],[1899,15,2029,19,"tslib"],[1899,20,2029,24],[1899,21,2029,25,"__generator"],[1899,32,2029,36],[1899,33,2029,37],[1899,37,2029,41],[1899,39,2029,43],[1899,49,2029,53,"_a"],[1899,51,2029,55],[1899,53,2029,57],[1900,10,2030,16],[1900,18,2030,24,"_a"],[1900,20,2030,26],[1900,21,2030,27,"label"],[1900,26,2030,32],[1901,12,2031,20],[1901,17,2031,25],[1901,18,2031,26],[1902,14,2032,24,"stsTokenManager"],[1902,29,2032,39],[1902,32,2032,42],[1902,36,2032,46,"StsTokenManager"],[1902,51,2032,61],[1902,52,2032,62],[1902,53,2032,63],[1903,14,2033,24,"stsTokenManager"],[1903,29,2033,39],[1903,30,2033,40,"updateFromServerResponse"],[1903,54,2033,64],[1903,55,2033,65,"idTokenResponse"],[1903,70,2033,80],[1903,71,2033,81],[1904,14,2034,24,"user"],[1904,18,2034,28],[1904,21,2034,31],[1904,25,2034,35,"UserImpl"],[1904,33,2034,43],[1904,34,2034,44],[1905,16,2035,28,"uid"],[1905,19,2035,31],[1905,21,2035,33,"idTokenResponse"],[1905,36,2035,48],[1905,37,2035,49,"localId"],[1905,44,2035,56],[1906,16,2036,28,"auth"],[1906,20,2036,32],[1906,22,2036,34,"auth"],[1906,26,2036,38],[1907,16,2037,28,"stsTokenManager"],[1907,31,2037,43],[1907,33,2037,45,"stsTokenManager"],[1907,48,2037,60],[1908,16,2038,28,"isAnonymous"],[1908,27,2038,39],[1908,29,2038,41,"isAnonymous"],[1909,14,2039,24],[1909,15,2039,25],[1909,16,2039,26],[1910,14,2040,24],[1911,14,2041,24],[1911,21,2041,31],[1911,22,2041,32],[1911,23,2041,33],[1911,24,2041,34],[1911,35,2041,45,"_reloadWithoutSaving"],[1911,55,2041,65],[1911,56,2041,66,"user"],[1911,60,2041,70],[1911,61,2041,71],[1911,62,2041,72],[1912,12,2042,20],[1912,17,2042,25],[1912,18,2042,26],[1913,14,2043,24],[1914,14,2044,24,"_a"],[1914,16,2044,26],[1914,17,2044,27,"sent"],[1914,21,2044,31],[1914,22,2044,32],[1914,23,2044,33],[1915,14,2045,24],[1915,21,2045,31],[1915,22,2045,32],[1915,23,2045,33],[1915,24,2045,34],[1915,36,2045,46,"user"],[1915,40,2045,50],[1915,41,2045,51],[1916,10,2046,16],[1917,8,2047,12],[1917,9,2047,13],[1917,10,2047,14],[1918,6,2048,8],[1918,7,2048,9],[1918,8,2048,10],[1919,4,2049,4],[1919,5,2049,5],[1920,4,2050,4],[1921,0,2051,0],[1922,0,2052,0],[1923,0,2053,0],[1924,0,2054,0],[1925,4,2055,4,"UserImpl"],[1925,12,2055,12],[1925,13,2055,13,"_fromGetAccountInfoResponse"],[1925,40,2055,40],[1925,43,2055,43],[1925,53,2055,53,"auth"],[1925,57,2055,57],[1925,59,2055,59,"response"],[1925,67,2055,67],[1925,69,2055,69,"idToken"],[1925,76,2055,76],[1925,78,2055,78],[1926,6,2056,8],[1926,13,2056,15,"tslib"],[1926,18,2056,20],[1926,19,2056,21,"__awaiter"],[1926,28,2056,30],[1926,29,2056,31],[1926,33,2056,35],[1926,35,2056,35,"undefined"],[1926,44,2056,35],[1926,46,2056,35,"undefined"],[1926,55,2056,35],[1926,57,2056,53],[1926,69,2056,65],[1927,8,2057,12],[1927,12,2057,16,"coreAccount"],[1927,23,2057,27],[1927,25,2057,29,"providerData"],[1927,37,2057,41],[1927,39,2057,43,"isAnonymous"],[1927,50,2057,54],[1927,52,2057,56,"stsTokenManager"],[1927,67,2057,71],[1927,69,2057,73,"user"],[1927,73,2057,77],[1927,75,2057,79,"updates"],[1927,82,2057,86],[1928,8,2058,12],[1928,15,2058,19,"tslib"],[1928,20,2058,24],[1928,21,2058,25,"__generator"],[1928,32,2058,36],[1928,33,2058,37],[1928,37,2058,41],[1928,39,2058,43],[1928,49,2058,53,"_a"],[1928,51,2058,55],[1928,53,2058,57],[1929,10,2059,16,"coreAccount"],[1929,21,2059,27],[1929,24,2059,30,"response"],[1929,32,2059,38],[1929,33,2059,39,"users"],[1929,38,2059,44],[1929,39,2059,45],[1929,40,2059,46],[1929,41,2059,47],[1930,10,2060,16,"_assert"],[1930,17,2060,23],[1930,18,2060,24,"coreAccount"],[1930,29,2060,35],[1930,30,2060,36,"localId"],[1930,37,2060,43],[1930,42,2060,48,"undefined"],[1930,51,2060,57],[1930,53,2060,59],[1930,69,2060,75],[1930,70,2060,76],[1930,104,2060,110],[1930,105,2060,111],[1931,10,2061,16,"providerData"],[1931,22,2061,28],[1931,25,2061,31,"coreAccount"],[1931,36,2061,42],[1931,37,2061,43,"providerUserInfo"],[1931,53,2061,59],[1931,58,2061,64,"undefined"],[1931,67,2061,73],[1931,70,2062,22,"extractProviderData"],[1931,89,2062,41],[1931,90,2062,42,"coreAccount"],[1931,101,2062,53],[1931,102,2062,54,"providerUserInfo"],[1931,118,2062,70],[1931,119,2062,71],[1931,122,2063,22],[1931,124,2063,24],[1932,10,2064,16,"isAnonymous"],[1932,21,2064,27],[1932,24,2064,30],[1932,26,2064,32,"coreAccount"],[1932,37,2064,43],[1932,38,2064,44,"email"],[1932,43,2064,49],[1932,47,2064,53,"coreAccount"],[1932,58,2064,64],[1932,59,2064,65,"passwordHash"],[1932,71,2064,77],[1932,72,2064,78],[1932,76,2064,82],[1932,78,2064,84,"providerData"],[1932,90,2064,96],[1932,95,2064,101],[1932,99,2064,105],[1932,103,2064,109,"providerData"],[1932,115,2064,121],[1932,120,2064,121,"undefined"],[1932,129,2064,132],[1932,132,2064,132,"undefined"],[1932,141,2064,132],[1932,144,2064,144,"providerData"],[1932,156,2064,156],[1932,157,2064,157,"length"],[1932,163,2064,163],[1932,164,2064,164],[1933,10,2065,16,"stsTokenManager"],[1933,25,2065,31],[1933,28,2065,34],[1933,32,2065,38,"StsTokenManager"],[1933,47,2065,53],[1933,48,2065,54],[1933,49,2065,55],[1934,10,2066,16,"stsTokenManager"],[1934,25,2066,31],[1934,26,2066,32,"updateFromIdToken"],[1934,43,2066,49],[1934,44,2066,50,"idToken"],[1934,51,2066,57],[1934,52,2066,58],[1935,10,2067,16,"user"],[1935,14,2067,20],[1935,17,2067,23],[1935,21,2067,27,"UserImpl"],[1935,29,2067,35],[1935,30,2067,36],[1936,12,2068,20,"uid"],[1936,15,2068,23],[1936,17,2068,25,"coreAccount"],[1936,28,2068,36],[1936,29,2068,37,"localId"],[1936,36,2068,44],[1937,12,2069,20,"auth"],[1937,16,2069,24],[1937,18,2069,26,"auth"],[1937,22,2069,30],[1938,12,2070,20,"stsTokenManager"],[1938,27,2070,35],[1938,29,2070,37,"stsTokenManager"],[1938,44,2070,52],[1939,12,2071,20,"isAnonymous"],[1939,23,2071,31],[1939,25,2071,33,"isAnonymous"],[1940,10,2072,16],[1940,11,2072,17],[1940,12,2072,18],[1941,10,2073,16,"updates"],[1941,17,2073,23],[1941,20,2073,26],[1942,12,2074,20,"uid"],[1942,15,2074,23],[1942,17,2074,25,"coreAccount"],[1942,28,2074,36],[1942,29,2074,37,"localId"],[1942,36,2074,44],[1943,12,2075,20,"displayName"],[1943,23,2075,31],[1943,25,2075,33,"coreAccount"],[1943,36,2075,44],[1943,37,2075,45,"displayName"],[1943,48,2075,56],[1943,52,2075,60],[1943,56,2075,64],[1944,12,2076,20,"photoURL"],[1944,20,2076,28],[1944,22,2076,30,"coreAccount"],[1944,33,2076,41],[1944,34,2076,42,"photoUrl"],[1944,42,2076,50],[1944,46,2076,54],[1944,50,2076,58],[1945,12,2077,20,"email"],[1945,17,2077,25],[1945,19,2077,27,"coreAccount"],[1945,30,2077,38],[1945,31,2077,39,"email"],[1945,36,2077,44],[1945,40,2077,48],[1945,44,2077,52],[1946,12,2078,20,"emailVerified"],[1946,25,2078,33],[1946,27,2078,35,"coreAccount"],[1946,38,2078,46],[1946,39,2078,47,"emailVerified"],[1946,52,2078,60],[1946,56,2078,64],[1946,61,2078,69],[1947,12,2079,20,"phoneNumber"],[1947,23,2079,31],[1947,25,2079,33,"coreAccount"],[1947,36,2079,44],[1947,37,2079,45,"phoneNumber"],[1947,48,2079,56],[1947,52,2079,60],[1947,56,2079,64],[1948,12,2080,20,"tenantId"],[1948,20,2080,28],[1948,22,2080,30,"coreAccount"],[1948,33,2080,41],[1948,34,2080,42,"tenantId"],[1948,42,2080,50],[1948,46,2080,54],[1948,50,2080,58],[1949,12,2081,20,"providerData"],[1949,24,2081,32],[1949,26,2081,34,"providerData"],[1949,38,2081,46],[1950,12,2082,20,"metadata"],[1950,20,2082,28],[1950,22,2082,30],[1950,26,2082,34,"UserMetadata"],[1950,38,2082,46],[1950,39,2082,47,"coreAccount"],[1950,50,2082,58],[1950,51,2082,59,"createdAt"],[1950,60,2082,68],[1950,62,2082,70,"coreAccount"],[1950,73,2082,81],[1950,74,2082,82,"lastLoginAt"],[1950,85,2082,93],[1950,86,2082,94],[1951,12,2083,20,"isAnonymous"],[1951,23,2083,31],[1951,25,2083,33],[1951,27,2083,35,"coreAccount"],[1951,38,2083,46],[1951,39,2083,47,"email"],[1951,44,2083,52],[1951,48,2083,56,"coreAccount"],[1951,59,2083,67],[1951,60,2083,68,"passwordHash"],[1951,72,2083,80],[1951,73,2083,81],[1951,77,2084,24],[1951,79,2084,26,"providerData"],[1951,91,2084,38],[1951,96,2084,43],[1951,100,2084,47],[1951,104,2084,51,"providerData"],[1951,116,2084,63],[1951,121,2084,63,"undefined"],[1951,130,2084,74],[1951,133,2084,74,"undefined"],[1951,142,2084,74],[1951,145,2084,86,"providerData"],[1951,157,2084,98],[1951,158,2084,99,"length"],[1951,164,2084,105],[1952,10,2085,16],[1952,11,2085,17],[1953,10,2086,16,"Object"],[1953,16,2086,22],[1953,17,2086,23,"assign"],[1953,23,2086,29],[1953,24,2086,30,"user"],[1953,28,2086,34],[1953,30,2086,36,"updates"],[1953,37,2086,43],[1953,38,2086,44],[1954,10,2087,16],[1954,17,2087,23],[1954,18,2087,24],[1954,19,2087,25],[1954,20,2087,26],[1954,32,2087,38,"user"],[1954,36,2087,42],[1954,37,2087,43],[1955,8,2088,12],[1955,9,2088,13],[1955,10,2088,14],[1956,6,2089,8],[1956,7,2089,9],[1956,8,2089,10],[1957,4,2090,4],[1957,5,2090,5],[1958,4,2091,4],[1958,11,2091,11,"UserImpl"],[1958,19,2091,19],[1959,2,2092,0],[1959,3,2092,1],[1959,4,2092,2],[1959,5,2092,4],[1961,2,2094,0],[1962,0,2095,0],[1963,0,2096,0],[1964,0,2097,0],[1965,0,2098,0],[1966,0,2099,0],[1967,0,2100,0],[1968,0,2101,0],[1969,0,2102,0],[1970,0,2103,0],[1971,0,2104,0],[1972,0,2105,0],[1973,0,2106,0],[1974,0,2107,0],[1975,0,2108,0],[1976,0,2109,0],[1977,2,2110,0],[1977,6,2110,4,"instanceCache"],[1977,19,2110,17],[1977,22,2110,20],[1977,26,2110,24,"Map"],[1977,29,2110,27],[1977,30,2110,28],[1977,31,2110,29],[1978,2,2111,0],[1978,11,2111,9,"_getInstance"],[1978,23,2111,21,"_getInstance"],[1978,24,2111,22,"cls"],[1978,27,2111,25],[1978,29,2111,27],[1979,4,2112,4,"debugAssert"],[1979,15,2112,15],[1979,16,2112,16,"cls"],[1979,19,2112,19],[1979,31,2112,31,"Function"],[1979,39,2112,39],[1979,41,2112,41],[1979,70,2112,70],[1979,71,2112,71],[1980,4,2113,4],[1980,8,2113,8,"instance"],[1980,16,2113,16],[1980,19,2113,19,"instanceCache"],[1980,32,2113,32],[1980,33,2113,33,"get"],[1980,36,2113,36],[1980,37,2113,37,"cls"],[1980,40,2113,40],[1980,41,2113,41],[1981,4,2114,4],[1981,8,2114,8,"instance"],[1981,16,2114,16],[1981,18,2114,18],[1982,6,2115,8,"debugAssert"],[1982,17,2115,19],[1982,18,2115,20,"instance"],[1982,26,2115,28],[1982,38,2115,40,"cls"],[1982,41,2115,43],[1982,43,2115,45],[1982,91,2115,93],[1982,92,2115,94],[1983,6,2116,8],[1983,13,2116,15,"instance"],[1983,21,2116,23],[1984,4,2117,4],[1985,4,2118,4,"instance"],[1985,12,2118,12],[1985,15,2118,15],[1985,19,2118,19,"cls"],[1985,22,2118,22],[1985,23,2118,23],[1985,24,2118,24],[1986,4,2119,4,"instanceCache"],[1986,17,2119,17],[1986,18,2119,18,"set"],[1986,21,2119,21],[1986,22,2119,22,"cls"],[1986,25,2119,25],[1986,27,2119,27,"instance"],[1986,35,2119,35],[1986,36,2119,36],[1987,4,2120,4],[1987,11,2120,11,"instance"],[1987,19,2120,19],[1988,2,2121,0],[1990,2,2123,0],[1991,0,2124,0],[1992,0,2125,0],[1993,0,2126,0],[1994,0,2127,0],[1995,0,2128,0],[1996,0,2129,0],[1997,0,2130,0],[1998,0,2131,0],[1999,0,2132,0],[2000,0,2133,0],[2001,0,2134,0],[2002,0,2135,0],[2003,0,2136,0],[2004,0,2137,0],[2005,0,2138,0],[2006,2,2139,0],[2006,6,2139,4,"InMemoryPersistence"],[2006,25,2139,23],[2006,28,2139,26],[2006,41,2139,41],[2006,53,2139,53],[2007,4,2140,4],[2007,13,2140,13,"InMemoryPersistence"],[2007,32,2140,32,"InMemoryPersistence"],[2007,33,2140,32],[2007,35,2140,35],[2008,6,2141,8],[2008,10,2141,12],[2008,11,2141,13,"type"],[2008,15,2141,17],[2008,18,2141,20],[2008,24,2141,26],[2008,25,2141,27],[2009,6,2142,8],[2009,10,2142,12],[2009,11,2142,13,"storage"],[2009,18,2142,20],[2009,21,2142,23],[2009,22,2142,24],[2009,23,2142,25],[2010,4,2143,4],[2011,4,2144,4,"InMemoryPersistence"],[2011,23,2144,23],[2011,24,2144,24,"prototype"],[2011,33,2144,33],[2011,34,2144,34,"_isAvailable"],[2011,46,2144,46],[2011,49,2144,49],[2011,61,2144,61],[2012,6,2145,8],[2012,13,2145,15,"tslib"],[2012,18,2145,20],[2012,19,2145,21,"__awaiter"],[2012,28,2145,30],[2012,29,2145,31],[2012,33,2145,35],[2012,35,2145,35,"undefined"],[2012,44,2145,35],[2012,46,2145,35,"undefined"],[2012,55,2145,35],[2012,57,2145,53],[2012,69,2145,65],[2013,8,2146,12],[2013,15,2146,19,"tslib"],[2013,20,2146,24],[2013,21,2146,25,"__generator"],[2013,32,2146,36],[2013,33,2146,37],[2013,37,2146,41],[2013,39,2146,43],[2013,49,2146,53,"_a"],[2013,51,2146,55],[2013,53,2146,57],[2014,10,2147,16],[2014,17,2147,23],[2014,18,2147,24],[2014,19,2147,25],[2014,20,2147,26],[2014,32,2147,38],[2014,36,2147,42],[2014,37,2147,43],[2015,8,2148,12],[2015,9,2148,13],[2015,10,2148,14],[2016,6,2149,8],[2016,7,2149,9],[2016,8,2149,10],[2017,4,2150,4],[2017,5,2150,5],[2018,4,2151,4,"InMemoryPersistence"],[2018,23,2151,23],[2018,24,2151,24,"prototype"],[2018,33,2151,33],[2018,34,2151,34,"_set"],[2018,38,2151,38],[2018,41,2151,41],[2018,51,2151,51,"key"],[2018,54,2151,54],[2018,56,2151,56,"value"],[2018,61,2151,61],[2018,63,2151,63],[2019,6,2152,8],[2019,13,2152,15,"tslib"],[2019,18,2152,20],[2019,19,2152,21,"__awaiter"],[2019,28,2152,30],[2019,29,2152,31],[2019,33,2152,35],[2019,35,2152,35,"undefined"],[2019,44,2152,35],[2019,46,2152,35,"undefined"],[2019,55,2152,35],[2019,57,2152,53],[2019,69,2152,65],[2020,8,2153,12],[2020,15,2153,19,"tslib"],[2020,20,2153,24],[2020,21,2153,25,"__generator"],[2020,32,2153,36],[2020,33,2153,37],[2020,37,2153,41],[2020,39,2153,43],[2020,49,2153,53,"_a"],[2020,51,2153,55],[2020,53,2153,57],[2021,10,2154,16],[2021,14,2154,20],[2021,15,2154,21,"storage"],[2021,22,2154,28],[2021,23,2154,29,"key"],[2021,26,2154,32],[2021,27,2154,33],[2021,30,2154,36,"value"],[2021,35,2154,41],[2022,10,2155,16],[2022,17,2155,23],[2022,18,2155,24],[2022,19,2155,25],[2022,20,2155,26],[2022,31,2155,37],[2023,8,2156,12],[2023,9,2156,13],[2023,10,2156,14],[2024,6,2157,8],[2024,7,2157,9],[2024,8,2157,10],[2025,4,2158,4],[2025,5,2158,5],[2026,4,2159,4,"InMemoryPersistence"],[2026,23,2159,23],[2026,24,2159,24,"prototype"],[2026,33,2159,33],[2026,34,2159,34,"_get"],[2026,38,2159,38],[2026,41,2159,41],[2026,51,2159,51,"key"],[2026,54,2159,54],[2026,56,2159,56],[2027,6,2160,8],[2027,13,2160,15,"tslib"],[2027,18,2160,20],[2027,19,2160,21,"__awaiter"],[2027,28,2160,30],[2027,29,2160,31],[2027,33,2160,35],[2027,35,2160,35,"undefined"],[2027,44,2160,35],[2027,46,2160,35,"undefined"],[2027,55,2160,35],[2027,57,2160,53],[2027,69,2160,65],[2028,8,2161,12],[2028,12,2161,16,"value"],[2028,17,2161,21],[2029,8,2162,12],[2029,15,2162,19,"tslib"],[2029,20,2162,24],[2029,21,2162,25,"__generator"],[2029,32,2162,36],[2029,33,2162,37],[2029,37,2162,41],[2029,39,2162,43],[2029,49,2162,53,"_a"],[2029,51,2162,55],[2029,53,2162,57],[2030,10,2163,16,"value"],[2030,15,2163,21],[2030,18,2163,24],[2030,22,2163,28],[2030,23,2163,29,"storage"],[2030,30,2163,36],[2030,31,2163,37,"key"],[2030,34,2163,40],[2030,35,2163,41],[2031,10,2164,16],[2031,17,2164,23],[2031,18,2164,24],[2031,19,2164,25],[2031,20,2164,26],[2031,32,2164,38,"value"],[2031,37,2164,43],[2031,42,2164,48,"undefined"],[2031,51,2164,57],[2031,54,2164,60],[2031,58,2164,64],[2031,61,2164,67,"value"],[2031,66,2164,72],[2031,67,2164,73],[2032,8,2165,12],[2032,9,2165,13],[2032,10,2165,14],[2033,6,2166,8],[2033,7,2166,9],[2033,8,2166,10],[2034,4,2167,4],[2034,5,2167,5],[2035,4,2168,4,"InMemoryPersistence"],[2035,23,2168,23],[2035,24,2168,24,"prototype"],[2035,33,2168,33],[2035,34,2168,34,"_remove"],[2035,41,2168,41],[2035,44,2168,44],[2035,54,2168,54,"key"],[2035,57,2168,57],[2035,59,2168,59],[2036,6,2169,8],[2036,13,2169,15,"tslib"],[2036,18,2169,20],[2036,19,2169,21,"__awaiter"],[2036,28,2169,30],[2036,29,2169,31],[2036,33,2169,35],[2036,35,2169,35,"undefined"],[2036,44,2169,35],[2036,46,2169,35,"undefined"],[2036,55,2169,35],[2036,57,2169,53],[2036,69,2169,65],[2037,8,2170,12],[2037,15,2170,19,"tslib"],[2037,20,2170,24],[2037,21,2170,25,"__generator"],[2037,32,2170,36],[2037,33,2170,37],[2037,37,2170,41],[2037,39,2170,43],[2037,49,2170,53,"_a"],[2037,51,2170,55],[2037,53,2170,57],[2038,10,2171,16],[2038,17,2171,23],[2038,21,2171,27],[2038,22,2171,28,"storage"],[2038,29,2171,35],[2038,30,2171,36,"key"],[2038,33,2171,39],[2038,34,2171,40],[2039,10,2172,16],[2039,17,2172,23],[2039,18,2172,24],[2039,19,2172,25],[2039,20,2172,26],[2039,31,2172,37],[2040,8,2173,12],[2040,9,2173,13],[2040,10,2173,14],[2041,6,2174,8],[2041,7,2174,9],[2041,8,2174,10],[2042,4,2175,4],[2042,5,2175,5],[2043,4,2176,4,"InMemoryPersistence"],[2043,23,2176,23],[2043,24,2176,24,"prototype"],[2043,33,2176,33],[2043,34,2176,34,"_addListener"],[2043,46,2176,46],[2043,49,2176,49],[2043,59,2176,59,"_key"],[2043,63,2176,63],[2043,65,2176,65,"_listener"],[2043,74,2176,74],[2043,76,2176,76],[2044,6,2177,8],[2045,6,2178,8],[2046,4,2179,4],[2046,5,2179,5],[2047,4,2180,4,"InMemoryPersistence"],[2047,23,2180,23],[2047,24,2180,24,"prototype"],[2047,33,2180,33],[2047,34,2180,34,"_removeListener"],[2047,49,2180,49],[2047,52,2180,52],[2047,62,2180,62,"_key"],[2047,66,2180,66],[2047,68,2180,68,"_listener"],[2047,77,2180,77],[2047,79,2180,79],[2048,6,2181,8],[2049,6,2182,8],[2050,4,2183,4],[2050,5,2183,5],[2051,4,2184,4,"InMemoryPersistence"],[2051,23,2184,23],[2051,24,2184,24,"type"],[2051,28,2184,28],[2051,31,2184,31],[2051,37,2184,37],[2052,4,2185,4],[2052,11,2185,11,"InMemoryPersistence"],[2052,30,2185,30],[2053,2,2186,0],[2053,3,2186,1],[2053,4,2186,2],[2053,5,2186,4],[2054,2,2187,0],[2055,0,2188,0],[2056,0,2189,0],[2057,0,2190,0],[2058,0,2191,0],[2059,2,2192,0],[2059,6,2192,4,"inMemoryPersistence"],[2059,25,2192,23],[2059,28,2192,26,"InMemoryPersistence"],[2059,47,2192,45],[2061,2,2194,0],[2062,0,2195,0],[2063,0,2196,0],[2064,0,2197,0],[2065,0,2198,0],[2066,0,2199,0],[2067,0,2200,0],[2068,0,2201,0],[2069,0,2202,0],[2070,0,2203,0],[2071,0,2204,0],[2072,0,2205,0],[2073,0,2206,0],[2074,0,2207,0],[2075,0,2208,0],[2076,0,2209,0],[2077,2,2210,0],[2077,11,2210,9,"_persistenceKeyName"],[2077,30,2210,28,"_persistenceKeyName"],[2077,31,2210,29,"key"],[2077,34,2210,32],[2077,36,2210,34,"apiKey"],[2077,42,2210,40],[2077,44,2210,42,"appName"],[2077,51,2210,49],[2077,53,2210,51],[2078,4,2211,4],[2078,11,2211,11],[2078,13,2211,13],[2078,14,2211,14,"concat"],[2078,20,2211,20],[2078,21,2211,21],[2078,31,2211,31],[2078,32,2211,32],[2078,61,2211,61],[2078,64,2211,64],[2078,65,2211,65],[2078,66,2211,66,"concat"],[2078,72,2211,72],[2078,73,2211,73,"key"],[2078,76,2211,76],[2078,78,2211,78],[2078,81,2211,81],[2078,82,2211,82],[2078,83,2211,83,"concat"],[2078,89,2211,89],[2078,90,2211,90,"apiKey"],[2078,96,2211,96],[2078,98,2211,98],[2078,101,2211,101],[2078,102,2211,102],[2078,103,2211,103,"concat"],[2078,109,2211,109],[2078,110,2211,110,"appName"],[2078,117,2211,117],[2078,118,2211,118],[2079,2,2212,0],[2080,2,2213,0],[2080,6,2213,4,"PersistenceUserManager"],[2080,28,2213,26],[2080,31,2213,29],[2080,44,2213,44],[2080,56,2213,56],[2081,4,2214,4],[2081,13,2214,13,"PersistenceUserManager"],[2081,35,2214,35,"PersistenceUserManager"],[2081,36,2214,36,"persistence"],[2081,47,2214,47],[2081,49,2214,49,"auth"],[2081,53,2214,53],[2081,55,2214,55,"userKey"],[2081,62,2214,62],[2081,64,2214,64],[2082,6,2215,8],[2082,10,2215,12],[2082,11,2215,13,"persistence"],[2082,22,2215,24],[2082,25,2215,27,"persistence"],[2082,36,2215,38],[2083,6,2216,8],[2083,10,2216,12],[2083,11,2216,13,"auth"],[2083,15,2216,17],[2083,18,2216,20,"auth"],[2083,22,2216,24],[2084,6,2217,8],[2084,10,2217,12],[2084,11,2217,13,"userKey"],[2084,18,2217,20],[2084,21,2217,23,"userKey"],[2084,28,2217,30],[2085,6,2218,8],[2085,10,2218,12,"_a"],[2085,12,2218,14],[2085,15,2218,17],[2085,19,2218,21],[2085,20,2218,22,"auth"],[2085,24,2218,26],[2086,8,2218,28,"config"],[2086,14,2218,34],[2086,17,2218,37,"_a"],[2086,19,2218,39],[2086,20,2218,40,"config"],[2086,26,2218,46],[2087,8,2218,48,"name"],[2087,12,2218,52],[2087,15,2218,55,"_a"],[2087,17,2218,57],[2087,18,2218,58,"name"],[2087,22,2218,62],[2088,6,2219,8],[2088,10,2219,12],[2088,11,2219,13,"fullUserKey"],[2088,22,2219,24],[2088,25,2219,27,"_persistenceKeyName"],[2088,44,2219,46],[2088,45,2219,47],[2088,49,2219,51],[2088,50,2219,52,"userKey"],[2088,57,2219,59],[2088,59,2219,61,"config"],[2088,65,2219,67],[2088,66,2219,68,"apiKey"],[2088,72,2219,74],[2088,74,2219,76,"name"],[2088,78,2219,80],[2088,79,2219,81],[2089,6,2220,8],[2089,10,2220,12],[2089,11,2220,13,"fullPersistenceKey"],[2089,29,2220,31],[2089,32,2220,34,"_persistenceKeyName"],[2089,51,2220,53],[2089,52,2220,54],[2089,65,2220,67],[2089,66,2220,68],[2089,98,2220,100,"config"],[2089,104,2220,106],[2089,105,2220,107,"apiKey"],[2089,111,2220,113],[2089,113,2220,115,"name"],[2089,117,2220,119],[2089,118,2220,120],[2090,6,2221,8],[2090,10,2221,12],[2090,11,2221,13,"boundEventHandler"],[2090,28,2221,30],[2090,31,2221,33,"auth"],[2090,35,2221,37],[2090,36,2221,38,"_onStorageEvent"],[2090,51,2221,53],[2090,52,2221,54,"bind"],[2090,56,2221,58],[2090,57,2221,59,"auth"],[2090,61,2221,63],[2090,62,2221,64],[2091,6,2222,8],[2091,10,2222,12],[2091,11,2222,13,"persistence"],[2091,22,2222,24],[2091,23,2222,25,"_addListener"],[2091,35,2222,37],[2091,36,2222,38],[2091,40,2222,42],[2091,41,2222,43,"fullUserKey"],[2091,52,2222,54],[2091,54,2222,56],[2091,58,2222,60],[2091,59,2222,61,"boundEventHandler"],[2091,76,2222,78],[2091,77,2222,79],[2092,4,2223,4],[2093,4,2224,4,"PersistenceUserManager"],[2093,26,2224,26],[2093,27,2224,27,"prototype"],[2093,36,2224,36],[2093,37,2224,37,"setCurrentUser"],[2093,51,2224,51],[2093,54,2224,54],[2093,64,2224,64,"user"],[2093,68,2224,68],[2093,70,2224,70],[2094,6,2225,8],[2094,13,2225,15],[2094,17,2225,19],[2094,18,2225,20,"persistence"],[2094,29,2225,31],[2094,30,2225,32,"_set"],[2094,34,2225,36],[2094,35,2225,37],[2094,39,2225,41],[2094,40,2225,42,"fullUserKey"],[2094,51,2225,53],[2094,53,2225,55,"user"],[2094,57,2225,59],[2094,58,2225,60,"toJSON"],[2094,64,2225,66],[2094,65,2225,67],[2094,66,2225,68],[2094,67,2225,69],[2095,4,2226,4],[2095,5,2226,5],[2096,4,2227,4,"PersistenceUserManager"],[2096,26,2227,26],[2096,27,2227,27,"prototype"],[2096,36,2227,36],[2096,37,2227,37,"getCurrentUser"],[2096,51,2227,51],[2096,54,2227,54],[2096,66,2227,66],[2097,6,2228,8],[2097,13,2228,15,"tslib"],[2097,18,2228,20],[2097,19,2228,21,"__awaiter"],[2097,28,2228,30],[2097,29,2228,31],[2097,33,2228,35],[2097,35,2228,35,"undefined"],[2097,44,2228,35],[2097,46,2228,35,"undefined"],[2097,55,2228,35],[2097,57,2228,53],[2097,69,2228,65],[2098,8,2229,12],[2098,12,2229,16,"blob"],[2098,16,2229,20],[2099,8,2230,12],[2099,15,2230,19,"tslib"],[2099,20,2230,24],[2099,21,2230,25,"__generator"],[2099,32,2230,36],[2099,33,2230,37],[2099,37,2230,41],[2099,39,2230,43],[2099,49,2230,53,"_a"],[2099,51,2230,55],[2099,53,2230,57],[2100,10,2231,16],[2100,18,2231,24,"_a"],[2100,20,2231,26],[2100,21,2231,27,"label"],[2100,26,2231,32],[2101,12,2232,20],[2101,17,2232,25],[2101,18,2232,26],[2102,14,2232,28],[2102,21,2232,35],[2102,22,2232,36],[2102,23,2232,37],[2102,24,2232,38],[2102,35,2232,49],[2102,39,2232,53],[2102,40,2232,54,"persistence"],[2102,51,2232,65],[2102,52,2232,66,"_get"],[2102,56,2232,70],[2102,57,2232,71],[2102,61,2232,75],[2102,62,2232,76,"fullUserKey"],[2102,73,2232,87],[2102,74,2232,88],[2102,75,2232,89],[2103,12,2233,20],[2103,17,2233,25],[2103,18,2233,26],[2104,14,2234,24,"blob"],[2104,18,2234,28],[2104,21,2234,31,"_a"],[2104,23,2234,33],[2104,24,2234,34,"sent"],[2104,28,2234,38],[2104,29,2234,39],[2104,30,2234,40],[2105,14,2235,24],[2105,21,2235,31],[2105,22,2235,32],[2105,23,2235,33],[2105,24,2235,34],[2105,36,2235,46,"blob"],[2105,40,2235,50],[2105,43,2235,53,"UserImpl"],[2105,51,2235,61],[2105,52,2235,62,"_fromJSON"],[2105,61,2235,71],[2105,62,2235,72],[2105,66,2235,76],[2105,67,2235,77,"auth"],[2105,71,2235,81],[2105,73,2235,83,"blob"],[2105,77,2235,87],[2105,78,2235,88],[2105,81,2235,91],[2105,85,2235,95],[2105,86,2235,96],[2106,10,2236,16],[2107,8,2237,12],[2107,9,2237,13],[2107,10,2237,14],[2108,6,2238,8],[2108,7,2238,9],[2108,8,2238,10],[2109,4,2239,4],[2109,5,2239,5],[2110,4,2240,4,"PersistenceUserManager"],[2110,26,2240,26],[2110,27,2240,27,"prototype"],[2110,36,2240,36],[2110,37,2240,37,"removeCurrentUser"],[2110,54,2240,54],[2110,57,2240,57],[2110,69,2240,69],[2111,6,2241,8],[2111,13,2241,15],[2111,17,2241,19],[2111,18,2241,20,"persistence"],[2111,29,2241,31],[2111,30,2241,32,"_remove"],[2111,37,2241,39],[2111,38,2241,40],[2111,42,2241,44],[2111,43,2241,45,"fullUserKey"],[2111,54,2241,56],[2111,55,2241,57],[2112,4,2242,4],[2112,5,2242,5],[2113,4,2243,4,"PersistenceUserManager"],[2113,26,2243,26],[2113,27,2243,27,"prototype"],[2113,36,2243,36],[2113,37,2243,37,"savePersistenceForRedirect"],[2113,63,2243,63],[2113,66,2243,66],[2113,78,2243,78],[2114,6,2244,8],[2114,13,2244,15],[2114,17,2244,19],[2114,18,2244,20,"persistence"],[2114,29,2244,31],[2114,30,2244,32,"_set"],[2114,34,2244,36],[2114,35,2244,37],[2114,39,2244,41],[2114,40,2244,42,"fullPersistenceKey"],[2114,58,2244,60],[2114,60,2244,62],[2114,64,2244,66],[2114,65,2244,67,"persistence"],[2114,76,2244,78],[2114,77,2244,79,"type"],[2114,81,2244,83],[2114,82,2244,84],[2115,4,2245,4],[2115,5,2245,5],[2116,4,2246,4,"PersistenceUserManager"],[2116,26,2246,26],[2116,27,2246,27,"prototype"],[2116,36,2246,36],[2116,37,2246,37,"setPersistence"],[2116,51,2246,51],[2116,54,2246,54],[2116,64,2246,64,"newPersistence"],[2116,78,2246,78],[2116,80,2246,80],[2117,6,2247,8],[2117,13,2247,15,"tslib"],[2117,18,2247,20],[2117,19,2247,21,"__awaiter"],[2117,28,2247,30],[2117,29,2247,31],[2117,33,2247,35],[2117,35,2247,35,"undefined"],[2117,44,2247,35],[2117,46,2247,35,"undefined"],[2117,55,2247,35],[2117,57,2247,53],[2117,69,2247,65],[2118,8,2248,12],[2118,12,2248,16,"currentUser"],[2118,23,2248,27],[2119,8,2249,12],[2119,15,2249,19,"tslib"],[2119,20,2249,24],[2119,21,2249,25,"__generator"],[2119,32,2249,36],[2119,33,2249,37],[2119,37,2249,41],[2119,39,2249,43],[2119,49,2249,53,"_a"],[2119,51,2249,55],[2119,53,2249,57],[2120,10,2250,16],[2120,18,2250,24,"_a"],[2120,20,2250,26],[2120,21,2250,27,"label"],[2120,26,2250,32],[2121,12,2251,20],[2121,17,2251,25],[2121,18,2251,26],[2122,14,2252,24],[2122,18,2252,28],[2122,22,2252,32],[2122,23,2252,33,"persistence"],[2122,34,2252,44],[2122,39,2252,49,"newPersistence"],[2122,53,2252,63],[2122,55,2252,65],[2123,16,2253,28],[2123,23,2253,35],[2123,24,2253,36],[2123,25,2253,37],[2123,26,2253,38],[2123,37,2253,49],[2124,14,2254,24],[2125,14,2255,24],[2125,21,2255,31],[2125,22,2255,32],[2125,23,2255,33],[2125,24,2255,34],[2125,35,2255,45],[2125,39,2255,49],[2125,40,2255,50,"getCurrentUser"],[2125,54,2255,64],[2125,55,2255,65],[2125,56,2255,66],[2125,57,2255,67],[2126,12,2256,20],[2126,17,2256,25],[2126,18,2256,26],[2127,14,2257,24,"currentUser"],[2127,25,2257,35],[2127,28,2257,38,"_a"],[2127,30,2257,40],[2127,31,2257,41,"sent"],[2127,35,2257,45],[2127,36,2257,46],[2127,37,2257,47],[2128,14,2258,24],[2128,21,2258,31],[2128,22,2258,32],[2128,23,2258,33],[2128,24,2258,34],[2128,35,2258,45],[2128,39,2258,49],[2128,40,2258,50,"removeCurrentUser"],[2128,57,2258,67],[2128,58,2258,68],[2128,59,2258,69],[2128,60,2258,70],[2129,12,2259,20],[2129,17,2259,25],[2129,18,2259,26],[2130,14,2260,24,"_a"],[2130,16,2260,26],[2130,17,2260,27,"sent"],[2130,21,2260,31],[2130,22,2260,32],[2130,23,2260,33],[2131,14,2261,24],[2131,18,2261,28],[2131,19,2261,29,"persistence"],[2131,30,2261,40],[2131,33,2261,43,"newPersistence"],[2131,47,2261,57],[2132,14,2262,24],[2132,18,2262,28,"currentUser"],[2132,29,2262,39],[2132,31,2262,41],[2133,16,2263,28],[2133,23,2263,35],[2133,24,2263,36],[2133,25,2263,37],[2133,26,2263,38],[2133,38,2263,50],[2133,42,2263,54],[2133,43,2263,55,"setCurrentUser"],[2133,57,2263,69],[2133,58,2263,70,"currentUser"],[2133,69,2263,81],[2133,70,2263,82],[2133,71,2263,83],[2134,14,2264,24],[2135,14,2265,24],[2135,21,2265,31],[2135,22,2265,32],[2135,23,2265,33],[2135,24,2265,34],[2135,35,2265,45],[2136,10,2266,16],[2137,8,2267,12],[2137,9,2267,13],[2137,10,2267,14],[2138,6,2268,8],[2138,7,2268,9],[2138,8,2268,10],[2139,4,2269,4],[2139,5,2269,5],[2140,4,2270,4,"PersistenceUserManager"],[2140,26,2270,26],[2140,27,2270,27,"prototype"],[2140,36,2270,36],[2140,37,2270,37,"delete"],[2140,43,2270,43],[2140,46,2270,46],[2140,58,2270,58],[2141,6,2271,8],[2141,10,2271,12],[2141,11,2271,13,"persistence"],[2141,22,2271,24],[2141,23,2271,25,"_removeListener"],[2141,38,2271,40],[2141,39,2271,41],[2141,43,2271,45],[2141,44,2271,46,"fullUserKey"],[2141,55,2271,57],[2141,57,2271,59],[2141,61,2271,63],[2141,62,2271,64,"boundEventHandler"],[2141,79,2271,81],[2141,80,2271,82],[2142,4,2272,4],[2142,5,2272,5],[2143,4,2273,4,"PersistenceUserManager"],[2143,26,2273,26],[2143,27,2273,27,"create"],[2143,33,2273,33],[2143,36,2273,36],[2143,46,2273,46,"auth"],[2143,50,2273,50],[2143,52,2273,52,"persistenceHierarchy"],[2143,72,2273,72],[2143,74,2273,74,"userKey"],[2143,81,2273,81],[2143,83,2273,83],[2144,6,2274,8],[2144,10,2274,12,"userKey"],[2144,17,2274,19],[2144,22,2274,19,"undefined"],[2144,31,2274,30],[2144,33,2274,32],[2145,8,2274,34,"userKey"],[2145,15,2274,41],[2145,18,2274,44],[2145,28,2274,54],[2145,29,2274,55],[2146,6,2274,80],[2147,6,2275,8],[2147,13,2275,15,"tslib"],[2147,18,2275,20],[2147,19,2275,21,"__awaiter"],[2147,28,2275,30],[2147,29,2275,31],[2147,33,2275,35],[2147,35,2275,35,"undefined"],[2147,44,2275,35],[2147,46,2275,35,"undefined"],[2147,55,2275,35],[2147,57,2275,53],[2147,69,2275,65],[2148,8,2276,12],[2148,12,2276,16,"availablePersistences"],[2148,33,2276,37],[2148,35,2276,39,"selectedPersistence"],[2148,54,2276,58],[2148,56,2276,60,"key"],[2148,59,2276,63],[2148,61,2276,65,"userToMigrate"],[2148,74,2276,78],[2148,76,2276,80,"_i"],[2148,78,2276,82],[2148,80,2276,84,"persistenceHierarchy_1"],[2148,102,2276,106],[2148,104,2276,108,"persistence"],[2148,115,2276,119],[2148,117,2276,121,"blob"],[2148,121,2276,125],[2148,123,2276,127,"user"],[2148,127,2276,131],[2148,129,2276,133,"migrationHierarchy"],[2148,147,2276,151],[2149,8,2277,12],[2149,12,2277,16,"_this"],[2149,17,2277,21],[2149,20,2277,24],[2149,24,2277,28],[2150,8,2278,12],[2150,15,2278,19,"tslib"],[2150,20,2278,24],[2150,21,2278,25,"__generator"],[2150,32,2278,36],[2150,33,2278,37],[2150,37,2278,41],[2150,39,2278,43],[2150,49,2278,53,"_b"],[2150,51,2278,55],[2150,53,2278,57],[2151,10,2279,16],[2151,18,2279,24,"_b"],[2151,20,2279,26],[2151,21,2279,27,"label"],[2151,26,2279,32],[2152,12,2280,20],[2152,17,2280,25],[2152,18,2280,26],[2153,14,2281,24],[2153,18,2281,28],[2153,19,2281,29,"persistenceHierarchy"],[2153,39,2281,49],[2153,40,2281,50,"length"],[2153,46,2281,56],[2153,48,2281,58],[2154,16,2282,28],[2154,23,2282,35],[2154,24,2282,36],[2154,25,2282,37],[2154,26,2282,38],[2154,38,2282,50],[2154,42,2282,54,"PersistenceUserManager"],[2154,64,2282,76],[2154,65,2282,77,"_getInstance"],[2154,77,2282,89],[2154,78,2282,90,"inMemoryPersistence"],[2154,97,2282,109],[2154,98,2282,110],[2154,100,2282,112,"auth"],[2154,104,2282,116],[2154,106,2282,118,"userKey"],[2154,113,2282,125],[2154,114,2282,126],[2154,115,2282,127],[2155,14,2283,24],[2156,14,2284,24],[2156,21,2284,31],[2156,22,2284,32],[2156,23,2284,33],[2156,24,2284,34],[2156,35,2284,45,"Promise"],[2156,42,2284,52],[2156,43,2284,53,"all"],[2156,46,2284,56],[2156,47,2284,57,"persistenceHierarchy"],[2156,67,2284,77],[2156,68,2284,78,"map"],[2156,71,2284,81],[2156,72,2284,82],[2156,82,2284,92,"persistence"],[2156,93,2284,103],[2156,95,2284,105],[2157,16,2284,107],[2157,23,2284,114,"tslib"],[2157,28,2284,119],[2157,29,2284,120,"__awaiter"],[2157,38,2284,129],[2157,39,2284,130,"_this"],[2157,44,2284,135],[2157,46,2284,135,"undefined"],[2157,55,2284,135],[2157,57,2284,135,"undefined"],[2157,66,2284,135],[2157,68,2284,153],[2157,80,2284,165],[2158,18,2285,32],[2158,25,2285,39,"tslib"],[2158,30,2285,44],[2158,31,2285,45,"__generator"],[2158,42,2285,56],[2158,43,2285,57],[2158,47,2285,61],[2158,49,2285,63],[2158,59,2285,73,"_a"],[2158,61,2285,75],[2158,63,2285,77],[2159,20,2286,36],[2159,28,2286,44,"_a"],[2159,30,2286,46],[2159,31,2286,47,"label"],[2159,36,2286,52],[2160,22,2287,40],[2160,27,2287,45],[2160,28,2287,46],[2161,24,2287,48],[2161,31,2287,55],[2161,32,2287,56],[2161,33,2287,57],[2161,34,2287,58],[2161,45,2287,69,"persistence"],[2161,56,2287,80],[2161,57,2287,81,"_isAvailable"],[2161,69,2287,93],[2161,70,2287,94],[2161,71,2287,95],[2161,72,2287,96],[2162,22,2288,40],[2162,27,2288,45],[2162,28,2288,46],[2163,24,2289,44],[2163,28,2289,48,"_a"],[2163,30,2289,50],[2163,31,2289,51,"sent"],[2163,35,2289,55],[2163,36,2289,56],[2163,37,2289,57],[2163,39,2289,59],[2164,26,2290,48],[2164,33,2290,55],[2164,34,2290,56],[2164,35,2290,57],[2164,36,2290,58],[2164,48,2290,70,"persistence"],[2164,59,2290,81],[2164,60,2290,82],[2165,24,2291,44],[2166,24,2292,44],[2166,31,2292,51],[2166,32,2292,52],[2166,33,2292,53],[2166,34,2292,54],[2166,46,2292,66,"undefined"],[2166,55,2292,75],[2166,56,2292,76],[2167,20,2293,36],[2168,18,2294,32],[2168,19,2294,33],[2168,20,2294,34],[2169,16,2295,28],[2169,17,2295,29],[2169,18,2295,30],[2170,14,2295,32],[2170,15,2295,33],[2170,16,2295,34],[2170,17,2295,35],[2170,18,2295,36],[2171,12,2296,20],[2171,17,2296,25],[2171,18,2296,26],[2172,14,2297,24,"availablePersistences"],[2172,35,2297,45],[2172,38,2297,49,"_b"],[2172,40,2297,51],[2172,41,2297,52,"sent"],[2172,45,2297,56],[2172,46,2297,57],[2172,47,2297,58],[2172,48,2297,60,"filter"],[2172,54,2297,66],[2172,55,2297,67],[2172,65,2297,77,"persistence"],[2172,76,2297,88],[2172,78,2297,90],[2173,16,2297,92],[2173,23,2297,99,"persistence"],[2173,34,2297,110],[2174,14,2297,112],[2174,15,2297,113],[2174,16,2297,114],[2175,14,2298,24,"selectedPersistence"],[2175,33,2298,43],[2175,36,2298,46,"availablePersistences"],[2175,57,2298,67],[2175,58,2298,68],[2175,59,2298,69],[2175,60,2298,70],[2175,64,2299,28,"_getInstance"],[2175,76,2299,40],[2175,77,2299,41,"inMemoryPersistence"],[2175,96,2299,60],[2175,97,2299,61],[2176,14,2300,24,"key"],[2176,17,2300,27],[2176,20,2300,30,"_persistenceKeyName"],[2176,39,2300,49],[2176,40,2300,50,"userKey"],[2176,47,2300,57],[2176,49,2300,59,"auth"],[2176,53,2300,63],[2176,54,2300,64,"config"],[2176,60,2300,70],[2176,61,2300,71,"apiKey"],[2176,67,2300,77],[2176,69,2300,79,"auth"],[2176,73,2300,83],[2176,74,2300,84,"name"],[2176,78,2300,88],[2176,79,2300,89],[2177,14,2301,24,"userToMigrate"],[2177,27,2301,37],[2177,30,2301,40],[2177,34,2301,44],[2178,14,2302,24,"_i"],[2178,16,2302,26],[2178,19,2302,29],[2178,20,2302,30],[2178,22,2302,32,"persistenceHierarchy_1"],[2178,44,2302,54],[2178,47,2302,57,"persistenceHierarchy"],[2178,67,2302,77],[2179,14,2303,24,"_b"],[2179,16,2303,26],[2179,17,2303,27,"label"],[2179,22,2303,32],[2179,25,2303,35],[2179,26,2303,36],[2180,12,2304,20],[2180,17,2304,25],[2180,18,2304,26],[2181,14,2305,24],[2181,18,2305,28],[2181,20,2305,30,"_i"],[2181,22,2305,32],[2181,25,2305,35,"persistenceHierarchy_1"],[2181,47,2305,57],[2181,48,2305,58,"length"],[2181,54,2305,64],[2181,55,2305,65],[2181,57,2305,67],[2181,64,2305,74],[2181,65,2305,75],[2181,66,2305,76],[2181,67,2305,77],[2181,78,2305,88],[2181,79,2305,89],[2181,80,2305,90],[2182,14,2306,24,"persistence"],[2182,25,2306,35],[2182,28,2306,38,"persistenceHierarchy_1"],[2182,50,2306,60],[2182,51,2306,61,"_i"],[2182,53,2306,63],[2182,54,2306,64],[2183,14,2307,24,"_b"],[2183,16,2307,26],[2183,17,2307,27,"label"],[2183,22,2307,32],[2183,25,2307,35],[2183,26,2307,36],[2184,12,2308,20],[2184,17,2308,25],[2184,18,2308,26],[2185,14,2309,24,"_b"],[2185,16,2309,26],[2185,17,2309,27,"trys"],[2185,21,2309,31],[2185,22,2309,32,"push"],[2185,26,2309,36],[2185,27,2309,37],[2185,28,2309,38],[2185,29,2309,39],[2185,31,2309,41],[2185,32,2309,42],[2185,35,2309,46],[2185,36,2309,47],[2185,37,2309,48],[2185,38,2309,49],[2186,14,2310,24],[2186,21,2310,31],[2186,22,2310,32],[2186,23,2310,33],[2186,24,2310,34],[2186,35,2310,45,"persistence"],[2186,46,2310,56],[2186,47,2310,57,"_get"],[2186,51,2310,61],[2186,52,2310,62,"key"],[2186,55,2310,65],[2186,56,2310,66],[2186,57,2310,67],[2187,12,2311,20],[2187,17,2311,25],[2187,18,2311,26],[2188,14,2312,24,"blob"],[2188,18,2312,28],[2188,21,2312,31,"_b"],[2188,23,2312,33],[2188,24,2312,34,"sent"],[2188,28,2312,38],[2188,29,2312,39],[2188,30,2312,40],[2189,14,2313,24],[2189,18,2313,28,"blob"],[2189,22,2313,32],[2189,24,2313,34],[2190,16,2314,28,"user"],[2190,20,2314,32],[2190,23,2314,35,"UserImpl"],[2190,31,2314,43],[2190,32,2314,44,"_fromJSON"],[2190,41,2314,53],[2190,42,2314,54,"auth"],[2190,46,2314,58],[2190,48,2314,60,"blob"],[2190,52,2314,64],[2190,53,2314,65],[2191,16,2315,28],[2191,20,2315,32,"persistence"],[2191,31,2315,43],[2191,36,2315,48,"selectedPersistence"],[2191,55,2315,67],[2191,57,2315,69],[2192,18,2316,32,"userToMigrate"],[2192,31,2316,45],[2192,34,2316,48,"user"],[2192,38,2316,52],[2193,16,2317,28],[2194,16,2318,28,"selectedPersistence"],[2194,35,2318,47],[2194,38,2318,50,"persistence"],[2194,49,2318,61],[2195,16,2319,28],[2195,23,2319,35],[2195,24,2319,36],[2195,25,2319,37],[2195,26,2319,38],[2195,37,2319,49],[2195,38,2319,50],[2195,39,2319,51],[2196,14,2320,24],[2197,14,2321,24],[2197,21,2321,31],[2197,22,2321,32],[2197,23,2321,33],[2197,24,2321,34],[2197,35,2321,45],[2197,36,2321,46],[2197,37,2321,47],[2198,12,2322,20],[2198,17,2322,25],[2198,18,2322,26],[2199,14,2323,24,"_b"],[2199,16,2323,26],[2199,17,2323,27,"sent"],[2199,21,2323,31],[2199,22,2323,32],[2199,23,2323,33],[2200,14,2324,24],[2200,21,2324,31],[2200,22,2324,32],[2200,23,2324,33],[2200,24,2324,34],[2200,35,2324,45],[2200,36,2324,46],[2200,37,2324,47],[2201,12,2325,20],[2201,17,2325,25],[2201,18,2325,26],[2202,14,2326,24,"_i"],[2202,16,2326,26],[2202,18,2326,28],[2203,14,2327,24],[2203,21,2327,31],[2203,22,2327,32],[2203,23,2327,33],[2203,24,2327,34],[2203,35,2327,45],[2203,36,2327,46],[2203,37,2327,47],[2204,12,2328,20],[2204,17,2328,25],[2204,18,2328,26],[2205,14,2329,24,"migrationHierarchy"],[2205,32,2329,42],[2205,35,2329,45,"availablePersistences"],[2205,56,2329,66],[2205,57,2329,67,"filter"],[2205,63,2329,73],[2205,64,2329,74],[2205,74,2329,84,"p"],[2205,75,2329,85],[2205,77,2329,87],[2206,16,2329,89],[2206,23,2329,96,"p"],[2206,24,2329,97],[2206,25,2329,98,"_shouldAllowMigration"],[2206,46,2329,119],[2207,14,2329,121],[2207,15,2329,122],[2207,16,2329,123],[2208,14,2330,24],[2209,14,2331,24],[2209,18,2331,28],[2209,19,2331,29,"selectedPersistence"],[2209,38,2331,48],[2209,39,2331,49,"_shouldAllowMigration"],[2209,60,2331,70],[2209,64,2332,28],[2209,65,2332,29,"migrationHierarchy"],[2209,83,2332,47],[2209,84,2332,48,"length"],[2209,90,2332,54],[2209,92,2332,56],[2210,16,2333,28],[2210,23,2333,35],[2210,24,2333,36],[2210,25,2333,37],[2210,26,2333,38],[2210,38,2333,50],[2210,42,2333,54,"PersistenceUserManager"],[2210,64,2333,76],[2210,65,2333,77,"selectedPersistence"],[2210,84,2333,96],[2210,86,2333,98,"auth"],[2210,90,2333,102],[2210,92,2333,104,"userKey"],[2210,99,2333,111],[2210,100,2333,112],[2210,101,2333,113],[2211,14,2334,24],[2212,14,2335,24,"selectedPersistence"],[2212,33,2335,43],[2212,36,2335,46,"migrationHierarchy"],[2212,54,2335,64],[2212,55,2335,65],[2212,56,2335,66],[2212,57,2335,67],[2213,14,2336,24],[2213,18,2336,28],[2213,19,2336,29,"userToMigrate"],[2213,32,2336,42],[2213,34,2336,44],[2213,41,2336,51],[2213,42,2336,52],[2213,43,2336,53],[2213,44,2336,54],[2213,55,2336,65],[2213,56,2336,66],[2213,57,2336,67],[2214,14,2337,24],[2215,14,2338,24],[2216,14,2339,24],[2216,21,2339,31],[2216,22,2339,32],[2216,23,2339,33],[2216,24,2339,34],[2216,35,2339,45,"selectedPersistence"],[2216,54,2339,64],[2216,55,2339,65,"_set"],[2216,59,2339,69],[2216,60,2339,70,"key"],[2216,63,2339,73],[2216,65,2339,75,"userToMigrate"],[2216,78,2339,88],[2216,79,2339,89,"toJSON"],[2216,85,2339,95],[2216,86,2339,96],[2216,87,2339,97],[2216,88,2339,98],[2216,89,2339,99],[2217,12,2340,20],[2217,17,2340,25],[2217,18,2340,26],[2218,14,2341,24],[2219,14,2342,24],[2220,14,2343,24,"_b"],[2220,16,2343,26],[2220,17,2343,27,"sent"],[2220,21,2343,31],[2220,22,2343,32],[2220,23,2343,33],[2221,14,2344,24,"_b"],[2221,16,2344,26],[2221,17,2344,27,"label"],[2221,22,2344,32],[2221,25,2344,35],[2221,26,2344,36],[2222,12,2345,20],[2222,17,2345,25],[2222,18,2345,26],[2223,14,2346,20],[2224,14,2347,20],[2225,14,2348,20],[2225,21,2348,27],[2225,22,2348,28],[2225,23,2348,29],[2225,24,2348,30],[2225,35,2348,41,"Promise"],[2225,42,2348,48],[2225,43,2348,49,"all"],[2225,46,2348,52],[2225,47,2348,53,"persistenceHierarchy"],[2225,67,2348,73],[2225,68,2348,74,"map"],[2225,71,2348,77],[2225,72,2348,78],[2225,82,2348,88,"persistence"],[2225,93,2348,99],[2225,95,2348,101],[2226,16,2348,103],[2226,23,2348,110,"tslib"],[2226,28,2348,115],[2226,29,2348,116,"__awaiter"],[2226,38,2348,125],[2226,39,2348,126,"_this"],[2226,44,2348,131],[2226,46,2348,131,"undefined"],[2226,55,2348,131],[2226,57,2348,131,"undefined"],[2226,66,2348,131],[2226,68,2348,149],[2226,80,2348,161],[2227,18,2349,28],[2227,25,2349,35,"tslib"],[2227,30,2349,40],[2227,31,2349,41,"__generator"],[2227,42,2349,52],[2227,43,2349,53],[2227,47,2349,57],[2227,49,2349,59],[2227,59,2349,69,"_b"],[2227,61,2349,71],[2227,63,2349,73],[2228,20,2350,32],[2228,28,2350,40,"_b"],[2228,30,2350,42],[2228,31,2350,43,"label"],[2228,36,2350,48],[2229,22,2351,36],[2229,27,2351,41],[2229,28,2351,42],[2230,24,2352,40],[2230,28,2352,44],[2230,30,2352,46,"persistence"],[2230,41,2352,57],[2230,46,2352,62,"selectedPersistence"],[2230,65,2352,81],[2230,66,2352,82],[2230,68,2352,84],[2230,75,2352,91],[2230,76,2352,92],[2230,77,2352,93],[2230,78,2352,94],[2230,89,2352,105],[2230,90,2352,106],[2230,91,2352,107],[2231,24,2353,40,"_b"],[2231,26,2353,42],[2231,27,2353,43,"label"],[2231,32,2353,48],[2231,35,2353,51],[2231,36,2353,52],[2232,22,2354,36],[2232,27,2354,41],[2232,28,2354,42],[2233,24,2355,40,"_b"],[2233,26,2355,42],[2233,27,2355,43,"trys"],[2233,31,2355,47],[2233,32,2355,48,"push"],[2233,36,2355,52],[2233,37,2355,53],[2233,38,2355,54],[2233,39,2355,55],[2233,41,2355,57],[2233,42,2355,58],[2233,45,2355,62],[2233,46,2355,63],[2233,47,2355,64],[2233,48,2355,65],[2234,24,2356,40],[2234,31,2356,47],[2234,32,2356,48],[2234,33,2356,49],[2234,34,2356,50],[2234,45,2356,61,"persistence"],[2234,56,2356,72],[2234,57,2356,73,"_remove"],[2234,64,2356,80],[2234,65,2356,81,"key"],[2234,68,2356,84],[2234,69,2356,85],[2234,70,2356,86],[2235,22,2357,36],[2235,27,2357,41],[2235,28,2357,42],[2236,24,2358,40,"_b"],[2236,26,2358,42],[2236,27,2358,43,"sent"],[2236,31,2358,47],[2236,32,2358,48],[2236,33,2358,49],[2237,24,2359,40],[2237,31,2359,47],[2237,32,2359,48],[2237,33,2359,49],[2237,34,2359,50],[2237,45,2359,61],[2237,46,2359,62],[2237,47,2359,63],[2238,22,2360,36],[2238,27,2360,41],[2238,28,2360,42],[2239,24,2361,40,"_b"],[2239,26,2361,42],[2239,27,2361,43,"sent"],[2239,31,2361,47],[2239,32,2361,48],[2239,33,2361,49],[2240,24,2362,40],[2240,31,2362,47],[2240,32,2362,48],[2240,33,2362,49],[2240,34,2362,50],[2240,45,2362,61],[2240,46,2362,62],[2240,47,2362,63],[2241,22,2363,36],[2241,27,2363,41],[2241,28,2363,42],[2242,24,2363,44],[2242,31,2363,51],[2242,32,2363,52],[2242,33,2363,53],[2242,34,2363,54],[2242,45,2363,65],[2243,20,2364,32],[2244,18,2365,28],[2244,19,2365,29],[2244,20,2365,30],[2245,16,2366,24],[2245,17,2366,25],[2245,18,2366,26],[2246,14,2366,28],[2246,15,2366,29],[2246,16,2366,30],[2246,17,2366,31],[2246,18,2366,32],[2247,12,2367,20],[2247,17,2367,25],[2247,19,2367,27],[2248,14,2368,24],[2249,14,2369,24],[2250,14,2370,24,"_b"],[2250,16,2370,26],[2250,17,2370,27,"sent"],[2250,21,2370,31],[2250,22,2370,32],[2250,23,2370,33],[2251,14,2371,24],[2251,21,2371,31],[2251,22,2371,32],[2251,23,2371,33],[2251,24,2371,34],[2251,36,2371,46],[2251,40,2371,50,"PersistenceUserManager"],[2251,62,2371,72],[2251,63,2371,73,"selectedPersistence"],[2251,82,2371,92],[2251,84,2371,94,"auth"],[2251,88,2371,98],[2251,90,2371,100,"userKey"],[2251,97,2371,107],[2251,98,2371,108],[2251,99,2371,109],[2252,10,2372,16],[2253,8,2373,12],[2253,9,2373,13],[2253,10,2373,14],[2254,6,2374,8],[2254,7,2374,9],[2254,8,2374,10],[2255,4,2375,4],[2255,5,2375,5],[2256,4,2376,4],[2256,11,2376,11,"PersistenceUserManager"],[2256,33,2376,33],[2257,2,2377,0],[2257,3,2377,1],[2257,4,2377,2],[2257,5,2377,4],[2259,2,2379,0],[2260,0,2380,0],[2261,0,2381,0],[2262,0,2382,0],[2263,0,2383,0],[2264,0,2384,0],[2265,0,2385,0],[2266,0,2386,0],[2267,0,2387,0],[2268,0,2388,0],[2269,0,2389,0],[2270,0,2390,0],[2271,0,2391,0],[2272,0,2392,0],[2273,0,2393,0],[2274,0,2394,0],[2275,2,2395,0],[2276,0,2396,0],[2277,0,2397,0],[2278,2,2398,0],[2278,11,2398,9,"_getBrowserName"],[2278,26,2398,24,"_getBrowserName"],[2278,27,2398,25,"userAgent"],[2278,36,2398,34],[2278,38,2398,36],[2279,4,2399,4],[2279,8,2399,8,"ua"],[2279,10,2399,10],[2279,13,2399,13,"userAgent"],[2279,22,2399,22],[2279,23,2399,23,"toLowerCase"],[2279,34,2399,34],[2279,35,2399,35],[2279,36,2399,36],[2280,4,2400,4],[2280,8,2400,8,"ua"],[2280,10,2400,10],[2280,11,2400,11,"includes"],[2280,19,2400,19],[2280,20,2400,20],[2280,28,2400,28],[2280,29,2400,29],[2280,33,2400,33,"ua"],[2280,35,2400,35],[2280,36,2400,36,"includes"],[2280,44,2400,44],[2280,45,2400,45],[2280,51,2400,51],[2280,52,2400,52],[2280,56,2400,56,"ua"],[2280,58,2400,58],[2280,59,2400,59,"includes"],[2280,67,2400,67],[2280,68,2400,68],[2280,76,2400,76],[2280,77,2400,77],[2280,79,2400,79],[2281,6,2401,8],[2281,13,2401,15],[2281,20,2401,22],[2281,21,2401,23],[2282,4,2402,4],[2282,5,2402,5],[2282,11,2403,9],[2282,15,2403,13,"_isIEMobile"],[2282,26,2403,24],[2282,27,2403,25,"ua"],[2282,29,2403,27],[2282,30,2403,28],[2282,32,2403,30],[2283,6,2404,8],[2284,6,2405,8],[2284,13,2405,15],[2284,23,2405,25],[2284,24,2405,26],[2285,4,2406,4],[2285,5,2406,5],[2285,11,2407,9],[2285,15,2407,13,"ua"],[2285,17,2407,15],[2285,18,2407,16,"includes"],[2285,26,2407,24],[2285,27,2407,25],[2285,33,2407,31],[2285,34,2407,32],[2285,38,2407,36,"ua"],[2285,40,2407,38],[2285,41,2407,39,"includes"],[2285,49,2407,47],[2285,50,2407,48],[2285,60,2407,58],[2285,61,2407,59],[2285,63,2407,61],[2286,6,2408,8],[2286,13,2408,15],[2286,17,2408,19],[2286,18,2408,20],[2287,4,2409,4],[2287,5,2409,5],[2287,11,2410,9],[2287,15,2410,13,"ua"],[2287,17,2410,15],[2287,18,2410,16,"includes"],[2287,26,2410,24],[2287,27,2410,25],[2287,34,2410,32],[2287,35,2410,33],[2287,37,2410,35],[2288,6,2411,8],[2288,13,2411,15],[2288,19,2411,21],[2288,20,2411,22],[2289,4,2412,4],[2289,5,2412,5],[2289,11,2413,9],[2289,15,2413,13,"_isFirefox"],[2289,25,2413,23],[2289,26,2413,24,"ua"],[2289,28,2413,26],[2289,29,2413,27],[2289,31,2413,29],[2290,6,2414,8],[2290,13,2414,15],[2290,22,2414,24],[2290,23,2414,25],[2291,4,2415,4],[2291,5,2415,5],[2291,11,2416,9],[2291,15,2416,13,"ua"],[2291,17,2416,15],[2291,18,2416,16,"includes"],[2291,26,2416,24],[2291,27,2416,25],[2291,34,2416,32],[2291,35,2416,33],[2291,37,2416,35],[2292,6,2417,8],[2292,13,2417,15],[2292,19,2417,21],[2292,20,2417,22],[2293,4,2418,4],[2293,5,2418,5],[2293,11,2419,9],[2293,15,2419,13,"_isBlackBerry"],[2293,28,2419,26],[2293,29,2419,27,"ua"],[2293,31,2419,29],[2293,32,2419,30],[2293,34,2419,32],[2294,6,2420,8],[2295,6,2421,8],[2295,13,2421,15],[2295,25,2421,27],[2295,26,2421,28],[2296,4,2422,4],[2296,5,2422,5],[2296,11,2423,9],[2296,15,2423,13,"_isWebOS"],[2296,23,2423,21],[2296,24,2423,22,"ua"],[2296,26,2423,24],[2296,27,2423,25],[2296,29,2423,27],[2297,6,2424,8],[2298,6,2425,8],[2298,13,2425,15],[2298,20,2425,22],[2298,21,2425,23],[2299,4,2426,4],[2299,5,2426,5],[2299,11,2427,9],[2299,15,2427,13,"_isSafari"],[2299,24,2427,22],[2299,25,2427,23,"ua"],[2299,27,2427,25],[2299,28,2427,26],[2299,30,2427,28],[2300,6,2428,8],[2300,13,2428,15],[2300,21,2428,23],[2300,22,2428,24],[2301,4,2429,4],[2301,5,2429,5],[2301,11,2430,9],[2301,15,2430,13],[2301,16,2430,14,"ua"],[2301,18,2430,16],[2301,19,2430,17,"includes"],[2301,27,2430,25],[2301,28,2430,26],[2301,37,2430,35],[2301,38,2430,36],[2301,42,2430,40,"_isChromeIOS"],[2301,54,2430,52],[2301,55,2430,53,"ua"],[2301,57,2430,55],[2301,58,2430,56],[2301,63,2431,8],[2301,64,2431,9,"ua"],[2301,66,2431,11],[2301,67,2431,12,"includes"],[2301,75,2431,20],[2301,76,2431,21],[2301,83,2431,28],[2301,84,2431,29],[2301,86,2431,31],[2302,6,2432,8],[2302,13,2432,15],[2302,21,2432,23],[2302,22,2432,24],[2303,4,2433,4],[2303,5,2433,5],[2303,11,2434,9],[2303,15,2434,13,"_isAndroid"],[2303,25,2434,23],[2303,26,2434,24,"ua"],[2303,28,2434,26],[2303,29,2434,27],[2303,31,2434,29],[2304,6,2435,8],[2305,6,2436,8],[2305,13,2436,15],[2305,22,2436,24],[2305,23,2436,25],[2306,4,2437,4],[2306,5,2437,5],[2306,11,2438,9],[2307,6,2439,8],[2308,6,2440,8],[2308,10,2440,12,"re"],[2308,12,2440,14],[2308,15,2440,17],[2308,48,2440,50],[2309,6,2441,8],[2309,10,2441,12,"matches"],[2309,17,2441,19],[2309,20,2441,22,"userAgent"],[2309,29,2441,31],[2309,30,2441,32,"match"],[2309,35,2441,37],[2309,36,2441,38,"re"],[2309,38,2441,40],[2309,39,2441,41],[2310,6,2442,8],[2310,10,2442,12],[2310,11,2442,13,"matches"],[2310,18,2442,20],[2310,23,2442,25],[2310,27,2442,29],[2310,31,2442,33,"matches"],[2310,38,2442,40],[2310,43,2442,40,"undefined"],[2310,52,2442,51],[2310,55,2442,51,"undefined"],[2310,64,2442,51],[2310,67,2442,63,"matches"],[2310,74,2442,70],[2310,75,2442,71,"length"],[2310,81,2442,77],[2310,87,2442,83],[2310,88,2442,84],[2310,90,2442,86],[2311,8,2443,12],[2311,15,2443,19,"matches"],[2311,22,2443,26],[2311,23,2443,27],[2311,24,2443,28],[2311,25,2443,29],[2312,6,2444,8],[2313,4,2445,4],[2314,4,2446,4],[2314,11,2446,11],[2314,18,2446,18],[2314,19,2446,19],[2315,2,2447,0],[2316,2,2448,0],[2316,11,2448,9,"_isFirefox"],[2316,21,2448,19,"_isFirefox"],[2316,22,2448,20,"ua"],[2316,24,2448,22],[2316,26,2448,24],[2317,4,2449,4],[2317,8,2449,8,"ua"],[2317,10,2449,10],[2317,15,2449,10,"undefined"],[2317,24,2449,21],[2317,26,2449,23],[2318,6,2449,25,"ua"],[2318,8,2449,27],[2318,11,2449,30,"util"],[2318,15,2449,34],[2318,16,2449,35,"getUA"],[2318,21,2449,40],[2318,22,2449,41],[2318,23,2449,42],[2319,4,2449,44],[2320,4,2450,4],[2320,11,2450,11],[2320,23,2450,23],[2320,24,2450,24,"test"],[2320,28,2450,28],[2320,29,2450,29,"ua"],[2320,31,2450,31],[2320,32,2450,32],[2321,2,2451,0],[2322,2,2452,0],[2322,11,2452,9,"_isSafari"],[2322,20,2452,18,"_isSafari"],[2322,21,2452,19,"userAgent"],[2322,30,2452,28],[2322,32,2452,30],[2323,4,2453,4],[2323,8,2453,8,"userAgent"],[2323,17,2453,17],[2323,22,2453,17,"undefined"],[2323,31,2453,28],[2323,33,2453,30],[2324,6,2453,32,"userAgent"],[2324,15,2453,41],[2324,18,2453,44,"util"],[2324,22,2453,48],[2324,23,2453,49,"getUA"],[2324,28,2453,54],[2324,29,2453,55],[2324,30,2453,56],[2325,4,2453,58],[2326,4,2454,4],[2326,8,2454,8,"ua"],[2326,10,2454,10],[2326,13,2454,13,"userAgent"],[2326,22,2454,22],[2326,23,2454,23,"toLowerCase"],[2326,34,2454,34],[2326,35,2454,35],[2326,36,2454,36],[2327,4,2455,4],[2327,11,2455,12,"ua"],[2327,13,2455,14],[2327,14,2455,15,"includes"],[2327,22,2455,23],[2327,23,2455,24],[2327,32,2455,33],[2327,33,2455,34],[2327,37,2456,8],[2327,38,2456,9,"ua"],[2327,40,2456,11],[2327,41,2456,12,"includes"],[2327,49,2456,20],[2327,50,2456,21],[2327,59,2456,30],[2327,60,2456,31],[2327,64,2457,8],[2327,65,2457,9,"ua"],[2327,67,2457,11],[2327,68,2457,12,"includes"],[2327,76,2457,20],[2327,77,2457,21],[2327,85,2457,29],[2327,86,2457,30],[2327,90,2458,8],[2327,91,2458,9,"ua"],[2327,93,2458,11],[2327,94,2458,12,"includes"],[2327,102,2458,20],[2327,103,2458,21],[2327,112,2458,30],[2327,113,2458,31],[2328,2,2459,0],[2329,2,2460,0],[2329,11,2460,9,"_isChromeIOS"],[2329,23,2460,21,"_isChromeIOS"],[2329,24,2460,22,"ua"],[2329,26,2460,24],[2329,28,2460,26],[2330,4,2461,4],[2330,8,2461,8,"ua"],[2330,10,2461,10],[2330,15,2461,10,"undefined"],[2330,24,2461,21],[2330,26,2461,23],[2331,6,2461,25,"ua"],[2331,8,2461,27],[2331,11,2461,30,"util"],[2331,15,2461,34],[2331,16,2461,35,"getUA"],[2331,21,2461,40],[2331,22,2461,41],[2331,23,2461,42],[2332,4,2461,44],[2333,4,2462,4],[2333,11,2462,11],[2333,21,2462,21],[2333,22,2462,22,"test"],[2333,26,2462,26],[2333,27,2462,27,"ua"],[2333,29,2462,29],[2333,30,2462,30],[2334,2,2463,0],[2335,2,2464,0],[2335,11,2464,9,"_isIEMobile"],[2335,22,2464,20,"_isIEMobile"],[2335,23,2464,21,"ua"],[2335,25,2464,23],[2335,27,2464,25],[2336,4,2465,4],[2336,8,2465,8,"ua"],[2336,10,2465,10],[2336,15,2465,10,"undefined"],[2336,24,2465,21],[2336,26,2465,23],[2337,6,2465,25,"ua"],[2337,8,2465,27],[2337,11,2465,30,"util"],[2337,15,2465,34],[2337,16,2465,35,"getUA"],[2337,21,2465,40],[2337,22,2465,41],[2337,23,2465,42],[2338,4,2465,44],[2339,4,2466,4],[2339,11,2466,11],[2339,22,2466,22],[2339,23,2466,23,"test"],[2339,27,2466,27],[2339,28,2466,28,"ua"],[2339,30,2466,30],[2339,31,2466,31],[2340,2,2467,0],[2341,2,2468,0],[2341,11,2468,9,"_isAndroid"],[2341,21,2468,19,"_isAndroid"],[2341,22,2468,20,"ua"],[2341,24,2468,22],[2341,26,2468,24],[2342,4,2469,4],[2342,8,2469,8,"ua"],[2342,10,2469,10],[2342,15,2469,10,"undefined"],[2342,24,2469,21],[2342,26,2469,23],[2343,6,2469,25,"ua"],[2343,8,2469,27],[2343,11,2469,30,"util"],[2343,15,2469,34],[2343,16,2469,35,"getUA"],[2343,21,2469,40],[2343,22,2469,41],[2343,23,2469,42],[2344,4,2469,44],[2345,4,2470,4],[2345,11,2470,11],[2345,21,2470,21],[2345,22,2470,22,"test"],[2345,26,2470,26],[2345,27,2470,27,"ua"],[2345,29,2470,29],[2345,30,2470,30],[2346,2,2471,0],[2347,2,2472,0],[2347,11,2472,9,"_isBlackBerry"],[2347,24,2472,22,"_isBlackBerry"],[2347,25,2472,23,"ua"],[2347,27,2472,25],[2347,29,2472,27],[2348,4,2473,4],[2348,8,2473,8,"ua"],[2348,10,2473,10],[2348,15,2473,10,"undefined"],[2348,24,2473,21],[2348,26,2473,23],[2349,6,2473,25,"ua"],[2349,8,2473,27],[2349,11,2473,30,"util"],[2349,15,2473,34],[2349,16,2473,35,"getUA"],[2349,21,2473,40],[2349,22,2473,41],[2349,23,2473,42],[2350,4,2473,44],[2351,4,2474,4],[2351,11,2474,11],[2351,24,2474,24],[2351,25,2474,25,"test"],[2351,29,2474,29],[2351,30,2474,30,"ua"],[2351,32,2474,32],[2351,33,2474,33],[2352,2,2475,0],[2353,2,2476,0],[2353,11,2476,9,"_isWebOS"],[2353,19,2476,17,"_isWebOS"],[2353,20,2476,18,"ua"],[2353,22,2476,20],[2353,24,2476,22],[2354,4,2477,4],[2354,8,2477,8,"ua"],[2354,10,2477,10],[2354,15,2477,10,"undefined"],[2354,24,2477,21],[2354,26,2477,23],[2355,6,2477,25,"ua"],[2355,8,2477,27],[2355,11,2477,30,"util"],[2355,15,2477,34],[2355,16,2477,35,"getUA"],[2355,21,2477,40],[2355,22,2477,41],[2355,23,2477,42],[2356,4,2477,44],[2357,4,2478,4],[2357,11,2478,11],[2357,19,2478,19],[2357,20,2478,20,"test"],[2357,24,2478,24],[2357,25,2478,25,"ua"],[2357,27,2478,27],[2357,28,2478,28],[2358,2,2479,0],[2359,2,2480,0],[2359,11,2480,9,"_isIOS"],[2359,17,2480,15,"_isIOS"],[2359,18,2480,16,"ua"],[2359,20,2480,18],[2359,22,2480,20],[2360,4,2481,4],[2360,8,2481,8,"ua"],[2360,10,2481,10],[2360,15,2481,10,"undefined"],[2360,24,2481,21],[2360,26,2481,23],[2361,6,2481,25,"ua"],[2361,8,2481,27],[2361,11,2481,30,"util"],[2361,15,2481,34],[2361,16,2481,35,"getUA"],[2361,21,2481,40],[2361,22,2481,41],[2361,23,2481,42],[2362,4,2481,44],[2363,4,2482,4],[2363,11,2482,12],[2363,30,2482,31],[2363,31,2482,32,"test"],[2363,35,2482,36],[2363,36,2482,37,"ua"],[2363,38,2482,39],[2363,39,2482,40],[2363,43,2483,9],[2363,55,2483,21],[2363,56,2483,22,"test"],[2363,60,2483,26],[2363,61,2483,27,"ua"],[2363,63,2483,29],[2363,64,2483,30],[2363,68,2483,34],[2363,77,2483,43],[2363,78,2483,44,"test"],[2363,82,2483,48],[2363,83,2483,49,"ua"],[2363,85,2483,51],[2363,86,2483,53],[2364,2,2484,0],[2365,2,2485,0],[2365,11,2485,9,"_isIOS7Or8"],[2365,21,2485,19,"_isIOS7Or8"],[2365,22,2485,20,"ua"],[2365,24,2485,22],[2365,26,2485,24],[2366,4,2486,4],[2366,8,2486,8,"ua"],[2366,10,2486,10],[2366,15,2486,10,"undefined"],[2366,24,2486,21],[2366,26,2486,23],[2367,6,2486,25,"ua"],[2367,8,2486,27],[2367,11,2486,30,"util"],[2367,15,2486,34],[2367,16,2486,35,"getUA"],[2367,21,2486,40],[2367,22,2486,41],[2367,23,2486,42],[2368,4,2486,44],[2369,4,2487,4],[2369,11,2487,12],[2369,41,2487,42],[2369,42,2487,43,"test"],[2369,46,2487,47],[2369,47,2487,48,"ua"],[2369,49,2487,50],[2369,50,2487,51],[2369,54,2488,8],[2369,84,2488,38],[2369,85,2488,39,"test"],[2369,89,2488,43],[2369,90,2488,44,"ua"],[2369,92,2488,46],[2369,93,2488,47],[2370,2,2489,0],[2371,2,2490,0],[2371,11,2490,9,"_isIOSStandalone"],[2371,27,2490,25,"_isIOSStandalone"],[2371,28,2490,26,"ua"],[2371,30,2490,28],[2371,32,2490,30],[2372,4,2491,4],[2372,8,2491,8,"_a"],[2372,10,2491,10],[2373,4,2492,4],[2373,8,2492,8,"ua"],[2373,10,2492,10],[2373,15,2492,10,"undefined"],[2373,24,2492,21],[2373,26,2492,23],[2374,6,2492,25,"ua"],[2374,8,2492,27],[2374,11,2492,30,"util"],[2374,15,2492,34],[2374,16,2492,35,"getUA"],[2374,21,2492,40],[2374,22,2492,41],[2374,23,2492,42],[2375,4,2492,44],[2376,4,2493,4],[2376,11,2493,11,"_isIOS"],[2376,17,2493,17],[2376,18,2493,18,"ua"],[2376,20,2493,20],[2376,21,2493,21],[2376,25,2493,25],[2376,26,2493,26],[2376,28,2493,28],[2376,29,2493,29,"_a"],[2376,31,2493,31],[2376,34,2493,34,"window"],[2376,40,2493,40],[2376,41,2493,41,"navigator"],[2376,50,2493,50],[2376,56,2493,56],[2376,60,2493,60],[2376,64,2493,64,"_a"],[2376,66,2493,66],[2376,71,2493,66,"undefined"],[2376,80,2493,77],[2376,83,2493,77,"undefined"],[2376,92,2493,77],[2376,95,2493,89,"_a"],[2376,97,2493,91],[2376,98,2493,92,"standalone"],[2376,108,2493,102],[2376,109,2493,103],[2377,2,2494,0],[2378,2,2495,0],[2378,11,2495,9,"_isIE10"],[2378,18,2495,16,"_isIE10"],[2378,19,2495,16],[2378,21,2495,19],[2379,4,2496,4],[2379,11,2496,11,"util"],[2379,15,2496,15],[2379,16,2496,16,"isIE"],[2379,20,2496,20],[2379,21,2496,21],[2379,22,2496,22],[2379,26,2496,26,"document"],[2379,34,2496,34],[2379,35,2496,35,"documentMode"],[2379,47,2496,47],[2379,52,2496,52],[2379,54,2496,54],[2380,2,2497,0],[2381,2,2498,0],[2381,11,2498,9,"_isMobileBrowser"],[2381,27,2498,25,"_isMobileBrowser"],[2381,28,2498,26,"ua"],[2381,30,2498,28],[2381,32,2498,30],[2382,4,2499,4],[2382,8,2499,8,"ua"],[2382,10,2499,10],[2382,15,2499,10,"undefined"],[2382,24,2499,21],[2382,26,2499,23],[2383,6,2499,25,"ua"],[2383,8,2499,27],[2383,11,2499,30,"util"],[2383,15,2499,34],[2383,16,2499,35,"getUA"],[2383,21,2499,40],[2383,22,2499,41],[2383,23,2499,42],[2384,4,2499,44],[2385,4,2500,4],[2386,4,2501,4],[2386,11,2501,12,"_isIOS"],[2386,17,2501,18],[2386,18,2501,19,"ua"],[2386,20,2501,21],[2386,21,2501,22],[2386,25,2502,8,"_isAndroid"],[2386,35,2502,18],[2386,36,2502,19,"ua"],[2386,38,2502,21],[2386,39,2502,22],[2386,43,2503,8,"_isWebOS"],[2386,51,2503,16],[2386,52,2503,17,"ua"],[2386,54,2503,19],[2386,55,2503,20],[2386,59,2504,8,"_isBlackBerry"],[2386,72,2504,21],[2386,73,2504,22,"ua"],[2386,75,2504,24],[2386,76,2504,25],[2386,80,2505,8],[2386,96,2505,24],[2386,97,2505,25,"test"],[2386,101,2505,29],[2386,102,2505,30,"ua"],[2386,104,2505,32],[2386,105,2505,33],[2386,109,2506,8,"_isIEMobile"],[2386,120,2506,19],[2386,121,2506,20,"ua"],[2386,123,2506,22],[2386,124,2506,23],[2387,2,2507,0],[2389,2,2509,0],[2390,0,2510,0],[2391,0,2511,0],[2392,0,2512,0],[2393,0,2513,0],[2394,0,2514,0],[2395,0,2515,0],[2396,0,2516,0],[2397,0,2517,0],[2398,0,2518,0],[2399,0,2519,0],[2400,0,2520,0],[2401,0,2521,0],[2402,0,2522,0],[2403,0,2523,0],[2404,0,2524,0],[2405,2,2525,0],[2406,0,2526,0],[2407,0,2527,0],[2408,2,2528,0],[2408,11,2528,9,"_getClientVersion"],[2408,28,2528,26,"_getClientVersion"],[2408,29,2528,27,"clientPlatform"],[2408,43,2528,41],[2408,45,2528,43,"frameworks"],[2408,55,2528,53],[2408,57,2528,55],[2409,4,2529,4],[2409,8,2529,8,"frameworks"],[2409,18,2529,18],[2409,23,2529,18,"undefined"],[2409,32,2529,29],[2409,34,2529,31],[2410,6,2529,33,"frameworks"],[2410,16,2529,43],[2410,19,2529,46],[2410,21,2529,48],[2411,4,2529,50],[2412,4,2530,4],[2412,8,2530,8,"reportedPlatform"],[2412,24,2530,24],[2413,4,2531,4],[2413,12,2531,12,"clientPlatform"],[2413,26,2531,26],[2414,6,2532,8],[2414,11,2532,13],[2414,20,2532,22],[2414,21,2532,23],[2415,8,2533,12],[2416,8,2534,12,"reportedPlatform"],[2416,24,2534,28],[2416,27,2534,31,"_getBrowserName"],[2416,42,2534,46],[2416,43,2534,47,"util"],[2416,47,2534,51],[2416,48,2534,52,"getUA"],[2416,53,2534,57],[2416,54,2534,58],[2416,55,2534,59],[2416,56,2534,60],[2417,8,2535,12],[2418,6,2536,8],[2418,11,2536,13],[2418,19,2536,21],[2418,20,2536,22],[2419,8,2537,12],[2420,8,2538,12],[2421,8,2539,12],[2422,8,2540,12,"reportedPlatform"],[2422,24,2540,28],[2422,27,2540,31],[2422,29,2540,33],[2422,30,2540,34,"concat"],[2422,36,2540,40],[2422,37,2540,41,"_getBrowserName"],[2422,52,2540,56],[2422,53,2540,57,"util"],[2422,57,2540,61],[2422,58,2540,62,"getUA"],[2422,63,2540,67],[2422,64,2540,68],[2422,65,2540,69],[2422,66,2540,70],[2422,68,2540,72],[2422,71,2540,75],[2422,72,2540,76],[2422,73,2540,77,"concat"],[2422,79,2540,83],[2422,80,2540,84,"clientPlatform"],[2422,94,2540,98],[2422,95,2540,99],[2423,8,2541,12],[2424,6,2542,8],[2425,8,2543,12,"reportedPlatform"],[2425,24,2543,28],[2425,27,2543,31,"clientPlatform"],[2425,41,2543,45],[2426,4,2544,4],[2427,4,2545,4],[2427,8,2545,8,"reportedFrameworks"],[2427,26,2545,26],[2427,29,2545,29,"frameworks"],[2427,39,2545,39],[2427,40,2545,40,"length"],[2427,46,2545,46],[2427,49,2546,10,"frameworks"],[2427,59,2546,20],[2427,60,2546,21,"join"],[2427,64,2546,25],[2427,65,2546,26],[2427,68,2546,29],[2427,69,2546,30],[2427,72,2547,10],[2427,90,2547,28],[2427,91,2547,29],[2427,92,2547,30],[2428,4,2548,4],[2428,11,2548,11],[2428,13,2548,13],[2428,14,2548,14,"concat"],[2428,20,2548,20],[2428,21,2548,21,"reportedPlatform"],[2428,37,2548,37],[2428,39,2548,39],[2428,42,2548,42],[2428,43,2548,43],[2428,44,2548,44,"concat"],[2428,50,2548,50],[2428,51,2548,51],[2428,59,2548,59],[2428,60,2548,60],[2428,93,2548,93],[2428,96,2548,96],[2428,97,2548,97],[2428,98,2548,98,"concat"],[2428,104,2548,104],[2428,105,2548,105,"app"],[2428,108,2548,108],[2428,109,2548,109,"SDK_VERSION"],[2428,120,2548,120],[2428,122,2548,122],[2428,125,2548,125],[2428,126,2548,126],[2428,127,2548,127,"concat"],[2428,133,2548,133],[2428,134,2548,134,"reportedFrameworks"],[2428,152,2548,152],[2428,153,2548,153],[2429,2,2549,0],[2431,2,2551,0],[2432,0,2552,0],[2433,0,2553,0],[2434,0,2554,0],[2435,0,2555,0],[2436,0,2556,0],[2437,0,2557,0],[2438,0,2558,0],[2439,0,2559,0],[2440,0,2560,0],[2441,0,2561,0],[2442,0,2562,0],[2443,0,2563,0],[2444,0,2564,0],[2445,0,2565,0],[2446,0,2566,0],[2447,2,2567,0],[2447,6,2567,4,"AuthMiddlewareQueue"],[2447,25,2567,23],[2447,28,2567,26],[2447,41,2567,41],[2447,53,2567,53],[2448,4,2568,4],[2448,13,2568,13,"AuthMiddlewareQueue"],[2448,32,2568,32,"AuthMiddlewareQueue"],[2448,33,2568,33,"auth"],[2448,37,2568,37],[2448,39,2568,39],[2449,6,2569,8],[2449,10,2569,12],[2449,11,2569,13,"auth"],[2449,15,2569,17],[2449,18,2569,20,"auth"],[2449,22,2569,24],[2450,6,2570,8],[2450,10,2570,12],[2450,11,2570,13,"queue"],[2450,16,2570,18],[2450,19,2570,21],[2450,21,2570,23],[2451,4,2571,4],[2452,4,2572,4,"AuthMiddlewareQueue"],[2452,23,2572,23],[2452,24,2572,24,"prototype"],[2452,33,2572,33],[2452,34,2572,34,"pushCallback"],[2452,46,2572,46],[2452,49,2572,49],[2452,59,2572,59,"callback"],[2452,67,2572,67],[2452,69,2572,69,"onAbort"],[2452,76,2572,76],[2452,78,2572,78],[2453,6,2573,8],[2453,10,2573,12,"_this"],[2453,15,2573,17],[2453,18,2573,20],[2453,22,2573,24],[2454,6,2574,8],[2455,6,2575,8],[2456,6,2576,8],[2456,10,2576,12,"wrappedCallback"],[2456,25,2576,27],[2456,28,2576,30],[2456,37,2576,30,"wrappedCallback"],[2456,38,2576,40,"user"],[2456,42,2576,44],[2456,44,2576,46],[2457,8,2577,12],[2457,15,2577,19],[2457,19,2577,23,"Promise"],[2457,26,2577,30],[2457,27,2577,31],[2457,37,2577,41,"resolve"],[2457,44,2577,48],[2457,46,2577,50,"reject"],[2457,52,2577,56],[2457,54,2577,58],[2458,10,2578,16],[2458,14,2578,20],[2459,12,2579,20],[2459,16,2579,24,"result"],[2459,22,2579,30],[2459,25,2579,33,"callback"],[2459,33,2579,41],[2459,34,2579,42,"user"],[2459,38,2579,46],[2459,39,2579,47],[2460,12,2580,20],[2461,12,2581,20],[2462,12,2582,20,"resolve"],[2462,19,2582,27],[2462,20,2582,28,"result"],[2462,26,2582,34],[2462,27,2582,35],[2463,10,2583,16],[2463,11,2583,17],[2463,12,2584,16],[2463,19,2584,23,"e"],[2463,20,2584,24],[2463,22,2584,26],[2464,12,2585,20],[2465,12,2586,20,"reject"],[2465,18,2586,26],[2465,19,2586,27,"e"],[2465,20,2586,28],[2465,21,2586,29],[2466,10,2587,16],[2467,8,2588,12],[2467,9,2588,13],[2467,10,2588,14],[2468,6,2589,8],[2468,7,2589,9],[2469,6,2590,8],[2470,6,2591,8,"wrappedCallback"],[2470,21,2591,23],[2470,22,2591,24,"onAbort"],[2470,29,2591,31],[2470,32,2591,34,"onAbort"],[2470,39,2591,41],[2471,6,2592,8],[2471,10,2592,12],[2471,11,2592,13,"queue"],[2471,16,2592,18],[2471,17,2592,19,"push"],[2471,21,2592,23],[2471,22,2592,24,"wrappedCallback"],[2471,37,2592,39],[2471,38,2592,40],[2472,6,2593,8],[2472,10,2593,12,"index"],[2472,15,2593,17],[2472,18,2593,20],[2472,22,2593,24],[2472,23,2593,25,"queue"],[2472,28,2593,30],[2472,29,2593,31,"length"],[2472,35,2593,37],[2472,38,2593,40],[2472,39,2593,41],[2473,6,2594,8],[2473,13,2594,15],[2473,25,2594,27],[2474,8,2595,12],[2475,8,2596,12],[2476,8,2597,12,"_this"],[2476,13,2597,17],[2476,14,2597,18,"queue"],[2476,19,2597,23],[2476,20,2597,24,"index"],[2476,25,2597,29],[2476,26,2597,30],[2476,29,2597,33],[2476,41,2597,45],[2477,10,2597,47],[2477,17,2597,54,"Promise"],[2477,24,2597,61],[2477,25,2597,62,"resolve"],[2477,32,2597,69],[2477,33,2597,70],[2477,34,2597,71],[2478,8,2597,73],[2478,9,2597,74],[2479,6,2598,8],[2479,7,2598,9],[2480,4,2599,4],[2480,5,2599,5],[2481,4,2600,4,"AuthMiddlewareQueue"],[2481,23,2600,23],[2481,24,2600,24,"prototype"],[2481,33,2600,33],[2481,34,2600,34,"runMiddleware"],[2481,47,2600,47],[2481,50,2600,50],[2481,60,2600,60,"nextUser"],[2481,68,2600,68],[2481,70,2600,70],[2482,6,2601,8],[2482,13,2601,15,"tslib"],[2482,18,2601,20],[2482,19,2601,21,"__awaiter"],[2482,28,2601,30],[2482,29,2601,31],[2482,33,2601,35],[2482,35,2601,35,"undefined"],[2482,44,2601,35],[2482,46,2601,35,"undefined"],[2482,55,2601,35],[2482,57,2601,53],[2482,69,2601,65],[2483,8,2602,12],[2483,12,2602,16,"onAbortStack"],[2483,24,2602,28],[2483,26,2602,30,"_i"],[2483,28,2602,32],[2483,30,2602,34,"_a"],[2483,32,2602,36],[2483,34,2602,38,"beforeStateCallback"],[2483,53,2602,57],[2483,55,2602,59,"e_1"],[2483,58,2602,62],[2483,60,2602,64,"_b"],[2483,62,2602,66],[2483,64,2602,68,"onAbortStack_1"],[2483,78,2602,82],[2483,80,2602,84,"onAbort"],[2483,87,2602,91],[2484,8,2603,12],[2484,15,2603,19,"tslib"],[2484,20,2603,24],[2484,21,2603,25,"__generator"],[2484,32,2603,36],[2484,33,2603,37],[2484,37,2603,41],[2484,39,2603,43],[2484,49,2603,53,"_c"],[2484,51,2603,55],[2484,53,2603,57],[2485,10,2604,16],[2485,18,2604,24,"_c"],[2485,20,2604,26],[2485,21,2604,27,"label"],[2485,26,2604,32],[2486,12,2605,20],[2486,17,2605,25],[2486,18,2605,26],[2487,14,2606,24],[2487,18,2606,28],[2487,22,2606,32],[2487,23,2606,33,"auth"],[2487,27,2606,37],[2487,28,2606,38,"currentUser"],[2487,39,2606,49],[2487,44,2606,54,"nextUser"],[2487,52,2606,62],[2487,54,2606,64],[2488,16,2607,28],[2488,23,2607,35],[2488,24,2607,36],[2488,25,2607,37],[2488,26,2607,38],[2488,37,2607,49],[2489,14,2608,24],[2490,14,2609,24,"onAbortStack"],[2490,26,2609,36],[2490,29,2609,39],[2490,31,2609,41],[2491,14,2610,24,"_c"],[2491,16,2610,26],[2491,17,2610,27,"label"],[2491,22,2610,32],[2491,25,2610,35],[2491,26,2610,36],[2492,12,2611,20],[2492,17,2611,25],[2492,18,2611,26],[2493,14,2612,24,"_c"],[2493,16,2612,26],[2493,17,2612,27,"trys"],[2493,21,2612,31],[2493,22,2612,32,"push"],[2493,26,2612,36],[2493,27,2612,37],[2493,28,2612,38],[2493,29,2612,39],[2493,31,2612,41],[2493,32,2612,42],[2493,35,2612,46],[2493,36,2612,47],[2493,37,2612,48],[2493,38,2612,49],[2494,14,2613,24,"_i"],[2494,16,2613,26],[2494,19,2613,29],[2494,20,2613,30],[2494,22,2613,32,"_a"],[2494,24,2613,34],[2494,27,2613,37],[2494,31,2613,41],[2494,32,2613,42,"queue"],[2494,37,2613,47],[2495,14,2614,24,"_c"],[2495,16,2614,26],[2495,17,2614,27,"label"],[2495,22,2614,32],[2495,25,2614,35],[2495,26,2614,36],[2496,12,2615,20],[2496,17,2615,25],[2496,18,2615,26],[2497,14,2616,24],[2497,18,2616,28],[2497,20,2616,30,"_i"],[2497,22,2616,32],[2497,25,2616,35,"_a"],[2497,27,2616,37],[2497,28,2616,38,"length"],[2497,34,2616,44],[2497,35,2616,45],[2497,37,2616,47],[2497,44,2616,54],[2497,45,2616,55],[2497,46,2616,56],[2497,47,2616,57],[2497,58,2616,68],[2497,59,2616,69],[2497,60,2616,70],[2498,14,2617,24,"beforeStateCallback"],[2498,33,2617,43],[2498,36,2617,46,"_a"],[2498,38,2617,48],[2498,39,2617,49,"_i"],[2498,41,2617,51],[2498,42,2617,52],[2499,14,2618,24],[2499,21,2618,31],[2499,22,2618,32],[2499,23,2618,33],[2499,24,2618,34],[2499,35,2618,45,"beforeStateCallback"],[2499,54,2618,64],[2499,55,2618,65,"nextUser"],[2499,63,2618,73],[2499,64,2618,74],[2499,65,2618,75],[2500,12,2619,20],[2500,17,2619,25],[2500,18,2619,26],[2501,14,2620,24,"_c"],[2501,16,2620,26],[2501,17,2620,27,"sent"],[2501,21,2620,31],[2501,22,2620,32],[2501,23,2620,33],[2502,14,2621,24],[2503,14,2622,24],[2503,18,2622,28,"beforeStateCallback"],[2503,37,2622,47],[2503,38,2622,48,"onAbort"],[2503,45,2622,55],[2503,47,2622,57],[2504,16,2623,28,"onAbortStack"],[2504,28,2623,40],[2504,29,2623,41,"push"],[2504,33,2623,45],[2504,34,2623,46,"beforeStateCallback"],[2504,53,2623,65],[2504,54,2623,66,"onAbort"],[2504,61,2623,73],[2504,62,2623,74],[2505,14,2624,24],[2506,14,2625,24,"_c"],[2506,16,2625,26],[2506,17,2625,27,"label"],[2506,22,2625,32],[2506,25,2625,35],[2506,26,2625,36],[2507,12,2626,20],[2507,17,2626,25],[2507,18,2626,26],[2508,14,2627,24,"_i"],[2508,16,2627,26],[2508,18,2627,28],[2509,14,2628,24],[2509,21,2628,31],[2509,22,2628,32],[2509,23,2628,33],[2509,24,2628,34],[2509,35,2628,45],[2509,36,2628,46],[2509,37,2628,47],[2510,12,2629,20],[2510,17,2629,25],[2510,18,2629,26],[2511,14,2629,28],[2511,21,2629,35],[2511,22,2629,36],[2511,23,2629,37],[2511,24,2629,38],[2511,35,2629,49],[2511,36,2629,50],[2511,37,2629,51],[2512,12,2630,20],[2512,17,2630,25],[2512,18,2630,26],[2513,14,2631,24,"e_1"],[2513,17,2631,27],[2513,20,2631,30,"_c"],[2513,22,2631,32],[2513,23,2631,33,"sent"],[2513,27,2631,37],[2513,28,2631,38],[2513,29,2631,39],[2514,14,2632,24],[2515,14,2633,24],[2516,14,2634,24,"onAbortStack"],[2516,26,2634,36],[2516,27,2634,37,"reverse"],[2516,34,2634,44],[2516,35,2634,45],[2516,36,2634,46],[2517,14,2635,24],[2517,19,2635,29,"_b"],[2517,21,2635,31],[2517,24,2635,34],[2517,25,2635,35],[2517,27,2635,37,"onAbortStack_1"],[2517,41,2635,51],[2517,44,2635,54,"onAbortStack"],[2517,56,2635,66],[2517,58,2635,68,"_b"],[2517,60,2635,70],[2517,63,2635,73,"onAbortStack_1"],[2517,77,2635,87],[2517,78,2635,88,"length"],[2517,84,2635,94],[2517,86,2635,96,"_b"],[2517,88,2635,98],[2517,90,2635,100],[2517,92,2635,102],[2518,16,2636,28,"onAbort"],[2518,23,2636,35],[2518,26,2636,38,"onAbortStack_1"],[2518,40,2636,52],[2518,41,2636,53,"_b"],[2518,43,2636,55],[2518,44,2636,56],[2519,16,2637,28],[2519,20,2637,32],[2520,18,2638,32,"onAbort"],[2520,25,2638,39],[2520,26,2638,40],[2520,27,2638,41],[2521,16,2639,28],[2521,17,2639,29],[2521,18,2640,28],[2521,25,2640,35,"_"],[2521,26,2640,36],[2521,28,2640,38],[2522,18,2641,32],[2523,16,2641,32],[2524,14,2643,24],[2525,14,2644,24],[2525,20,2644,30],[2525,24,2644,34],[2525,25,2644,35,"auth"],[2525,29,2644,39],[2525,30,2644,40,"_errorFactory"],[2525,43,2644,53],[2525,44,2644,54,"create"],[2525,50,2644,60],[2525,51,2644,61],[2525,66,2644,76],[2525,67,2644,77],[2525,102,2644,112],[2526,16,2645,28,"originalMessage"],[2526,31,2645,43],[2526,33,2645,45,"e_1"],[2526,36,2645,48],[2526,41,2645,53],[2526,45,2645,57],[2526,49,2645,61,"e_1"],[2526,52,2645,64],[2526,57,2645,64,"undefined"],[2526,66,2645,75],[2526,69,2645,75,"undefined"],[2526,78,2645,75],[2526,81,2645,87,"e_1"],[2526,84,2645,90],[2526,85,2645,91,"message"],[2527,14,2646,24],[2527,15,2646,25],[2527,16,2646,26],[2528,12,2647,20],[2528,17,2647,25],[2528,18,2647,26],[2529,14,2647,28],[2529,21,2647,35],[2529,22,2647,36],[2529,23,2647,37],[2529,24,2647,38],[2529,35,2647,49],[2530,10,2648,16],[2531,8,2649,12],[2531,9,2649,13],[2531,10,2649,14],[2532,6,2650,8],[2532,7,2650,9],[2532,8,2650,10],[2533,4,2651,4],[2533,5,2651,5],[2534,4,2652,4],[2534,11,2652,11,"AuthMiddlewareQueue"],[2534,30,2652,30],[2535,2,2653,0],[2535,3,2653,1],[2535,4,2653,2],[2535,5,2653,4],[2537,2,2655,0],[2538,0,2656,0],[2539,0,2657,0],[2540,0,2658,0],[2541,0,2659,0],[2542,0,2660,0],[2543,0,2661,0],[2544,0,2662,0],[2545,0,2663,0],[2546,0,2664,0],[2547,0,2665,0],[2548,0,2666,0],[2549,0,2667,0],[2550,0,2668,0],[2551,0,2669,0],[2552,0,2670,0],[2553,2,2671,0],[2554,0,2672,0],[2555,0,2673,0],[2556,0,2674,0],[2557,0,2675,0],[2558,0,2676,0],[2559,0,2677,0],[2560,2,2678,0],[2560,11,2678,9,"_getPasswordPolicy"],[2560,29,2678,27,"_getPasswordPolicy"],[2560,30,2678,28,"auth"],[2560,34,2678,32],[2560,36,2678,34,"request"],[2560,43,2678,41],[2560,45,2678,43],[2561,4,2679,4],[2561,8,2679,8,"request"],[2561,15,2679,15],[2561,20,2679,15,"undefined"],[2561,29,2679,26],[2561,31,2679,28],[2562,6,2679,30,"request"],[2562,13,2679,37],[2562,16,2679,40],[2562,17,2679,41],[2562,18,2679,42],[2563,4,2679,44],[2564,4,2680,4],[2564,11,2680,11,"tslib"],[2564,16,2680,16],[2564,17,2680,17,"__awaiter"],[2564,26,2680,26],[2564,27,2680,27],[2564,31,2680,31],[2564,33,2680,31,"undefined"],[2564,42,2680,31],[2564,44,2680,31,"undefined"],[2564,53,2680,31],[2564,55,2680,49],[2564,67,2680,61],[2565,6,2681,8],[2565,13,2681,15,"tslib"],[2565,18,2681,20],[2565,19,2681,21,"__generator"],[2565,30,2681,32],[2565,31,2681,33],[2565,35,2681,37],[2565,37,2681,39],[2565,47,2681,49,"_a"],[2565,49,2681,51],[2565,51,2681,53],[2566,8,2682,12],[2566,15,2682,19],[2566,16,2682,20],[2566,17,2682,21],[2566,18,2682,22],[2566,30,2682,34,"_performApiRequest"],[2566,48,2682,52],[2566,49,2682,53,"auth"],[2566,53,2682,57],[2566,55,2682,59],[2566,60,2682,64],[2566,61,2682,65],[2566,83,2682,87],[2566,103,2682,107],[2566,104,2682,108],[2566,140,2682,144,"_addTidIfNecessary"],[2566,158,2682,162],[2566,159,2682,163,"auth"],[2566,163,2682,167],[2566,165,2682,169,"request"],[2566,172,2682,176],[2566,173,2682,177],[2566,174,2682,178],[2566,175,2682,179],[2567,6,2683,8],[2567,7,2683,9],[2567,8,2683,10],[2568,4,2684,4],[2568,5,2684,5],[2568,6,2684,6],[2569,2,2685,0],[2571,2,2687,0],[2572,0,2688,0],[2573,0,2689,0],[2574,0,2690,0],[2575,0,2691,0],[2576,0,2692,0],[2577,0,2693,0],[2578,0,2694,0],[2579,0,2695,0],[2580,0,2696,0],[2581,0,2697,0],[2582,0,2698,0],[2583,0,2699,0],[2584,0,2700,0],[2585,0,2701,0],[2586,0,2702,0],[2587,2,2703,0],[2588,2,2704,0],[2588,6,2704,4,"MINIMUM_MIN_PASSWORD_LENGTH"],[2588,33,2704,31],[2588,36,2704,34],[2588,37,2704,35],[2589,2,2705,0],[2590,0,2706,0],[2591,0,2707,0],[2592,0,2708,0],[2593,0,2709,0],[2594,2,2710,0],[2594,6,2710,4,"PasswordPolicyImpl"],[2594,24,2710,22],[2594,27,2710,25],[2594,40,2710,40],[2594,52,2710,52],[2595,4,2711,4],[2595,13,2711,13,"PasswordPolicyImpl"],[2595,31,2711,31,"PasswordPolicyImpl"],[2595,32,2711,32,"response"],[2595,40,2711,40],[2595,42,2711,42],[2596,6,2712,8],[2596,10,2712,12,"_a"],[2596,12,2712,14],[2596,14,2712,16,"_b"],[2596,16,2712,18],[2596,18,2712,20,"_c"],[2596,20,2712,22],[2596,22,2712,24,"_d"],[2596,24,2712,26],[2597,6,2713,8],[2598,6,2714,8],[2598,10,2714,12,"responseOptions"],[2598,25,2714,27],[2598,28,2714,30,"response"],[2598,36,2714,38],[2598,37,2714,39,"customStrengthOptions"],[2598,58,2714,60],[2599,6,2715,8],[2599,10,2715,12],[2599,11,2715,13,"customStrengthOptions"],[2599,32,2715,34],[2599,35,2715,37],[2599,36,2715,38],[2599,37,2715,39],[2600,6,2716,8],[2601,6,2717,8],[2601,10,2717,12],[2601,11,2717,13,"customStrengthOptions"],[2601,32,2717,34],[2601,33,2717,35,"minPasswordLength"],[2601,50,2717,52],[2601,53,2718,12],[2601,54,2718,13,"_a"],[2601,56,2718,15],[2601,59,2718,18,"responseOptions"],[2601,74,2718,33],[2601,75,2718,34,"minPasswordLength"],[2601,92,2718,51],[2601,98,2718,57],[2601,102,2718,61],[2601,106,2718,65,"_a"],[2601,108,2718,67],[2601,113,2718,67,"undefined"],[2601,122,2718,78],[2601,125,2718,81,"_a"],[2601,127,2718,83],[2601,130,2718,86,"MINIMUM_MIN_PASSWORD_LENGTH"],[2601,157,2718,113],[2602,6,2719,8],[2602,10,2719,12,"responseOptions"],[2602,25,2719,27],[2602,26,2719,28,"maxPasswordLength"],[2602,43,2719,45],[2602,45,2719,47],[2603,8,2720,12],[2603,12,2720,16],[2603,13,2720,17,"customStrengthOptions"],[2603,34,2720,38],[2603,35,2720,39,"maxPasswordLength"],[2603,52,2720,56],[2603,55,2721,16,"responseOptions"],[2603,70,2721,31],[2603,71,2721,32,"maxPasswordLength"],[2603,88,2721,49],[2604,6,2722,8],[2605,6,2723,8],[2605,10,2723,12,"responseOptions"],[2605,25,2723,27],[2605,26,2723,28,"containsLowercaseCharacter"],[2605,52,2723,54],[2605,57,2723,59,"undefined"],[2605,66,2723,68],[2605,68,2723,70],[2606,8,2724,12],[2606,12,2724,16],[2606,13,2724,17,"customStrengthOptions"],[2606,34,2724,38],[2606,35,2724,39,"containsLowercaseLetter"],[2606,58,2724,62],[2606,61,2725,16,"responseOptions"],[2606,76,2725,31],[2606,77,2725,32,"containsLowercaseCharacter"],[2606,103,2725,58],[2607,6,2726,8],[2608,6,2727,8],[2608,10,2727,12,"responseOptions"],[2608,25,2727,27],[2608,26,2727,28,"containsUppercaseCharacter"],[2608,52,2727,54],[2608,57,2727,59,"undefined"],[2608,66,2727,68],[2608,68,2727,70],[2609,8,2728,12],[2609,12,2728,16],[2609,13,2728,17,"customStrengthOptions"],[2609,34,2728,38],[2609,35,2728,39,"containsUppercaseLetter"],[2609,58,2728,62],[2609,61,2729,16,"responseOptions"],[2609,76,2729,31],[2609,77,2729,32,"containsUppercaseCharacter"],[2609,103,2729,58],[2610,6,2730,8],[2611,6,2731,8],[2611,10,2731,12,"responseOptions"],[2611,25,2731,27],[2611,26,2731,28,"containsNumericCharacter"],[2611,50,2731,52],[2611,55,2731,57,"undefined"],[2611,64,2731,66],[2611,66,2731,68],[2612,8,2732,12],[2612,12,2732,16],[2612,13,2732,17,"customStrengthOptions"],[2612,34,2732,38],[2612,35,2732,39,"containsNumericCharacter"],[2612,59,2732,63],[2612,62,2733,16,"responseOptions"],[2612,77,2733,31],[2612,78,2733,32,"containsNumericCharacter"],[2612,102,2733,56],[2613,6,2734,8],[2614,6,2735,8],[2614,10,2735,12,"responseOptions"],[2614,25,2735,27],[2614,26,2735,28,"containsNonAlphanumericCharacter"],[2614,58,2735,60],[2614,63,2735,65,"undefined"],[2614,72,2735,74],[2614,74,2735,76],[2615,8,2736,12],[2615,12,2736,16],[2615,13,2736,17,"customStrengthOptions"],[2615,34,2736,38],[2615,35,2736,39,"containsNonAlphanumericCharacter"],[2615,67,2736,71],[2615,70,2737,16,"responseOptions"],[2615,85,2737,31],[2615,86,2737,32,"containsNonAlphanumericCharacter"],[2615,118,2737,64],[2616,6,2738,8],[2617,6,2739,8],[2617,10,2739,12],[2617,11,2739,13,"enforcementState"],[2617,27,2739,29],[2617,30,2739,32,"response"],[2617,38,2739,40],[2617,39,2739,41,"enforcementState"],[2617,55,2739,57],[2618,6,2740,8],[2618,10,2740,12],[2618,14,2740,16],[2618,15,2740,17,"enforcementState"],[2618,31,2740,33],[2618,36,2740,38],[2618,67,2740,69],[2618,69,2740,71],[2619,8,2741,12],[2619,12,2741,16],[2619,13,2741,17,"enforcementState"],[2619,29,2741,33],[2619,32,2741,36],[2619,37,2741,41],[2620,6,2742,8],[2621,6,2743,8],[2622,6,2744,8],[2622,10,2744,12],[2622,11,2744,13,"allowedNonAlphanumericCharacters"],[2622,43,2744,45],[2622,46,2745,12],[2622,47,2745,13,"_c"],[2622,49,2745,15],[2622,52,2745,18],[2622,53,2745,19,"_b"],[2622,55,2745,21],[2622,58,2745,24,"response"],[2622,66,2745,32],[2622,67,2745,33,"allowedNonAlphanumericCharacters"],[2622,99,2745,65],[2622,105,2745,71],[2622,109,2745,75],[2622,113,2745,79,"_b"],[2622,115,2745,81],[2622,120,2745,81,"undefined"],[2622,129,2745,92],[2622,132,2745,92,"undefined"],[2622,141,2745,92],[2622,144,2745,104,"_b"],[2622,146,2745,106],[2622,147,2745,107,"join"],[2622,151,2745,111],[2622,152,2745,112],[2622,154,2745,114],[2622,155,2745,115],[2622,161,2745,121],[2622,165,2745,125],[2622,169,2745,129,"_c"],[2622,171,2745,131],[2622,176,2745,131,"undefined"],[2622,185,2745,142],[2622,188,2745,145,"_c"],[2622,190,2745,147],[2622,193,2745,150],[2622,195,2745,152],[2623,6,2746,8],[2623,10,2746,12],[2623,11,2746,13,"forceUpgradeOnSignin"],[2623,31,2746,33],[2623,34,2746,36],[2623,35,2746,37,"_d"],[2623,37,2746,39],[2623,40,2746,42,"response"],[2623,48,2746,50],[2623,49,2746,51,"forceUpgradeOnSignin"],[2623,69,2746,71],[2623,75,2746,77],[2623,79,2746,81],[2623,83,2746,85,"_d"],[2623,85,2746,87],[2623,90,2746,87,"undefined"],[2623,99,2746,98],[2623,102,2746,101,"_d"],[2623,104,2746,103],[2623,107,2746,106],[2623,112,2746,111],[2624,6,2747,8],[2624,10,2747,12],[2624,11,2747,13,"schemaVersion"],[2624,24,2747,26],[2624,27,2747,29,"response"],[2624,35,2747,37],[2624,36,2747,38,"schemaVersion"],[2624,49,2747,51],[2625,4,2748,4],[2626,4,2749,4,"PasswordPolicyImpl"],[2626,22,2749,22],[2626,23,2749,23,"prototype"],[2626,32,2749,32],[2626,33,2749,33,"validatePassword"],[2626,49,2749,49],[2626,52,2749,52],[2626,62,2749,62,"password"],[2626,70,2749,70],[2626,72,2749,72],[2627,6,2750,8],[2627,10,2750,12,"_a"],[2627,12,2750,14],[2627,14,2750,16,"_b"],[2627,16,2750,18],[2627,18,2750,20,"_c"],[2627,20,2750,22],[2627,22,2750,24,"_d"],[2627,24,2750,26],[2627,26,2750,28,"_e"],[2627,28,2750,30],[2627,30,2750,32,"_f"],[2627,32,2750,34],[2628,6,2751,8],[2628,10,2751,12,"status"],[2628,16,2751,18],[2628,19,2751,21],[2629,8,2752,12,"isValid"],[2629,15,2752,19],[2629,17,2752,21],[2629,21,2752,25],[2630,8,2753,12,"passwordPolicy"],[2630,22,2753,26],[2630,24,2753,28],[2631,6,2754,8],[2631,7,2754,9],[2632,6,2755,8],[2633,6,2756,8],[2633,10,2756,12],[2633,11,2756,13,"validatePasswordLengthOptions"],[2633,40,2756,42],[2633,41,2756,43,"password"],[2633,49,2756,51],[2633,51,2756,53,"status"],[2633,57,2756,59],[2633,58,2756,60],[2634,6,2757,8],[2634,10,2757,12],[2634,11,2757,13,"validatePasswordCharacterOptions"],[2634,43,2757,45],[2634,44,2757,46,"password"],[2634,52,2757,54],[2634,54,2757,56,"status"],[2634,60,2757,62],[2634,61,2757,63],[2635,6,2758,8],[2636,6,2759,8,"status"],[2636,12,2759,14],[2636,13,2759,15,"isValid"],[2636,20,2759,22],[2636,25,2759,27,"status"],[2636,31,2759,33],[2636,32,2759,34,"isValid"],[2636,39,2759,41],[2636,42,2759,44],[2636,43,2759,45,"_a"],[2636,45,2759,47],[2636,48,2759,50,"status"],[2636,54,2759,56],[2636,55,2759,57,"meetsMinPasswordLength"],[2636,77,2759,79],[2636,83,2759,85],[2636,87,2759,89],[2636,91,2759,93,"_a"],[2636,93,2759,95],[2636,98,2759,95,"undefined"],[2636,107,2759,106],[2636,110,2759,109,"_a"],[2636,112,2759,111],[2636,115,2759,114],[2636,119,2759,118],[2636,120,2759,119],[2637,6,2760,8,"status"],[2637,12,2760,14],[2637,13,2760,15,"isValid"],[2637,20,2760,22],[2637,25,2760,27,"status"],[2637,31,2760,33],[2637,32,2760,34,"isValid"],[2637,39,2760,41],[2637,42,2760,44],[2637,43,2760,45,"_b"],[2637,45,2760,47],[2637,48,2760,50,"status"],[2637,54,2760,56],[2637,55,2760,57,"meetsMaxPasswordLength"],[2637,77,2760,79],[2637,83,2760,85],[2637,87,2760,89],[2637,91,2760,93,"_b"],[2637,93,2760,95],[2637,98,2760,95,"undefined"],[2637,107,2760,106],[2637,110,2760,109,"_b"],[2637,112,2760,111],[2637,115,2760,114],[2637,119,2760,118],[2637,120,2760,119],[2638,6,2761,8,"status"],[2638,12,2761,14],[2638,13,2761,15,"isValid"],[2638,20,2761,22],[2638,25,2761,27,"status"],[2638,31,2761,33],[2638,32,2761,34,"isValid"],[2638,39,2761,41],[2638,42,2761,44],[2638,43,2761,45,"_c"],[2638,45,2761,47],[2638,48,2761,50,"status"],[2638,54,2761,56],[2638,55,2761,57,"containsLowercaseLetter"],[2638,78,2761,80],[2638,84,2761,86],[2638,88,2761,90],[2638,92,2761,94,"_c"],[2638,94,2761,96],[2638,99,2761,96,"undefined"],[2638,108,2761,107],[2638,111,2761,110,"_c"],[2638,113,2761,112],[2638,116,2761,115],[2638,120,2761,119],[2638,121,2761,120],[2639,6,2762,8,"status"],[2639,12,2762,14],[2639,13,2762,15,"isValid"],[2639,20,2762,22],[2639,25,2762,27,"status"],[2639,31,2762,33],[2639,32,2762,34,"isValid"],[2639,39,2762,41],[2639,42,2762,44],[2639,43,2762,45,"_d"],[2639,45,2762,47],[2639,48,2762,50,"status"],[2639,54,2762,56],[2639,55,2762,57,"containsUppercaseLetter"],[2639,78,2762,80],[2639,84,2762,86],[2639,88,2762,90],[2639,92,2762,94,"_d"],[2639,94,2762,96],[2639,99,2762,96,"undefined"],[2639,108,2762,107],[2639,111,2762,110,"_d"],[2639,113,2762,112],[2639,116,2762,115],[2639,120,2762,119],[2639,121,2762,120],[2640,6,2763,8,"status"],[2640,12,2763,14],[2640,13,2763,15,"isValid"],[2640,20,2763,22],[2640,25,2763,27,"status"],[2640,31,2763,33],[2640,32,2763,34,"isValid"],[2640,39,2763,41],[2640,42,2763,44],[2640,43,2763,45,"_e"],[2640,45,2763,47],[2640,48,2763,50,"status"],[2640,54,2763,56],[2640,55,2763,57,"containsNumericCharacter"],[2640,79,2763,81],[2640,85,2763,87],[2640,89,2763,91],[2640,93,2763,95,"_e"],[2640,95,2763,97],[2640,100,2763,97,"undefined"],[2640,109,2763,108],[2640,112,2763,111,"_e"],[2640,114,2763,113],[2640,117,2763,116],[2640,121,2763,120],[2640,122,2763,121],[2641,6,2764,8,"status"],[2641,12,2764,14],[2641,13,2764,15,"isValid"],[2641,20,2764,22],[2641,25,2764,27,"status"],[2641,31,2764,33],[2641,32,2764,34,"isValid"],[2641,39,2764,41],[2641,42,2764,44],[2641,43,2764,45,"_f"],[2641,45,2764,47],[2641,48,2764,50,"status"],[2641,54,2764,56],[2641,55,2764,57,"containsNonAlphanumericCharacter"],[2641,87,2764,89],[2641,93,2764,95],[2641,97,2764,99],[2641,101,2764,103,"_f"],[2641,103,2764,105],[2641,108,2764,105,"undefined"],[2641,117,2764,116],[2641,120,2764,119,"_f"],[2641,122,2764,121],[2641,125,2764,124],[2641,129,2764,128],[2641,130,2764,129],[2642,6,2765,8],[2642,13,2765,15,"status"],[2642,19,2765,21],[2643,4,2766,4],[2643,5,2766,5],[2644,4,2767,4],[2645,0,2768,0],[2646,0,2769,0],[2647,0,2770,0],[2648,0,2771,0],[2649,0,2772,0],[2650,4,2773,4,"PasswordPolicyImpl"],[2650,22,2773,22],[2650,23,2773,23,"prototype"],[2650,32,2773,32],[2650,33,2773,33,"validatePasswordLengthOptions"],[2650,62,2773,62],[2650,65,2773,65],[2650,75,2773,75,"password"],[2650,83,2773,83],[2650,85,2773,85,"status"],[2650,91,2773,91],[2650,93,2773,93],[2651,6,2774,8],[2651,10,2774,12,"minPasswordLength"],[2651,27,2774,29],[2651,30,2774,32],[2651,34,2774,36],[2651,35,2774,37,"customStrengthOptions"],[2651,56,2774,58],[2651,57,2774,59,"minPasswordLength"],[2651,74,2774,76],[2652,6,2775,8],[2652,10,2775,12,"maxPasswordLength"],[2652,27,2775,29],[2652,30,2775,32],[2652,34,2775,36],[2652,35,2775,37,"customStrengthOptions"],[2652,56,2775,58],[2652,57,2775,59,"maxPasswordLength"],[2652,74,2775,76],[2653,6,2776,8],[2653,10,2776,12,"minPasswordLength"],[2653,27,2776,29],[2653,29,2776,31],[2654,8,2777,12,"status"],[2654,14,2777,18],[2654,15,2777,19,"meetsMinPasswordLength"],[2654,37,2777,41],[2654,40,2777,44,"password"],[2654,48,2777,52],[2654,49,2777,53,"length"],[2654,55,2777,59],[2654,59,2777,63,"minPasswordLength"],[2654,76,2777,80],[2655,6,2778,8],[2656,6,2779,8],[2656,10,2779,12,"maxPasswordLength"],[2656,27,2779,29],[2656,29,2779,31],[2657,8,2780,12,"status"],[2657,14,2780,18],[2657,15,2780,19,"meetsMaxPasswordLength"],[2657,37,2780,41],[2657,40,2780,44,"password"],[2657,48,2780,52],[2657,49,2780,53,"length"],[2657,55,2780,59],[2657,59,2780,63,"maxPasswordLength"],[2657,76,2780,80],[2658,6,2781,8],[2659,4,2782,4],[2659,5,2782,5],[2660,4,2783,4],[2661,0,2784,0],[2662,0,2785,0],[2663,0,2786,0],[2664,0,2787,0],[2665,0,2788,0],[2666,4,2789,4,"PasswordPolicyImpl"],[2666,22,2789,22],[2666,23,2789,23,"prototype"],[2666,32,2789,32],[2666,33,2789,33,"validatePasswordCharacterOptions"],[2666,65,2789,65],[2666,68,2789,68],[2666,78,2789,78,"password"],[2666,86,2789,86],[2666,88,2789,88,"status"],[2666,94,2789,94],[2666,96,2789,96],[2667,6,2790,8],[2668,6,2791,8],[2668,10,2791,12],[2668,11,2791,13,"updatePasswordCharacterOptionsStatuses"],[2668,49,2791,51],[2668,50,2791,52,"status"],[2668,56,2791,58],[2668,58,2792,8],[2668,91,2792,42],[2668,96,2792,47],[2668,98,2793,8],[2668,131,2793,42],[2668,136,2793,47],[2668,138,2794,8],[2668,169,2794,40],[2668,174,2794,45],[2668,176,2795,8],[2668,215,2795,48],[2668,220,2795,53],[2668,221,2795,54],[2669,6,2796,8],[2669,10,2796,12,"passwordChar"],[2669,22,2796,24],[2670,6,2797,8],[2670,11,2797,13],[2670,15,2797,17,"i"],[2670,16,2797,18],[2670,19,2797,21],[2670,20,2797,22],[2670,22,2797,24,"i"],[2670,23,2797,25],[2670,26,2797,28,"password"],[2670,34,2797,36],[2670,35,2797,37,"length"],[2670,41,2797,43],[2670,43,2797,45,"i"],[2670,44,2797,46],[2670,46,2797,48],[2670,48,2797,50],[2671,8,2798,12,"passwordChar"],[2671,20,2798,24],[2671,23,2798,27,"password"],[2671,31,2798,35],[2671,32,2798,36,"charAt"],[2671,38,2798,42],[2671,39,2798,43,"i"],[2671,40,2798,44],[2671,41,2798,45],[2672,8,2799,12],[2672,12,2799,16],[2672,13,2799,17,"updatePasswordCharacterOptionsStatuses"],[2672,51,2799,55],[2672,52,2799,56,"status"],[2672,58,2799,62],[2672,60,2800,12],[2672,93,2800,46,"passwordChar"],[2672,105,2800,58],[2672,109,2800,62],[2672,112,2800,65],[2672,116,2801,16,"passwordChar"],[2672,128,2801,28],[2672,132,2801,32],[2672,135,2801,35],[2672,137,2802,12],[2672,170,2802,46,"passwordChar"],[2672,182,2802,58],[2672,186,2802,62],[2672,189,2802,65],[2672,193,2803,16,"passwordChar"],[2672,205,2803,28],[2672,209,2803,32],[2672,212,2803,35],[2672,214,2804,12],[2672,245,2804,44,"passwordChar"],[2672,257,2804,56],[2672,261,2804,60],[2672,264,2804,63],[2672,268,2805,16,"passwordChar"],[2672,280,2805,28],[2672,284,2805,32],[2672,287,2805,35],[2672,289,2806,12],[2672,328,2806,52],[2672,332,2806,56],[2672,333,2806,57,"allowedNonAlphanumericCharacters"],[2672,365,2806,89],[2672,366,2806,90,"includes"],[2672,374,2806,98],[2672,375,2806,99,"passwordChar"],[2672,387,2806,111],[2672,388,2806,112],[2672,389,2806,113],[2673,6,2807,8],[2674,4,2808,4],[2674,5,2808,5],[2675,4,2809,4],[2676,0,2810,0],[2677,0,2811,0],[2678,0,2812,0],[2679,0,2813,0],[2680,0,2814,0],[2681,0,2815,0],[2682,0,2816,0],[2683,0,2817,0],[2684,0,2818,0],[2685,0,2819,0],[2686,4,2820,4,"PasswordPolicyImpl"],[2686,22,2820,22],[2686,23,2820,23,"prototype"],[2686,32,2820,32],[2686,33,2820,33,"updatePasswordCharacterOptionsStatuses"],[2686,71,2820,71],[2686,74,2820,74],[2686,84,2820,84,"status"],[2686,90,2820,90],[2686,92,2820,92,"containsLowercaseCharacter"],[2686,118,2820,118],[2686,120,2820,120,"containsUppercaseCharacter"],[2686,146,2820,146],[2686,148,2820,148,"containsNumericCharacter"],[2686,172,2820,172],[2686,174,2820,174,"containsNonAlphanumericCharacter"],[2686,206,2820,206],[2686,208,2820,208],[2687,6,2821,8],[2687,10,2821,12],[2687,14,2821,16],[2687,15,2821,17,"customStrengthOptions"],[2687,36,2821,38],[2687,37,2821,39,"containsLowercaseLetter"],[2687,60,2821,62],[2687,62,2821,64],[2688,8,2822,12,"status"],[2688,14,2822,18],[2688,15,2822,19,"containsLowercaseLetter"],[2688,38,2822,42],[2688,43,2822,47,"status"],[2688,49,2822,53],[2688,50,2822,54,"containsLowercaseLetter"],[2688,73,2822,77],[2688,76,2822,80,"containsLowercaseCharacter"],[2688,102,2822,106],[2688,103,2822,107],[2689,6,2823,8],[2690,6,2824,8],[2690,10,2824,12],[2690,14,2824,16],[2690,15,2824,17,"customStrengthOptions"],[2690,36,2824,38],[2690,37,2824,39,"containsUppercaseLetter"],[2690,60,2824,62],[2690,62,2824,64],[2691,8,2825,12,"status"],[2691,14,2825,18],[2691,15,2825,19,"containsUppercaseLetter"],[2691,38,2825,42],[2691,43,2825,47,"status"],[2691,49,2825,53],[2691,50,2825,54,"containsUppercaseLetter"],[2691,73,2825,77],[2691,76,2825,80,"containsUppercaseCharacter"],[2691,102,2825,106],[2691,103,2825,107],[2692,6,2826,8],[2693,6,2827,8],[2693,10,2827,12],[2693,14,2827,16],[2693,15,2827,17,"customStrengthOptions"],[2693,36,2827,38],[2693,37,2827,39,"containsNumericCharacter"],[2693,61,2827,63],[2693,63,2827,65],[2694,8,2828,12,"status"],[2694,14,2828,18],[2694,15,2828,19,"containsNumericCharacter"],[2694,39,2828,43],[2694,44,2828,48,"status"],[2694,50,2828,54],[2694,51,2828,55,"containsNumericCharacter"],[2694,75,2828,79],[2694,78,2828,82,"containsNumericCharacter"],[2694,102,2828,106],[2694,103,2828,107],[2695,6,2829,8],[2696,6,2830,8],[2696,10,2830,12],[2696,14,2830,16],[2696,15,2830,17,"customStrengthOptions"],[2696,36,2830,38],[2696,37,2830,39,"containsNonAlphanumericCharacter"],[2696,69,2830,71],[2696,71,2830,73],[2697,8,2831,12,"status"],[2697,14,2831,18],[2697,15,2831,19,"containsNonAlphanumericCharacter"],[2697,47,2831,51],[2697,52,2831,56,"status"],[2697,58,2831,62],[2697,59,2831,63,"containsNonAlphanumericCharacter"],[2697,91,2831,95],[2697,94,2831,98,"containsNonAlphanumericCharacter"],[2697,126,2831,130],[2697,127,2831,131],[2698,6,2832,8],[2699,4,2833,4],[2699,5,2833,5],[2700,4,2834,4],[2700,11,2834,11,"PasswordPolicyImpl"],[2700,29,2834,29],[2701,2,2835,0],[2701,3,2835,1],[2701,4,2835,2],[2701,5,2835,4],[2703,2,2837,0],[2704,0,2838,0],[2705,0,2839,0],[2706,0,2840,0],[2707,0,2841,0],[2708,0,2842,0],[2709,0,2843,0],[2710,0,2844,0],[2711,0,2845,0],[2712,0,2846,0],[2713,0,2847,0],[2714,0,2848,0],[2715,0,2849,0],[2716,0,2850,0],[2717,0,2851,0],[2718,0,2852,0],[2719,2,2853,0],[2719,6,2853,4,"AuthImpl"],[2719,14,2853,12],[2719,17,2853,15],[2719,30,2853,30],[2719,42,2853,42],[2720,4,2854,4],[2720,13,2854,13,"AuthImpl"],[2720,21,2854,21,"AuthImpl"],[2720,22,2854,22,"app"],[2720,25,2854,25],[2720,27,2854,27,"heartbeatServiceProvider"],[2720,51,2854,51],[2720,53,2854,53,"appCheckServiceProvider"],[2720,76,2854,76],[2720,78,2854,78,"config"],[2720,84,2854,84],[2720,86,2854,86],[2721,6,2855,8],[2721,10,2855,12],[2721,11,2855,13,"app"],[2721,14,2855,16],[2721,17,2855,19,"app"],[2721,20,2855,22],[2722,6,2856,8],[2722,10,2856,12],[2722,11,2856,13,"heartbeatServiceProvider"],[2722,35,2856,37],[2722,38,2856,40,"heartbeatServiceProvider"],[2722,62,2856,64],[2723,6,2857,8],[2723,10,2857,12],[2723,11,2857,13,"appCheckServiceProvider"],[2723,34,2857,36],[2723,37,2857,39,"appCheckServiceProvider"],[2723,60,2857,62],[2724,6,2858,8],[2724,10,2858,12],[2724,11,2858,13,"config"],[2724,17,2858,19],[2724,20,2858,22,"config"],[2724,26,2858,28],[2725,6,2859,8],[2725,10,2859,12],[2725,11,2859,13,"currentUser"],[2725,22,2859,24],[2725,25,2859,27],[2725,29,2859,31],[2726,6,2860,8],[2726,10,2860,12],[2726,11,2860,13,"emulatorConfig"],[2726,25,2860,27],[2726,28,2860,30],[2726,32,2860,34],[2727,6,2861,8],[2727,10,2861,12],[2727,11,2861,13,"operations"],[2727,21,2861,23],[2727,24,2861,26,"Promise"],[2727,31,2861,33],[2727,32,2861,34,"resolve"],[2727,39,2861,41],[2727,40,2861,42],[2727,41,2861,43],[2728,6,2862,8],[2728,10,2862,12],[2728,11,2862,13,"authStateSubscription"],[2728,32,2862,34],[2728,35,2862,37],[2728,39,2862,41,"Subscription"],[2728,51,2862,53],[2728,52,2862,54],[2728,56,2862,58],[2728,57,2862,59],[2729,6,2863,8],[2729,10,2863,12],[2729,11,2863,13,"idTokenSubscription"],[2729,30,2863,32],[2729,33,2863,35],[2729,37,2863,39,"Subscription"],[2729,49,2863,51],[2729,50,2863,52],[2729,54,2863,56],[2729,55,2863,57],[2730,6,2864,8],[2730,10,2864,12],[2730,11,2864,13,"beforeStateQueue"],[2730,27,2864,29],[2730,30,2864,32],[2730,34,2864,36,"AuthMiddlewareQueue"],[2730,53,2864,55],[2730,54,2864,56],[2730,58,2864,60],[2730,59,2864,61],[2731,6,2865,8],[2731,10,2865,12],[2731,11,2865,13,"redirectUser"],[2731,23,2865,25],[2731,26,2865,28],[2731,30,2865,32],[2732,6,2866,8],[2732,10,2866,12],[2732,11,2866,13,"isProactiveRefreshEnabled"],[2732,36,2866,38],[2732,39,2866,41],[2732,44,2866,46],[2733,6,2867,8],[2733,10,2867,12],[2733,11,2867,13,"EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION"],[2733,50,2867,52],[2733,53,2867,55],[2733,54,2867,56],[2734,6,2868,8],[2735,6,2869,8],[2736,6,2870,8],[2736,10,2870,12],[2736,11,2870,13,"_canInitEmulator"],[2736,27,2870,29],[2736,30,2870,32],[2736,34,2870,36],[2737,6,2871,8],[2737,10,2871,12],[2737,11,2871,13,"_isInitialized"],[2737,25,2871,27],[2737,28,2871,30],[2737,33,2871,35],[2738,6,2872,8],[2738,10,2872,12],[2738,11,2872,13,"_deleted"],[2738,19,2872,21],[2738,22,2872,24],[2738,27,2872,29],[2739,6,2873,8],[2739,10,2873,12],[2739,11,2873,13,"_initializationPromise"],[2739,33,2873,35],[2739,36,2873,38],[2739,40,2873,42],[2740,6,2874,8],[2740,10,2874,12],[2740,11,2874,13,"_popupRedirectResolver"],[2740,33,2874,35],[2740,36,2874,38],[2740,40,2874,42],[2741,6,2875,8],[2741,10,2875,12],[2741,11,2875,13,"_errorFactory"],[2741,24,2875,26],[2741,27,2875,29,"_DEFAULT_AUTH_ERROR_FACTORY"],[2741,54,2875,56],[2742,6,2876,8],[2742,10,2876,12],[2742,11,2876,13,"_agentRecaptchaConfig"],[2742,32,2876,34],[2742,35,2876,37],[2742,39,2876,41],[2743,6,2877,8],[2743,10,2877,12],[2743,11,2877,13,"_tenantRecaptchaConfigs"],[2743,34,2877,36],[2743,37,2877,39],[2743,38,2877,40],[2743,39,2877,41],[2744,6,2878,8],[2744,10,2878,12],[2744,11,2878,13,"_projectPasswordPolicy"],[2744,33,2878,35],[2744,36,2878,38],[2744,40,2878,42],[2745,6,2879,8],[2745,10,2879,12],[2745,11,2879,13,"_tenantPasswordPolicies"],[2745,34,2879,36],[2745,37,2879,39],[2745,38,2879,40],[2745,39,2879,41],[2746,6,2880,8],[2747,6,2881,8],[2748,6,2882,8],[2749,6,2883,8],[2749,10,2883,12],[2749,11,2883,13,"lastNotifiedUid"],[2749,26,2883,28],[2749,29,2883,31,"undefined"],[2749,38,2883,40],[2750,6,2884,8],[2750,10,2884,12],[2750,11,2884,13,"languageCode"],[2750,23,2884,25],[2750,26,2884,28],[2750,30,2884,32],[2751,6,2885,8],[2751,10,2885,12],[2751,11,2885,13,"tenantId"],[2751,19,2885,21],[2751,22,2885,24],[2751,26,2885,28],[2752,6,2886,8],[2752,10,2886,12],[2752,11,2886,13,"settings"],[2752,19,2886,21],[2752,22,2886,24],[2753,8,2886,26,"appVerificationDisabledForTesting"],[2753,41,2886,59],[2753,43,2886,61],[2754,6,2886,67],[2754,7,2886,68],[2755,6,2887,8],[2755,10,2887,12],[2755,11,2887,13,"frameworks"],[2755,21,2887,23],[2755,24,2887,26],[2755,26,2887,28],[2756,6,2888,8],[2756,10,2888,12],[2756,11,2888,13,"name"],[2756,15,2888,17],[2756,18,2888,20,"app"],[2756,21,2888,23],[2756,22,2888,24,"name"],[2756,26,2888,28],[2757,6,2889,8],[2757,10,2889,12],[2757,11,2889,13,"clientVersion"],[2757,24,2889,26],[2757,27,2889,29,"config"],[2757,33,2889,35],[2757,34,2889,36,"sdkClientVersion"],[2757,50,2889,52],[2758,4,2890,4],[2759,4,2891,4,"AuthImpl"],[2759,12,2891,12],[2759,13,2891,13,"prototype"],[2759,22,2891,22],[2759,23,2891,23,"_initializeWithPersistence"],[2759,49,2891,49],[2759,52,2891,52],[2759,62,2891,62,"persistenceHierarchy"],[2759,82,2891,82],[2759,84,2891,84,"popupRedirectResolver"],[2759,105,2891,105],[2759,107,2891,107],[2760,6,2892,8],[2760,10,2892,12,"_this"],[2760,15,2892,17],[2760,18,2892,20],[2760,22,2892,24],[2761,6,2893,8],[2761,10,2893,12,"popupRedirectResolver"],[2761,31,2893,33],[2761,33,2893,35],[2762,8,2894,12],[2762,12,2894,16],[2762,13,2894,17,"_popupRedirectResolver"],[2762,35,2894,39],[2762,38,2894,42,"_getInstance"],[2762,50,2894,54],[2762,51,2894,55,"popupRedirectResolver"],[2762,72,2894,76],[2762,73,2894,77],[2763,6,2895,8],[2764,6,2896,8],[2765,6,2897,8],[2766,6,2898,8],[2766,10,2898,12],[2766,11,2898,13,"_initializationPromise"],[2766,33,2898,35],[2766,36,2898,38],[2766,40,2898,42],[2766,41,2898,43,"queue"],[2766,46,2898,48],[2766,47,2898,49],[2766,59,2898,61],[2767,8,2898,63],[2767,15,2898,70,"tslib"],[2767,20,2898,75],[2767,21,2898,76,"__awaiter"],[2767,30,2898,85],[2767,31,2898,86,"_this"],[2767,36,2898,91],[2767,38,2898,91,"undefined"],[2767,47,2898,91],[2767,49,2898,91,"undefined"],[2767,58,2898,91],[2767,60,2898,109],[2767,72,2898,121],[2768,10,2899,12],[2768,14,2899,16,"_a"],[2768,16,2899,18],[2769,10,2900,12],[2769,14,2900,16,"_b"],[2769,16,2900,18],[2769,18,2900,20,"_c"],[2769,20,2900,22],[2770,10,2901,12],[2770,17,2901,19,"tslib"],[2770,22,2901,24],[2770,23,2901,25,"__generator"],[2770,34,2901,36],[2770,35,2901,37],[2770,39,2901,41],[2770,41,2901,43],[2770,51,2901,53,"_d"],[2770,53,2901,55],[2770,55,2901,57],[2771,12,2902,16],[2771,20,2902,24,"_d"],[2771,22,2902,26],[2771,23,2902,27,"label"],[2771,28,2902,32],[2772,14,2903,20],[2772,19,2903,25],[2772,20,2903,26],[2773,16,2904,24],[2773,20,2904,28],[2773,24,2904,32],[2773,25,2904,33,"_deleted"],[2773,33,2904,41],[2773,35,2904,43],[2774,18,2905,28],[2774,25,2905,35],[2774,26,2905,36],[2774,27,2905,37],[2774,28,2905,38],[2774,39,2905,49],[2775,16,2906,24],[2776,16,2907,24,"_a"],[2776,18,2907,26],[2776,21,2907,29],[2776,25,2907,33],[2777,16,2908,24],[2777,23,2908,31],[2777,24,2908,32],[2777,25,2908,33],[2777,26,2908,34],[2777,37,2908,45,"PersistenceUserManager"],[2777,59,2908,67],[2777,60,2908,68,"create"],[2777,66,2908,74],[2777,67,2908,75],[2777,71,2908,79],[2777,73,2908,81,"persistenceHierarchy"],[2777,93,2908,101],[2777,94,2908,102],[2777,95,2908,103],[2778,14,2909,20],[2778,19,2909,25],[2778,20,2909,26],[2779,16,2910,24,"_a"],[2779,18,2910,26],[2779,19,2910,27,"persistenceManager"],[2779,37,2910,45],[2779,40,2910,48,"_d"],[2779,42,2910,50],[2779,43,2910,51,"sent"],[2779,47,2910,55],[2779,48,2910,56],[2779,49,2910,57],[2780,16,2911,24],[2780,20,2911,28],[2780,24,2911,32],[2780,25,2911,33,"_deleted"],[2780,33,2911,41],[2780,35,2911,43],[2781,18,2912,28],[2781,25,2912,35],[2781,26,2912,36],[2781,27,2912,37],[2781,28,2912,38],[2781,39,2912,49],[2782,16,2913,24],[2783,16,2914,24],[2783,20,2914,28],[2783,22,2914,30],[2783,23,2914,31,"_b"],[2783,25,2914,33],[2783,28,2914,36],[2783,32,2914,40],[2783,33,2914,41,"_popupRedirectResolver"],[2783,55,2914,63],[2783,61,2914,69],[2783,65,2914,73],[2783,69,2914,77,"_b"],[2783,71,2914,79],[2783,76,2914,79,"undefined"],[2783,85,2914,90],[2783,88,2914,90,"undefined"],[2783,97,2914,90],[2783,100,2914,102,"_b"],[2783,102,2914,104],[2783,103,2914,105,"_shouldInitProactively"],[2783,125,2914,127],[2783,126,2914,128],[2783,128,2914,130],[2783,135,2914,137],[2783,136,2914,138],[2783,137,2914,139],[2783,138,2914,140],[2783,149,2914,151],[2783,150,2914,152],[2783,151,2914,153],[2784,16,2915,24,"_d"],[2784,18,2915,26],[2784,19,2915,27,"label"],[2784,24,2915,32],[2784,27,2915,35],[2784,28,2915,36],[2785,14,2916,20],[2785,19,2916,25],[2785,20,2916,26],[2786,16,2917,24,"_d"],[2786,18,2917,26],[2786,19,2917,27,"trys"],[2786,23,2917,31],[2786,24,2917,32,"push"],[2786,28,2917,36],[2786,29,2917,37],[2786,30,2917,38],[2786,31,2917,39],[2786,33,2917,41],[2786,34,2917,42],[2786,37,2917,46],[2786,38,2917,47],[2786,39,2917,48],[2786,40,2917,49],[2787,16,2918,24],[2787,23,2918,31],[2787,24,2918,32],[2787,25,2918,33],[2787,26,2918,34],[2787,37,2918,45],[2787,41,2918,49],[2787,42,2918,50,"_popupRedirectResolver"],[2787,64,2918,72],[2787,65,2918,73,"_initialize"],[2787,76,2918,84],[2787,77,2918,85],[2787,81,2918,89],[2787,82,2918,90],[2787,83,2918,91],[2788,14,2919,20],[2788,19,2919,25],[2788,20,2919,26],[2789,16,2920,24,"_d"],[2789,18,2920,26],[2789,19,2920,27,"sent"],[2789,23,2920,31],[2789,24,2920,32],[2789,25,2920,33],[2790,16,2921,24],[2790,23,2921,31],[2790,24,2921,32],[2790,25,2921,33],[2790,26,2921,34],[2790,37,2921,45],[2790,38,2921,46],[2790,39,2921,47],[2791,14,2922,20],[2791,19,2922,25],[2791,20,2922,26],[2792,16,2923,24,"_d"],[2792,18,2923,26],[2792,19,2923,27,"sent"],[2792,23,2923,31],[2792,24,2923,32],[2792,25,2923,33],[2793,16,2924,24],[2793,23,2924,31],[2793,24,2924,32],[2793,25,2924,33],[2793,26,2924,34],[2793,37,2924,45],[2793,38,2924,46],[2793,39,2924,47],[2794,14,2925,20],[2794,19,2925,25],[2794,20,2925,26],[2795,16,2925,28],[2795,23,2925,35],[2795,24,2925,36],[2795,25,2925,37],[2795,26,2925,38],[2795,37,2925,49],[2795,41,2925,53],[2795,42,2925,54,"initializeCurrentUser"],[2795,63,2925,75],[2795,64,2925,76,"popupRedirectResolver"],[2795,85,2925,97],[2795,86,2925,98],[2795,87,2925,99],[2796,14,2926,20],[2796,19,2926,25],[2796,20,2926,26],[2797,16,2927,24,"_d"],[2797,18,2927,26],[2797,19,2927,27,"sent"],[2797,23,2927,31],[2797,24,2927,32],[2797,25,2927,33],[2798,16,2928,24],[2798,20,2928,28],[2798,21,2928,29,"lastNotifiedUid"],[2798,36,2928,44],[2798,39,2928,47],[2798,40,2928,48],[2798,41,2928,49,"_c"],[2798,43,2928,51],[2798,46,2928,54],[2798,50,2928,58],[2798,51,2928,59,"currentUser"],[2798,62,2928,70],[2798,68,2928,76],[2798,72,2928,80],[2798,76,2928,84,"_c"],[2798,78,2928,86],[2798,83,2928,86,"undefined"],[2798,92,2928,97],[2798,95,2928,97,"undefined"],[2798,104,2928,97],[2798,107,2928,109,"_c"],[2798,109,2928,111],[2798,110,2928,112,"uid"],[2798,113,2928,115],[2798,118,2928,120],[2798,122,2928,124],[2799,16,2929,24],[2799,20,2929,28],[2799,24,2929,32],[2799,25,2929,33,"_deleted"],[2799,33,2929,41],[2799,35,2929,43],[2800,18,2930,28],[2800,25,2930,35],[2800,26,2930,36],[2800,27,2930,37],[2800,28,2930,38],[2800,39,2930,49],[2801,16,2931,24],[2802,16,2932,24],[2802,20,2932,28],[2802,21,2932,29,"_isInitialized"],[2802,35,2932,43],[2802,38,2932,46],[2802,42,2932,50],[2803,16,2933,24],[2803,23,2933,31],[2803,24,2933,32],[2803,25,2933,33],[2803,26,2933,34],[2803,37,2933,45],[2804,12,2934,16],[2805,10,2935,12],[2805,11,2935,13],[2805,12,2935,14],[2806,8,2936,8],[2806,9,2936,9],[2806,10,2936,10],[2807,6,2936,12],[2807,7,2936,13],[2807,8,2936,14],[2808,6,2937,8],[2808,13,2937,15],[2808,17,2937,19],[2808,18,2937,20,"_initializationPromise"],[2808,40,2937,42],[2809,4,2938,4],[2809,5,2938,5],[2810,4,2939,4],[2811,0,2940,0],[2812,0,2941,0],[2813,4,2942,4,"AuthImpl"],[2813,12,2942,12],[2813,13,2942,13,"prototype"],[2813,22,2942,22],[2813,23,2942,23,"_onStorageEvent"],[2813,38,2942,38],[2813,41,2942,41],[2813,53,2942,53],[2814,6,2943,8],[2814,13,2943,15,"tslib"],[2814,18,2943,20],[2814,19,2943,21,"__awaiter"],[2814,28,2943,30],[2814,29,2943,31],[2814,33,2943,35],[2814,35,2943,35,"undefined"],[2814,44,2943,35],[2814,46,2943,35,"undefined"],[2814,55,2943,35],[2814,57,2943,53],[2814,69,2943,65],[2815,8,2944,12],[2815,12,2944,16,"user"],[2815,16,2944,20],[2816,8,2945,12],[2816,15,2945,19,"tslib"],[2816,20,2945,24],[2816,21,2945,25,"__generator"],[2816,32,2945,36],[2816,33,2945,37],[2816,37,2945,41],[2816,39,2945,43],[2816,49,2945,53,"_a"],[2816,51,2945,55],[2816,53,2945,57],[2817,10,2946,16],[2817,18,2946,24,"_a"],[2817,20,2946,26],[2817,21,2946,27,"label"],[2817,26,2946,32],[2818,12,2947,20],[2818,17,2947,25],[2818,18,2947,26],[2819,14,2948,24],[2819,18,2948,28],[2819,22,2948,32],[2819,23,2948,33,"_deleted"],[2819,31,2948,41],[2819,33,2948,43],[2820,16,2949,28],[2820,23,2949,35],[2820,24,2949,36],[2820,25,2949,37],[2820,26,2949,38],[2820,37,2949,49],[2821,14,2950,24],[2822,14,2951,24],[2822,21,2951,31],[2822,22,2951,32],[2822,23,2951,33],[2822,24,2951,34],[2822,35,2951,45],[2822,39,2951,49],[2822,40,2951,50,"assertedPersistence"],[2822,59,2951,69],[2822,60,2951,70,"getCurrentUser"],[2822,74,2951,84],[2822,75,2951,85],[2822,76,2951,86],[2822,77,2951,87],[2823,12,2952,20],[2823,17,2952,25],[2823,18,2952,26],[2824,14,2953,24,"user"],[2824,18,2953,28],[2824,21,2953,31,"_a"],[2824,23,2953,33],[2824,24,2953,34,"sent"],[2824,28,2953,38],[2824,29,2953,39],[2824,30,2953,40],[2825,14,2954,24],[2825,18,2954,28],[2825,19,2954,29],[2825,23,2954,33],[2825,24,2954,34,"currentUser"],[2825,35,2954,45],[2825,39,2954,49],[2825,40,2954,50,"user"],[2825,44,2954,54],[2825,46,2954,56],[2826,16,2955,28],[2827,16,2956,28],[2827,23,2956,35],[2827,24,2956,36],[2827,25,2956,37],[2827,26,2956,38],[2827,37,2956,49],[2828,14,2957,24],[2829,14,2958,24],[2829,18,2958,28],[2829,20,2958,30],[2829,24,2958,34],[2829,25,2958,35,"currentUser"],[2829,36,2958,46],[2829,40,2958,50,"user"],[2829,44,2958,54],[2829,48,2958,58],[2829,52,2958,62],[2829,53,2958,63,"currentUser"],[2829,64,2958,74],[2829,65,2958,75,"uid"],[2829,68,2958,78],[2829,73,2958,83,"user"],[2829,77,2958,87],[2829,78,2958,88,"uid"],[2829,81,2958,91],[2829,82,2958,92],[2829,84,2958,94],[2829,91,2958,101],[2829,92,2958,102],[2829,93,2958,103],[2829,94,2958,104],[2829,105,2958,115],[2829,106,2958,116],[2829,107,2958,117],[2830,14,2959,24],[2831,14,2960,24],[2831,18,2960,28],[2831,19,2960,29,"_currentUser"],[2831,31,2960,41],[2831,32,2960,42,"_assign"],[2831,39,2960,49],[2831,40,2960,50,"user"],[2831,44,2960,54],[2831,45,2960,55],[2832,14,2961,24],[2833,14,2962,24],[2834,14,2963,24],[2834,21,2963,31],[2834,22,2963,32],[2834,23,2963,33],[2834,24,2963,34],[2834,35,2963,45],[2834,39,2963,49],[2834,40,2963,50,"currentUser"],[2834,51,2963,61],[2834,52,2963,62,"getIdToken"],[2834,62,2963,72],[2834,63,2963,73],[2834,64,2963,74],[2834,65,2963,75],[2835,12,2964,20],[2835,17,2964,25],[2835,18,2964,26],[2836,14,2965,24],[2837,14,2966,24],[2838,14,2967,24,"_a"],[2838,16,2967,26],[2838,17,2967,27,"sent"],[2838,21,2967,31],[2838,22,2967,32],[2838,23,2967,33],[2839,14,2968,24],[2839,21,2968,31],[2839,22,2968,32],[2839,23,2968,33],[2839,24,2968,34],[2839,35,2968,45],[2840,12,2969,20],[2840,17,2969,25],[2840,18,2969,26],[2841,14,2970,20],[2842,14,2971,20],[2843,14,2972,20],[2843,21,2972,27],[2843,22,2972,28],[2843,23,2972,29],[2843,24,2972,30],[2843,35,2972,41],[2843,39,2972,45],[2843,40,2972,46,"_updateCurrentUser"],[2843,58,2972,64],[2843,59,2972,65,"user"],[2843,63,2972,69],[2843,65,2972,71],[2843,95,2972,102],[2843,99,2972,106],[2843,100,2972,107],[2843,101,2972,108],[2844,12,2973,20],[2844,17,2973,25],[2844,18,2973,26],[2845,14,2974,24],[2846,14,2975,24],[2847,14,2976,24,"_a"],[2847,16,2976,26],[2847,17,2976,27,"sent"],[2847,21,2976,31],[2847,22,2976,32],[2847,23,2976,33],[2848,14,2977,24],[2848,21,2977,31],[2848,22,2977,32],[2848,23,2977,33],[2848,24,2977,34],[2848,35,2977,45],[2849,10,2978,16],[2850,8,2979,12],[2850,9,2979,13],[2850,10,2979,14],[2851,6,2980,8],[2851,7,2980,9],[2851,8,2980,10],[2852,4,2981,4],[2852,5,2981,5],[2853,4,2982,4,"AuthImpl"],[2853,12,2982,12],[2853,13,2982,13,"prototype"],[2853,22,2982,22],[2853,23,2982,23,"initializeCurrentUserFromIdToken"],[2853,55,2982,55],[2853,58,2982,58],[2853,68,2982,68,"idToken"],[2853,75,2982,75],[2853,77,2982,77],[2854,6,2983,8],[2854,13,2983,15,"tslib"],[2854,18,2983,20],[2854,19,2983,21,"__awaiter"],[2854,28,2983,30],[2854,29,2983,31],[2854,33,2983,35],[2854,35,2983,35,"undefined"],[2854,44,2983,35],[2854,46,2983,35,"undefined"],[2854,55,2983,35],[2854,57,2983,53],[2854,69,2983,65],[2855,8,2984,12],[2855,12,2984,16,"response"],[2855,20,2984,24],[2855,22,2984,26,"user"],[2855,26,2984,30],[2855,28,2984,32,"err_1"],[2855,33,2984,37],[2856,8,2985,12],[2856,15,2985,19,"tslib"],[2856,20,2985,24],[2856,21,2985,25,"__generator"],[2856,32,2985,36],[2856,33,2985,37],[2856,37,2985,41],[2856,39,2985,43],[2856,49,2985,53,"_a"],[2856,51,2985,55],[2856,53,2985,57],[2857,10,2986,16],[2857,18,2986,24,"_a"],[2857,20,2986,26],[2857,21,2986,27,"label"],[2857,26,2986,32],[2858,12,2987,20],[2858,17,2987,25],[2858,18,2987,26],[2859,14,2988,24,"_a"],[2859,16,2988,26],[2859,17,2988,27,"trys"],[2859,21,2988,31],[2859,22,2988,32,"push"],[2859,26,2988,36],[2859,27,2988,37],[2859,28,2988,38],[2859,29,2988,39],[2859,31,2988,41],[2859,32,2988,42],[2859,35,2988,46],[2859,36,2988,47],[2859,37,2988,48],[2859,38,2988,49],[2860,14,2989,24],[2860,21,2989,31],[2860,22,2989,32],[2860,23,2989,33],[2860,24,2989,34],[2860,35,2989,45,"getAccountInfo"],[2860,49,2989,59],[2860,50,2989,60],[2860,54,2989,64],[2860,56,2989,66],[2861,16,2989,68,"idToken"],[2861,23,2989,75],[2861,25,2989,77,"idToken"],[2862,14,2989,85],[2862,15,2989,86],[2862,16,2989,87],[2862,17,2989,88],[2863,12,2990,20],[2863,17,2990,25],[2863,18,2990,26],[2864,14,2991,24,"response"],[2864,22,2991,32],[2864,25,2991,35,"_a"],[2864,27,2991,37],[2864,28,2991,38,"sent"],[2864,32,2991,42],[2864,33,2991,43],[2864,34,2991,44],[2865,14,2992,24],[2865,21,2992,31],[2865,22,2992,32],[2865,23,2992,33],[2865,24,2992,34],[2865,35,2992,45,"UserImpl"],[2865,43,2992,53],[2865,44,2992,54,"_fromGetAccountInfoResponse"],[2865,71,2992,81],[2865,72,2992,82],[2865,76,2992,86],[2865,78,2992,88,"response"],[2865,86,2992,96],[2865,88,2992,98,"idToken"],[2865,95,2992,105],[2865,96,2992,106],[2865,97,2992,107],[2866,12,2993,20],[2866,17,2993,25],[2866,18,2993,26],[2867,14,2994,24,"user"],[2867,18,2994,28],[2867,21,2994,31,"_a"],[2867,23,2994,33],[2867,24,2994,34,"sent"],[2867,28,2994,38],[2867,29,2994,39],[2867,30,2994,40],[2868,14,2995,24],[2868,21,2995,31],[2868,22,2995,32],[2868,23,2995,33],[2868,24,2995,34],[2868,35,2995,45],[2868,39,2995,49],[2868,40,2995,50,"directlySetCurrentUser"],[2868,62,2995,72],[2868,63,2995,73,"user"],[2868,67,2995,77],[2868,68,2995,78],[2868,69,2995,79],[2869,12,2996,20],[2869,17,2996,25],[2869,18,2996,26],[2870,14,2997,24,"_a"],[2870,16,2997,26],[2870,17,2997,27,"sent"],[2870,21,2997,31],[2870,22,2997,32],[2870,23,2997,33],[2871,14,2998,24],[2871,21,2998,31],[2871,22,2998,32],[2871,23,2998,33],[2871,24,2998,34],[2871,35,2998,45],[2871,36,2998,46],[2871,37,2998,47],[2872,12,2999,20],[2872,17,2999,25],[2872,18,2999,26],[2873,14,3000,24,"err_1"],[2873,19,3000,29],[2873,22,3000,32,"_a"],[2873,24,3000,34],[2873,25,3000,35,"sent"],[2873,29,3000,39],[2873,30,3000,40],[2873,31,3000,41],[2874,14,3001,24,"console"],[2874,21,3001,31],[2874,22,3001,32,"warn"],[2874,26,3001,36],[2874,27,3001,37],[2874,95,3001,105],[2874,97,3001,107,"err_1"],[2874,102,3001,112],[2874,103,3001,113],[2875,14,3002,24],[2875,21,3002,31],[2875,22,3002,32],[2875,23,3002,33],[2875,24,3002,34],[2875,35,3002,45],[2875,39,3002,49],[2875,40,3002,50,"directlySetCurrentUser"],[2875,62,3002,72],[2875,63,3002,73],[2875,67,3002,77],[2875,68,3002,78],[2875,69,3002,79],[2876,12,3003,20],[2876,17,3003,25],[2876,18,3003,26],[2877,14,3004,24,"_a"],[2877,16,3004,26],[2877,17,3004,27,"sent"],[2877,21,3004,31],[2877,22,3004,32],[2877,23,3004,33],[2878,14,3005,24],[2878,21,3005,31],[2878,22,3005,32],[2878,23,3005,33],[2878,24,3005,34],[2878,35,3005,45],[2878,36,3005,46],[2878,37,3005,47],[2879,12,3006,20],[2879,17,3006,25],[2879,18,3006,26],[2880,14,3006,28],[2880,21,3006,35],[2880,22,3006,36],[2880,23,3006,37],[2880,24,3006,38],[2880,35,3006,49],[2881,10,3007,16],[2882,8,3008,12],[2882,9,3008,13],[2882,10,3008,14],[2883,6,3009,8],[2883,7,3009,9],[2883,8,3009,10],[2884,4,3010,4],[2884,5,3010,5],[2885,4,3011,4,"AuthImpl"],[2885,12,3011,12],[2885,13,3011,13,"prototype"],[2885,22,3011,22],[2885,23,3011,23,"initializeCurrentUser"],[2885,44,3011,44],[2885,47,3011,47],[2885,57,3011,57,"popupRedirectResolver"],[2885,78,3011,78],[2885,80,3011,80],[2886,6,3012,8],[2886,10,3012,12,"_a"],[2886,12,3012,14],[2887,6,3013,8],[2887,13,3013,15,"tslib"],[2887,18,3013,20],[2887,19,3013,21,"__awaiter"],[2887,28,3013,30],[2887,29,3013,31],[2887,33,3013,35],[2887,35,3013,35,"undefined"],[2887,44,3013,35],[2887,46,3013,35,"undefined"],[2887,55,3013,35],[2887,57,3013,53],[2887,69,3013,65],[2888,8,3014,12],[2888,12,3014,16,"idToken_1"],[2888,21,3014,25],[2888,23,3014,27,"previouslyStoredUser"],[2888,43,3014,47],[2888,45,3014,49,"futureCurrentUser"],[2888,62,3014,66],[2888,64,3014,68,"needsTocheckMiddleware"],[2888,86,3014,90],[2888,88,3014,92,"redirectUserEventId"],[2888,107,3014,111],[2888,109,3014,113,"storedUserEventId"],[2888,126,3014,130],[2888,128,3014,132,"result"],[2888,134,3014,138],[2888,136,3014,140,"e_2"],[2888,139,3014,143],[2889,8,3015,12],[2889,12,3015,16,"_this"],[2889,17,3015,21],[2889,20,3015,24],[2889,24,3015,28],[2890,8,3016,12],[2890,15,3016,19,"tslib"],[2890,20,3016,24],[2890,21,3016,25,"__generator"],[2890,32,3016,36],[2890,33,3016,37],[2890,37,3016,41],[2890,39,3016,43],[2890,49,3016,53,"_b"],[2890,51,3016,55],[2890,53,3016,57],[2891,10,3017,16],[2891,18,3017,24,"_b"],[2891,20,3017,26],[2891,21,3017,27,"label"],[2891,26,3017,32],[2892,12,3018,20],[2892,17,3018,25],[2892,18,3018,26],[2893,14,3019,24],[2893,18,3019,28,"app"],[2893,21,3019,31],[2893,22,3019,32,"_isFirebaseServerApp"],[2893,42,3019,52],[2893,43,3019,53],[2893,47,3019,57],[2893,48,3019,58,"app"],[2893,51,3019,61],[2893,52,3019,62],[2893,54,3019,64],[2894,16,3020,28,"idToken_1"],[2894,25,3020,37],[2894,28,3020,40],[2894,32,3020,44],[2894,33,3020,45,"app"],[2894,36,3020,48],[2894,37,3020,49,"settings"],[2894,45,3020,57],[2894,46,3020,58,"authIdToken"],[2894,57,3020,69],[2895,16,3021,28],[2895,20,3021,32,"idToken_1"],[2895,29,3021,41],[2895,31,3021,43],[2896,18,3022,32],[2897,18,3023,32],[2898,18,3024,32],[2898,25,3024,39],[2898,26,3024,40],[2898,27,3024,41],[2898,28,3024,42],[2898,40,3024,54],[2898,44,3024,58,"Promise"],[2898,51,3024,65],[2898,52,3024,66],[2898,62,3024,76,"resolve"],[2898,69,3024,83],[2898,71,3024,85],[2899,20,3025,40,"setTimeout"],[2899,30,3025,50],[2899,31,3025,51],[2899,43,3025,63],[2900,22,3026,44],[2900,29,3026,51,"_this"],[2900,34,3026,56],[2900,35,3026,57,"initializeCurrentUserFromIdToken"],[2900,67,3026,89],[2900,68,3026,90,"idToken_1"],[2900,77,3026,99],[2900,78,3026,100],[2900,79,3026,101,"then"],[2900,83,3026,105],[2900,84,3026,106,"resolve"],[2900,91,3026,113],[2900,93,3026,115,"resolve"],[2900,100,3026,122],[2900,101,3026,123],[2901,20,3027,40],[2901,21,3027,41],[2901,22,3027,42],[2902,18,3028,36],[2902,19,3028,37],[2902,20,3028,38],[2902,21,3028,39],[2903,16,3029,28],[2903,17,3029,29],[2903,23,3030,33],[2904,18,3031,32],[2904,25,3031,39],[2904,26,3031,40],[2904,27,3031,41],[2904,28,3031,42],[2904,40,3031,54],[2904,44,3031,58],[2904,45,3031,59,"directlySetCurrentUser"],[2904,67,3031,81],[2904,68,3031,82],[2904,72,3031,86],[2904,73,3031,87],[2904,74,3031,88],[2905,16,3032,28],[2906,14,3033,24],[2907,14,3034,24],[2907,21,3034,31],[2907,22,3034,32],[2907,23,3034,33],[2907,24,3034,34],[2907,35,3034,45],[2907,39,3034,49],[2907,40,3034,50,"assertedPersistence"],[2907,59,3034,69],[2907,60,3034,70,"getCurrentUser"],[2907,74,3034,84],[2907,75,3034,85],[2907,76,3034,86],[2907,77,3034,87],[2908,12,3035,20],[2908,17,3035,25],[2908,18,3035,26],[2909,14,3036,24,"previouslyStoredUser"],[2909,34,3036,44],[2909,37,3036,48,"_b"],[2909,39,3036,50],[2909,40,3036,51,"sent"],[2909,44,3036,55],[2909,45,3036,56],[2909,46,3036,58],[2910,14,3037,24,"futureCurrentUser"],[2910,31,3037,41],[2910,34,3037,44,"previouslyStoredUser"],[2910,54,3037,64],[2911,14,3038,24,"needsTocheckMiddleware"],[2911,36,3038,46],[2911,39,3038,49],[2911,44,3038,54],[2912,14,3039,24],[2912,18,3039,28],[2912,20,3039,30,"popupRedirectResolver"],[2912,41,3039,51],[2912,45,3039,55],[2912,49,3039,59],[2912,50,3039,60,"config"],[2912,56,3039,66],[2912,57,3039,67,"authDomain"],[2912,67,3039,77],[2912,68,3039,78],[2912,70,3039,80],[2912,77,3039,87],[2912,78,3039,88],[2912,79,3039,89],[2912,80,3039,90],[2912,91,3039,101],[2912,92,3039,102],[2912,93,3039,103],[2913,14,3040,24],[2913,21,3040,31],[2913,22,3040,32],[2913,23,3040,33],[2913,24,3040,34],[2913,35,3040,45],[2913,39,3040,49],[2913,40,3040,50,"getOrInitRedirectPersistenceManager"],[2913,75,3040,85],[2913,76,3040,86],[2913,77,3040,87],[2913,78,3040,88],[2914,12,3041,20],[2914,17,3041,25],[2914,18,3041,26],[2915,14,3042,24,"_b"],[2915,16,3042,26],[2915,17,3042,27,"sent"],[2915,21,3042,31],[2915,22,3042,32],[2915,23,3042,33],[2916,14,3043,24,"redirectUserEventId"],[2916,33,3043,43],[2916,36,3043,46],[2916,37,3043,47,"_a"],[2916,39,3043,49],[2916,42,3043,52],[2916,46,3043,56],[2916,47,3043,57,"redirectUser"],[2916,59,3043,69],[2916,65,3043,75],[2916,69,3043,79],[2916,73,3043,83,"_a"],[2916,75,3043,85],[2916,80,3043,85,"undefined"],[2916,89,3043,96],[2916,92,3043,96,"undefined"],[2916,101,3043,96],[2916,104,3043,108,"_a"],[2916,106,3043,110],[2916,107,3043,111,"_redirectEventId"],[2916,123,3043,127],[2917,14,3044,24,"storedUserEventId"],[2917,31,3044,41],[2917,34,3044,44,"futureCurrentUser"],[2917,51,3044,61],[2917,56,3044,66],[2917,60,3044,70],[2917,64,3044,74,"futureCurrentUser"],[2917,81,3044,91],[2917,86,3044,91,"undefined"],[2917,95,3044,102],[2917,98,3044,102,"undefined"],[2917,107,3044,102],[2917,110,3044,114,"futureCurrentUser"],[2917,127,3044,131],[2917,128,3044,132,"_redirectEventId"],[2917,144,3044,148],[2918,14,3045,24],[2918,21,3045,31],[2918,22,3045,32],[2918,23,3045,33],[2918,24,3045,34],[2918,35,3045,45],[2918,39,3045,49],[2918,40,3045,50,"tryRedirectSignIn"],[2918,57,3045,67],[2918,58,3045,68,"popupRedirectResolver"],[2918,79,3045,89],[2918,80,3045,90],[2918,81,3045,91],[2919,12,3046,20],[2919,17,3046,25],[2919,18,3046,26],[2920,14,3047,24,"result"],[2920,20,3047,30],[2920,23,3047,33,"_b"],[2920,25,3047,35],[2920,26,3047,36,"sent"],[2920,30,3047,40],[2920,31,3047,41],[2920,32,3047,42],[2921,14,3048,24],[2922,14,3049,24],[2923,14,3050,24],[2924,14,3051,24],[2925,14,3052,24],[2925,18,3052,28],[2925,19,3052,29],[2925,20,3052,30,"redirectUserEventId"],[2925,39,3052,49],[2925,43,3052,53,"redirectUserEventId"],[2925,62,3052,72],[2925,67,3052,77,"storedUserEventId"],[2925,84,3052,94],[2925,90,3053,29,"result"],[2925,96,3053,35],[2925,101,3053,40],[2925,105,3053,44],[2925,109,3053,48,"result"],[2925,115,3053,54],[2925,120,3053,54,"undefined"],[2925,129,3053,65],[2925,132,3053,65,"undefined"],[2925,141,3053,65],[2925,144,3053,77,"result"],[2925,150,3053,83],[2925,151,3053,84,"user"],[2925,155,3053,88],[2925,156,3053,89],[2925,158,3053,91],[2926,16,3054,28,"futureCurrentUser"],[2926,33,3054,45],[2926,36,3054,48,"result"],[2926,42,3054,54],[2926,43,3054,55,"user"],[2926,47,3054,59],[2927,16,3055,28,"needsTocheckMiddleware"],[2927,38,3055,50],[2927,41,3055,53],[2927,45,3055,57],[2928,14,3056,24],[2929,14,3057,24,"_b"],[2929,16,3057,26],[2929,17,3057,27,"label"],[2929,22,3057,32],[2929,25,3057,35],[2929,26,3057,36],[2930,12,3058,20],[2930,17,3058,25],[2930,18,3058,26],[2931,14,3059,24],[2932,14,3060,24],[2932,18,3060,28],[2932,19,3060,29,"futureCurrentUser"],[2932,36,3060,46],[2932,38,3060,48],[2933,16,3061,28],[2933,23,3061,35],[2933,24,3061,36],[2933,25,3061,37],[2933,26,3061,38],[2933,38,3061,50],[2933,42,3061,54],[2933,43,3061,55,"directlySetCurrentUser"],[2933,65,3061,77],[2933,66,3061,78],[2933,70,3061,82],[2933,71,3061,83],[2933,72,3061,84],[2934,14,3062,24],[2935,14,3063,24],[2935,18,3063,28],[2935,19,3063,29],[2935,20,3063,30,"futureCurrentUser"],[2935,37,3063,47],[2935,38,3063,48,"_redirectEventId"],[2935,54,3063,64],[2935,56,3063,66],[2935,63,3063,73],[2935,64,3063,74],[2935,65,3063,75],[2935,66,3063,76],[2935,77,3063,87],[2935,78,3063,88],[2935,79,3063,89],[2936,14,3064,24],[2936,18,3064,28],[2936,19,3064,29,"needsTocheckMiddleware"],[2936,41,3064,51],[2936,43,3064,53],[2936,50,3064,60],[2936,51,3064,61],[2936,52,3064,62],[2936,53,3064,63],[2936,64,3064,74],[2936,65,3064,75],[2936,66,3064,76],[2937,14,3065,24,"_b"],[2937,16,3065,26],[2937,17,3065,27,"label"],[2937,22,3065,32],[2937,25,3065,35],[2937,26,3065,36],[2938,12,3066,20],[2938,17,3066,25],[2938,18,3066,26],[2939,14,3067,24,"_b"],[2939,16,3067,26],[2939,17,3067,27,"trys"],[2939,21,3067,31],[2939,22,3067,32,"push"],[2939,26,3067,36],[2939,27,3067,37],[2939,28,3067,38],[2939,29,3067,39],[2939,31,3067,41],[2939,32,3067,42],[2939,35,3067,46],[2939,36,3067,47],[2939,37,3067,48],[2939,38,3067,49],[2940,14,3068,24],[2940,21,3068,31],[2940,22,3068,32],[2940,23,3068,33],[2940,24,3068,34],[2940,35,3068,45],[2940,39,3068,49],[2940,40,3068,50,"beforeStateQueue"],[2940,56,3068,66],[2940,57,3068,67,"runMiddleware"],[2940,70,3068,80],[2940,71,3068,81,"futureCurrentUser"],[2940,88,3068,98],[2940,89,3068,99],[2940,90,3068,100],[2941,12,3069,20],[2941,17,3069,25],[2941,18,3069,26],[2942,14,3070,24,"_b"],[2942,16,3070,26],[2942,17,3070,27,"sent"],[2942,21,3070,31],[2942,22,3070,32],[2942,23,3070,33],[2943,14,3071,24],[2943,21,3071,31],[2943,22,3071,32],[2943,23,3071,33],[2943,24,3071,34],[2943,35,3071,45],[2943,36,3071,46],[2943,37,3071,47],[2944,12,3072,20],[2944,17,3072,25],[2944,18,3072,26],[2945,14,3073,24,"e_2"],[2945,17,3073,27],[2945,20,3073,30,"_b"],[2945,22,3073,32],[2945,23,3073,33,"sent"],[2945,27,3073,37],[2945,28,3073,38],[2945,29,3073,39],[2946,14,3074,24,"futureCurrentUser"],[2946,31,3074,41],[2946,34,3074,44,"previouslyStoredUser"],[2946,54,3074,64],[2947,14,3075,24],[2948,14,3076,24],[2949,14,3077,24],[2949,18,3077,28],[2949,19,3077,29,"_popupRedirectResolver"],[2949,41,3077,51],[2949,42,3077,52,"_overrideRedirectResult"],[2949,65,3077,75],[2949,66,3077,76],[2949,70,3077,80],[2949,72,3077,82],[2949,84,3077,94],[2950,16,3078,28],[2950,23,3078,35,"Promise"],[2950,30,3078,42],[2950,31,3078,43,"reject"],[2950,37,3078,49],[2950,38,3078,50,"e_2"],[2950,41,3078,53],[2950,42,3078,54],[2951,14,3079,24],[2951,15,3079,25],[2951,16,3079,26],[2952,14,3080,24],[2952,21,3080,31],[2952,22,3080,32],[2952,23,3080,33],[2952,24,3080,34],[2952,35,3080,45],[2952,36,3080,46],[2952,37,3080,47],[2953,12,3081,20],[2953,17,3081,25],[2953,18,3081,26],[2954,14,3082,24],[2954,18,3082,28,"futureCurrentUser"],[2954,35,3082,45],[2954,37,3082,47],[2955,16,3083,28],[2955,23,3083,35],[2955,24,3083,36],[2955,25,3083,37],[2955,26,3083,38],[2955,38,3083,50],[2955,42,3083,54],[2955,43,3083,55,"reloadAndSetCurrentUserOrClear"],[2955,73,3083,85],[2955,74,3083,86,"futureCurrentUser"],[2955,91,3083,103],[2955,92,3083,104],[2955,93,3083,105],[2956,14,3084,24],[2956,15,3084,25],[2956,21,3085,29],[2957,16,3086,28],[2957,23,3086,35],[2957,24,3086,36],[2957,25,3086,37],[2957,26,3086,38],[2957,38,3086,50],[2957,42,3086,54],[2957,43,3086,55,"directlySetCurrentUser"],[2957,65,3086,77],[2957,66,3086,78],[2957,70,3086,82],[2957,71,3086,83],[2957,72,3086,84],[2958,14,3087,24],[2959,12,3088,20],[2959,17,3088,25],[2959,18,3088,26],[2960,14,3089,24,"_assert"],[2960,21,3089,31],[2960,22,3089,32],[2960,26,3089,36],[2960,27,3089,37,"_popupRedirectResolver"],[2960,49,3089,59],[2960,51,3089,61],[2960,55,3089,65],[2960,57,3089,67],[2960,73,3089,83],[2960,74,3089,84],[2960,108,3089,118],[2960,109,3089,119],[2961,14,3090,24],[2961,21,3090,31],[2961,22,3090,32],[2961,23,3090,33],[2961,24,3090,34],[2961,35,3090,45],[2961,39,3090,49],[2961,40,3090,50,"getOrInitRedirectPersistenceManager"],[2961,75,3090,85],[2961,76,3090,86],[2961,77,3090,87],[2961,78,3090,88],[2962,12,3091,20],[2962,17,3091,25],[2962,19,3091,27],[2963,14,3092,24,"_b"],[2963,16,3092,26],[2963,17,3092,27,"sent"],[2963,21,3092,31],[2963,22,3092,32],[2963,23,3092,33],[2964,14,3093,24],[2965,14,3094,24],[2966,14,3095,24],[2967,14,3096,24],[2967,18,3096,28],[2967,22,3096,32],[2967,23,3096,33,"redirectUser"],[2967,35,3096,45],[2967,39,3097,28],[2967,43,3097,32],[2967,44,3097,33,"redirectUser"],[2967,56,3097,45],[2967,57,3097,46,"_redirectEventId"],[2967,73,3097,62],[2967,78,3097,67,"futureCurrentUser"],[2967,95,3097,84],[2967,96,3097,85,"_redirectEventId"],[2967,112,3097,101],[2967,114,3097,103],[2968,16,3098,28],[2968,23,3098,35],[2968,24,3098,36],[2968,25,3098,37],[2968,26,3098,38],[2968,38,3098,50],[2968,42,3098,54],[2968,43,3098,55,"directlySetCurrentUser"],[2968,65,3098,77],[2968,66,3098,78,"futureCurrentUser"],[2968,83,3098,95],[2968,84,3098,96],[2968,85,3098,97],[2969,14,3099,24],[2970,14,3100,24],[2970,21,3100,31],[2970,22,3100,32],[2970,23,3100,33],[2970,24,3100,34],[2970,36,3100,46],[2970,40,3100,50],[2970,41,3100,51,"reloadAndSetCurrentUserOrClear"],[2970,71,3100,81],[2970,72,3100,82,"futureCurrentUser"],[2970,89,3100,99],[2970,90,3100,100],[2970,91,3100,101],[2971,10,3101,16],[2972,8,3102,12],[2972,9,3102,13],[2972,10,3102,14],[2973,6,3103,8],[2973,7,3103,9],[2973,8,3103,10],[2974,4,3104,4],[2974,5,3104,5],[2975,4,3105,4,"AuthImpl"],[2975,12,3105,12],[2975,13,3105,13,"prototype"],[2975,22,3105,22],[2975,23,3105,23,"tryRedirectSignIn"],[2975,40,3105,40],[2975,43,3105,43],[2975,53,3105,53,"redirectResolver"],[2975,69,3105,69],[2975,71,3105,71],[2976,6,3106,8],[2976,13,3106,15,"tslib"],[2976,18,3106,20],[2976,19,3106,21,"__awaiter"],[2976,28,3106,30],[2976,29,3106,31],[2976,33,3106,35],[2976,35,3106,35,"undefined"],[2976,44,3106,35],[2976,46,3106,35,"undefined"],[2976,55,3106,35],[2976,57,3106,53],[2976,69,3106,65],[2977,8,3107,12],[2977,12,3107,16,"result"],[2977,18,3107,22],[2978,8,3108,12],[2978,15,3108,19,"tslib"],[2978,20,3108,24],[2978,21,3108,25,"__generator"],[2978,32,3108,36],[2978,33,3108,37],[2978,37,3108,41],[2978,39,3108,43],[2978,49,3108,53,"_a"],[2978,51,3108,55],[2978,53,3108,57],[2979,10,3109,16],[2979,18,3109,24,"_a"],[2979,20,3109,26],[2979,21,3109,27,"label"],[2979,26,3109,32],[2980,12,3110,20],[2980,17,3110,25],[2980,18,3110,26],[2981,14,3111,24,"result"],[2981,20,3111,30],[2981,23,3111,33],[2981,27,3111,37],[2982,14,3112,24,"_a"],[2982,16,3112,26],[2982,17,3112,27,"label"],[2982,22,3112,32],[2982,25,3112,35],[2982,26,3112,36],[2983,12,3113,20],[2983,17,3113,25],[2983,18,3113,26],[2984,14,3114,24,"_a"],[2984,16,3114,26],[2984,17,3114,27,"trys"],[2984,21,3114,31],[2984,22,3114,32,"push"],[2984,26,3114,36],[2984,27,3114,37],[2984,28,3114,38],[2984,29,3114,39],[2984,31,3114,41],[2984,32,3114,42],[2984,35,3114,46],[2984,36,3114,47],[2984,37,3114,48],[2984,38,3114,49],[2985,14,3115,24],[2985,21,3115,31],[2985,22,3115,32],[2985,23,3115,33],[2985,24,3115,34],[2985,35,3115,45],[2985,39,3115,49],[2985,40,3115,50,"_popupRedirectResolver"],[2985,62,3115,72],[2985,63,3115,73,"_completeRedirectFn"],[2985,82,3115,92],[2985,83,3115,93],[2985,87,3115,97],[2985,89,3115,99,"redirectResolver"],[2985,105,3115,115],[2985,107,3115,117],[2985,111,3115,121],[2985,112,3115,122],[2985,113,3115,123],[2986,12,3116,20],[2986,17,3116,25],[2986,18,3116,26],[2987,14,3117,24],[2988,14,3118,24],[2989,14,3119,24,"result"],[2989,20,3119,30],[2989,23,3119,33,"_a"],[2989,25,3119,35],[2989,26,3119,36,"sent"],[2989,30,3119,40],[2989,31,3119,41],[2989,32,3119,42],[2990,14,3120,24],[2990,21,3120,31],[2990,22,3120,32],[2990,23,3120,33],[2990,24,3120,34],[2990,35,3120,45],[2990,36,3120,46],[2990,37,3120,47],[2991,12,3121,20],[2991,17,3121,25],[2991,18,3121,26],[2992,14,3122,24,"_a"],[2992,16,3122,26],[2992,17,3122,27,"sent"],[2992,21,3122,31],[2992,22,3122,32],[2992,23,3122,33],[2993,14,3123,24],[2994,14,3124,24],[2995,14,3125,24],[2995,21,3125,31],[2995,22,3125,32],[2995,23,3125,33],[2995,24,3125,34],[2995,35,3125,45],[2995,39,3125,49],[2995,40,3125,50,"_setRedirectUser"],[2995,56,3125,66],[2995,57,3125,67],[2995,61,3125,71],[2995,62,3125,72],[2995,63,3125,73],[2996,12,3126,20],[2996,17,3126,25],[2996,18,3126,26],[2997,14,3127,24],[2998,14,3128,24],[2999,14,3129,24,"_a"],[2999,16,3129,26],[2999,17,3129,27,"sent"],[2999,21,3129,31],[2999,22,3129,32],[2999,23,3129,33],[3000,14,3130,24],[3000,21,3130,31],[3000,22,3130,32],[3000,23,3130,33],[3000,24,3130,34],[3000,35,3130,45],[3000,36,3130,46],[3000,37,3130,47],[3001,12,3131,20],[3001,17,3131,25],[3001,18,3131,26],[3002,14,3131,28],[3002,21,3131,35],[3002,22,3131,36],[3002,23,3131,37],[3002,24,3131,38],[3002,36,3131,50,"result"],[3002,42,3131,56],[3002,43,3131,57],[3003,10,3132,16],[3004,8,3133,12],[3004,9,3133,13],[3004,10,3133,14],[3005,6,3134,8],[3005,7,3134,9],[3005,8,3134,10],[3006,4,3135,4],[3006,5,3135,5],[3007,4,3136,4,"AuthImpl"],[3007,12,3136,12],[3007,13,3136,13,"prototype"],[3007,22,3136,22],[3007,23,3136,23,"reloadAndSetCurrentUserOrClear"],[3007,53,3136,53],[3007,56,3136,56],[3007,66,3136,66,"user"],[3007,70,3136,70],[3007,72,3136,72],[3008,6,3137,8],[3008,13,3137,15,"tslib"],[3008,18,3137,20],[3008,19,3137,21,"__awaiter"],[3008,28,3137,30],[3008,29,3137,31],[3008,33,3137,35],[3008,35,3137,35,"undefined"],[3008,44,3137,35],[3008,46,3137,35,"undefined"],[3008,55,3137,35],[3008,57,3137,53],[3008,69,3137,65],[3009,8,3138,12],[3009,12,3138,16,"e_4"],[3009,15,3138,19],[3010,8,3139,12],[3010,15,3139,19,"tslib"],[3010,20,3139,24],[3010,21,3139,25,"__generator"],[3010,32,3139,36],[3010,33,3139,37],[3010,37,3139,41],[3010,39,3139,43],[3010,49,3139,53,"_a"],[3010,51,3139,55],[3010,53,3139,57],[3011,10,3140,16],[3011,18,3140,24,"_a"],[3011,20,3140,26],[3011,21,3140,27,"label"],[3011,26,3140,32],[3012,12,3141,20],[3012,17,3141,25],[3012,18,3141,26],[3013,14,3142,24,"_a"],[3013,16,3142,26],[3013,17,3142,27,"trys"],[3013,21,3142,31],[3013,22,3142,32,"push"],[3013,26,3142,36],[3013,27,3142,37],[3013,28,3142,38],[3013,29,3142,39],[3013,31,3142,41],[3013,32,3142,42],[3013,35,3142,46],[3013,36,3142,47],[3013,37,3142,48],[3013,38,3142,49],[3014,14,3143,24],[3014,21,3143,31],[3014,22,3143,32],[3014,23,3143,33],[3014,24,3143,34],[3014,35,3143,45,"_reloadWithoutSaving"],[3014,55,3143,65],[3014,56,3143,66,"user"],[3014,60,3143,70],[3014,61,3143,71],[3014,62,3143,72],[3015,12,3144,20],[3015,17,3144,25],[3015,18,3144,26],[3016,14,3145,24,"_a"],[3016,16,3145,26],[3016,17,3145,27,"sent"],[3016,21,3145,31],[3016,22,3145,32],[3016,23,3145,33],[3017,14,3146,24],[3017,21,3146,31],[3017,22,3146,32],[3017,23,3146,33],[3017,24,3146,34],[3017,35,3146,45],[3017,36,3146,46],[3017,37,3146,47],[3018,12,3147,20],[3018,17,3147,25],[3018,18,3147,26],[3019,14,3148,24,"e_4"],[3019,17,3148,27],[3019,20,3148,30,"_a"],[3019,22,3148,32],[3019,23,3148,33,"sent"],[3019,27,3148,37],[3019,28,3148,38],[3019,29,3148,39],[3020,14,3149,24],[3020,18,3149,28],[3020,19,3149,29,"e_4"],[3020,22,3149,32],[3020,27,3149,37],[3020,31,3149,41],[3020,35,3149,45,"e_4"],[3020,38,3149,48],[3020,43,3149,48,"undefined"],[3020,52,3149,59],[3020,55,3149,59,"undefined"],[3020,64,3149,59],[3020,67,3149,71,"e_4"],[3020,70,3149,74],[3020,71,3149,75,"code"],[3020,75,3149,79],[3020,81,3150,28],[3020,88,3150,35],[3020,89,3150,36,"concat"],[3020,95,3150,42],[3020,96,3150,43],[3020,120,3150,67],[3020,121,3150,68],[3020,163,3150,110],[3020,164,3150,111],[3020,166,3150,113],[3021,16,3151,28],[3022,16,3152,28],[3023,16,3153,28],[3023,23,3153,35],[3023,24,3153,36],[3023,25,3153,37],[3023,26,3153,38],[3023,38,3153,50],[3023,42,3153,54],[3023,43,3153,55,"directlySetCurrentUser"],[3023,65,3153,77],[3023,66,3153,78],[3023,70,3153,82],[3023,71,3153,83],[3023,72,3153,84],[3024,14,3154,24],[3025,14,3155,24],[3025,21,3155,31],[3025,22,3155,32],[3025,23,3155,33],[3025,24,3155,34],[3025,35,3155,45],[3025,36,3155,46],[3025,37,3155,47],[3026,12,3156,20],[3026,17,3156,25],[3026,18,3156,26],[3027,14,3156,28],[3027,21,3156,35],[3027,22,3156,36],[3027,23,3156,37],[3027,24,3156,38],[3027,36,3156,50],[3027,40,3156,54],[3027,41,3156,55,"directlySetCurrentUser"],[3027,63,3156,77],[3027,64,3156,78,"user"],[3027,68,3156,82],[3027,69,3156,83],[3027,70,3156,84],[3028,10,3157,16],[3029,8,3158,12],[3029,9,3158,13],[3029,10,3158,14],[3030,6,3159,8],[3030,7,3159,9],[3030,8,3159,10],[3031,4,3160,4],[3031,5,3160,5],[3032,4,3161,4,"AuthImpl"],[3032,12,3161,12],[3032,13,3161,13,"prototype"],[3032,22,3161,22],[3032,23,3161,23,"useDeviceLanguage"],[3032,40,3161,40],[3032,43,3161,43],[3032,55,3161,55],[3033,6,3162,8],[3033,10,3162,12],[3033,11,3162,13,"languageCode"],[3033,23,3162,25],[3033,26,3162,28,"_getUserLanguage"],[3033,42,3162,44],[3033,43,3162,45],[3033,44,3162,46],[3034,4,3163,4],[3034,5,3163,5],[3035,4,3164,4,"AuthImpl"],[3035,12,3164,12],[3035,13,3164,13,"prototype"],[3035,22,3164,22],[3035,23,3164,23,"_delete"],[3035,30,3164,30],[3035,33,3164,33],[3035,45,3164,45],[3036,6,3165,8],[3036,13,3165,15,"tslib"],[3036,18,3165,20],[3036,19,3165,21,"__awaiter"],[3036,28,3165,30],[3036,29,3165,31],[3036,33,3165,35],[3036,35,3165,35,"undefined"],[3036,44,3165,35],[3036,46,3165,35,"undefined"],[3036,55,3165,35],[3036,57,3165,53],[3036,69,3165,65],[3037,8,3166,12],[3037,15,3166,19,"tslib"],[3037,20,3166,24],[3037,21,3166,25,"__generator"],[3037,32,3166,36],[3037,33,3166,37],[3037,37,3166,41],[3037,39,3166,43],[3037,49,3166,53,"_a"],[3037,51,3166,55],[3037,53,3166,57],[3038,10,3167,16],[3038,14,3167,20],[3038,15,3167,21,"_deleted"],[3038,23,3167,29],[3038,26,3167,32],[3038,30,3167,36],[3039,10,3168,16],[3039,17,3168,23],[3039,18,3168,24],[3039,19,3168,25],[3039,20,3168,26],[3039,31,3168,37],[3040,8,3169,12],[3040,9,3169,13],[3040,10,3169,14],[3041,6,3170,8],[3041,7,3170,9],[3041,8,3170,10],[3042,4,3171,4],[3042,5,3171,5],[3043,4,3172,4,"AuthImpl"],[3043,12,3172,12],[3043,13,3172,13,"prototype"],[3043,22,3172,22],[3043,23,3172,23,"updateCurrentUser"],[3043,40,3172,40],[3043,43,3172,43],[3043,53,3172,53,"userExtern"],[3043,63,3172,63],[3043,65,3172,65],[3044,6,3173,8],[3044,13,3173,15,"tslib"],[3044,18,3173,20],[3044,19,3173,21,"__awaiter"],[3044,28,3173,30],[3044,29,3173,31],[3044,33,3173,35],[3044,35,3173,35,"undefined"],[3044,44,3173,35],[3044,46,3173,35,"undefined"],[3044,55,3173,35],[3044,57,3173,53],[3044,69,3173,65],[3045,8,3174,12],[3045,12,3174,16,"user"],[3045,16,3174,20],[3046,8,3175,12],[3046,15,3175,19,"tslib"],[3046,20,3175,24],[3046,21,3175,25,"__generator"],[3046,32,3175,36],[3046,33,3175,37],[3046,37,3175,41],[3046,39,3175,43],[3046,49,3175,53,"_a"],[3046,51,3175,55],[3046,53,3175,57],[3047,10,3176,16],[3047,14,3176,20,"app"],[3047,17,3176,23],[3047,18,3176,24,"_isFirebaseServerApp"],[3047,38,3176,44],[3047,39,3176,45],[3047,43,3176,49],[3047,44,3176,50,"app"],[3047,47,3176,53],[3047,48,3176,54],[3047,50,3176,56],[3048,12,3177,20],[3048,19,3177,27],[3048,20,3177,28],[3048,21,3177,29],[3048,22,3177,30],[3048,34,3177,42,"Promise"],[3048,41,3177,49],[3048,42,3177,50,"reject"],[3048,48,3177,56],[3048,49,3177,57,"_serverAppCurrentUserOperationNotSupportedError"],[3048,96,3177,104],[3048,97,3177,105],[3048,101,3177,109],[3048,102,3177,110],[3048,103,3177,111],[3048,104,3177,112],[3049,10,3178,16],[3050,10,3179,16,"user"],[3050,14,3179,20],[3050,17,3179,23,"userExtern"],[3050,27,3179,33],[3050,30,3180,22,"util"],[3050,34,3180,26],[3050,35,3180,27,"getModularInstance"],[3050,53,3180,45],[3050,54,3180,46,"userExtern"],[3050,64,3180,56],[3050,65,3180,57],[3050,68,3181,22],[3050,72,3181,26],[3051,10,3182,16],[3051,14,3182,20,"user"],[3051,18,3182,24],[3051,20,3182,26],[3052,12,3183,20,"_assert"],[3052,19,3183,27],[3052,20,3183,28,"user"],[3052,24,3183,32],[3052,25,3183,33,"auth"],[3052,29,3183,37],[3052,30,3183,38,"config"],[3052,36,3183,44],[3052,37,3183,45,"apiKey"],[3052,43,3183,51],[3052,48,3183,56],[3052,52,3183,60],[3052,53,3183,61,"config"],[3052,59,3183,67],[3052,60,3183,68,"apiKey"],[3052,66,3183,74],[3052,68,3183,76],[3052,72,3183,80],[3052,74,3183,82],[3052,94,3183,102],[3052,95,3183,103],[3052,127,3183,135],[3052,128,3183,136],[3053,10,3184,16],[3054,10,3185,16],[3054,17,3185,23],[3054,18,3185,24],[3054,19,3185,25],[3054,20,3185,26],[3054,32,3185,38],[3054,36,3185,42],[3054,37,3185,43,"_updateCurrentUser"],[3054,55,3185,61],[3054,56,3185,62,"user"],[3054,60,3185,66],[3054,64,3185,70,"user"],[3054,68,3185,74],[3054,69,3185,75,"_clone"],[3054,75,3185,81],[3054,76,3185,82],[3054,80,3185,86],[3054,81,3185,87],[3054,82,3185,88],[3054,83,3185,89],[3055,8,3186,12],[3055,9,3186,13],[3055,10,3186,14],[3056,6,3187,8],[3056,7,3187,9],[3056,8,3187,10],[3057,4,3188,4],[3057,5,3188,5],[3058,4,3189,4,"AuthImpl"],[3058,12,3189,12],[3058,13,3189,13,"prototype"],[3058,22,3189,22],[3058,23,3189,23,"_updateCurrentUser"],[3058,41,3189,41],[3058,44,3189,44],[3058,54,3189,54,"user"],[3058,58,3189,58],[3058,60,3189,60,"skipBeforeStateCallbacks"],[3058,84,3189,84],[3058,86,3189,86],[3059,6,3190,8],[3059,10,3190,12,"skipBeforeStateCallbacks"],[3059,34,3190,36],[3059,39,3190,36,"undefined"],[3059,48,3190,47],[3059,50,3190,49],[3060,8,3190,51,"skipBeforeStateCallbacks"],[3060,32,3190,75],[3060,35,3190,78],[3060,40,3190,83],[3061,6,3190,85],[3062,6,3191,8],[3062,13,3191,15,"tslib"],[3062,18,3191,20],[3062,19,3191,21,"__awaiter"],[3062,28,3191,30],[3062,29,3191,31],[3062,33,3191,35],[3062,35,3191,35,"undefined"],[3062,44,3191,35],[3062,46,3191,35,"undefined"],[3062,55,3191,35],[3062,57,3191,53],[3062,69,3191,65],[3063,8,3192,12],[3063,12,3192,16,"_this"],[3063,17,3192,21],[3063,20,3192,24],[3063,24,3192,28],[3064,8,3193,12],[3064,15,3193,19,"tslib"],[3064,20,3193,24],[3064,21,3193,25,"__generator"],[3064,32,3193,36],[3064,33,3193,37],[3064,37,3193,41],[3064,39,3193,43],[3064,49,3193,53,"_a"],[3064,51,3193,55],[3064,53,3193,57],[3065,10,3194,16],[3065,18,3194,24,"_a"],[3065,20,3194,26],[3065,21,3194,27,"label"],[3065,26,3194,32],[3066,12,3195,20],[3066,17,3195,25],[3066,18,3195,26],[3067,14,3196,24],[3067,18,3196,28],[3067,22,3196,32],[3067,23,3196,33,"_deleted"],[3067,31,3196,41],[3067,33,3196,43],[3068,16,3197,28],[3068,23,3197,35],[3068,24,3197,36],[3068,25,3197,37],[3068,26,3197,38],[3068,37,3197,49],[3069,14,3198,24],[3070,14,3199,24],[3070,18,3199,28,"user"],[3070,22,3199,32],[3070,24,3199,34],[3071,16,3200,28,"_assert"],[3071,23,3200,35],[3071,24,3200,36],[3071,28,3200,40],[3071,29,3200,41,"tenantId"],[3071,37,3200,49],[3071,42,3200,54,"user"],[3071,46,3200,58],[3071,47,3200,59,"tenantId"],[3071,55,3200,67],[3071,57,3200,69],[3071,61,3200,73],[3071,63,3200,75],[3071,83,3200,95],[3071,84,3200,96],[3071,122,3200,134],[3071,123,3200,135],[3072,14,3201,24],[3073,14,3202,24],[3073,18,3202,28],[3073,19,3202,29],[3073,20,3202,30,"skipBeforeStateCallbacks"],[3073,44,3202,54],[3073,46,3202,56],[3073,53,3202,63],[3073,54,3202,64],[3073,55,3202,65],[3073,56,3202,66],[3073,67,3202,77],[3073,68,3202,78],[3073,69,3202,79],[3074,14,3203,24],[3074,21,3203,31],[3074,22,3203,32],[3074,23,3203,33],[3074,24,3203,34],[3074,35,3203,45],[3074,39,3203,49],[3074,40,3203,50,"beforeStateQueue"],[3074,56,3203,66],[3074,57,3203,67,"runMiddleware"],[3074,70,3203,80],[3074,71,3203,81,"user"],[3074,75,3203,85],[3074,76,3203,86],[3074,77,3203,87],[3075,12,3204,20],[3075,17,3204,25],[3075,18,3204,26],[3076,14,3205,24,"_a"],[3076,16,3205,26],[3076,17,3205,27,"sent"],[3076,21,3205,31],[3076,22,3205,32],[3076,23,3205,33],[3077,14,3206,24,"_a"],[3077,16,3206,26],[3077,17,3206,27,"label"],[3077,22,3206,32],[3077,25,3206,35],[3077,26,3206,36],[3078,12,3207,20],[3078,17,3207,25],[3078,18,3207,26],[3079,14,3207,28],[3079,21,3207,35],[3079,22,3207,36],[3079,23,3207,37],[3079,24,3207,38],[3079,36,3207,50],[3079,40,3207,54],[3079,41,3207,55,"queue"],[3079,46,3207,60],[3079,47,3207,61],[3079,59,3207,73],[3080,16,3207,75],[3080,23,3207,82,"tslib"],[3080,28,3207,87],[3080,29,3207,88,"__awaiter"],[3080,38,3207,97],[3080,39,3207,98,"_this"],[3080,44,3207,103],[3080,46,3207,103,"undefined"],[3080,55,3207,103],[3080,57,3207,103,"undefined"],[3080,66,3207,103],[3080,68,3207,121],[3080,80,3207,133],[3081,18,3208,28],[3081,25,3208,35,"tslib"],[3081,30,3208,40],[3081,31,3208,41,"__generator"],[3081,42,3208,52],[3081,43,3208,53],[3081,47,3208,57],[3081,49,3208,59],[3081,59,3208,69,"_a"],[3081,61,3208,71],[3081,63,3208,73],[3082,20,3209,32],[3082,28,3209,40,"_a"],[3082,30,3209,42],[3082,31,3209,43,"label"],[3082,36,3209,48],[3083,22,3210,36],[3083,27,3210,41],[3083,28,3210,42],[3084,24,3210,44],[3084,31,3210,51],[3084,32,3210,52],[3084,33,3210,53],[3084,34,3210,54],[3084,45,3210,65],[3084,49,3210,69],[3084,50,3210,70,"directlySetCurrentUser"],[3084,72,3210,92],[3084,73,3210,93,"user"],[3084,77,3210,97],[3084,78,3210,98],[3084,79,3210,99],[3085,22,3211,36],[3085,27,3211,41],[3085,28,3211,42],[3086,24,3212,40,"_a"],[3086,26,3212,42],[3086,27,3212,43,"sent"],[3086,31,3212,47],[3086,32,3212,48],[3086,33,3212,49],[3087,24,3213,40],[3087,28,3213,44],[3087,29,3213,45,"notifyAuthListeners"],[3087,48,3213,64],[3087,49,3213,65],[3087,50,3213,66],[3088,24,3214,40],[3088,31,3214,47],[3088,32,3214,48],[3088,33,3214,49],[3088,34,3214,50],[3088,45,3214,61],[3089,20,3215,32],[3090,18,3216,28],[3090,19,3216,29],[3090,20,3216,30],[3091,16,3217,24],[3091,17,3217,25],[3091,18,3217,26],[3092,14,3217,28],[3092,15,3217,29],[3092,16,3217,30],[3092,17,3217,31],[3093,10,3218,16],[3094,8,3219,12],[3094,9,3219,13],[3094,10,3219,14],[3095,6,3220,8],[3095,7,3220,9],[3095,8,3220,10],[3096,4,3221,4],[3096,5,3221,5],[3097,4,3222,4,"AuthImpl"],[3097,12,3222,12],[3097,13,3222,13,"prototype"],[3097,22,3222,22],[3097,23,3222,23,"signOut"],[3097,30,3222,30],[3097,33,3222,33],[3097,45,3222,45],[3098,6,3223,8],[3098,13,3223,15,"tslib"],[3098,18,3223,20],[3098,19,3223,21,"__awaiter"],[3098,28,3223,30],[3098,29,3223,31],[3098,33,3223,35],[3098,35,3223,35,"undefined"],[3098,44,3223,35],[3098,46,3223,35,"undefined"],[3098,55,3223,35],[3098,57,3223,53],[3098,69,3223,65],[3099,8,3224,12],[3099,15,3224,19,"tslib"],[3099,20,3224,24],[3099,21,3224,25,"__generator"],[3099,32,3224,36],[3099,33,3224,37],[3099,37,3224,41],[3099,39,3224,43],[3099,49,3224,53,"_a"],[3099,51,3224,55],[3099,53,3224,57],[3100,10,3225,16],[3100,18,3225,24,"_a"],[3100,20,3225,26],[3100,21,3225,27,"label"],[3100,26,3225,32],[3101,12,3226,20],[3101,17,3226,25],[3101,18,3226,26],[3102,14,3227,24],[3102,18,3227,28,"app"],[3102,21,3227,31],[3102,22,3227,32,"_isFirebaseServerApp"],[3102,42,3227,52],[3102,43,3227,53],[3102,47,3227,57],[3102,48,3227,58,"app"],[3102,51,3227,61],[3102,52,3227,62],[3102,54,3227,64],[3103,16,3228,28],[3103,23,3228,35],[3103,24,3228,36],[3103,25,3228,37],[3103,26,3228,38],[3103,38,3228,50,"Promise"],[3103,45,3228,57],[3103,46,3228,58,"reject"],[3103,52,3228,64],[3103,53,3228,65,"_serverAppCurrentUserOperationNotSupportedError"],[3103,100,3228,112],[3103,101,3228,113],[3103,105,3228,117],[3103,106,3228,118],[3103,107,3228,119],[3103,108,3228,120],[3104,14,3229,24],[3105,14,3230,24],[3106,14,3231,24],[3106,21,3231,31],[3106,22,3231,32],[3106,23,3231,33],[3106,24,3231,34],[3106,35,3231,45],[3106,39,3231,49],[3106,40,3231,50,"beforeStateQueue"],[3106,56,3231,66],[3106,57,3231,67,"runMiddleware"],[3106,70,3231,80],[3106,71,3231,81],[3106,75,3231,85],[3106,76,3231,86],[3106,77,3231,87],[3107,12,3232,20],[3107,17,3232,25],[3107,18,3232,26],[3108,14,3233,24],[3109,14,3234,24,"_a"],[3109,16,3234,26],[3109,17,3234,27,"sent"],[3109,21,3234,31],[3109,22,3234,32],[3109,23,3234,33],[3110,14,3235,24],[3110,18,3235,28],[3110,20,3235,30],[3110,24,3235,34],[3110,25,3235,35,"redirectPersistenceManager"],[3110,51,3235,61],[3110,55,3235,65],[3110,59,3235,69],[3110,60,3235,70,"_popupRedirectResolver"],[3110,82,3235,92],[3110,83,3235,93],[3110,85,3235,95],[3110,92,3235,102],[3110,93,3235,103],[3110,94,3235,104],[3110,95,3235,105],[3110,106,3235,116],[3110,107,3235,117],[3110,108,3235,118],[3111,14,3236,24],[3111,21,3236,31],[3111,22,3236,32],[3111,23,3236,33],[3111,24,3236,34],[3111,35,3236,45],[3111,39,3236,49],[3111,40,3236,50,"_setRedirectUser"],[3111,56,3236,66],[3111,57,3236,67],[3111,61,3236,71],[3111,62,3236,72],[3111,63,3236,73],[3112,12,3237,20],[3112,17,3237,25],[3112,18,3237,26],[3113,14,3238,24,"_a"],[3113,16,3238,26],[3113,17,3238,27,"sent"],[3113,21,3238,31],[3113,22,3238,32],[3113,23,3238,33],[3114,14,3239,24,"_a"],[3114,16,3239,26],[3114,17,3239,27,"label"],[3114,22,3239,32],[3114,25,3239,35],[3114,26,3239,36],[3115,12,3240,20],[3115,17,3240,25],[3115,18,3240,26],[3116,14,3241,20],[3117,14,3242,20],[3118,14,3243,20],[3118,21,3243,27],[3118,22,3243,28],[3118,23,3243,29],[3118,24,3243,30],[3118,36,3243,42],[3118,40,3243,46],[3118,41,3243,47,"_updateCurrentUser"],[3118,59,3243,65],[3118,60,3243,66],[3118,64,3243,70],[3118,66,3243,72],[3118,96,3243,103],[3118,100,3243,107],[3118,101,3243,108],[3118,102,3243,109],[3119,10,3244,16],[3120,8,3245,12],[3120,9,3245,13],[3120,10,3245,14],[3121,6,3246,8],[3121,7,3246,9],[3121,8,3246,10],[3122,4,3247,4],[3122,5,3247,5],[3123,4,3248,4,"AuthImpl"],[3123,12,3248,12],[3123,13,3248,13,"prototype"],[3123,22,3248,22],[3123,23,3248,23,"setPersistence"],[3123,37,3248,37],[3123,40,3248,40],[3123,50,3248,50,"persistence"],[3123,61,3248,61],[3123,63,3248,63],[3124,6,3249,8],[3124,10,3249,12,"_this"],[3124,15,3249,17],[3124,18,3249,20],[3124,22,3249,24],[3125,6,3250,8],[3125,10,3250,12,"app"],[3125,13,3250,15],[3125,14,3250,16,"_isFirebaseServerApp"],[3125,34,3250,36],[3125,35,3250,37],[3125,39,3250,41],[3125,40,3250,42,"app"],[3125,43,3250,45],[3125,44,3250,46],[3125,46,3250,48],[3126,8,3251,12],[3126,15,3251,19,"Promise"],[3126,22,3251,26],[3126,23,3251,27,"reject"],[3126,29,3251,33],[3126,30,3251,34,"_serverAppCurrentUserOperationNotSupportedError"],[3126,77,3251,81],[3126,78,3251,82],[3126,82,3251,86],[3126,83,3251,87],[3126,84,3251,88],[3127,6,3252,8],[3128,6,3253,8],[3128,13,3253,15],[3128,17,3253,19],[3128,18,3253,20,"queue"],[3128,23,3253,25],[3128,24,3253,26],[3128,36,3253,38],[3129,8,3253,40],[3129,15,3253,47,"tslib"],[3129,20,3253,52],[3129,21,3253,53,"__awaiter"],[3129,30,3253,62],[3129,31,3253,63,"_this"],[3129,36,3253,68],[3129,38,3253,68,"undefined"],[3129,47,3253,68],[3129,49,3253,68,"undefined"],[3129,58,3253,68],[3129,60,3253,86],[3129,72,3253,98],[3130,10,3254,12],[3130,17,3254,19,"tslib"],[3130,22,3254,24],[3130,23,3254,25,"__generator"],[3130,34,3254,36],[3130,35,3254,37],[3130,39,3254,41],[3130,41,3254,43],[3130,51,3254,53,"_a"],[3130,53,3254,55],[3130,55,3254,57],[3131,12,3255,16],[3131,20,3255,24,"_a"],[3131,22,3255,26],[3131,23,3255,27,"label"],[3131,28,3255,32],[3132,14,3256,20],[3132,19,3256,25],[3132,20,3256,26],[3133,16,3256,28],[3133,23,3256,35],[3133,24,3256,36],[3133,25,3256,37],[3133,26,3256,38],[3133,37,3256,49],[3133,41,3256,53],[3133,42,3256,54,"assertedPersistence"],[3133,61,3256,73],[3133,62,3256,74,"setPersistence"],[3133,76,3256,88],[3133,77,3256,89,"_getInstance"],[3133,89,3256,101],[3133,90,3256,102,"persistence"],[3133,101,3256,113],[3133,102,3256,114],[3133,103,3256,115],[3133,104,3256,116],[3134,14,3257,20],[3134,19,3257,25],[3134,20,3257,26],[3135,16,3258,24,"_a"],[3135,18,3258,26],[3135,19,3258,27,"sent"],[3135,23,3258,31],[3135,24,3258,32],[3135,25,3258,33],[3136,16,3259,24],[3136,23,3259,31],[3136,24,3259,32],[3136,25,3259,33],[3136,26,3259,34],[3136,37,3259,45],[3137,12,3260,16],[3138,10,3261,12],[3138,11,3261,13],[3138,12,3261,14],[3139,8,3262,8],[3139,9,3262,9],[3139,10,3262,10],[3140,6,3262,12],[3140,7,3262,13],[3140,8,3262,14],[3141,4,3263,4],[3141,5,3263,5],[3142,4,3264,4,"AuthImpl"],[3142,12,3264,12],[3142,13,3264,13,"prototype"],[3142,22,3264,22],[3142,23,3264,23,"_getRecaptchaConfig"],[3142,42,3264,42],[3142,45,3264,45],[3142,57,3264,57],[3143,6,3265,8],[3143,10,3265,12],[3143,14,3265,16],[3143,15,3265,17,"tenantId"],[3143,23,3265,25],[3143,27,3265,29],[3143,31,3265,33],[3143,33,3265,35],[3144,8,3266,12],[3144,15,3266,19],[3144,19,3266,23],[3144,20,3266,24,"_agentRecaptchaConfig"],[3144,41,3266,45],[3145,6,3267,8],[3145,7,3267,9],[3145,13,3268,13],[3146,8,3269,12],[3146,15,3269,19],[3146,19,3269,23],[3146,20,3269,24,"_tenantRecaptchaConfigs"],[3146,43,3269,47],[3146,44,3269,48],[3146,48,3269,52],[3146,49,3269,53,"tenantId"],[3146,57,3269,61],[3146,58,3269,62],[3147,6,3270,8],[3148,4,3271,4],[3148,5,3271,5],[3149,4,3272,4,"AuthImpl"],[3149,12,3272,12],[3149,13,3272,13,"prototype"],[3149,22,3272,22],[3149,23,3272,23,"validatePassword"],[3149,39,3272,39],[3149,42,3272,42],[3149,52,3272,52,"password"],[3149,60,3272,60],[3149,62,3272,62],[3150,6,3273,8],[3150,13,3273,15,"tslib"],[3150,18,3273,20],[3150,19,3273,21,"__awaiter"],[3150,28,3273,30],[3150,29,3273,31],[3150,33,3273,35],[3150,35,3273,35,"undefined"],[3150,44,3273,35],[3150,46,3273,35,"undefined"],[3150,55,3273,35],[3150,57,3273,53],[3150,69,3273,65],[3151,8,3274,12],[3151,12,3274,16,"passwordPolicy"],[3151,26,3274,30],[3152,8,3275,12],[3152,15,3275,19,"tslib"],[3152,20,3275,24],[3152,21,3275,25,"__generator"],[3152,32,3275,36],[3152,33,3275,37],[3152,37,3275,41],[3152,39,3275,43],[3152,49,3275,53,"_a"],[3152,51,3275,55],[3152,53,3275,57],[3153,10,3276,16],[3153,18,3276,24,"_a"],[3153,20,3276,26],[3153,21,3276,27,"label"],[3153,26,3276,32],[3154,12,3277,20],[3154,17,3277,25],[3154,18,3277,26],[3155,14,3278,24],[3155,18,3278,28],[3155,19,3278,29],[3155,20,3278,30],[3155,24,3278,34],[3155,25,3278,35,"_getPasswordPolicyInternal"],[3155,51,3278,61],[3155,52,3278,62],[3155,53,3278,63],[3155,55,3278,65],[3155,62,3278,72],[3155,63,3278,73],[3155,64,3278,74],[3155,65,3278,75],[3155,76,3278,86],[3155,77,3278,87],[3155,78,3278,88],[3156,14,3279,24],[3156,21,3279,31],[3156,22,3279,32],[3156,23,3279,33],[3156,24,3279,34],[3156,35,3279,45],[3156,39,3279,49],[3156,40,3279,50,"_updatePasswordPolicy"],[3156,61,3279,71],[3156,62,3279,72],[3156,63,3279,73],[3156,64,3279,74],[3157,12,3280,20],[3157,17,3280,25],[3157,18,3280,26],[3158,14,3281,24,"_a"],[3158,16,3281,26],[3158,17,3281,27,"sent"],[3158,21,3281,31],[3158,22,3281,32],[3158,23,3281,33],[3159,14,3282,24,"_a"],[3159,16,3282,26],[3159,17,3282,27,"label"],[3159,22,3282,32],[3159,25,3282,35],[3159,26,3282,36],[3160,12,3283,20],[3160,17,3283,25],[3160,18,3283,26],[3161,14,3284,24,"passwordPolicy"],[3161,28,3284,38],[3161,31,3284,41],[3161,35,3284,45],[3161,36,3284,46,"_getPasswordPolicyInternal"],[3161,62,3284,72],[3161,63,3284,73],[3161,64,3284,74],[3162,14,3285,24],[3163,14,3286,24],[3164,14,3287,24],[3164,18,3287,28,"passwordPolicy"],[3164,32,3287,42],[3164,33,3287,43,"schemaVersion"],[3164,46,3287,56],[3164,51,3288,28],[3164,55,3288,32],[3164,56,3288,33,"EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION"],[3164,95,3288,72],[3164,97,3288,74],[3165,16,3289,28],[3165,23,3289,35],[3165,24,3289,36],[3165,25,3289,37],[3165,26,3289,38],[3165,38,3289,50,"Promise"],[3165,45,3289,57],[3165,46,3289,58,"reject"],[3165,52,3289,64],[3165,53,3289,65],[3165,57,3289,69],[3165,58,3289,70,"_errorFactory"],[3165,71,3289,83],[3165,72,3289,84,"create"],[3165,78,3289,90],[3165,79,3289,91],[3165,123,3289,135],[3165,124,3289,136],[3165,188,3289,200],[3165,189,3289,201],[3165,190,3289,202],[3165,191,3289,203],[3165,192,3289,204],[3165,193,3289,205],[3166,14,3290,24],[3167,14,3291,24],[3167,21,3291,31],[3167,22,3291,32],[3167,23,3291,33],[3167,24,3291,34],[3167,36,3291,46,"passwordPolicy"],[3167,50,3291,60],[3167,51,3291,61,"validatePassword"],[3167,67,3291,77],[3167,68,3291,78,"password"],[3167,76,3291,86],[3167,77,3291,87],[3167,78,3291,88],[3168,10,3292,16],[3169,8,3293,12],[3169,9,3293,13],[3169,10,3293,14],[3170,6,3294,8],[3170,7,3294,9],[3170,8,3294,10],[3171,4,3295,4],[3171,5,3295,5],[3172,4,3296,4,"AuthImpl"],[3172,12,3296,12],[3172,13,3296,13,"prototype"],[3172,22,3296,22],[3172,23,3296,23,"_getPasswordPolicyInternal"],[3172,49,3296,49],[3172,52,3296,52],[3172,64,3296,64],[3173,6,3297,8],[3173,10,3297,12],[3173,14,3297,16],[3173,15,3297,17,"tenantId"],[3173,23,3297,25],[3173,28,3297,30],[3173,32,3297,34],[3173,34,3297,36],[3174,8,3298,12],[3174,15,3298,19],[3174,19,3298,23],[3174,20,3298,24,"_projectPasswordPolicy"],[3174,42,3298,46],[3175,6,3299,8],[3175,7,3299,9],[3175,13,3300,13],[3176,8,3301,12],[3176,15,3301,19],[3176,19,3301,23],[3176,20,3301,24,"_tenantPasswordPolicies"],[3176,43,3301,47],[3176,44,3301,48],[3176,48,3301,52],[3176,49,3301,53,"tenantId"],[3176,57,3301,61],[3176,58,3301,62],[3177,6,3302,8],[3178,4,3303,4],[3178,5,3303,5],[3179,4,3304,4,"AuthImpl"],[3179,12,3304,12],[3179,13,3304,13,"prototype"],[3179,22,3304,22],[3179,23,3304,23,"_updatePasswordPolicy"],[3179,44,3304,44],[3179,47,3304,47],[3179,59,3304,59],[3180,6,3305,8],[3180,13,3305,15,"tslib"],[3180,18,3305,20],[3180,19,3305,21,"__awaiter"],[3180,28,3305,30],[3180,29,3305,31],[3180,33,3305,35],[3180,35,3305,35,"undefined"],[3180,44,3305,35],[3180,46,3305,35,"undefined"],[3180,55,3305,35],[3180,57,3305,53],[3180,69,3305,65],[3181,8,3306,12],[3181,12,3306,16,"response"],[3181,20,3306,24],[3181,22,3306,26,"passwordPolicy"],[3181,36,3306,40],[3182,8,3307,12],[3182,15,3307,19,"tslib"],[3182,20,3307,24],[3182,21,3307,25,"__generator"],[3182,32,3307,36],[3182,33,3307,37],[3182,37,3307,41],[3182,39,3307,43],[3182,49,3307,53,"_a"],[3182,51,3307,55],[3182,53,3307,57],[3183,10,3308,16],[3183,18,3308,24,"_a"],[3183,20,3308,26],[3183,21,3308,27,"label"],[3183,26,3308,32],[3184,12,3309,20],[3184,17,3309,25],[3184,18,3309,26],[3185,14,3309,28],[3185,21,3309,35],[3185,22,3309,36],[3185,23,3309,37],[3185,24,3309,38],[3185,35,3309,49,"_getPasswordPolicy"],[3185,53,3309,67],[3185,54,3309,68],[3185,58,3309,72],[3185,59,3309,73],[3185,60,3309,74],[3186,12,3310,20],[3186,17,3310,25],[3186,18,3310,26],[3187,14,3311,24,"response"],[3187,22,3311,32],[3187,25,3311,35,"_a"],[3187,27,3311,37],[3187,28,3311,38,"sent"],[3187,32,3311,42],[3187,33,3311,43],[3187,34,3311,44],[3188,14,3312,24,"passwordPolicy"],[3188,28,3312,38],[3188,31,3312,41],[3188,35,3312,45,"PasswordPolicyImpl"],[3188,53,3312,63],[3188,54,3312,64,"response"],[3188,62,3312,72],[3188,63,3312,73],[3189,14,3313,24],[3189,18,3313,28],[3189,22,3313,32],[3189,23,3313,33,"tenantId"],[3189,31,3313,41],[3189,36,3313,46],[3189,40,3313,50],[3189,42,3313,52],[3190,16,3314,28],[3190,20,3314,32],[3190,21,3314,33,"_projectPasswordPolicy"],[3190,43,3314,55],[3190,46,3314,58,"passwordPolicy"],[3190,60,3314,72],[3191,14,3315,24],[3191,15,3315,25],[3191,21,3316,29],[3192,16,3317,28],[3192,20,3317,32],[3192,21,3317,33,"_tenantPasswordPolicies"],[3192,44,3317,56],[3192,45,3317,57],[3192,49,3317,61],[3192,50,3317,62,"tenantId"],[3192,58,3317,70],[3192,59,3317,71],[3192,62,3317,74,"passwordPolicy"],[3192,76,3317,88],[3193,14,3318,24],[3194,14,3319,24],[3194,21,3319,31],[3194,22,3319,32],[3194,23,3319,33],[3194,24,3319,34],[3194,35,3319,45],[3195,10,3320,16],[3196,8,3321,12],[3196,9,3321,13],[3196,10,3321,14],[3197,6,3322,8],[3197,7,3322,9],[3197,8,3322,10],[3198,4,3323,4],[3198,5,3323,5],[3199,4,3324,4,"AuthImpl"],[3199,12,3324,12],[3199,13,3324,13,"prototype"],[3199,22,3324,22],[3199,23,3324,23,"_getPersistence"],[3199,38,3324,38],[3199,41,3324,41],[3199,53,3324,53],[3200,6,3325,8],[3200,13,3325,15],[3200,17,3325,19],[3200,18,3325,20,"assertedPersistence"],[3200,37,3325,39],[3200,38,3325,40,"persistence"],[3200,49,3325,51],[3200,50,3325,52,"type"],[3200,54,3325,56],[3201,4,3326,4],[3201,5,3326,5],[3202,4,3327,4,"AuthImpl"],[3202,12,3327,12],[3202,13,3327,13,"prototype"],[3202,22,3327,22],[3202,23,3327,23,"_updateErrorMap"],[3202,38,3327,38],[3202,41,3327,41],[3202,51,3327,51,"errorMap"],[3202,59,3327,59],[3202,61,3327,61],[3203,6,3328,8],[3203,10,3328,12],[3203,11,3328,13,"_errorFactory"],[3203,24,3328,26],[3203,27,3328,29],[3203,31,3328,33,"util"],[3203,35,3328,37],[3203,36,3328,38,"ErrorFactory"],[3203,48,3328,50],[3203,49,3328,51],[3203,55,3328,57],[3203,57,3328,59],[3203,67,3328,69],[3203,69,3328,71,"errorMap"],[3203,77,3328,79],[3203,78,3328,80],[3203,79,3328,81],[3203,80,3328,82],[3204,4,3329,4],[3204,5,3329,5],[3205,4,3330,4,"AuthImpl"],[3205,12,3330,12],[3205,13,3330,13,"prototype"],[3205,22,3330,22],[3205,23,3330,23,"onAuthStateChanged"],[3205,41,3330,41],[3205,44,3330,44],[3205,54,3330,54,"nextOrObserver"],[3205,68,3330,68],[3205,70,3330,70,"error"],[3205,75,3330,75],[3205,77,3330,77,"completed"],[3205,86,3330,86],[3205,88,3330,88],[3206,6,3331,8],[3206,13,3331,15],[3206,17,3331,19],[3206,18,3331,20,"registerStateListener"],[3206,39,3331,41],[3206,40,3331,42],[3206,44,3331,46],[3206,45,3331,47,"authStateSubscription"],[3206,66,3331,68],[3206,68,3331,70,"nextOrObserver"],[3206,82,3331,84],[3206,84,3331,86,"error"],[3206,89,3331,91],[3206,91,3331,93,"completed"],[3206,100,3331,102],[3206,101,3331,103],[3207,4,3332,4],[3207,5,3332,5],[3208,4,3333,4,"AuthImpl"],[3208,12,3333,12],[3208,13,3333,13,"prototype"],[3208,22,3333,22],[3208,23,3333,23,"beforeAuthStateChanged"],[3208,45,3333,45],[3208,48,3333,48],[3208,58,3333,58,"callback"],[3208,66,3333,66],[3208,68,3333,68,"onAbort"],[3208,75,3333,75],[3208,77,3333,77],[3209,6,3334,8],[3209,13,3334,15],[3209,17,3334,19],[3209,18,3334,20,"beforeStateQueue"],[3209,34,3334,36],[3209,35,3334,37,"pushCallback"],[3209,47,3334,49],[3209,48,3334,50,"callback"],[3209,56,3334,58],[3209,58,3334,60,"onAbort"],[3209,65,3334,67],[3209,66,3334,68],[3210,4,3335,4],[3210,5,3335,5],[3211,4,3336,4,"AuthImpl"],[3211,12,3336,12],[3211,13,3336,13,"prototype"],[3211,22,3336,22],[3211,23,3336,23,"onIdTokenChanged"],[3211,39,3336,39],[3211,42,3336,42],[3211,52,3336,52,"nextOrObserver"],[3211,66,3336,66],[3211,68,3336,68,"error"],[3211,73,3336,73],[3211,75,3336,75,"completed"],[3211,84,3336,84],[3211,86,3336,86],[3212,6,3337,8],[3212,13,3337,15],[3212,17,3337,19],[3212,18,3337,20,"registerStateListener"],[3212,39,3337,41],[3212,40,3337,42],[3212,44,3337,46],[3212,45,3337,47,"idTokenSubscription"],[3212,64,3337,66],[3212,66,3337,68,"nextOrObserver"],[3212,80,3337,82],[3212,82,3337,84,"error"],[3212,87,3337,89],[3212,89,3337,91,"completed"],[3212,98,3337,100],[3212,99,3337,101],[3213,4,3338,4],[3213,5,3338,5],[3214,4,3339,4,"AuthImpl"],[3214,12,3339,12],[3214,13,3339,13,"prototype"],[3214,22,3339,22],[3214,23,3339,23,"authStateReady"],[3214,37,3339,37],[3214,40,3339,40],[3214,52,3339,52],[3215,6,3340,8],[3215,10,3340,12,"_this"],[3215,15,3340,17],[3215,18,3340,20],[3215,22,3340,24],[3216,6,3341,8],[3216,13,3341,15],[3216,17,3341,19,"Promise"],[3216,24,3341,26],[3216,25,3341,27],[3216,35,3341,37,"resolve"],[3216,42,3341,44],[3216,44,3341,46,"reject"],[3216,50,3341,52],[3216,52,3341,54],[3217,8,3342,12],[3217,12,3342,16,"_this"],[3217,17,3342,21],[3217,18,3342,22,"currentUser"],[3217,29,3342,33],[3217,31,3342,35],[3218,10,3343,16,"resolve"],[3218,17,3343,23],[3218,18,3343,24],[3218,19,3343,25],[3219,8,3344,12],[3219,9,3344,13],[3219,15,3345,17],[3220,10,3346,16],[3220,14,3346,20,"unsubscribe_1"],[3220,27,3346,33],[3220,30,3346,36,"_this"],[3220,35,3346,41],[3220,36,3346,42,"onAuthStateChanged"],[3220,54,3346,60],[3220,55,3346,61],[3220,67,3346,73],[3221,12,3347,20,"unsubscribe_1"],[3221,25,3347,33],[3221,26,3347,34],[3221,27,3347,35],[3222,12,3348,20,"resolve"],[3222,19,3348,27],[3222,20,3348,28],[3222,21,3348,29],[3223,10,3349,16],[3223,11,3349,17],[3223,13,3349,19,"reject"],[3223,19,3349,25],[3223,20,3349,26],[3224,8,3350,12],[3225,6,3351,8],[3225,7,3351,9],[3225,8,3351,10],[3226,4,3352,4],[3226,5,3352,5],[3227,4,3353,4],[3228,0,3354,0],[3229,0,3355,0],[3230,4,3356,4,"AuthImpl"],[3230,12,3356,12],[3230,13,3356,13,"prototype"],[3230,22,3356,22],[3230,23,3356,23,"revokeAccessToken"],[3230,40,3356,40],[3230,43,3356,43],[3230,53,3356,53,"token"],[3230,58,3356,58],[3230,60,3356,60],[3231,6,3357,8],[3231,13,3357,15,"tslib"],[3231,18,3357,20],[3231,19,3357,21,"__awaiter"],[3231,28,3357,30],[3231,29,3357,31],[3231,33,3357,35],[3231,35,3357,35,"undefined"],[3231,44,3357,35],[3231,46,3357,35,"undefined"],[3231,55,3357,35],[3231,57,3357,53],[3231,69,3357,65],[3232,8,3358,12],[3232,12,3358,16,"idToken"],[3232,19,3358,23],[3232,21,3358,25,"request"],[3232,28,3358,32],[3233,8,3359,12],[3233,15,3359,19,"tslib"],[3233,20,3359,24],[3233,21,3359,25,"__generator"],[3233,32,3359,36],[3233,33,3359,37],[3233,37,3359,41],[3233,39,3359,43],[3233,49,3359,53,"_a"],[3233,51,3359,55],[3233,53,3359,57],[3234,10,3360,16],[3234,18,3360,24,"_a"],[3234,20,3360,26],[3234,21,3360,27,"label"],[3234,26,3360,32],[3235,12,3361,20],[3235,17,3361,25],[3235,18,3361,26],[3236,14,3362,24],[3236,18,3362,28],[3236,19,3362,29],[3236,23,3362,33],[3236,24,3362,34,"currentUser"],[3236,35,3362,45],[3236,37,3362,47],[3236,44,3362,54],[3236,45,3362,55],[3236,46,3362,56],[3236,47,3362,57],[3236,58,3362,68],[3236,59,3362,69],[3236,60,3362,70],[3237,14,3363,24],[3237,21,3363,31],[3237,22,3363,32],[3237,23,3363,33],[3237,24,3363,34],[3237,35,3363,45],[3237,39,3363,49],[3237,40,3363,50,"currentUser"],[3237,51,3363,61],[3237,52,3363,62,"getIdToken"],[3237,62,3363,72],[3237,63,3363,73],[3237,64,3363,74],[3237,65,3363,75],[3238,12,3364,20],[3238,17,3364,25],[3238,18,3364,26],[3239,14,3365,24,"idToken"],[3239,21,3365,31],[3239,24,3365,34,"_a"],[3239,26,3365,36],[3239,27,3365,37,"sent"],[3239,31,3365,41],[3239,32,3365,42],[3239,33,3365,43],[3240,14,3366,24,"request"],[3240,21,3366,31],[3240,24,3366,34],[3241,16,3367,28,"providerId"],[3241,26,3367,38],[3241,28,3367,40],[3241,39,3367,51],[3242,16,3368,28,"tokenType"],[3242,25,3368,37],[3242,27,3368,39],[3242,41,3368,53],[3242,42,3368,54],[3243,16,3369,28,"token"],[3243,21,3369,33],[3243,23,3369,35,"token"],[3243,28,3369,40],[3244,16,3370,28,"idToken"],[3244,23,3370,35],[3244,25,3370,37,"idToken"],[3245,14,3371,24],[3245,15,3371,25],[3246,14,3372,24],[3246,18,3372,28],[3246,22,3372,32],[3246,23,3372,33,"tenantId"],[3246,31,3372,41],[3246,35,3372,45],[3246,39,3372,49],[3246,41,3372,51],[3247,16,3373,28,"request"],[3247,23,3373,35],[3247,24,3373,36,"tenantId"],[3247,32,3373,44],[3247,35,3373,47],[3247,39,3373,51],[3247,40,3373,52,"tenantId"],[3247,48,3373,60],[3248,14,3374,24],[3249,14,3375,24],[3249,21,3375,31],[3249,22,3375,32],[3249,23,3375,33],[3249,24,3375,34],[3249,35,3375,45,"revokeToken"],[3249,46,3375,56],[3249,47,3375,57],[3249,51,3375,61],[3249,53,3375,63,"request"],[3249,60,3375,70],[3249,61,3375,71],[3249,62,3375,72],[3250,12,3376,20],[3250,17,3376,25],[3250,18,3376,26],[3251,14,3377,24,"_a"],[3251,16,3377,26],[3251,17,3377,27,"sent"],[3251,21,3377,31],[3251,22,3377,32],[3251,23,3377,33],[3252,14,3378,24,"_a"],[3252,16,3378,26],[3252,17,3378,27,"label"],[3252,22,3378,32],[3252,25,3378,35],[3252,26,3378,36],[3253,12,3379,20],[3253,17,3379,25],[3253,18,3379,26],[3254,14,3379,28],[3254,21,3379,35],[3254,22,3379,36],[3254,23,3379,37],[3254,24,3379,38],[3254,35,3379,49],[3255,10,3380,16],[3256,8,3381,12],[3256,9,3381,13],[3256,10,3381,14],[3257,6,3382,8],[3257,7,3382,9],[3257,8,3382,10],[3258,4,3383,4],[3258,5,3383,5],[3259,4,3384,4,"AuthImpl"],[3259,12,3384,12],[3259,13,3384,13,"prototype"],[3259,22,3384,22],[3259,23,3384,23,"toJSON"],[3259,29,3384,29],[3259,32,3384,32],[3259,44,3384,44],[3260,6,3385,8],[3260,10,3385,12,"_a"],[3260,12,3385,14],[3261,6,3386,8],[3261,13,3386,15],[3262,8,3387,12,"apiKey"],[3262,14,3387,18],[3262,16,3387,20],[3262,20,3387,24],[3262,21,3387,25,"config"],[3262,27,3387,31],[3262,28,3387,32,"apiKey"],[3262,34,3387,38],[3263,8,3388,12,"authDomain"],[3263,18,3388,22],[3263,20,3388,24],[3263,24,3388,28],[3263,25,3388,29,"config"],[3263,31,3388,35],[3263,32,3388,36,"authDomain"],[3263,42,3388,46],[3264,8,3389,12,"appName"],[3264,15,3389,19],[3264,17,3389,21],[3264,21,3389,25],[3264,22,3389,26,"name"],[3264,26,3389,30],[3265,8,3390,12,"currentUser"],[3265,19,3390,23],[3265,21,3390,25],[3265,22,3390,26,"_a"],[3265,24,3390,28],[3265,27,3390,31],[3265,31,3390,35],[3265,32,3390,36,"_currentUser"],[3265,44,3390,48],[3265,50,3390,54],[3265,54,3390,58],[3265,58,3390,62,"_a"],[3265,60,3390,64],[3265,65,3390,64,"undefined"],[3265,74,3390,75],[3265,77,3390,75,"undefined"],[3265,86,3390,75],[3265,89,3390,87,"_a"],[3265,91,3390,89],[3265,92,3390,90,"toJSON"],[3265,98,3390,96],[3265,99,3390,97],[3266,6,3391,8],[3266,7,3391,9],[3267,4,3392,4],[3267,5,3392,5],[3268,4,3393,4,"AuthImpl"],[3268,12,3393,12],[3268,13,3393,13,"prototype"],[3268,22,3393,22],[3268,23,3393,23,"_setRedirectUser"],[3268,39,3393,39],[3268,42,3393,42],[3268,52,3393,52,"user"],[3268,56,3393,56],[3268,58,3393,58,"popupRedirectResolver"],[3268,79,3393,79],[3268,81,3393,81],[3269,6,3394,8],[3269,13,3394,15,"tslib"],[3269,18,3394,20],[3269,19,3394,21,"__awaiter"],[3269,28,3394,30],[3269,29,3394,31],[3269,33,3394,35],[3269,35,3394,35,"undefined"],[3269,44,3394,35],[3269,46,3394,35,"undefined"],[3269,55,3394,35],[3269,57,3394,53],[3269,69,3394,65],[3270,8,3395,12],[3270,12,3395,16,"redirectManager"],[3270,27,3395,31],[3271,8,3396,12],[3271,15,3396,19,"tslib"],[3271,20,3396,24],[3271,21,3396,25,"__generator"],[3271,32,3396,36],[3271,33,3396,37],[3271,37,3396,41],[3271,39,3396,43],[3271,49,3396,53,"_a"],[3271,51,3396,55],[3271,53,3396,57],[3272,10,3397,16],[3272,18,3397,24,"_a"],[3272,20,3397,26],[3272,21,3397,27,"label"],[3272,26,3397,32],[3273,12,3398,20],[3273,17,3398,25],[3273,18,3398,26],[3274,14,3398,28],[3274,21,3398,35],[3274,22,3398,36],[3274,23,3398,37],[3274,24,3398,38],[3274,35,3398,49],[3274,39,3398,53],[3274,40,3398,54,"getOrInitRedirectPersistenceManager"],[3274,75,3398,89],[3274,76,3398,90,"popupRedirectResolver"],[3274,97,3398,111],[3274,98,3398,112],[3274,99,3398,113],[3275,12,3399,20],[3275,17,3399,25],[3275,18,3399,26],[3276,14,3400,24,"redirectManager"],[3276,29,3400,39],[3276,32,3400,42,"_a"],[3276,34,3400,44],[3276,35,3400,45,"sent"],[3276,39,3400,49],[3276,40,3400,50],[3276,41,3400,51],[3277,14,3401,24],[3277,21,3401,31],[3277,22,3401,32],[3277,23,3401,33],[3277,24,3401,34],[3277,36,3401,46,"user"],[3277,40,3401,50],[3277,45,3401,55],[3277,49,3401,59],[3277,52,3402,34,"redirectManager"],[3277,67,3402,49],[3277,68,3402,50,"removeCurrentUser"],[3277,85,3402,67],[3277,86,3402,68],[3277,87,3402,69],[3277,90,3403,34,"redirectManager"],[3277,105,3403,49],[3277,106,3403,50,"setCurrentUser"],[3277,120,3403,64],[3277,121,3403,65,"user"],[3277,125,3403,69],[3277,126,3403,70],[3277,127,3403,71],[3278,10,3404,16],[3279,8,3405,12],[3279,9,3405,13],[3279,10,3405,14],[3280,6,3406,8],[3280,7,3406,9],[3280,8,3406,10],[3281,4,3407,4],[3281,5,3407,5],[3282,4,3408,4,"AuthImpl"],[3282,12,3408,12],[3282,13,3408,13,"prototype"],[3282,22,3408,22],[3282,23,3408,23,"getOrInitRedirectPersistenceManager"],[3282,58,3408,58],[3282,61,3408,61],[3282,71,3408,71,"popupRedirectResolver"],[3282,92,3408,92],[3282,94,3408,94],[3283,6,3409,8],[3283,13,3409,15,"tslib"],[3283,18,3409,20],[3283,19,3409,21,"__awaiter"],[3283,28,3409,30],[3283,29,3409,31],[3283,33,3409,35],[3283,35,3409,35,"undefined"],[3283,44,3409,35],[3283,46,3409,35,"undefined"],[3283,55,3409,35],[3283,57,3409,53],[3283,69,3409,65],[3284,8,3410,12],[3284,12,3410,16,"resolver"],[3284,20,3410,24],[3284,22,3410,26,"_a"],[3284,24,3410,28],[3284,26,3410,30,"_b"],[3284,28,3410,32],[3285,8,3411,12],[3285,15,3411,19,"tslib"],[3285,20,3411,24],[3285,21,3411,25,"__generator"],[3285,32,3411,36],[3285,33,3411,37],[3285,37,3411,41],[3285,39,3411,43],[3285,49,3411,53,"_c"],[3285,51,3411,55],[3285,53,3411,57],[3286,10,3412,16],[3286,18,3412,24,"_c"],[3286,20,3412,26],[3286,21,3412,27,"label"],[3286,26,3412,32],[3287,12,3413,20],[3287,17,3413,25],[3287,18,3413,26],[3288,14,3414,24],[3288,18,3414,28],[3288,19,3414,29],[3288,20,3414,30],[3288,24,3414,34],[3288,25,3414,35,"redirectPersistenceManager"],[3288,51,3414,61],[3288,53,3414,63],[3288,60,3414,70],[3288,61,3414,71],[3288,62,3414,72],[3288,63,3414,73],[3288,74,3414,84],[3288,75,3414,85],[3288,76,3414,86],[3289,14,3415,24,"resolver"],[3289,22,3415,32],[3289,25,3415,36,"popupRedirectResolver"],[3289,46,3415,57],[3289,50,3415,61,"_getInstance"],[3289,62,3415,73],[3289,63,3415,74,"popupRedirectResolver"],[3289,84,3415,95],[3289,85,3415,96],[3289,89,3416,28],[3289,93,3416,32],[3289,94,3416,33,"_popupRedirectResolver"],[3289,116,3416,55],[3290,14,3417,24,"_assert"],[3290,21,3417,31],[3290,22,3417,32,"resolver"],[3290,30,3417,40],[3290,32,3417,42],[3290,36,3417,46],[3290,38,3417,48],[3290,54,3417,64],[3290,55,3417,65],[3290,89,3417,99],[3290,90,3417,100],[3291,14,3418,24,"_a"],[3291,16,3418,26],[3291,19,3418,29],[3291,23,3418,33],[3292,14,3419,24],[3292,21,3419,31],[3292,22,3419,32],[3292,23,3419,33],[3292,24,3419,34],[3292,35,3419,45,"PersistenceUserManager"],[3292,57,3419,67],[3292,58,3419,68,"create"],[3292,64,3419,74],[3292,65,3419,75],[3292,69,3419,79],[3292,71,3419,81],[3292,72,3419,82,"_getInstance"],[3292,84,3419,94],[3292,85,3419,95,"resolver"],[3292,93,3419,103],[3292,94,3419,104,"_redirectPersistence"],[3292,114,3419,124],[3292,115,3419,125],[3292,116,3419,126],[3292,118,3419,128],[3292,132,3419,142],[3292,133,3419,143],[3292,160,3419,170],[3292,161,3419,171],[3292,162,3419,172],[3293,12,3420,20],[3293,17,3420,25],[3293,18,3420,26],[3294,14,3421,24,"_a"],[3294,16,3421,26],[3294,17,3421,27,"redirectPersistenceManager"],[3294,43,3421,53],[3294,46,3421,56,"_c"],[3294,48,3421,58],[3294,49,3421,59,"sent"],[3294,53,3421,63],[3294,54,3421,64],[3294,55,3421,65],[3295,14,3422,24,"_b"],[3295,16,3422,26],[3295,19,3422,29],[3295,23,3422,33],[3296,14,3423,24],[3296,21,3423,31],[3296,22,3423,32],[3296,23,3423,33],[3296,24,3423,34],[3296,35,3423,45],[3296,39,3423,49],[3296,40,3423,50,"redirectPersistenceManager"],[3296,66,3423,76],[3296,67,3423,77,"getCurrentUser"],[3296,81,3423,91],[3296,82,3423,92],[3296,83,3423,93],[3296,84,3423,94],[3297,12,3424,20],[3297,17,3424,25],[3297,18,3424,26],[3298,14,3425,24,"_b"],[3298,16,3425,26],[3298,17,3425,27,"redirectUser"],[3298,29,3425,39],[3298,32,3426,28,"_c"],[3298,34,3426,30],[3298,35,3426,31,"sent"],[3298,39,3426,35],[3298,40,3426,36],[3298,41,3426,37],[3299,14,3427,24,"_c"],[3299,16,3427,26],[3299,17,3427,27,"label"],[3299,22,3427,32],[3299,25,3427,35],[3299,26,3427,36],[3300,12,3428,20],[3300,17,3428,25],[3300,18,3428,26],[3301,14,3428,28],[3301,21,3428,35],[3301,22,3428,36],[3301,23,3428,37],[3301,24,3428,38],[3301,36,3428,50],[3301,40,3428,54],[3301,41,3428,55,"redirectPersistenceManager"],[3301,67,3428,81],[3301,68,3428,82],[3302,10,3429,16],[3303,8,3430,12],[3303,9,3430,13],[3303,10,3430,14],[3304,6,3431,8],[3304,7,3431,9],[3304,8,3431,10],[3305,4,3432,4],[3305,5,3432,5],[3306,4,3433,4,"AuthImpl"],[3306,12,3433,12],[3306,13,3433,13,"prototype"],[3306,22,3433,22],[3306,23,3433,23,"_redirectUserForId"],[3306,41,3433,41],[3306,44,3433,44],[3306,54,3433,54,"id"],[3306,56,3433,56],[3306,58,3433,58],[3307,6,3434,8],[3307,10,3434,12,"_a"],[3307,12,3434,14],[3307,14,3434,16,"_b"],[3307,16,3434,18],[3308,6,3435,8],[3308,13,3435,15,"tslib"],[3308,18,3435,20],[3308,19,3435,21,"__awaiter"],[3308,28,3435,30],[3308,29,3435,31],[3308,33,3435,35],[3308,35,3435,35,"undefined"],[3308,44,3435,35],[3308,46,3435,35,"undefined"],[3308,55,3435,35],[3308,57,3435,53],[3308,69,3435,65],[3309,8,3436,12],[3309,12,3436,16,"_this"],[3309,17,3436,21],[3309,20,3436,24],[3309,24,3436,28],[3310,8,3437,12],[3310,15,3437,19,"tslib"],[3310,20,3437,24],[3310,21,3437,25,"__generator"],[3310,32,3437,36],[3310,33,3437,37],[3310,37,3437,41],[3310,39,3437,43],[3310,49,3437,53,"_c"],[3310,51,3437,55],[3310,53,3437,57],[3311,10,3438,16],[3311,18,3438,24,"_c"],[3311,20,3438,26],[3311,21,3438,27,"label"],[3311,26,3438,32],[3312,12,3439,20],[3312,17,3439,25],[3312,18,3439,26],[3313,14,3440,24],[3313,18,3440,28],[3313,19,3440,29],[3313,23,3440,33],[3313,24,3440,34,"_isInitialized"],[3313,38,3440,48],[3313,40,3440,50],[3313,47,3440,57],[3313,48,3440,58],[3313,49,3440,59],[3313,50,3440,60],[3313,61,3440,71],[3313,62,3440,72],[3313,63,3440,73],[3314,14,3441,24],[3314,21,3441,31],[3314,22,3441,32],[3314,23,3441,33],[3314,24,3441,34],[3314,35,3441,45],[3314,39,3441,49],[3314,40,3441,50,"queue"],[3314,45,3441,55],[3314,46,3441,56],[3314,58,3441,68],[3315,16,3441,70],[3315,23,3441,77,"tslib"],[3315,28,3441,82],[3315,29,3441,83,"__awaiter"],[3315,38,3441,92],[3315,39,3441,93,"_this"],[3315,44,3441,98],[3315,46,3441,98,"undefined"],[3315,55,3441,98],[3315,57,3441,98,"undefined"],[3315,66,3441,98],[3315,68,3441,116],[3315,80,3441,128],[3316,18,3441,130],[3316,25,3441,137,"tslib"],[3316,30,3441,142],[3316,31,3441,143,"__generator"],[3316,42,3441,154],[3316,43,3441,155],[3316,47,3441,159],[3316,49,3441,161],[3316,59,3441,171,"_a"],[3316,61,3441,173],[3316,63,3441,175],[3317,20,3442,32],[3317,27,3442,39],[3317,28,3442,40],[3317,29,3442,41],[3317,30,3442,42],[3317,41,3442,53],[3318,18,3443,28],[3318,19,3443,29],[3318,20,3443,30],[3319,16,3443,32],[3319,17,3443,33],[3319,18,3443,34],[3320,14,3443,36],[3320,15,3443,37],[3320,16,3443,38],[3320,17,3443,39],[3321,12,3444,20],[3321,17,3444,25],[3321,18,3444,26],[3322,14,3445,24,"_c"],[3322,16,3445,26],[3322,17,3445,27,"sent"],[3322,21,3445,31],[3322,22,3445,32],[3322,23,3445,33],[3323,14,3446,24,"_c"],[3323,16,3446,26],[3323,17,3446,27,"label"],[3323,22,3446,32],[3323,25,3446,35],[3323,26,3446,36],[3324,12,3447,20],[3324,17,3447,25],[3324,18,3447,26],[3325,14,3448,24],[3325,18,3448,28],[3325,19,3448,29],[3325,20,3448,30,"_a"],[3325,22,3448,32],[3325,25,3448,35],[3325,29,3448,39],[3325,30,3448,40,"_currentUser"],[3325,42,3448,52],[3325,48,3448,58],[3325,52,3448,62],[3325,56,3448,66,"_a"],[3325,58,3448,68],[3325,63,3448,68,"undefined"],[3325,72,3448,79],[3325,75,3448,79,"undefined"],[3325,84,3448,79],[3325,87,3448,91,"_a"],[3325,89,3448,93],[3325,90,3448,94,"_redirectEventId"],[3325,106,3448,110],[3325,112,3448,116,"id"],[3325,114,3448,118],[3325,116,3448,120],[3326,16,3449,28],[3326,23,3449,35],[3326,24,3449,36],[3326,25,3449,37],[3326,26,3449,38],[3326,38,3449,50],[3326,42,3449,54],[3326,43,3449,55,"_currentUser"],[3326,55,3449,67],[3326,56,3449,68],[3327,14,3450,24],[3328,14,3451,24],[3328,18,3451,28],[3328,19,3451,29],[3328,20,3451,30,"_b"],[3328,22,3451,32],[3328,25,3451,35],[3328,29,3451,39],[3328,30,3451,40,"redirectUser"],[3328,42,3451,52],[3328,48,3451,58],[3328,52,3451,62],[3328,56,3451,66,"_b"],[3328,58,3451,68],[3328,63,3451,68,"undefined"],[3328,72,3451,79],[3328,75,3451,79,"undefined"],[3328,84,3451,79],[3328,87,3451,91,"_b"],[3328,89,3451,93],[3328,90,3451,94,"_redirectEventId"],[3328,106,3451,110],[3328,112,3451,116,"id"],[3328,114,3451,118],[3328,116,3451,120],[3329,16,3452,28],[3329,23,3452,35],[3329,24,3452,36],[3329,25,3452,37],[3329,26,3452,38],[3329,38,3452,50],[3329,42,3452,54],[3329,43,3452,55,"redirectUser"],[3329,55,3452,67],[3329,56,3452,68],[3330,14,3453,24],[3331,14,3454,24],[3331,21,3454,31],[3331,22,3454,32],[3331,23,3454,33],[3331,24,3454,34],[3331,36,3454,46],[3331,40,3454,50],[3331,41,3454,51],[3332,10,3455,16],[3333,8,3456,12],[3333,9,3456,13],[3333,10,3456,14],[3334,6,3457,8],[3334,7,3457,9],[3334,8,3457,10],[3335,4,3458,4],[3335,5,3458,5],[3336,4,3459,4,"AuthImpl"],[3336,12,3459,12],[3336,13,3459,13,"prototype"],[3336,22,3459,22],[3336,23,3459,23,"_persistUserIfCurrent"],[3336,44,3459,44],[3336,47,3459,47],[3336,57,3459,57,"user"],[3336,61,3459,61],[3336,63,3459,63],[3337,6,3460,8],[3337,13,3460,15,"tslib"],[3337,18,3460,20],[3337,19,3460,21,"__awaiter"],[3337,28,3460,30],[3337,29,3460,31],[3337,33,3460,35],[3337,35,3460,35,"undefined"],[3337,44,3460,35],[3337,46,3460,35,"undefined"],[3337,55,3460,35],[3337,57,3460,53],[3337,69,3460,65],[3338,8,3461,12],[3338,12,3461,16,"_this"],[3338,17,3461,21],[3338,20,3461,24],[3338,24,3461,28],[3339,8,3462,12],[3339,15,3462,19,"tslib"],[3339,20,3462,24],[3339,21,3462,25,"__generator"],[3339,32,3462,36],[3339,33,3462,37],[3339,37,3462,41],[3339,39,3462,43],[3339,49,3462,53,"_a"],[3339,51,3462,55],[3339,53,3462,57],[3340,10,3463,16],[3340,14,3463,20,"user"],[3340,18,3463,24],[3340,23,3463,29],[3340,27,3463,33],[3340,28,3463,34,"currentUser"],[3340,39,3463,45],[3340,41,3463,47],[3341,12,3464,20],[3341,19,3464,27],[3341,20,3464,28],[3341,21,3464,29],[3341,22,3464,30],[3341,34,3464,42],[3341,38,3464,46],[3341,39,3464,47,"queue"],[3341,44,3464,52],[3341,45,3464,53],[3341,57,3464,65],[3342,14,3464,67],[3342,21,3464,74,"tslib"],[3342,26,3464,79],[3342,27,3464,80,"__awaiter"],[3342,36,3464,89],[3342,37,3464,90,"_this"],[3342,42,3464,95],[3342,44,3464,95,"undefined"],[3342,53,3464,95],[3342,55,3464,95,"undefined"],[3342,64,3464,95],[3342,66,3464,113],[3342,78,3464,125],[3343,16,3464,127],[3343,23,3464,134,"tslib"],[3343,28,3464,139],[3343,29,3464,140,"__generator"],[3343,40,3464,151],[3343,41,3464,152],[3343,45,3464,156],[3343,47,3464,158],[3343,57,3464,168,"_a"],[3343,59,3464,170],[3343,61,3464,172],[3344,18,3465,28],[3344,25,3465,35],[3344,26,3465,36],[3344,27,3465,37],[3344,28,3465,38],[3344,40,3465,50],[3344,44,3465,54],[3344,45,3465,55,"directlySetCurrentUser"],[3344,67,3465,77],[3344,68,3465,78,"user"],[3344,72,3465,82],[3344,73,3465,83],[3344,74,3465,84],[3345,16,3466,24],[3345,17,3466,25],[3345,18,3466,26],[3346,14,3466,28],[3346,15,3466,29],[3346,16,3466,30],[3347,12,3466,32],[3347,13,3466,33],[3347,14,3466,34],[3347,15,3466,35],[3348,10,3467,16],[3349,10,3468,16],[3349,17,3468,23],[3349,18,3468,24],[3349,19,3468,25],[3349,20,3468,26],[3349,31,3468,37],[3350,8,3469,12],[3350,9,3469,13],[3350,10,3469,14],[3351,6,3470,8],[3351,7,3470,9],[3351,8,3470,10],[3352,4,3471,4],[3352,5,3471,5],[3353,4,3472,4],[3354,4,3473,4,"AuthImpl"],[3354,12,3473,12],[3354,13,3473,13,"prototype"],[3354,22,3473,22],[3354,23,3473,23,"_notifyListenersIfCurrent"],[3354,48,3473,48],[3354,51,3473,51],[3354,61,3473,61,"user"],[3354,65,3473,65],[3354,67,3473,67],[3355,6,3474,8],[3355,10,3474,12,"user"],[3355,14,3474,16],[3355,19,3474,21],[3355,23,3474,25],[3355,24,3474,26,"currentUser"],[3355,35,3474,37],[3355,37,3474,39],[3356,8,3475,12],[3356,12,3475,16],[3356,13,3475,17,"notifyAuthListeners"],[3356,32,3475,36],[3356,33,3475,37],[3356,34,3475,38],[3357,6,3476,8],[3358,4,3477,4],[3358,5,3477,5],[3359,4,3478,4,"AuthImpl"],[3359,12,3478,12],[3359,13,3478,13,"prototype"],[3359,22,3478,22],[3359,23,3478,23,"_key"],[3359,27,3478,27],[3359,30,3478,30],[3359,42,3478,42],[3360,6,3479,8],[3360,13,3479,15],[3360,15,3479,17],[3360,16,3479,18,"concat"],[3360,22,3479,24],[3360,23,3479,25],[3360,27,3479,29],[3360,28,3479,30,"config"],[3360,34,3479,36],[3360,35,3479,37,"authDomain"],[3360,45,3479,47],[3360,47,3479,49],[3360,50,3479,52],[3360,51,3479,53],[3360,52,3479,54,"concat"],[3360,58,3479,60],[3360,59,3479,61],[3360,63,3479,65],[3360,64,3479,66,"config"],[3360,70,3479,72],[3360,71,3479,73,"apiKey"],[3360,77,3479,79],[3360,79,3479,81],[3360,82,3479,84],[3360,83,3479,85],[3360,84,3479,86,"concat"],[3360,90,3479,92],[3360,91,3479,93],[3360,95,3479,97],[3360,96,3479,98,"name"],[3360,100,3479,102],[3360,101,3479,103],[3361,4,3480,4],[3361,5,3480,5],[3362,4,3481,4,"AuthImpl"],[3362,12,3481,12],[3362,13,3481,13,"prototype"],[3362,22,3481,22],[3362,23,3481,23,"_startProactiveRefresh"],[3362,45,3481,45],[3362,48,3481,48],[3362,60,3481,60],[3363,6,3482,8],[3363,10,3482,12],[3363,11,3482,13,"isProactiveRefreshEnabled"],[3363,36,3482,38],[3363,39,3482,41],[3363,43,3482,45],[3364,6,3483,8],[3364,10,3483,12],[3364,14,3483,16],[3364,15,3483,17,"currentUser"],[3364,26,3483,28],[3364,28,3483,30],[3365,8,3484,12],[3365,12,3484,16],[3365,13,3484,17,"_currentUser"],[3365,25,3484,29],[3365,26,3484,30,"_startProactiveRefresh"],[3365,48,3484,52],[3365,49,3484,53],[3365,50,3484,54],[3366,6,3485,8],[3367,4,3486,4],[3367,5,3486,5],[3368,4,3487,4,"AuthImpl"],[3368,12,3487,12],[3368,13,3487,13,"prototype"],[3368,22,3487,22],[3368,23,3487,23,"_stopProactiveRefresh"],[3368,44,3487,44],[3368,47,3487,47],[3368,59,3487,59],[3369,6,3488,8],[3369,10,3488,12],[3369,11,3488,13,"isProactiveRefreshEnabled"],[3369,36,3488,38],[3369,39,3488,41],[3369,44,3488,46],[3370,6,3489,8],[3370,10,3489,12],[3370,14,3489,16],[3370,15,3489,17,"currentUser"],[3370,26,3489,28],[3370,28,3489,30],[3371,8,3490,12],[3371,12,3490,16],[3371,13,3490,17,"_currentUser"],[3371,25,3490,29],[3371,26,3490,30,"_stopProactiveRefresh"],[3371,47,3490,51],[3371,48,3490,52],[3371,49,3490,53],[3372,6,3491,8],[3373,4,3492,4],[3373,5,3492,5],[3374,4,3493,4,"Object"],[3374,10,3493,10],[3374,11,3493,11,"defineProperty"],[3374,25,3493,25],[3374,26,3493,26,"AuthImpl"],[3374,34,3493,34],[3374,35,3493,35,"prototype"],[3374,44,3493,44],[3374,46,3493,46],[3374,60,3493,60],[3374,62,3493,62],[3375,6,3494,8],[3376,6,3495,8,"get"],[3376,9,3495,11],[3376,11,3495,13],[3376,20,3495,13,"get"],[3376,21,3495,13],[3376,23,3495,25],[3377,8,3496,12],[3377,15,3496,19],[3377,19,3496,23],[3377,20,3496,24,"currentUser"],[3377,31,3496,35],[3378,6,3497,8],[3378,7,3497,9],[3379,6,3498,8,"enumerable"],[3379,16,3498,18],[3379,18,3498,20],[3379,23,3498,25],[3380,6,3499,8,"configurable"],[3380,18,3499,20],[3380,20,3499,22],[3381,4,3500,4],[3381,5,3500,5],[3381,6,3500,6],[3382,4,3501,4,"AuthImpl"],[3382,12,3501,12],[3382,13,3501,13,"prototype"],[3382,22,3501,22],[3382,23,3501,23,"notifyAuthListeners"],[3382,42,3501,42],[3382,45,3501,45],[3382,57,3501,57],[3383,6,3502,8],[3383,10,3502,12,"_a"],[3383,12,3502,14],[3383,14,3502,16,"_b"],[3383,16,3502,18],[3384,6,3503,8],[3384,10,3503,12],[3384,11,3503,13],[3384,15,3503,17],[3384,16,3503,18,"_isInitialized"],[3384,30,3503,32],[3384,32,3503,34],[3385,8,3504,12],[3386,6,3505,8],[3387,6,3506,8],[3387,10,3506,12],[3387,11,3506,13,"idTokenSubscription"],[3387,30,3506,32],[3387,31,3506,33,"next"],[3387,35,3506,37],[3387,36,3506,38],[3387,40,3506,42],[3387,41,3506,43,"currentUser"],[3387,52,3506,54],[3387,53,3506,55],[3388,6,3507,8],[3388,10,3507,12,"currentUid"],[3388,20,3507,22],[3388,23,3507,25],[3388,24,3507,26,"_b"],[3388,26,3507,28],[3388,29,3507,31],[3388,30,3507,32,"_a"],[3388,32,3507,34],[3388,35,3507,37],[3388,39,3507,41],[3388,40,3507,42,"currentUser"],[3388,51,3507,53],[3388,57,3507,59],[3388,61,3507,63],[3388,65,3507,67,"_a"],[3388,67,3507,69],[3388,72,3507,69,"undefined"],[3388,81,3507,80],[3388,84,3507,80,"undefined"],[3388,93,3507,80],[3388,96,3507,92,"_a"],[3388,98,3507,94],[3388,99,3507,95,"uid"],[3388,102,3507,98],[3388,108,3507,104],[3388,112,3507,108],[3388,116,3507,112,"_b"],[3388,118,3507,114],[3388,123,3507,114,"undefined"],[3388,132,3507,125],[3388,135,3507,128,"_b"],[3388,137,3507,130],[3388,140,3507,133],[3388,144,3507,137],[3389,6,3508,8],[3389,10,3508,12],[3389,14,3508,16],[3389,15,3508,17,"lastNotifiedUid"],[3389,30,3508,32],[3389,35,3508,37,"currentUid"],[3389,45,3508,47],[3389,47,3508,49],[3390,8,3509,12],[3390,12,3509,16],[3390,13,3509,17,"lastNotifiedUid"],[3390,28,3509,32],[3390,31,3509,35,"currentUid"],[3390,41,3509,45],[3391,8,3510,12],[3391,12,3510,16],[3391,13,3510,17,"authStateSubscription"],[3391,34,3510,38],[3391,35,3510,39,"next"],[3391,39,3510,43],[3391,40,3510,44],[3391,44,3510,48],[3391,45,3510,49,"currentUser"],[3391,56,3510,60],[3391,57,3510,61],[3392,6,3511,8],[3393,4,3512,4],[3393,5,3512,5],[3394,4,3513,4,"AuthImpl"],[3394,12,3513,12],[3394,13,3513,13,"prototype"],[3394,22,3513,22],[3394,23,3513,23,"registerStateListener"],[3394,44,3513,44],[3394,47,3513,47],[3394,57,3513,57,"subscription"],[3394,69,3513,69],[3394,71,3513,71,"nextOrObserver"],[3394,85,3513,85],[3394,87,3513,87,"error"],[3394,92,3513,92],[3394,94,3513,94,"completed"],[3394,103,3513,103],[3394,105,3513,105],[3395,6,3514,8],[3395,10,3514,12,"_this"],[3395,15,3514,17],[3395,18,3514,20],[3395,22,3514,24],[3396,6,3515,8],[3396,10,3515,12],[3396,14,3515,16],[3396,15,3515,17,"_deleted"],[3396,23,3515,25],[3396,25,3515,27],[3397,8,3516,12],[3397,15,3516,19],[3397,27,3516,31],[3397,28,3516,33],[3397,29,3516,34],[3398,6,3517,8],[3399,6,3518,8],[3399,10,3518,12,"cb"],[3399,12,3518,14],[3399,15,3518,17],[3399,22,3518,24,"nextOrObserver"],[3399,36,3518,38],[3399,41,3518,43],[3399,51,3518,53],[3399,54,3519,14,"nextOrObserver"],[3399,68,3519,28],[3399,71,3520,14,"nextOrObserver"],[3399,85,3520,28],[3399,86,3520,29,"next"],[3399,90,3520,33],[3399,91,3520,34,"bind"],[3399,95,3520,38],[3399,96,3520,39,"nextOrObserver"],[3399,110,3520,53],[3399,111,3520,54],[3400,6,3521,8],[3400,10,3521,12,"isUnsubscribed"],[3400,24,3521,26],[3400,27,3521,29],[3400,32,3521,34],[3401,6,3522,8],[3401,10,3522,12,"promise"],[3401,17,3522,19],[3401,20,3522,22],[3401,24,3522,26],[3401,25,3522,27,"_isInitialized"],[3401,39,3522,41],[3401,42,3523,14,"Promise"],[3401,49,3523,21],[3401,50,3523,22,"resolve"],[3401,57,3523,29],[3401,58,3523,30],[3401,59,3523,31],[3401,62,3524,14],[3401,66,3524,18],[3401,67,3524,19,"_initializationPromise"],[3401,89,3524,41],[3402,6,3525,8,"_assert"],[3402,13,3525,15],[3402,14,3525,16,"promise"],[3402,21,3525,23],[3402,23,3525,25],[3402,27,3525,29],[3402,29,3525,31],[3402,45,3525,47],[3402,46,3525,48],[3402,80,3525,82],[3402,81,3525,83],[3403,6,3526,8],[3404,6,3527,8],[3405,6,3528,8,"promise"],[3405,13,3528,15],[3405,14,3528,16,"then"],[3405,18,3528,20],[3405,19,3528,21],[3405,31,3528,33],[3406,8,3529,12],[3406,12,3529,16,"isUnsubscribed"],[3406,26,3529,30],[3406,28,3529,32],[3407,10,3530,16],[3408,8,3531,12],[3409,8,3532,12,"cb"],[3409,10,3532,14],[3409,11,3532,15,"_this"],[3409,16,3532,20],[3409,17,3532,21,"currentUser"],[3409,28,3532,32],[3409,29,3532,33],[3410,6,3533,8],[3410,7,3533,9],[3410,8,3533,10],[3411,6,3534,8],[3411,10,3534,12],[3411,17,3534,19,"nextOrObserver"],[3411,31,3534,33],[3411,36,3534,38],[3411,46,3534,48],[3411,48,3534,50],[3412,8,3535,12],[3412,12,3535,16,"unsubscribe_2"],[3412,25,3535,29],[3412,28,3535,32,"subscription"],[3412,40,3535,44],[3412,41,3535,45,"addObserver"],[3412,52,3535,56],[3412,53,3535,57,"nextOrObserver"],[3412,67,3535,71],[3412,69,3535,73,"error"],[3412,74,3535,78],[3412,76,3535,80,"completed"],[3412,85,3535,89],[3412,86,3535,90],[3413,8,3536,12],[3413,15,3536,19],[3413,27,3536,31],[3414,10,3537,16,"isUnsubscribed"],[3414,24,3537,30],[3414,27,3537,33],[3414,31,3537,37],[3415,10,3538,16,"unsubscribe_2"],[3415,23,3538,29],[3415,24,3538,30],[3415,25,3538,31],[3416,8,3539,12],[3416,9,3539,13],[3417,6,3540,8],[3417,7,3540,9],[3417,13,3541,13],[3418,8,3542,12],[3418,12,3542,16,"unsubscribe_3"],[3418,25,3542,29],[3418,28,3542,32,"subscription"],[3418,40,3542,44],[3418,41,3542,45,"addObserver"],[3418,52,3542,56],[3418,53,3542,57,"nextOrObserver"],[3418,67,3542,71],[3418,68,3542,72],[3419,8,3543,12],[3419,15,3543,19],[3419,27,3543,31],[3420,10,3544,16,"isUnsubscribed"],[3420,24,3544,30],[3420,27,3544,33],[3420,31,3544,37],[3421,10,3545,16,"unsubscribe_3"],[3421,23,3545,29],[3421,24,3545,30],[3421,25,3545,31],[3422,8,3546,12],[3422,9,3546,13],[3423,6,3547,8],[3424,4,3548,4],[3424,5,3548,5],[3425,4,3549,4],[3426,0,3550,0],[3427,0,3551,0],[3428,0,3552,0],[3429,0,3553,0],[3430,4,3554,4,"AuthImpl"],[3430,12,3554,12],[3430,13,3554,13,"prototype"],[3430,22,3554,22],[3430,23,3554,23,"directlySetCurrentUser"],[3430,45,3554,45],[3430,48,3554,48],[3430,58,3554,58,"user"],[3430,62,3554,62],[3430,64,3554,64],[3431,6,3555,8],[3431,13,3555,15,"tslib"],[3431,18,3555,20],[3431,19,3555,21,"__awaiter"],[3431,28,3555,30],[3431,29,3555,31],[3431,33,3555,35],[3431,35,3555,35,"undefined"],[3431,44,3555,35],[3431,46,3555,35,"undefined"],[3431,55,3555,35],[3431,57,3555,53],[3431,69,3555,65],[3432,8,3556,12],[3432,15,3556,19,"tslib"],[3432,20,3556,24],[3432,21,3556,25,"__generator"],[3432,32,3556,36],[3432,33,3556,37],[3432,37,3556,41],[3432,39,3556,43],[3432,49,3556,53,"_a"],[3432,51,3556,55],[3432,53,3556,57],[3433,10,3557,16],[3433,18,3557,24,"_a"],[3433,20,3557,26],[3433,21,3557,27,"label"],[3433,26,3557,32],[3434,12,3558,20],[3434,17,3558,25],[3434,18,3558,26],[3435,14,3559,24],[3435,18,3559,28],[3435,22,3559,32],[3435,23,3559,33,"currentUser"],[3435,34,3559,44],[3435,38,3559,48],[3435,42,3559,52],[3435,43,3559,53,"currentUser"],[3435,54,3559,64],[3435,59,3559,69,"user"],[3435,63,3559,73],[3435,65,3559,75],[3436,16,3560,28],[3436,20,3560,32],[3436,21,3560,33,"_currentUser"],[3436,33,3560,45],[3436,34,3560,46,"_stopProactiveRefresh"],[3436,55,3560,67],[3436,56,3560,68],[3436,57,3560,69],[3437,14,3561,24],[3438,14,3562,24],[3438,18,3562,28,"user"],[3438,22,3562,32],[3438,26,3562,36],[3438,30,3562,40],[3438,31,3562,41,"isProactiveRefreshEnabled"],[3438,56,3562,66],[3438,58,3562,68],[3439,16,3563,28,"user"],[3439,20,3563,32],[3439,21,3563,33,"_startProactiveRefresh"],[3439,43,3563,55],[3439,44,3563,56],[3439,45,3563,57],[3440,14,3564,24],[3441,14,3565,24],[3441,18,3565,28],[3441,19,3565,29,"currentUser"],[3441,30,3565,40],[3441,33,3565,43,"user"],[3441,37,3565,47],[3442,14,3566,24],[3442,18,3566,28],[3442,19,3566,29,"user"],[3442,23,3566,33],[3442,25,3566,35],[3442,32,3566,42],[3442,33,3566,43],[3442,34,3566,44],[3442,35,3566,45],[3442,46,3566,56],[3442,47,3566,57],[3442,48,3566,58],[3443,14,3567,24],[3443,21,3567,31],[3443,22,3567,32],[3443,23,3567,33],[3443,24,3567,34],[3443,35,3567,45],[3443,39,3567,49],[3443,40,3567,50,"assertedPersistence"],[3443,59,3567,69],[3443,60,3567,70,"setCurrentUser"],[3443,74,3567,84],[3443,75,3567,85,"user"],[3443,79,3567,89],[3443,80,3567,90],[3443,81,3567,91],[3444,12,3568,20],[3444,17,3568,25],[3444,18,3568,26],[3445,14,3569,24,"_a"],[3445,16,3569,26],[3445,17,3569,27,"sent"],[3445,21,3569,31],[3445,22,3569,32],[3445,23,3569,33],[3446,14,3570,24],[3446,21,3570,31],[3446,22,3570,32],[3446,23,3570,33],[3446,24,3570,34],[3446,35,3570,45],[3446,36,3570,46],[3446,37,3570,47],[3447,12,3571,20],[3447,17,3571,25],[3447,18,3571,26],[3448,14,3571,28],[3448,21,3571,35],[3448,22,3571,36],[3448,23,3571,37],[3448,24,3571,38],[3448,35,3571,49],[3448,39,3571,53],[3448,40,3571,54,"assertedPersistence"],[3448,59,3571,73],[3448,60,3571,74,"removeCurrentUser"],[3448,77,3571,91],[3448,78,3571,92],[3448,79,3571,93],[3448,80,3571,94],[3449,12,3572,20],[3449,17,3572,25],[3449,18,3572,26],[3450,14,3573,24,"_a"],[3450,16,3573,26],[3450,17,3573,27,"sent"],[3450,21,3573,31],[3450,22,3573,32],[3450,23,3573,33],[3451,14,3574,24,"_a"],[3451,16,3574,26],[3451,17,3574,27,"label"],[3451,22,3574,32],[3451,25,3574,35],[3451,26,3574,36],[3452,12,3575,20],[3452,17,3575,25],[3452,18,3575,26],[3453,14,3575,28],[3453,21,3575,35],[3453,22,3575,36],[3453,23,3575,37],[3453,24,3575,38],[3453,35,3575,49],[3454,10,3576,16],[3455,8,3577,12],[3455,9,3577,13],[3455,10,3577,14],[3456,6,3578,8],[3456,7,3578,9],[3456,8,3578,10],[3457,4,3579,4],[3457,5,3579,5],[3458,4,3580,4,"AuthImpl"],[3458,12,3580,12],[3458,13,3580,13,"prototype"],[3458,22,3580,22],[3458,23,3580,23,"queue"],[3458,28,3580,28],[3458,31,3580,31],[3458,41,3580,41,"action"],[3458,47,3580,47],[3458,49,3580,49],[3459,6,3581,8],[3460,6,3582,8],[3461,6,3583,8],[3461,10,3583,12],[3461,11,3583,13,"operations"],[3461,21,3583,23],[3461,24,3583,26],[3461,28,3583,30],[3461,29,3583,31,"operations"],[3461,39,3583,41],[3461,40,3583,42,"then"],[3461,44,3583,46],[3461,45,3583,47,"action"],[3461,51,3583,53],[3461,53,3583,55,"action"],[3461,59,3583,61],[3461,60,3583,62],[3462,6,3584,8],[3462,13,3584,15],[3462,17,3584,19],[3462,18,3584,20,"operations"],[3462,28,3584,30],[3463,4,3585,4],[3463,5,3585,5],[3464,4,3586,4,"Object"],[3464,10,3586,10],[3464,11,3586,11,"defineProperty"],[3464,25,3586,25],[3464,26,3586,26,"AuthImpl"],[3464,34,3586,34],[3464,35,3586,35,"prototype"],[3464,44,3586,44],[3464,46,3586,46],[3464,67,3586,67],[3464,69,3586,69],[3465,6,3587,8,"get"],[3465,9,3587,11],[3465,11,3587,13],[3465,20,3587,13,"get"],[3465,21,3587,13],[3465,23,3587,25],[3466,8,3588,12,"_assert"],[3466,15,3588,19],[3466,16,3588,20],[3466,20,3588,24],[3466,21,3588,25,"persistenceManager"],[3466,39,3588,43],[3466,41,3588,45],[3466,45,3588,49],[3466,47,3588,51],[3466,63,3588,67],[3466,64,3588,68],[3466,98,3588,102],[3466,99,3588,103],[3467,8,3589,12],[3467,15,3589,19],[3467,19,3589,23],[3467,20,3589,24,"persistenceManager"],[3467,38,3589,42],[3468,6,3590,8],[3468,7,3590,9],[3469,6,3591,8,"enumerable"],[3469,16,3591,18],[3469,18,3591,20],[3469,23,3591,25],[3470,6,3592,8,"configurable"],[3470,18,3592,20],[3470,20,3592,22],[3471,4,3593,4],[3471,5,3593,5],[3471,6,3593,6],[3472,4,3594,4,"AuthImpl"],[3472,12,3594,12],[3472,13,3594,13,"prototype"],[3472,22,3594,22],[3472,23,3594,23,"_logFramework"],[3472,36,3594,36],[3472,39,3594,39],[3472,49,3594,49,"framework"],[3472,58,3594,58],[3472,60,3594,60],[3473,6,3595,8],[3473,10,3595,12],[3473,11,3595,13,"framework"],[3473,20,3595,22],[3473,24,3595,26],[3473,28,3595,30],[3473,29,3595,31,"frameworks"],[3473,39,3595,41],[3473,40,3595,42,"includes"],[3473,48,3595,50],[3473,49,3595,51,"framework"],[3473,58,3595,60],[3473,59,3595,61],[3473,61,3595,63],[3474,8,3596,12],[3475,6,3597,8],[3476,6,3598,8],[3476,10,3598,12],[3476,11,3598,13,"frameworks"],[3476,21,3598,23],[3476,22,3598,24,"push"],[3476,26,3598,28],[3476,27,3598,29,"framework"],[3476,36,3598,38],[3476,37,3598,39],[3477,6,3599,8],[3478,6,3600,8],[3479,6,3601,8],[3479,10,3601,12],[3479,11,3601,13,"frameworks"],[3479,21,3601,23],[3479,22,3601,24,"sort"],[3479,26,3601,28],[3479,27,3601,29],[3479,28,3601,30],[3480,6,3602,8],[3480,10,3602,12],[3480,11,3602,13,"clientVersion"],[3480,24,3602,26],[3480,27,3602,29,"_getClientVersion"],[3480,44,3602,46],[3480,45,3602,47],[3480,49,3602,51],[3480,50,3602,52,"config"],[3480,56,3602,58],[3480,57,3602,59,"clientPlatform"],[3480,71,3602,73],[3480,73,3602,75],[3480,77,3602,79],[3480,78,3602,80,"_getFrameworks"],[3480,92,3602,94],[3480,93,3602,95],[3480,94,3602,96],[3480,95,3602,97],[3481,4,3603,4],[3481,5,3603,5],[3482,4,3604,4,"AuthImpl"],[3482,12,3604,12],[3482,13,3604,13,"prototype"],[3482,22,3604,22],[3482,23,3604,23,"_getFrameworks"],[3482,37,3604,37],[3482,40,3604,40],[3482,52,3604,52],[3483,6,3605,8],[3483,13,3605,15],[3483,17,3605,19],[3483,18,3605,20,"frameworks"],[3483,28,3605,30],[3484,4,3606,4],[3484,5,3606,5],[3485,4,3607,4,"AuthImpl"],[3485,12,3607,12],[3485,13,3607,13,"prototype"],[3485,22,3607,22],[3485,23,3607,23,"_getAdditionalHeaders"],[3485,44,3607,44],[3485,47,3607,47],[3485,59,3607,59],[3486,6,3608,8],[3486,10,3608,12,"_a"],[3486,12,3608,14],[3487,6,3609,8],[3487,13,3609,15,"tslib"],[3487,18,3609,20],[3487,19,3609,21,"__awaiter"],[3487,28,3609,30],[3487,29,3609,31],[3487,33,3609,35],[3487,35,3609,35,"undefined"],[3487,44,3609,35],[3487,46,3609,35,"undefined"],[3487,55,3609,35],[3487,57,3609,53],[3487,69,3609,65],[3488,8,3610,12],[3488,12,3610,16,"headers"],[3488,19,3610,23],[3488,21,3610,25,"heartbeatsHeader"],[3488,37,3610,41],[3488,39,3610,43,"appCheckToken"],[3488,52,3610,56],[3489,8,3611,12],[3489,12,3611,16,"_b"],[3489,14,3611,18],[3490,8,3612,12],[3490,15,3612,19,"tslib"],[3490,20,3612,24],[3490,21,3612,25,"__generator"],[3490,32,3612,36],[3490,33,3612,37],[3490,37,3612,41],[3490,39,3612,43],[3490,49,3612,53,"_c"],[3490,51,3612,55],[3490,53,3612,57],[3491,10,3613,16],[3491,18,3613,24,"_c"],[3491,20,3613,26],[3491,21,3613,27,"label"],[3491,26,3613,32],[3492,12,3614,20],[3492,17,3614,25],[3492,18,3614,26],[3493,14,3615,24,"headers"],[3493,21,3615,31],[3493,25,3615,35,"_b"],[3493,27,3615,37],[3493,30,3615,40],[3493,31,3615,41],[3493,32,3615,42],[3493,34,3616,28,"_b"],[3493,36,3616,30],[3493,37,3616,31],[3493,55,3616,49],[3493,56,3616,50],[3493,90,3616,84],[3493,93,3616,87],[3493,97,3616,91],[3493,98,3616,92,"clientVersion"],[3493,111,3616,105],[3493,113,3617,28,"_b"],[3493,115,3617,30],[3493,116,3617,31],[3494,14,3618,24],[3494,18,3618,28],[3494,22,3618,32],[3494,23,3618,33,"app"],[3494,26,3618,36],[3494,27,3618,37,"options"],[3494,34,3618,44],[3494,35,3618,45,"appId"],[3494,40,3618,50],[3494,42,3618,52],[3495,16,3619,28,"headers"],[3495,23,3619,35],[3495,24,3619,36],[3495,42,3619,54],[3495,43,3619,55],[3495,77,3619,89],[3495,80,3619,92],[3495,84,3619,96],[3495,85,3619,97,"app"],[3495,88,3619,100],[3495,89,3619,101,"options"],[3495,96,3619,108],[3495,97,3619,109,"appId"],[3495,102,3619,114],[3496,14,3620,24],[3497,14,3621,24],[3497,21,3621,31],[3497,22,3621,32],[3497,23,3621,33],[3497,24,3621,34],[3497,35,3621,46],[3497,36,3621,47,"_a"],[3497,38,3621,49],[3497,41,3621,52],[3497,45,3621,56],[3497,46,3621,57,"heartbeatServiceProvider"],[3497,70,3621,81],[3497,71,3622,33,"getImmediate"],[3497,83,3622,45],[3497,84,3622,46],[3498,16,3623,32,"optional"],[3498,24,3623,40],[3498,26,3623,42],[3499,14,3624,28],[3499,15,3624,29],[3499,16,3624,30],[3499,22,3624,36],[3499,26,3624,40],[3499,30,3624,44,"_a"],[3499,32,3624,46],[3499,37,3624,46,"undefined"],[3499,46,3624,57],[3499,49,3624,57,"undefined"],[3499,58,3624,57],[3499,61,3624,69,"_a"],[3499,63,3624,71],[3499,64,3624,72,"getHeartbeatsHeader"],[3499,83,3624,91],[3499,84,3624,92],[3499,85,3624,93],[3499,86,3624,95],[3500,12,3625,20],[3500,17,3625,25],[3500,18,3625,26],[3501,14,3626,24,"heartbeatsHeader"],[3501,30,3626,40],[3501,33,3626,43,"_c"],[3501,35,3626,45],[3501,36,3626,46,"sent"],[3501,40,3626,50],[3501,41,3626,51],[3501,42,3626,52],[3502,14,3627,24],[3502,18,3627,28,"heartbeatsHeader"],[3502,34,3627,44],[3502,36,3627,46],[3503,16,3628,28,"headers"],[3503,23,3628,35],[3503,24,3628,36],[3503,43,3628,55],[3503,44,3628,56],[3503,79,3628,91],[3503,82,3628,94,"heartbeatsHeader"],[3503,98,3628,110],[3504,14,3629,24],[3505,14,3630,24],[3505,21,3630,31],[3505,22,3630,32],[3505,23,3630,33],[3505,24,3630,34],[3505,35,3630,45],[3505,39,3630,49],[3505,40,3630,50,"_getAppCheckToken"],[3505,57,3630,67],[3505,58,3630,68],[3505,59,3630,69],[3505,60,3630,70],[3506,12,3631,20],[3506,17,3631,25],[3506,18,3631,26],[3507,14,3632,24,"appCheckToken"],[3507,27,3632,37],[3507,30,3632,40,"_c"],[3507,32,3632,42],[3507,33,3632,43,"sent"],[3507,37,3632,47],[3507,38,3632,48],[3507,39,3632,49],[3508,14,3633,24],[3508,18,3633,28,"appCheckToken"],[3508,31,3633,41],[3508,33,3633,43],[3509,16,3634,28,"headers"],[3509,23,3634,35],[3509,24,3634,36],[3509,45,3634,57],[3509,46,3634,58],[3509,84,3634,96],[3509,87,3634,99,"appCheckToken"],[3509,100,3634,112],[3510,14,3635,24],[3511,14,3636,24],[3511,21,3636,31],[3511,22,3636,32],[3511,23,3636,33],[3511,24,3636,34],[3511,36,3636,46,"headers"],[3511,43,3636,53],[3511,44,3636,54],[3512,10,3637,16],[3513,8,3638,12],[3513,9,3638,13],[3513,10,3638,14],[3514,6,3639,8],[3514,7,3639,9],[3514,8,3639,10],[3515,4,3640,4],[3515,5,3640,5],[3516,4,3641,4,"AuthImpl"],[3516,12,3641,12],[3516,13,3641,13,"prototype"],[3516,22,3641,22],[3516,23,3641,23,"_getAppCheckToken"],[3516,40,3641,40],[3516,43,3641,43],[3516,55,3641,55],[3517,6,3642,8],[3517,10,3642,12,"_a"],[3517,12,3642,14],[3518,6,3643,8],[3518,13,3643,15,"tslib"],[3518,18,3643,20],[3518,19,3643,21,"__awaiter"],[3518,28,3643,30],[3518,29,3643,31],[3518,33,3643,35],[3518,35,3643,35,"undefined"],[3518,44,3643,35],[3518,46,3643,35,"undefined"],[3518,55,3643,35],[3518,57,3643,53],[3518,69,3643,65],[3519,8,3644,12],[3519,12,3644,16,"appCheckTokenResult"],[3519,31,3644,35],[3520,8,3645,12],[3520,15,3645,19,"tslib"],[3520,20,3645,24],[3520,21,3645,25,"__generator"],[3520,32,3645,36],[3520,33,3645,37],[3520,37,3645,41],[3520,39,3645,43],[3520,49,3645,53,"_b"],[3520,51,3645,55],[3520,53,3645,57],[3521,10,3646,16],[3521,18,3646,24,"_b"],[3521,20,3646,26],[3521,21,3646,27,"label"],[3521,26,3646,32],[3522,12,3647,20],[3522,17,3647,25],[3522,18,3647,26],[3523,14,3647,28],[3523,21,3647,35],[3523,22,3647,36],[3523,23,3647,37],[3523,24,3647,38],[3523,35,3647,50],[3523,36,3647,51,"_a"],[3523,38,3647,53],[3523,41,3647,56],[3523,45,3647,60],[3523,46,3647,61,"appCheckServiceProvider"],[3523,69,3647,84],[3523,70,3648,29,"getImmediate"],[3523,82,3648,41],[3523,83,3648,42],[3524,16,3648,44,"optional"],[3524,24,3648,52],[3524,26,3648,54],[3525,14,3648,59],[3525,15,3648,60],[3525,16,3648,61],[3525,22,3648,67],[3525,26,3648,71],[3525,30,3648,75,"_a"],[3525,32,3648,77],[3525,37,3648,77,"undefined"],[3525,46,3648,88],[3525,49,3648,88,"undefined"],[3525,58,3648,88],[3525,61,3648,100,"_a"],[3525,63,3648,102],[3525,64,3648,103,"getToken"],[3525,72,3648,111],[3525,73,3648,112],[3525,74,3648,113],[3525,75,3648,115],[3526,12,3649,20],[3526,17,3649,25],[3526,18,3649,26],[3527,14,3650,24,"appCheckTokenResult"],[3527,33,3650,43],[3527,36,3650,46,"_b"],[3527,38,3650,48],[3527,39,3650,49,"sent"],[3527,43,3650,53],[3527,44,3650,54],[3527,45,3650,55],[3528,14,3651,24],[3528,18,3651,28,"appCheckTokenResult"],[3528,37,3651,47],[3528,42,3651,52],[3528,46,3651,56],[3528,50,3651,60,"appCheckTokenResult"],[3528,69,3651,79],[3528,74,3651,79,"undefined"],[3528,83,3651,90],[3528,86,3651,90,"undefined"],[3528,95,3651,90],[3528,98,3651,102,"appCheckTokenResult"],[3528,117,3651,121],[3528,118,3651,122,"error"],[3528,123,3651,127],[3528,125,3651,129],[3529,16,3652,28],[3530,16,3653,28],[3531,16,3654,28],[3532,16,3655,28],[3533,16,3656,28,"_logWarn"],[3533,24,3656,36],[3533,25,3656,37],[3533,67,3656,79],[3533,68,3656,80,"concat"],[3533,74,3656,86],[3533,75,3656,87,"appCheckTokenResult"],[3533,94,3656,106],[3533,95,3656,107,"error"],[3533,100,3656,112],[3533,101,3656,113],[3533,102,3656,114],[3534,14,3657,24],[3535,14,3658,24],[3535,21,3658,31],[3535,22,3658,32],[3535,23,3658,33],[3535,24,3658,34],[3535,36,3658,46,"appCheckTokenResult"],[3535,55,3658,65],[3535,60,3658,70],[3535,64,3658,74],[3535,68,3658,78,"appCheckTokenResult"],[3535,87,3658,97],[3535,92,3658,97,"undefined"],[3535,101,3658,108],[3535,104,3658,108,"undefined"],[3535,113,3658,108],[3535,116,3658,120,"appCheckTokenResult"],[3535,135,3658,139],[3535,136,3658,140,"token"],[3535,141,3658,145],[3535,142,3658,146],[3536,10,3659,16],[3537,8,3660,12],[3537,9,3660,13],[3537,10,3660,14],[3538,6,3661,8],[3538,7,3661,9],[3538,8,3661,10],[3539,4,3662,4],[3539,5,3662,5],[3540,4,3663,4],[3540,11,3663,11,"AuthImpl"],[3540,19,3663,19],[3541,2,3664,0],[3541,3,3664,1],[3541,4,3664,2],[3541,5,3664,4],[3542,2,3665,0],[3543,0,3666,0],[3544,0,3667,0],[3545,0,3668,0],[3546,0,3669,0],[3547,0,3670,0],[3548,2,3671,0],[3548,11,3671,9,"_castAuth"],[3548,20,3671,18,"_castAuth"],[3548,21,3671,19,"auth"],[3548,25,3671,23],[3548,27,3671,25],[3549,4,3672,4],[3549,11,3672,11,"util"],[3549,15,3672,15],[3549,16,3672,16,"getModularInstance"],[3549,34,3672,34],[3549,35,3672,35,"auth"],[3549,39,3672,39],[3549,40,3672,40],[3550,2,3673,0],[3551,2,3674,0],[3552,2,3675,0],[3552,6,3675,4,"Subscription"],[3552,18,3675,16],[3552,21,3675,19],[3552,34,3675,34],[3552,46,3675,46],[3553,4,3676,4],[3553,13,3676,13,"Subscription"],[3553,25,3676,25,"Subscription"],[3553,26,3676,26,"auth"],[3553,30,3676,30],[3553,32,3676,32],[3554,6,3677,8],[3554,10,3677,12,"_this"],[3554,15,3677,17],[3554,18,3677,20],[3554,22,3677,24],[3555,6,3678,8],[3555,10,3678,12],[3555,11,3678,13,"auth"],[3555,15,3678,17],[3555,18,3678,20,"auth"],[3555,22,3678,24],[3556,6,3679,8],[3556,10,3679,12],[3556,11,3679,13,"observer"],[3556,19,3679,21],[3556,22,3679,24],[3556,26,3679,28],[3557,6,3680,8],[3557,10,3680,12],[3557,11,3680,13,"addObserver"],[3557,22,3680,24],[3557,25,3680,27,"util"],[3557,29,3680,31],[3557,30,3680,32,"createSubscribe"],[3557,45,3680,47],[3557,46,3680,48],[3557,56,3680,58,"observer"],[3557,64,3680,66],[3557,66,3680,68],[3558,8,3680,70],[3558,15,3680,78,"_this"],[3558,20,3680,83],[3558,21,3680,84,"observer"],[3558,29,3680,92],[3558,32,3680,95,"observer"],[3558,40,3680,103],[3559,6,3680,106],[3559,7,3680,107],[3559,8,3680,108],[3560,4,3681,4],[3561,4,3682,4,"Object"],[3561,10,3682,10],[3561,11,3682,11,"defineProperty"],[3561,25,3682,25],[3561,26,3682,26,"Subscription"],[3561,38,3682,38],[3561,39,3682,39,"prototype"],[3561,48,3682,48],[3561,50,3682,50],[3561,56,3682,56],[3561,58,3682,58],[3562,6,3683,8,"get"],[3562,9,3683,11],[3562,11,3683,13],[3562,20,3683,13,"get"],[3562,21,3683,13],[3562,23,3683,25],[3563,8,3684,12,"_assert"],[3563,15,3684,19],[3563,16,3684,20],[3563,20,3684,24],[3563,21,3684,25,"observer"],[3563,29,3684,33],[3563,31,3684,35],[3563,35,3684,39],[3563,36,3684,40,"auth"],[3563,40,3684,44],[3563,42,3684,46],[3563,58,3684,62],[3563,59,3684,63],[3563,93,3684,97],[3563,94,3684,98],[3564,8,3685,12],[3564,15,3685,19],[3564,19,3685,23],[3564,20,3685,24,"observer"],[3564,28,3685,32],[3564,29,3685,33,"next"],[3564,33,3685,37],[3564,34,3685,38,"bind"],[3564,38,3685,42],[3564,39,3685,43],[3564,43,3685,47],[3564,44,3685,48,"observer"],[3564,52,3685,56],[3564,53,3685,57],[3565,6,3686,8],[3565,7,3686,9],[3566,6,3687,8,"enumerable"],[3566,16,3687,18],[3566,18,3687,20],[3566,23,3687,25],[3567,6,3688,8,"configurable"],[3567,18,3688,20],[3567,20,3688,22],[3568,4,3689,4],[3568,5,3689,5],[3568,6,3689,6],[3569,4,3690,4],[3569,11,3690,11,"Subscription"],[3569,23,3690,23],[3570,2,3691,0],[3570,3,3691,1],[3570,4,3691,2],[3570,5,3691,4],[3572,2,3693,0],[3573,0,3694,0],[3574,0,3695,0],[3575,0,3696,0],[3576,0,3697,0],[3577,0,3698,0],[3578,0,3699,0],[3579,0,3700,0],[3580,0,3701,0],[3581,0,3702,0],[3582,0,3703,0],[3583,0,3704,0],[3584,0,3705,0],[3585,0,3706,0],[3586,0,3707,0],[3587,0,3708,0],[3588,2,3709,0],[3588,6,3709,4,"externalJSProvider"],[3588,24,3709,22],[3588,27,3709,25],[3589,4,3710,4,"loadJS"],[3589,10,3710,10],[3589,12,3710,12],[3589,21,3710,12,"loadJS"],[3589,22,3710,12],[3589,24,3710,24],[3590,6,3711,8],[3590,13,3711,15,"tslib"],[3590,18,3711,20],[3590,19,3711,21,"__awaiter"],[3590,28,3711,30],[3590,29,3711,31],[3590,33,3711,35],[3590,35,3711,35,"undefined"],[3590,44,3711,35],[3590,46,3711,35,"undefined"],[3590,55,3711,35],[3590,57,3711,53],[3590,69,3711,65],[3591,8,3712,12],[3591,15,3712,19,"tslib"],[3591,20,3712,24],[3591,21,3712,25,"__generator"],[3591,32,3712,36],[3591,33,3712,37],[3591,37,3712,41],[3591,39,3712,43],[3591,49,3712,53,"_a"],[3591,51,3712,55],[3591,53,3712,57],[3592,10,3713,16],[3592,16,3713,22],[3592,20,3713,26,"Error"],[3592,25,3713,31],[3592,26,3713,32],[3592,59,3713,65],[3592,60,3713,66],[3593,8,3714,12],[3593,9,3714,13],[3593,10,3714,14],[3594,6,3715,8],[3594,7,3715,9],[3594,8,3715,10],[3595,4,3716,4],[3595,5,3716,5],[3596,4,3717,4,"recaptchaV2Script"],[3596,21,3717,21],[3596,23,3717,23],[3596,25,3717,25],[3597,4,3718,4,"recaptchaEnterpriseScript"],[3597,29,3718,29],[3597,31,3718,31],[3597,33,3718,33],[3598,4,3719,4,"gapiScript"],[3598,14,3719,14],[3598,16,3719,16],[3599,2,3720,0],[3599,3,3720,1],[3600,2,3721,0],[3600,11,3721,9,"_setExternalJSProvider"],[3600,33,3721,31,"_setExternalJSProvider"],[3600,34,3721,32,"p"],[3600,35,3721,33],[3600,37,3721,35],[3601,4,3722,4,"externalJSProvider"],[3601,22,3722,22],[3601,25,3722,25,"p"],[3601,26,3722,26],[3602,2,3723,0],[3603,2,3724,0],[3603,11,3724,9,"_loadJS"],[3603,18,3724,16,"_loadJS"],[3603,19,3724,17,"url"],[3603,22,3724,20],[3603,24,3724,22],[3604,4,3725,4],[3604,11,3725,11,"externalJSProvider"],[3604,29,3725,29],[3604,30,3725,30,"loadJS"],[3604,36,3725,36],[3604,37,3725,37,"url"],[3604,40,3725,40],[3604,41,3725,41],[3605,2,3726,0],[3606,2,3727,0],[3606,11,3727,9,"_recaptchaV2ScriptUrl"],[3606,32,3727,30,"_recaptchaV2ScriptUrl"],[3606,33,3727,30],[3606,35,3727,33],[3607,4,3728,4],[3607,11,3728,11,"externalJSProvider"],[3607,29,3728,29],[3607,30,3728,30,"recaptchaV2Script"],[3607,47,3728,47],[3608,2,3729,0],[3609,2,3730,0],[3609,11,3730,9,"_recaptchaEnterpriseScriptUrl"],[3609,40,3730,38,"_recaptchaEnterpriseScriptUrl"],[3609,41,3730,38],[3609,43,3730,41],[3610,4,3731,4],[3610,11,3731,11,"externalJSProvider"],[3610,29,3731,29],[3610,30,3731,30,"recaptchaEnterpriseScript"],[3610,55,3731,55],[3611,2,3732,0],[3612,2,3733,0],[3612,11,3733,9,"_gapiScriptUrl"],[3612,25,3733,23,"_gapiScriptUrl"],[3612,26,3733,23],[3612,28,3733,26],[3613,4,3734,4],[3613,11,3734,11,"externalJSProvider"],[3613,29,3734,29],[3613,30,3734,30,"gapiScript"],[3613,40,3734,40],[3614,2,3735,0],[3615,2,3736,0],[3615,11,3736,9,"_generateCallbackName"],[3615,32,3736,30,"_generateCallbackName"],[3615,33,3736,31,"prefix"],[3615,39,3736,37],[3615,41,3736,39],[3616,4,3737,4],[3616,11,3737,11],[3616,15,3737,15],[3616,16,3737,16,"concat"],[3616,22,3737,22],[3616,23,3737,23,"prefix"],[3616,29,3737,29],[3616,30,3737,30],[3616,31,3737,31,"concat"],[3616,37,3737,37],[3616,38,3737,38,"Math"],[3616,42,3737,42],[3616,43,3737,43,"floor"],[3616,48,3737,48],[3616,49,3737,49,"Math"],[3616,53,3737,53],[3616,54,3737,54,"random"],[3616,60,3737,60],[3616,61,3737,61],[3616,62,3737,62],[3616,65,3737,65],[3616,72,3737,72],[3616,73,3737,73],[3616,74,3737,74],[3617,2,3738,0],[3619,2,3740,0],[3620,2,3741,0],[3620,6,3741,4,"RECAPTCHA_ENTERPRISE_VERIFIER_TYPE"],[3620,40,3741,38],[3620,43,3741,41],[3620,65,3741,63],[3621,2,3742,0],[3621,6,3742,4,"FAKE_TOKEN"],[3621,16,3742,14],[3621,19,3742,17],[3621,33,3742,31],[3622,2,3743,0],[3622,6,3743,4,"RecaptchaEnterpriseVerifier"],[3622,33,3743,31],[3622,36,3743,34],[3622,49,3743,49],[3622,61,3743,61],[3623,4,3744,4],[3624,0,3745,0],[3625,0,3746,0],[3626,0,3747,0],[3627,0,3748,0],[3628,4,3749,4],[3628,13,3749,13,"RecaptchaEnterpriseVerifier"],[3628,40,3749,40,"RecaptchaEnterpriseVerifier"],[3628,41,3749,41,"authExtern"],[3628,51,3749,51],[3628,53,3749,53],[3629,6,3750,8],[3630,0,3751,0],[3631,0,3752,0],[3632,6,3753,8],[3632,10,3753,12],[3632,11,3753,13,"type"],[3632,15,3753,17],[3632,18,3753,20,"RECAPTCHA_ENTERPRISE_VERIFIER_TYPE"],[3632,52,3753,54],[3633,6,3754,8],[3633,10,3754,12],[3633,11,3754,13,"auth"],[3633,15,3754,17],[3633,18,3754,20,"_castAuth"],[3633,27,3754,29],[3633,28,3754,30,"authExtern"],[3633,38,3754,40],[3633,39,3754,41],[3634,4,3755,4],[3635,4,3756,4],[3636,0,3757,0],[3637,0,3758,0],[3638,0,3759,0],[3639,0,3760,0],[3640,4,3761,4,"RecaptchaEnterpriseVerifier"],[3640,31,3761,31],[3640,32,3761,32,"prototype"],[3640,41,3761,41],[3640,42,3761,42,"verify"],[3640,48,3761,48],[3640,51,3761,51],[3640,61,3761,61,"action"],[3640,67,3761,67],[3640,69,3761,69,"forceRefresh"],[3640,81,3761,81],[3640,83,3761,83],[3641,6,3762,8],[3641,10,3762,12,"action"],[3641,16,3762,18],[3641,21,3762,18,"undefined"],[3641,30,3762,29],[3641,32,3762,31],[3642,8,3762,33,"action"],[3642,14,3762,39],[3642,17,3762,42],[3642,25,3762,50],[3643,6,3762,52],[3644,6,3763,8],[3644,10,3763,12,"forceRefresh"],[3644,22,3763,24],[3644,27,3763,24,"undefined"],[3644,36,3763,35],[3644,38,3763,37],[3645,8,3763,39,"forceRefresh"],[3645,20,3763,51],[3645,23,3763,54],[3645,28,3763,59],[3646,6,3763,61],[3647,6,3764,8],[3647,13,3764,15,"tslib"],[3647,18,3764,20],[3647,19,3764,21,"__awaiter"],[3647,28,3764,30],[3647,29,3764,31],[3647,33,3764,35],[3647,35,3764,35,"undefined"],[3647,44,3764,35],[3647,46,3764,35,"undefined"],[3647,55,3764,35],[3647,57,3764,53],[3647,69,3764,65],[3648,8,3765,12],[3648,17,3765,21,"retrieveSiteKey"],[3648,32,3765,36,"retrieveSiteKey"],[3648,33,3765,37,"auth"],[3648,37,3765,41],[3648,39,3765,43],[3649,10,3766,16],[3649,17,3766,23,"tslib"],[3649,22,3766,28],[3649,23,3766,29,"__awaiter"],[3649,32,3766,38],[3649,33,3766,39],[3649,37,3766,43],[3649,39,3766,43,"undefined"],[3649,48,3766,43],[3649,50,3766,43,"undefined"],[3649,59,3766,43],[3649,61,3766,61],[3649,73,3766,73],[3650,12,3767,20],[3650,16,3767,24,"_this"],[3650,21,3767,29],[3650,24,3767,32],[3650,28,3767,36],[3651,12,3768,20],[3651,19,3768,27,"tslib"],[3651,24,3768,32],[3651,25,3768,33,"__generator"],[3651,36,3768,44],[3651,37,3768,45],[3651,41,3768,49],[3651,43,3768,51],[3651,53,3768,61,"_a"],[3651,55,3768,63],[3651,57,3768,65],[3652,14,3769,24],[3652,18,3769,28],[3652,19,3769,29,"forceRefresh"],[3652,31,3769,41],[3652,33,3769,43],[3653,16,3770,28],[3653,20,3770,32,"auth"],[3653,24,3770,36],[3653,25,3770,37,"tenantId"],[3653,33,3770,45],[3653,37,3770,49],[3653,41,3770,53],[3653,45,3770,57,"auth"],[3653,49,3770,61],[3653,50,3770,62,"_agentRecaptchaConfig"],[3653,71,3770,83],[3653,75,3770,87],[3653,79,3770,91],[3653,81,3770,93],[3654,18,3771,32],[3654,25,3771,39],[3654,26,3771,40],[3654,27,3771,41],[3654,28,3771,42],[3654,40,3771,54,"auth"],[3654,44,3771,58],[3654,45,3771,59,"_agentRecaptchaConfig"],[3654,66,3771,80],[3654,67,3771,81,"siteKey"],[3654,74,3771,88],[3654,75,3771,89],[3655,16,3772,28],[3656,16,3773,28],[3656,20,3773,32,"auth"],[3656,24,3773,36],[3656,25,3773,37,"tenantId"],[3656,33,3773,45],[3656,37,3773,49],[3656,41,3773,53],[3656,45,3774,32,"auth"],[3656,49,3774,36],[3656,50,3774,37,"_tenantRecaptchaConfigs"],[3656,73,3774,60],[3656,74,3774,61,"auth"],[3656,78,3774,65],[3656,79,3774,66,"tenantId"],[3656,87,3774,74],[3656,88,3774,75],[3656,93,3774,80,"undefined"],[3656,102,3774,89],[3656,104,3774,91],[3657,18,3775,32],[3657,25,3775,39],[3657,26,3775,40],[3657,27,3775,41],[3657,28,3775,42],[3657,40,3775,54,"auth"],[3657,44,3775,58],[3657,45,3775,59,"_tenantRecaptchaConfigs"],[3657,68,3775,82],[3657,69,3775,83,"auth"],[3657,73,3775,87],[3657,74,3775,88,"tenantId"],[3657,82,3775,96],[3657,83,3775,97],[3657,84,3775,98,"siteKey"],[3657,91,3775,105],[3657,92,3775,106],[3658,16,3776,28],[3659,14,3777,24],[3660,14,3778,24],[3660,21,3778,31],[3660,22,3778,32],[3660,23,3778,33],[3660,24,3778,34],[3660,36,3778,46],[3660,40,3778,50,"Promise"],[3660,47,3778,57],[3660,48,3778,58],[3660,58,3778,68,"resolve"],[3660,65,3778,75],[3660,67,3778,77,"reject"],[3660,73,3778,83],[3660,75,3778,85],[3661,16,3778,87],[3661,23,3778,94,"tslib"],[3661,28,3778,99],[3661,29,3778,100,"__awaiter"],[3661,38,3778,109],[3661,39,3778,110,"_this"],[3661,44,3778,115],[3661,46,3778,115,"undefined"],[3661,55,3778,115],[3661,57,3778,115,"undefined"],[3661,66,3778,115],[3661,68,3778,133],[3661,80,3778,145],[3662,18,3779,32],[3662,25,3779,39,"tslib"],[3662,30,3779,44],[3662,31,3779,45,"__generator"],[3662,42,3779,56],[3662,43,3779,57],[3662,47,3779,61],[3662,49,3779,63],[3662,59,3779,73,"_a"],[3662,61,3779,75],[3662,63,3779,77],[3663,20,3780,36,"getRecaptchaConfig"],[3663,38,3780,54],[3663,39,3780,55,"auth"],[3663,43,3780,59],[3663,45,3780,61],[3664,22,3781,40,"clientType"],[3664,32,3781,50],[3664,34,3781,52],[3664,51,3781,69],[3664,52,3781,70],[3665,22,3782,40,"version"],[3665,29,3782,47],[3665,31,3782,49],[3665,53,3782,71],[3665,54,3782,72],[3666,20,3783,36],[3666,21,3783,37],[3666,22,3783,38],[3666,23,3784,41,"then"],[3666,27,3784,45],[3666,28,3784,46],[3666,38,3784,56,"response"],[3666,46,3784,64],[3666,48,3784,66],[3667,22,3785,40],[3667,26,3785,44,"response"],[3667,34,3785,52],[3667,35,3785,53,"recaptchaKey"],[3667,47,3785,65],[3667,52,3785,70,"undefined"],[3667,61,3785,79],[3667,63,3785,81],[3668,24,3786,44,"reject"],[3668,30,3786,50],[3668,31,3786,51],[3668,35,3786,55,"Error"],[3668,40,3786,60],[3668,41,3786,61],[3668,82,3786,102],[3668,83,3786,103],[3668,84,3786,104],[3669,22,3787,40],[3669,23,3787,41],[3669,29,3788,45],[3670,24,3789,44],[3670,28,3789,48,"config"],[3670,34,3789,54],[3670,37,3789,57],[3670,41,3789,61,"RecaptchaConfig"],[3670,56,3789,76],[3670,57,3789,77,"response"],[3670,65,3789,85],[3670,66,3789,86],[3671,24,3790,44],[3671,28,3790,48,"auth"],[3671,32,3790,52],[3671,33,3790,53,"tenantId"],[3671,41,3790,61],[3671,45,3790,65],[3671,49,3790,69],[3671,51,3790,71],[3672,26,3791,48,"auth"],[3672,30,3791,52],[3672,31,3791,53,"_agentRecaptchaConfig"],[3672,52,3791,74],[3672,55,3791,77,"config"],[3672,61,3791,83],[3673,24,3792,44],[3673,25,3792,45],[3673,31,3793,49],[3674,26,3794,48,"auth"],[3674,30,3794,52],[3674,31,3794,53,"_tenantRecaptchaConfigs"],[3674,54,3794,76],[3674,55,3794,77,"auth"],[3674,59,3794,81],[3674,60,3794,82,"tenantId"],[3674,68,3794,90],[3674,69,3794,91],[3674,72,3794,94,"config"],[3674,78,3794,100],[3675,24,3795,44],[3676,24,3796,44],[3676,31,3796,51,"resolve"],[3676,38,3796,58],[3676,39,3796,59,"config"],[3676,45,3796,65],[3676,46,3796,66,"siteKey"],[3676,53,3796,73],[3676,54,3796,74],[3677,22,3797,40],[3678,20,3798,36],[3678,21,3798,37],[3678,22,3798,38],[3678,23,3799,41,"catch"],[3678,28,3799,46],[3678,29,3799,47],[3678,39,3799,57,"error"],[3678,44,3799,62],[3678,46,3799,64],[3679,22,3800,40,"reject"],[3679,28,3800,46],[3679,29,3800,47,"error"],[3679,34,3800,52],[3679,35,3800,53],[3680,20,3801,36],[3680,21,3801,37],[3680,22,3801,38],[3681,20,3802,36],[3681,27,3802,43],[3681,28,3802,44],[3681,29,3802,45],[3681,30,3802,46],[3681,41,3802,57],[3682,18,3803,32],[3682,19,3803,33],[3682,20,3803,34],[3683,16,3804,28],[3683,17,3804,29],[3683,18,3804,30],[3684,14,3804,32],[3684,15,3804,33],[3684,16,3804,34],[3684,17,3804,35],[3685,12,3805,20],[3685,13,3805,21],[3685,14,3805,22],[3686,10,3806,16],[3686,11,3806,17],[3686,12,3806,18],[3687,8,3807,12],[3688,8,3808,12],[3688,17,3808,21,"retrieveRecaptchaToken"],[3688,39,3808,43,"retrieveRecaptchaToken"],[3688,40,3808,44,"siteKey"],[3688,47,3808,51],[3688,49,3808,53,"resolve"],[3688,56,3808,60],[3688,58,3808,62,"reject"],[3688,64,3808,68],[3688,66,3808,70],[3689,10,3809,16],[3689,14,3809,20,"grecaptcha"],[3689,24,3809,30],[3689,27,3809,33,"window"],[3689,33,3809,39],[3689,34,3809,40,"grecaptcha"],[3689,44,3809,50],[3690,10,3810,16],[3690,14,3810,20,"isEnterprise"],[3690,26,3810,32],[3690,27,3810,33,"grecaptcha"],[3690,37,3810,43],[3690,38,3810,44],[3690,40,3810,46],[3691,12,3811,20,"grecaptcha"],[3691,22,3811,30],[3691,23,3811,31,"enterprise"],[3691,33,3811,41],[3691,34,3811,42,"ready"],[3691,39,3811,47],[3691,40,3811,48],[3691,52,3811,60],[3692,14,3812,24,"grecaptcha"],[3692,24,3812,34],[3692,25,3812,35,"enterprise"],[3692,35,3812,45],[3692,36,3813,29,"execute"],[3692,43,3813,36],[3692,44,3813,37,"siteKey"],[3692,51,3813,44],[3692,53,3813,46],[3693,16,3813,48,"action"],[3693,22,3813,54],[3693,24,3813,56,"action"],[3694,14,3813,63],[3694,15,3813,64],[3694,16,3813,65],[3694,17,3814,29,"then"],[3694,21,3814,33],[3694,22,3814,34],[3694,32,3814,44,"token"],[3694,37,3814,49],[3694,39,3814,51],[3695,16,3815,28,"resolve"],[3695,23,3815,35],[3695,24,3815,36,"token"],[3695,29,3815,41],[3695,30,3815,42],[3696,14,3816,24],[3696,15,3816,25],[3696,16,3816,26],[3696,17,3817,29,"catch"],[3696,22,3817,34],[3696,23,3817,35],[3696,35,3817,47],[3697,16,3818,28,"resolve"],[3697,23,3818,35],[3697,24,3818,36,"FAKE_TOKEN"],[3697,34,3818,46],[3697,35,3818,47],[3698,14,3819,24],[3698,15,3819,25],[3698,16,3819,26],[3699,12,3820,20],[3699,13,3820,21],[3699,14,3820,22],[3700,10,3821,16],[3700,11,3821,17],[3700,17,3822,21],[3701,12,3823,20,"reject"],[3701,18,3823,26],[3701,19,3823,27,"Error"],[3701,24,3823,32],[3701,25,3823,33],[3701,65,3823,73],[3701,66,3823,74],[3701,67,3823,75],[3702,10,3824,16],[3703,8,3825,12],[3704,8,3826,12],[3704,12,3826,16,"_this"],[3704,17,3826,21],[3704,20,3826,24],[3704,24,3826,28],[3705,8,3827,12],[3705,15,3827,19,"tslib"],[3705,20,3827,24],[3705,21,3827,25,"__generator"],[3705,32,3827,36],[3705,33,3827,37],[3705,37,3827,41],[3705,39,3827,43],[3705,49,3827,53,"_a"],[3705,51,3827,55],[3705,53,3827,57],[3706,10,3828,16],[3706,17,3828,23],[3706,18,3828,24],[3706,19,3828,25],[3706,20,3828,26],[3706,32,3828,38],[3706,36,3828,42,"Promise"],[3706,43,3828,49],[3706,44,3828,50],[3706,54,3828,60,"resolve"],[3706,61,3828,67],[3706,63,3828,69,"reject"],[3706,69,3828,75],[3706,71,3828,77],[3707,12,3829,24,"retrieveSiteKey"],[3707,27,3829,39],[3707,28,3829,40,"_this"],[3707,33,3829,45],[3707,34,3829,46,"auth"],[3707,38,3829,50],[3707,39,3829,51],[3707,40,3830,29,"then"],[3707,44,3830,33],[3707,45,3830,34],[3707,55,3830,44,"siteKey"],[3707,62,3830,51],[3707,64,3830,53],[3708,14,3831,28],[3708,18,3831,32],[3708,19,3831,33,"forceRefresh"],[3708,31,3831,45],[3708,35,3831,49,"isEnterprise"],[3708,47,3831,61],[3708,48,3831,62,"window"],[3708,54,3831,68],[3708,55,3831,69,"grecaptcha"],[3708,65,3831,79],[3708,66,3831,80],[3708,68,3831,82],[3709,16,3832,32,"retrieveRecaptchaToken"],[3709,38,3832,54],[3709,39,3832,55,"siteKey"],[3709,46,3832,62],[3709,48,3832,64,"resolve"],[3709,55,3832,71],[3709,57,3832,73,"reject"],[3709,63,3832,79],[3709,64,3832,80],[3710,14,3833,28],[3710,15,3833,29],[3710,21,3834,33],[3711,16,3835,32],[3711,20,3835,36],[3711,27,3835,43,"window"],[3711,33,3835,49],[3711,38,3835,54],[3711,49,3835,65],[3711,51,3835,67],[3712,18,3836,36,"reject"],[3712,24,3836,42],[3712,25,3836,43],[3712,29,3836,47,"Error"],[3712,34,3836,52],[3712,35,3836,53],[3712,83,3836,101],[3712,84,3836,102],[3712,85,3836,103],[3713,18,3837,36],[3714,16,3838,32],[3715,16,3839,32],[3715,20,3839,36,"url"],[3715,23,3839,39],[3715,26,3839,42,"_recaptchaEnterpriseScriptUrl"],[3715,55,3839,71],[3715,56,3839,72],[3715,57,3839,73],[3716,16,3840,32],[3716,20,3840,36,"url"],[3716,23,3840,39],[3716,24,3840,40,"length"],[3716,30,3840,46],[3716,35,3840,51],[3716,36,3840,52],[3716,38,3840,54],[3717,18,3841,36,"url"],[3717,21,3841,39],[3717,25,3841,43,"siteKey"],[3717,32,3841,50],[3718,16,3842,32],[3719,16,3843,32,"_loadJS"],[3719,23,3843,39],[3719,24,3843,40,"url"],[3719,27,3843,43],[3719,28,3843,44],[3719,29,3844,37,"then"],[3719,33,3844,41],[3719,34,3844,42],[3719,46,3844,54],[3720,18,3845,36,"retrieveRecaptchaToken"],[3720,40,3845,58],[3720,41,3845,59,"siteKey"],[3720,48,3845,66],[3720,50,3845,68,"resolve"],[3720,57,3845,75],[3720,59,3845,77,"reject"],[3720,65,3845,83],[3720,66,3845,84],[3721,16,3846,32],[3721,17,3846,33],[3721,18,3846,34],[3721,19,3847,37,"catch"],[3721,24,3847,42],[3721,25,3847,43],[3721,35,3847,53,"error"],[3721,40,3847,58],[3721,42,3847,60],[3722,18,3848,36,"reject"],[3722,24,3848,42],[3722,25,3848,43,"error"],[3722,30,3848,48],[3722,31,3848,49],[3723,16,3849,32],[3723,17,3849,33],[3723,18,3849,34],[3724,14,3850,28],[3725,12,3851,24],[3725,13,3851,25],[3725,14,3851,26],[3725,15,3852,29,"catch"],[3725,20,3852,34],[3725,21,3852,35],[3725,31,3852,45,"error"],[3725,36,3852,50],[3725,38,3852,52],[3726,14,3853,28,"reject"],[3726,20,3853,34],[3726,21,3853,35,"error"],[3726,26,3853,40],[3726,27,3853,41],[3727,12,3854,24],[3727,13,3854,25],[3727,14,3854,26],[3728,10,3855,20],[3728,11,3855,21],[3728,12,3855,22],[3728,13,3855,23],[3729,8,3856,12],[3729,9,3856,13],[3729,10,3856,14],[3730,6,3857,8],[3730,7,3857,9],[3730,8,3857,10],[3731,4,3858,4],[3731,5,3858,5],[3732,4,3859,4],[3732,11,3859,11,"RecaptchaEnterpriseVerifier"],[3732,38,3859,38],[3733,2,3860,0],[3733,3,3860,1],[3733,4,3860,2],[3733,5,3860,4],[3734,2,3861,0],[3734,11,3861,9,"injectRecaptchaFields"],[3734,32,3861,30,"injectRecaptchaFields"],[3734,33,3861,31,"auth"],[3734,37,3861,35],[3734,39,3861,37,"request"],[3734,46,3861,44],[3734,48,3861,46,"action"],[3734,54,3861,52],[3734,56,3861,54,"captchaResp"],[3734,67,3861,65],[3734,69,3861,67],[3735,4,3862,4],[3735,8,3862,8,"captchaResp"],[3735,19,3862,19],[3735,24,3862,19,"undefined"],[3735,33,3862,30],[3735,35,3862,32],[3736,6,3862,34,"captchaResp"],[3736,17,3862,45],[3736,20,3862,48],[3736,25,3862,53],[3737,4,3862,55],[3738,4,3863,4],[3738,11,3863,11,"tslib"],[3738,16,3863,16],[3738,17,3863,17,"__awaiter"],[3738,26,3863,26],[3738,27,3863,27],[3738,31,3863,31],[3738,33,3863,31,"undefined"],[3738,42,3863,31],[3738,44,3863,31,"undefined"],[3738,53,3863,31],[3738,55,3863,49],[3738,67,3863,61],[3739,6,3864,8],[3739,10,3864,12,"verifier"],[3739,18,3864,20],[3739,20,3864,22,"captchaResponse"],[3739,35,3864,37],[3739,37,3864,39,"newRequest"],[3739,47,3864,49],[3740,6,3865,8],[3740,13,3865,15,"tslib"],[3740,18,3865,20],[3740,19,3865,21,"__generator"],[3740,30,3865,32],[3740,31,3865,33],[3740,35,3865,37],[3740,37,3865,39],[3740,47,3865,49,"_a"],[3740,49,3865,51],[3740,51,3865,53],[3741,8,3866,12],[3741,16,3866,20,"_a"],[3741,18,3866,22],[3741,19,3866,23,"label"],[3741,24,3866,28],[3742,10,3867,16],[3742,15,3867,21],[3742,16,3867,22],[3743,12,3868,20,"verifier"],[3743,20,3868,28],[3743,23,3868,31],[3743,27,3868,35,"RecaptchaEnterpriseVerifier"],[3743,54,3868,62],[3743,55,3868,63,"auth"],[3743,59,3868,67],[3743,60,3868,68],[3744,12,3869,20,"_a"],[3744,14,3869,22],[3744,15,3869,23,"label"],[3744,20,3869,28],[3744,23,3869,31],[3744,24,3869,32],[3745,10,3870,16],[3745,15,3870,21],[3745,16,3870,22],[3746,12,3871,20,"_a"],[3746,14,3871,22],[3746,15,3871,23,"trys"],[3746,19,3871,27],[3746,20,3871,28,"push"],[3746,24,3871,32],[3746,25,3871,33],[3746,26,3871,34],[3746,27,3871,35],[3746,29,3871,37],[3746,30,3871,38],[3746,33,3871,42],[3746,34,3871,43],[3746,35,3871,44],[3746,36,3871,45],[3747,12,3872,20],[3747,19,3872,27],[3747,20,3872,28],[3747,21,3872,29],[3747,22,3872,30],[3747,33,3872,41,"verifier"],[3747,41,3872,49],[3747,42,3872,50,"verify"],[3747,48,3872,56],[3747,49,3872,57,"action"],[3747,55,3872,63],[3747,56,3872,64],[3747,57,3872,65],[3748,10,3873,16],[3748,15,3873,21],[3748,16,3873,22],[3749,12,3874,20,"captchaResponse"],[3749,27,3874,35],[3749,30,3874,38,"_a"],[3749,32,3874,40],[3749,33,3874,41,"sent"],[3749,37,3874,45],[3749,38,3874,46],[3749,39,3874,47],[3750,12,3875,20],[3750,19,3875,27],[3750,20,3875,28],[3750,21,3875,29],[3750,22,3875,30],[3750,33,3875,41],[3750,34,3875,42],[3750,35,3875,43],[3751,10,3876,16],[3751,15,3876,21],[3751,16,3876,22],[3752,12,3877,20,"_a"],[3752,14,3877,22],[3752,15,3877,23,"sent"],[3752,19,3877,27],[3752,20,3877,28],[3752,21,3877,29],[3753,12,3878,20],[3753,19,3878,27],[3753,20,3878,28],[3753,21,3878,29],[3753,22,3878,30],[3753,33,3878,41,"verifier"],[3753,41,3878,49],[3753,42,3878,50,"verify"],[3753,48,3878,56],[3753,49,3878,57,"action"],[3753,55,3878,63],[3753,57,3878,65],[3753,61,3878,69],[3753,62,3878,70],[3753,63,3878,71],[3754,10,3879,16],[3754,15,3879,21],[3754,16,3879,22],[3755,12,3880,20,"captchaResponse"],[3755,27,3880,35],[3755,30,3880,38,"_a"],[3755,32,3880,40],[3755,33,3880,41,"sent"],[3755,37,3880,45],[3755,38,3880,46],[3755,39,3880,47],[3756,12,3881,20],[3756,19,3881,27],[3756,20,3881,28],[3756,21,3881,29],[3756,22,3881,30],[3756,33,3881,41],[3756,34,3881,42],[3756,35,3881,43],[3757,10,3882,16],[3757,15,3882,21],[3757,16,3882,22],[3758,12,3883,20,"newRequest"],[3758,22,3883,30],[3758,25,3883,33,"tslib"],[3758,30,3883,38],[3758,31,3883,39,"__assign"],[3758,39,3883,47],[3758,40,3883,48],[3758,41,3883,49],[3758,42,3883,50],[3758,44,3883,52,"request"],[3758,51,3883,59],[3758,52,3883,60],[3759,12,3884,20],[3759,16,3884,24],[3759,17,3884,25,"captchaResp"],[3759,28,3884,36],[3759,30,3884,38],[3760,14,3885,24,"Object"],[3760,20,3885,30],[3760,21,3885,31,"assign"],[3760,27,3885,37],[3760,28,3885,38,"newRequest"],[3760,38,3885,48],[3760,40,3885,50],[3761,16,3885,52,"captchaResponse"],[3761,31,3885,67],[3761,33,3885,69,"captchaResponse"],[3762,14,3885,85],[3762,15,3885,86],[3762,16,3885,87],[3763,12,3886,20],[3763,13,3886,21],[3763,19,3887,25],[3764,14,3888,24,"Object"],[3764,20,3888,30],[3764,21,3888,31,"assign"],[3764,27,3888,37],[3764,28,3888,38,"newRequest"],[3764,38,3888,48],[3764,40,3888,50],[3765,16,3888,52],[3765,29,3888,65],[3765,31,3888,67,"captchaResponse"],[3766,14,3888,83],[3766,15,3888,84],[3766,16,3888,85],[3767,12,3889,20],[3768,12,3890,20,"Object"],[3768,18,3890,26],[3768,19,3890,27,"assign"],[3768,25,3890,33],[3768,26,3890,34,"newRequest"],[3768,36,3890,44],[3768,38,3890,46],[3769,14,3890,48],[3769,26,3890,60],[3769,28,3890,62],[3769,45,3890,79],[3769,46,3890,80],[3770,12,3890,110],[3770,13,3890,111],[3770,14,3890,112],[3771,12,3891,20,"Object"],[3771,18,3891,26],[3771,19,3891,27,"assign"],[3771,25,3891,33],[3771,26,3891,34,"newRequest"],[3771,36,3891,44],[3771,38,3891,46],[3772,14,3892,24],[3772,32,3892,42],[3772,34,3892,44],[3772,56,3892,66],[3772,57,3892,67],[3773,12,3893,20],[3773,13,3893,21],[3773,14,3893,22],[3774,12,3894,20],[3774,19,3894,27],[3774,20,3894,28],[3774,21,3894,29],[3774,22,3894,30],[3774,34,3894,42,"newRequest"],[3774,44,3894,52],[3774,45,3894,53],[3775,8,3895,12],[3776,6,3896,8],[3776,7,3896,9],[3776,8,3896,10],[3777,4,3897,4],[3777,5,3897,5],[3777,6,3897,6],[3778,2,3898,0],[3779,2,3899,0],[3779,11,3899,9,"handleRecaptchaFlow"],[3779,30,3899,28,"handleRecaptchaFlow"],[3779,31,3899,29,"authInstance"],[3779,43,3899,41],[3779,45,3899,43,"request"],[3779,52,3899,50],[3779,54,3899,52,"actionName"],[3779,64,3899,62],[3779,66,3899,64,"actionMethod"],[3779,78,3899,76],[3779,80,3899,78],[3780,4,3900,4],[3780,8,3900,8,"_a"],[3780,10,3900,10],[3781,4,3901,4],[3781,11,3901,11,"tslib"],[3781,16,3901,16],[3781,17,3901,17,"__awaiter"],[3781,26,3901,26],[3781,27,3901,27],[3781,31,3901,31],[3781,33,3901,31,"undefined"],[3781,42,3901,31],[3781,44,3901,31,"undefined"],[3781,53,3901,31],[3781,55,3901,49],[3781,67,3901,61],[3782,6,3902,8],[3782,10,3902,12,"requestWithRecaptcha"],[3782,30,3902,32],[3783,6,3903,8],[3783,10,3903,12,"_this"],[3783,15,3903,17],[3783,18,3903,20],[3783,22,3903,24],[3784,6,3904,8],[3784,13,3904,15,"tslib"],[3784,18,3904,20],[3784,19,3904,21,"__generator"],[3784,30,3904,32],[3784,31,3904,33],[3784,35,3904,37],[3784,37,3904,39],[3784,47,3904,49,"_b"],[3784,49,3904,51],[3784,51,3904,53],[3785,8,3905,12],[3785,16,3905,20,"_b"],[3785,18,3905,22],[3785,19,3905,23,"label"],[3785,24,3905,28],[3786,10,3906,16],[3786,15,3906,21],[3786,16,3906,22],[3787,12,3907,20],[3787,16,3907,24],[3787,18,3907,26],[3787,19,3907,27,"_a"],[3787,21,3907,29],[3787,24,3907,32,"authInstance"],[3787,36,3907,44],[3787,37,3908,25,"_getRecaptchaConfig"],[3787,56,3908,44],[3787,57,3908,45],[3787,58,3908,46],[3787,64,3908,52],[3787,68,3908,56],[3787,72,3908,60,"_a"],[3787,74,3908,62],[3787,79,3908,62,"undefined"],[3787,88,3908,73],[3787,91,3908,73,"undefined"],[3787,100,3908,73],[3787,103,3908,85,"_a"],[3787,105,3908,87],[3787,106,3908,88,"isProviderEnabled"],[3787,123,3908,105],[3787,124,3908,106],[3787,149,3908,131],[3787,150,3908,132],[3787,197,3908,179],[3787,198,3908,180],[3787,199,3908,181],[3787,201,3908,183],[3787,208,3908,190],[3787,209,3908,191],[3787,210,3908,192],[3787,211,3908,193],[3787,222,3908,204],[3787,223,3908,205],[3787,224,3908,206],[3788,12,3909,20],[3788,19,3909,27],[3788,20,3909,28],[3788,21,3909,29],[3788,22,3909,30],[3788,33,3909,41,"injectRecaptchaFields"],[3788,54,3909,62],[3788,55,3909,63,"authInstance"],[3788,67,3909,75],[3788,69,3909,77,"request"],[3788,76,3909,84],[3788,78,3909,86,"actionName"],[3788,88,3909,96],[3788,90,3909,98,"actionName"],[3788,100,3909,108],[3788,105,3909,113],[3788,117,3909,125],[3788,118,3909,126],[3788,156,3909,164],[3788,157,3909,165],[3788,158,3909,166],[3789,10,3910,16],[3789,15,3910,21],[3789,16,3910,22],[3790,12,3911,20,"requestWithRecaptcha"],[3790,32,3911,40],[3790,35,3911,43,"_b"],[3790,37,3911,45],[3790,38,3911,46,"sent"],[3790,42,3911,50],[3790,43,3911,51],[3790,44,3911,52],[3791,12,3912,20],[3791,19,3912,27],[3791,20,3912,28],[3791,21,3912,29],[3791,22,3912,30],[3791,34,3912,42,"actionMethod"],[3791,46,3912,54],[3791,47,3912,55,"authInstance"],[3791,59,3912,67],[3791,61,3912,69,"requestWithRecaptcha"],[3791,81,3912,89],[3791,82,3912,90],[3791,83,3912,91],[3792,10,3913,16],[3792,15,3913,21],[3792,16,3913,22],[3793,12,3913,24],[3793,19,3913,31],[3793,20,3913,32],[3793,21,3913,33],[3793,22,3913,34],[3793,34,3913,46,"actionMethod"],[3793,46,3913,58],[3793,47,3913,59,"authInstance"],[3793,59,3913,71],[3793,61,3913,73,"request"],[3793,68,3913,80],[3793,69,3913,81],[3793,70,3913,82,"catch"],[3793,75,3913,87],[3793,76,3913,88],[3793,86,3913,98,"error"],[3793,91,3913,103],[3793,93,3913,105],[3794,14,3913,107],[3794,21,3913,114,"tslib"],[3794,26,3913,119],[3794,27,3913,120,"__awaiter"],[3794,36,3913,129],[3794,37,3913,130,"_this"],[3794,42,3913,135],[3794,44,3913,135,"undefined"],[3794,53,3913,135],[3794,55,3913,135,"undefined"],[3794,64,3913,135],[3794,66,3913,153],[3794,78,3913,165],[3795,16,3914,24],[3795,20,3914,28,"requestWithRecaptcha"],[3795,40,3914,48],[3796,16,3915,24],[3796,23,3915,31,"tslib"],[3796,28,3915,36],[3796,29,3915,37,"__generator"],[3796,40,3915,48],[3796,41,3915,49],[3796,45,3915,53],[3796,47,3915,55],[3796,57,3915,65,"_a"],[3796,59,3915,67],[3796,61,3915,69],[3797,18,3916,28],[3797,26,3916,36,"_a"],[3797,28,3916,38],[3797,29,3916,39,"label"],[3797,34,3916,44],[3798,20,3917,32],[3798,25,3917,37],[3798,26,3917,38],[3799,22,3918,36],[3799,26,3918,40],[3799,28,3918,42,"error"],[3799,33,3918,47],[3799,34,3918,48,"code"],[3799,38,3918,52],[3799,43,3918,57],[3799,50,3918,64],[3799,51,3918,65,"concat"],[3799,57,3918,71],[3799,58,3918,72],[3799,83,3918,97],[3799,84,3918,98],[3799,127,3918,141],[3799,128,3918,142],[3799,129,3918,143],[3799,131,3918,145],[3799,138,3918,152],[3799,139,3918,153],[3799,140,3918,154],[3799,141,3918,155],[3799,152,3918,166],[3799,153,3918,167],[3799,154,3918,168],[3800,22,3919,36,"console"],[3800,29,3919,43],[3800,30,3919,44,"log"],[3800,33,3919,47],[3800,34,3919,48],[3800,36,3919,50],[3800,37,3919,51,"concat"],[3800,43,3919,57],[3800,44,3919,58,"actionName"],[3800,54,3919,68],[3800,56,3919,70],[3800,182,3919,196],[3800,183,3919,197],[3800,184,3919,198],[3801,22,3920,36],[3801,29,3920,43],[3801,30,3920,44],[3801,31,3920,45],[3801,32,3920,46],[3801,43,3920,57,"injectRecaptchaFields"],[3801,64,3920,78],[3801,65,3920,79,"authInstance"],[3801,77,3920,91],[3801,79,3920,93,"request"],[3801,86,3920,100],[3801,88,3920,102,"actionName"],[3801,98,3920,112],[3801,100,3920,114,"actionName"],[3801,110,3920,124],[3801,115,3920,129],[3801,127,3920,141],[3801,128,3920,142],[3801,166,3920,180],[3801,167,3920,181],[3801,168,3920,182],[3802,20,3921,32],[3802,25,3921,37],[3802,26,3921,38],[3803,22,3922,36,"requestWithRecaptcha"],[3803,42,3922,56],[3803,45,3922,59,"_a"],[3803,47,3922,61],[3803,48,3922,62,"sent"],[3803,52,3922,66],[3803,53,3922,67],[3803,54,3922,68],[3804,22,3923,36],[3804,29,3923,43],[3804,30,3923,44],[3804,31,3923,45],[3804,32,3923,46],[3804,44,3923,58,"actionMethod"],[3804,56,3923,70],[3804,57,3923,71,"authInstance"],[3804,69,3923,83],[3804,71,3923,85,"requestWithRecaptcha"],[3804,91,3923,105],[3804,92,3923,106],[3804,93,3923,107],[3805,20,3924,32],[3805,25,3924,37],[3805,26,3924,38],[3806,22,3924,40],[3806,29,3924,47],[3806,30,3924,48],[3806,31,3924,49],[3806,32,3924,50],[3806,44,3924,62,"Promise"],[3806,51,3924,69],[3806,52,3924,70,"reject"],[3806,58,3924,76],[3806,59,3924,77,"error"],[3806,64,3924,82],[3806,65,3924,83],[3806,66,3924,84],[3807,18,3925,28],[3808,16,3926,24],[3808,17,3926,25],[3808,18,3926,26],[3809,14,3927,20],[3809,15,3927,21],[3809,16,3927,22],[3810,12,3927,24],[3810,13,3927,25],[3810,14,3927,26],[3810,15,3927,27],[3811,8,3928,12],[3812,6,3929,8],[3812,7,3929,9],[3812,8,3929,10],[3813,4,3930,4],[3813,5,3930,5],[3813,6,3930,6],[3814,2,3931,0],[3815,2,3932,0],[3815,11,3932,9,"_initializeRecaptchaConfig"],[3815,37,3932,35,"_initializeRecaptchaConfig"],[3815,38,3932,36,"auth"],[3815,42,3932,40],[3815,44,3932,42],[3816,4,3933,4],[3816,11,3933,11,"tslib"],[3816,16,3933,16],[3816,17,3933,17,"__awaiter"],[3816,26,3933,26],[3816,27,3933,27],[3816,31,3933,31],[3816,33,3933,31,"undefined"],[3816,42,3933,31],[3816,44,3933,31,"undefined"],[3816,53,3933,31],[3816,55,3933,49],[3816,67,3933,61],[3817,6,3934,8],[3817,10,3934,12,"authInternal"],[3817,22,3934,24],[3817,24,3934,26,"response"],[3817,32,3934,34],[3817,34,3934,36,"config"],[3817,40,3934,42],[3817,42,3934,44,"verifier"],[3817,50,3934,52],[3818,6,3935,8],[3818,13,3935,15,"tslib"],[3818,18,3935,20],[3818,19,3935,21,"__generator"],[3818,30,3935,32],[3818,31,3935,33],[3818,35,3935,37],[3818,37,3935,39],[3818,47,3935,49,"_a"],[3818,49,3935,51],[3818,51,3935,53],[3819,8,3936,12],[3819,16,3936,20,"_a"],[3819,18,3936,22],[3819,19,3936,23,"label"],[3819,24,3936,28],[3820,10,3937,16],[3820,15,3937,21],[3820,16,3937,22],[3821,12,3938,20,"authInternal"],[3821,24,3938,32],[3821,27,3938,35,"_castAuth"],[3821,36,3938,44],[3821,37,3938,45,"auth"],[3821,41,3938,49],[3821,42,3938,50],[3822,12,3939,20],[3822,19,3939,27],[3822,20,3939,28],[3822,21,3939,29],[3822,22,3939,30],[3822,33,3939,41,"getRecaptchaConfig"],[3822,51,3939,59],[3822,52,3939,60,"authInternal"],[3822,64,3939,72],[3822,66,3939,74],[3823,14,3940,28,"clientType"],[3823,24,3940,38],[3823,26,3940,40],[3823,43,3940,57],[3823,44,3940,58],[3824,14,3941,28,"version"],[3824,21,3941,35],[3824,23,3941,37],[3824,45,3941,59],[3824,46,3941,60],[3825,12,3942,24],[3825,13,3942,25],[3825,14,3942,26],[3825,15,3942,27],[3826,10,3943,16],[3826,15,3943,21],[3826,16,3943,22],[3827,12,3944,20,"response"],[3827,20,3944,28],[3827,23,3944,31,"_a"],[3827,25,3944,33],[3827,26,3944,34,"sent"],[3827,30,3944,38],[3827,31,3944,39],[3827,32,3944,40],[3828,12,3945,20,"config"],[3828,18,3945,26],[3828,21,3945,29],[3828,25,3945,33,"RecaptchaConfig"],[3828,40,3945,48],[3828,41,3945,49,"response"],[3828,49,3945,57],[3828,50,3945,58],[3829,12,3946,20],[3829,16,3946,24,"authInternal"],[3829,28,3946,36],[3829,29,3946,37,"tenantId"],[3829,37,3946,45],[3829,41,3946,49],[3829,45,3946,53],[3829,47,3946,55],[3830,14,3947,24,"authInternal"],[3830,26,3947,36],[3830,27,3947,37,"_agentRecaptchaConfig"],[3830,48,3947,58],[3830,51,3947,61,"config"],[3830,57,3947,67],[3831,12,3948,20],[3831,13,3948,21],[3831,19,3949,25],[3832,14,3950,24,"authInternal"],[3832,26,3950,36],[3832,27,3950,37,"_tenantRecaptchaConfigs"],[3832,50,3950,60],[3832,51,3950,61,"authInternal"],[3832,63,3950,73],[3832,64,3950,74,"tenantId"],[3832,72,3950,82],[3832,73,3950,83],[3832,76,3950,86,"config"],[3832,82,3950,92],[3833,12,3951,20],[3834,12,3952,20],[3834,16,3952,24,"config"],[3834,22,3952,30],[3834,23,3952,31,"isProviderEnabled"],[3834,40,3952,48],[3834,41,3952,49],[3834,66,3952,74],[3834,67,3952,75],[3834,114,3952,122],[3834,115,3952,123],[3834,117,3952,125],[3835,14,3953,24,"verifier"],[3835,22,3953,32],[3835,25,3953,35],[3835,29,3953,39,"RecaptchaEnterpriseVerifier"],[3835,56,3953,66],[3835,57,3953,67,"authInternal"],[3835,69,3953,79],[3835,70,3953,80],[3836,14,3954,24],[3836,19,3954,29,"verifier"],[3836,27,3954,37],[3836,28,3954,38,"verify"],[3836,34,3954,44],[3836,35,3954,45],[3836,36,3954,46],[3837,12,3955,20],[3838,12,3956,20],[3838,19,3956,27],[3838,20,3956,28],[3838,21,3956,29],[3838,22,3956,30],[3838,33,3956,41],[3839,8,3957,12],[3840,6,3958,8],[3840,7,3958,9],[3840,8,3958,10],[3841,4,3959,4],[3841,5,3959,5],[3841,6,3959,6],[3842,2,3960,0],[3844,2,3962,0],[3845,0,3963,0],[3846,0,3964,0],[3847,0,3965,0],[3848,0,3966,0],[3849,0,3967,0],[3850,0,3968,0],[3851,0,3969,0],[3852,0,3970,0],[3853,0,3971,0],[3854,0,3972,0],[3855,0,3973,0],[3856,0,3974,0],[3857,0,3975,0],[3858,0,3976,0],[3859,0,3977,0],[3860,2,3978,0],[3861,0,3979,0],[3862,0,3980,0],[3863,0,3981,0],[3864,0,3982,0],[3865,0,3983,0],[3866,0,3984,0],[3867,0,3985,0],[3868,0,3986,0],[3869,0,3987,0],[3870,0,3988,0],[3871,0,3989,0],[3872,0,3990,0],[3873,0,3991,0],[3874,0,3992,0],[3875,0,3993,0],[3876,0,3994,0],[3877,0,3995,0],[3878,0,3996,0],[3879,0,3997,0],[3880,0,3998,0],[3881,0,3999,0],[3882,0,4000,0],[3883,0,4001,0],[3884,0,4002,0],[3885,2,4003,0],[3885,11,4003,9,"initializeAuth"],[3885,25,4003,23,"initializeAuth"],[3885,26,4003,24,"app$1"],[3885,31,4003,29],[3885,33,4003,31,"deps"],[3885,37,4003,35],[3885,39,4003,37],[3886,4,4004,4],[3886,8,4004,8,"provider"],[3886,16,4004,16],[3886,19,4004,19,"app"],[3886,22,4004,22],[3886,23,4004,23,"_getProvider"],[3886,35,4004,35],[3886,36,4004,36,"app$1"],[3886,41,4004,41],[3886,43,4004,43],[3886,49,4004,49],[3886,50,4004,50],[3887,4,4005,4],[3887,8,4005,8,"provider"],[3887,16,4005,16],[3887,17,4005,17,"isInitialized"],[3887,30,4005,30],[3887,31,4005,31],[3887,32,4005,32],[3887,34,4005,34],[3888,6,4006,8],[3888,10,4006,12,"auth_1"],[3888,16,4006,18],[3888,19,4006,21,"provider"],[3888,27,4006,29],[3888,28,4006,30,"getImmediate"],[3888,40,4006,42],[3888,41,4006,43],[3888,42,4006,44],[3889,6,4007,8],[3889,10,4007,12,"initialOptions"],[3889,24,4007,26],[3889,27,4007,29,"provider"],[3889,35,4007,37],[3889,36,4007,38,"getOptions"],[3889,46,4007,48],[3889,47,4007,49],[3889,48,4007,50],[3890,6,4008,8],[3890,10,4008,12,"util"],[3890,14,4008,16],[3890,15,4008,17,"deepEqual"],[3890,24,4008,26],[3890,25,4008,27,"initialOptions"],[3890,39,4008,41],[3890,41,4008,43,"deps"],[3890,45,4008,47],[3890,50,4008,52],[3890,54,4008,56],[3890,58,4008,60,"deps"],[3890,62,4008,64],[3890,67,4008,64,"undefined"],[3890,76,4008,75],[3890,79,4008,78,"deps"],[3890,83,4008,82],[3890,86,4008,85],[3890,87,4008,86],[3890,88,4008,87],[3890,89,4008,88],[3890,91,4008,90],[3891,8,4009,12],[3891,15,4009,19,"auth_1"],[3891,21,4009,25],[3892,6,4010,8],[3892,7,4010,9],[3892,13,4011,13],[3893,8,4012,12,"_fail"],[3893,13,4012,17],[3893,14,4012,18,"auth_1"],[3893,20,4012,24],[3893,22,4012,26],[3893,43,4012,47],[3893,44,4012,48],[3893,83,4012,87],[3893,84,4012,88],[3894,6,4013,8],[3895,4,4014,4],[3896,4,4015,4],[3896,8,4015,8,"auth"],[3896,12,4015,12],[3896,15,4015,15,"provider"],[3896,23,4015,23],[3896,24,4015,24,"initialize"],[3896,34,4015,34],[3896,35,4015,35],[3897,6,4015,37,"options"],[3897,13,4015,44],[3897,15,4015,46,"deps"],[3898,4,4015,51],[3898,5,4015,52],[3898,6,4015,53],[3899,4,4016,4],[3899,11,4016,11,"auth"],[3899,15,4016,15],[3900,2,4017,0],[3901,2,4018,0],[3901,11,4018,9,"_initializeAuthInstance"],[3901,34,4018,32,"_initializeAuthInstance"],[3901,35,4018,33,"auth"],[3901,39,4018,37],[3901,41,4018,39,"deps"],[3901,45,4018,43],[3901,47,4018,45],[3902,4,4019,4],[3902,8,4019,8,"persistence"],[3902,19,4019,19],[3902,22,4019,22],[3902,23,4019,23,"deps"],[3902,27,4019,27],[3902,32,4019,32],[3902,36,4019,36],[3902,40,4019,40,"deps"],[3902,44,4019,44],[3902,49,4019,44,"undefined"],[3902,58,4019,55],[3902,61,4019,55,"undefined"],[3902,70,4019,55],[3902,73,4019,67,"deps"],[3902,77,4019,71],[3902,78,4019,72,"persistence"],[3902,89,4019,83],[3902,94,4019,88],[3902,96,4019,90],[3903,4,4020,4],[3903,8,4020,8,"hierarchy"],[3903,17,4020,17],[3903,20,4020,20],[3903,21,4020,21,"Array"],[3903,26,4020,26],[3903,27,4020,27,"isArray"],[3903,34,4020,34],[3903,35,4020,35,"persistence"],[3903,46,4020,46],[3903,47,4020,47],[3903,50,4020,50,"persistence"],[3903,61,4020,61],[3903,64,4020,64],[3903,65,4020,65,"persistence"],[3903,76,4020,76],[3903,77,4020,77],[3903,79,4020,79,"map"],[3903,82,4020,82],[3903,83,4020,83,"_getInstance"],[3903,95,4020,95],[3903,96,4020,96],[3904,4,4021,4],[3904,8,4021,8,"deps"],[3904,12,4021,12],[3904,17,4021,17],[3904,21,4021,21],[3904,25,4021,25,"deps"],[3904,29,4021,29],[3904,34,4021,29,"undefined"],[3904,43,4021,40],[3904,46,4021,40,"undefined"],[3904,55,4021,40],[3904,58,4021,52,"deps"],[3904,62,4021,56],[3904,63,4021,57,"errorMap"],[3904,71,4021,65],[3904,73,4021,67],[3905,6,4022,8,"auth"],[3905,10,4022,12],[3905,11,4022,13,"_updateErrorMap"],[3905,26,4022,28],[3905,27,4022,29,"deps"],[3905,31,4022,33],[3905,32,4022,34,"errorMap"],[3905,40,4022,42],[3905,41,4022,43],[3906,4,4023,4],[3907,4,4024,4],[3908,4,4025,4],[3909,4,4026,4],[3910,4,4027,4,"auth"],[3910,8,4027,8],[3910,9,4027,9,"_initializeWithPersistence"],[3910,35,4027,35],[3910,36,4027,36,"hierarchy"],[3910,45,4027,45],[3910,47,4027,47,"deps"],[3910,51,4027,51],[3910,56,4027,56],[3910,60,4027,60],[3910,64,4027,64,"deps"],[3910,68,4027,68],[3910,73,4027,68,"undefined"],[3910,82,4027,79],[3910,85,4027,79,"undefined"],[3910,94,4027,79],[3910,97,4027,91,"deps"],[3910,101,4027,95],[3910,102,4027,96,"popupRedirectResolver"],[3910,123,4027,117],[3910,124,4027,118],[3911,2,4028,0],[3913,2,4030,0],[3914,0,4031,0],[3915,0,4032,0],[3916,0,4033,0],[3917,0,4034,0],[3918,0,4035,0],[3919,0,4036,0],[3920,0,4037,0],[3921,0,4038,0],[3922,0,4039,0],[3923,0,4040,0],[3924,0,4041,0],[3925,0,4042,0],[3926,0,4043,0],[3927,0,4044,0],[3928,0,4045,0],[3929,0,4046,0],[3930,0,4047,0],[3931,0,4048,0],[3932,0,4049,0],[3933,0,4050,0],[3934,0,4051,0],[3935,2,4052,0],[3935,11,4052,9,"connectAuthEmulator"],[3935,30,4052,28,"connectAuthEmulator"],[3935,31,4052,29,"auth"],[3935,35,4052,33],[3935,37,4052,35,"url"],[3935,40,4052,38],[3935,42,4052,40,"options"],[3935,49,4052,47],[3935,51,4052,49],[3936,4,4053,4],[3936,8,4053,8,"authInternal"],[3936,20,4053,20],[3936,23,4053,23,"_castAuth"],[3936,32,4053,32],[3936,33,4053,33,"auth"],[3936,37,4053,37],[3936,38,4053,38],[3937,4,4054,4,"_assert"],[3937,11,4054,11],[3937,12,4054,12,"authInternal"],[3937,24,4054,24],[3937,25,4054,25,"_canInitEmulator"],[3937,41,4054,41],[3937,43,4054,43,"authInternal"],[3937,55,4054,55],[3937,57,4054,57],[3937,81,4054,81],[3937,82,4054,82],[3937,124,4054,124],[3937,125,4054,125],[3938,4,4055,4,"_assert"],[3938,11,4055,11],[3938,12,4055,12],[3938,26,4055,26],[3938,27,4055,27,"test"],[3938,31,4055,31],[3938,32,4055,32,"url"],[3938,35,4055,35],[3938,36,4055,36],[3938,38,4055,38,"authInternal"],[3938,50,4055,50],[3938,52,4055,52],[3938,77,4055,77],[3938,78,4055,78],[3938,121,4055,121],[3938,122,4055,122],[3939,4,4056,4],[3939,8,4056,8,"disableWarnings"],[3939,23,4056,23],[3939,26,4056,26],[3939,27,4056,27],[3939,29,4056,29,"options"],[3939,36,4056,36],[3939,41,4056,41],[3939,45,4056,45],[3939,49,4056,49,"options"],[3939,56,4056,56],[3939,61,4056,56,"undefined"],[3939,70,4056,67],[3939,73,4056,67,"undefined"],[3939,82,4056,67],[3939,85,4056,79,"options"],[3939,92,4056,86],[3939,93,4056,87,"disableWarnings"],[3939,108,4056,102],[3939,109,4056,103],[3940,4,4057,4],[3940,8,4057,8,"protocol"],[3940,16,4057,16],[3940,19,4057,19,"extractProtocol"],[3940,34,4057,34],[3940,35,4057,35,"url"],[3940,38,4057,38],[3940,39,4057,39],[3941,4,4058,4],[3941,8,4058,8,"_a"],[3941,10,4058,10],[3941,13,4058,13,"extractHostAndPort"],[3941,31,4058,31],[3941,32,4058,32,"url"],[3941,35,4058,35],[3941,36,4058,36],[3942,6,4058,38,"host"],[3942,10,4058,42],[3942,13,4058,45,"_a"],[3942,15,4058,47],[3942,16,4058,48,"host"],[3942,20,4058,52],[3943,6,4058,54,"port"],[3943,10,4058,58],[3943,13,4058,61,"_a"],[3943,15,4058,63],[3943,16,4058,64,"port"],[3943,20,4058,68],[3944,4,4059,4],[3944,8,4059,8,"portStr"],[3944,15,4059,15],[3944,18,4059,18,"port"],[3944,22,4059,22],[3944,27,4059,27],[3944,31,4059,31],[3944,34,4059,34],[3944,36,4059,36],[3944,39,4059,39],[3944,42,4059,42],[3944,43,4059,43,"concat"],[3944,49,4059,49],[3944,50,4059,50,"port"],[3944,54,4059,54],[3944,55,4059,55],[3945,4,4060,4],[3946,4,4061,4,"authInternal"],[3946,16,4061,16],[3946,17,4061,17,"config"],[3946,23,4061,23],[3946,24,4061,24,"emulator"],[3946,32,4061,32],[3946,35,4061,35],[3947,6,4061,37,"url"],[3947,9,4061,40],[3947,11,4061,42],[3947,13,4061,44],[3947,14,4061,45,"concat"],[3947,20,4061,51],[3947,21,4061,52,"protocol"],[3947,29,4061,60],[3947,31,4061,62],[3947,35,4061,66],[3947,36,4061,67],[3947,37,4061,68,"concat"],[3947,43,4061,74],[3947,44,4061,75,"host"],[3947,48,4061,79],[3947,49,4061,80],[3947,50,4061,81,"concat"],[3947,56,4061,87],[3947,57,4061,88,"portStr"],[3947,64,4061,95],[3947,66,4061,97],[3947,69,4061,100],[3948,4,4061,102],[3948,5,4061,103],[3949,4,4062,4,"authInternal"],[3949,16,4062,16],[3949,17,4062,17,"settings"],[3949,25,4062,25],[3949,26,4062,26,"appVerificationDisabledForTesting"],[3949,59,4062,59],[3949,62,4062,62],[3949,66,4062,66],[3950,4,4063,4,"authInternal"],[3950,16,4063,16],[3950,17,4063,17,"emulatorConfig"],[3950,31,4063,31],[3950,34,4063,34,"Object"],[3950,40,4063,40],[3950,41,4063,41,"freeze"],[3950,47,4063,47],[3950,48,4063,48],[3951,6,4064,8,"host"],[3951,10,4064,12],[3951,12,4064,14,"host"],[3951,16,4064,18],[3952,6,4065,8,"port"],[3952,10,4065,12],[3952,12,4065,14,"port"],[3952,16,4065,18],[3953,6,4066,8,"protocol"],[3953,14,4066,16],[3953,16,4066,18,"protocol"],[3953,24,4066,26],[3953,25,4066,27,"replace"],[3953,32,4066,34],[3953,33,4066,35],[3953,36,4066,38],[3953,38,4066,40],[3953,40,4066,42],[3953,41,4066,43],[3954,6,4067,8,"options"],[3954,13,4067,15],[3954,15,4067,17,"Object"],[3954,21,4067,23],[3954,22,4067,24,"freeze"],[3954,28,4067,30],[3954,29,4067,31],[3955,8,4067,33,"disableWarnings"],[3955,23,4067,48],[3955,25,4067,50,"disableWarnings"],[3956,6,4067,66],[3956,7,4067,67],[3957,4,4068,4],[3957,5,4068,5],[3957,6,4068,6],[3958,4,4069,4],[3958,8,4069,8],[3958,9,4069,9,"disableWarnings"],[3958,24,4069,24],[3958,26,4069,26],[3959,6,4070,8,"emitEmulatorWarning"],[3959,25,4070,27],[3959,26,4070,28],[3959,27,4070,29],[3960,4,4071,4],[3961,2,4072,0],[3962,2,4073,0],[3962,11,4073,9,"extractProtocol"],[3962,26,4073,24,"extractProtocol"],[3962,27,4073,25,"url"],[3962,30,4073,28],[3962,32,4073,30],[3963,4,4074,4],[3963,8,4074,8,"protocolEnd"],[3963,19,4074,19],[3963,22,4074,22,"url"],[3963,25,4074,25],[3963,26,4074,26,"indexOf"],[3963,33,4074,33],[3963,34,4074,34],[3963,37,4074,37],[3963,38,4074,38],[3964,4,4075,4],[3964,11,4075,11,"protocolEnd"],[3964,22,4075,22],[3964,25,4075,25],[3964,26,4075,26],[3964,29,4075,29],[3964,31,4075,31],[3964,34,4075,34,"url"],[3964,37,4075,37],[3964,38,4075,38,"substr"],[3964,44,4075,44],[3964,45,4075,45],[3964,46,4075,46],[3964,48,4075,48,"protocolEnd"],[3964,59,4075,59],[3964,62,4075,62],[3964,63,4075,63],[3964,64,4075,64],[3965,2,4076,0],[3966,2,4077,0],[3966,11,4077,9,"extractHostAndPort"],[3966,29,4077,27,"extractHostAndPort"],[3966,30,4077,28,"url"],[3966,33,4077,31],[3966,35,4077,33],[3967,4,4078,4],[3967,8,4078,8,"protocol"],[3967,16,4078,16],[3967,19,4078,19,"extractProtocol"],[3967,34,4078,34],[3967,35,4078,35,"url"],[3967,38,4078,38],[3967,39,4078,39],[3968,4,4079,4],[3968,8,4079,8,"authority"],[3968,17,4079,17],[3968,20,4079,20],[3968,38,4079,38],[3968,39,4079,39,"exec"],[3968,43,4079,43],[3968,44,4079,44,"url"],[3968,47,4079,47],[3968,48,4079,48,"substr"],[3968,54,4079,54],[3968,55,4079,55,"protocol"],[3968,63,4079,63],[3968,64,4079,64,"length"],[3968,70,4079,70],[3968,71,4079,71],[3968,72,4079,72],[3968,73,4079,73],[3968,74,4079,74],[3969,4,4080,4],[3969,8,4080,8],[3969,9,4080,9,"authority"],[3969,18,4080,18],[3969,20,4080,20],[3970,6,4081,8],[3970,13,4081,15],[3971,8,4081,17,"host"],[3971,12,4081,21],[3971,14,4081,23],[3971,16,4081,25],[3972,8,4081,27,"port"],[3972,12,4081,31],[3972,14,4081,33],[3973,6,4081,38],[3973,7,4081,39],[3974,4,4082,4],[3975,4,4083,4],[3975,8,4083,8,"hostAndPort"],[3975,19,4083,19],[3975,22,4083,22,"authority"],[3975,31,4083,31],[3975,32,4083,32],[3975,33,4083,33],[3975,34,4083,34],[3975,35,4083,35,"split"],[3975,40,4083,40],[3975,41,4083,41],[3975,44,4083,44],[3975,45,4083,45],[3975,46,4083,46,"pop"],[3975,49,4083,49],[3975,50,4083,50],[3975,51,4083,51],[3975,55,4083,55],[3975,57,4083,57],[3975,58,4083,58],[3975,59,4083,59],[3976,4,4084,4],[3976,8,4084,8,"bracketedIPv6"],[3976,21,4084,21],[3976,24,4084,24],[3976,44,4084,44],[3976,45,4084,45,"exec"],[3976,49,4084,49],[3976,50,4084,50,"hostAndPort"],[3976,61,4084,61],[3976,62,4084,62],[3977,4,4085,4],[3977,8,4085,8,"bracketedIPv6"],[3977,21,4085,21],[3977,23,4085,23],[3978,6,4086,8],[3978,10,4086,12,"host"],[3978,14,4086,16],[3978,17,4086,19,"bracketedIPv6"],[3978,30,4086,32],[3978,31,4086,33],[3978,32,4086,34],[3978,33,4086,35],[3979,6,4087,8],[3979,13,4087,15],[3980,8,4087,17,"host"],[3980,12,4087,21],[3980,14,4087,23,"host"],[3980,18,4087,27],[3981,8,4087,29,"port"],[3981,12,4087,33],[3981,14,4087,35,"parsePort"],[3981,23,4087,44],[3981,24,4087,45,"hostAndPort"],[3981,35,4087,56],[3981,36,4087,57,"substr"],[3981,42,4087,63],[3981,43,4087,64,"host"],[3981,47,4087,68],[3981,48,4087,69,"length"],[3981,54,4087,75],[3981,57,4087,78],[3981,58,4087,79],[3981,59,4087,80],[3982,6,4087,82],[3982,7,4087,83],[3983,4,4088,4],[3983,5,4088,5],[3983,11,4089,9],[3984,6,4090,8],[3984,10,4090,12,"_a"],[3984,12,4090,14],[3984,15,4090,17,"hostAndPort"],[3984,26,4090,28],[3984,27,4090,29,"split"],[3984,32,4090,34],[3984,33,4090,35],[3984,36,4090,38],[3984,37,4090,39],[3985,8,4090,41,"host"],[3985,12,4090,45],[3985,15,4090,48,"_a"],[3985,17,4090,50],[3985,18,4090,51],[3985,19,4090,52],[3985,20,4090,53],[3986,8,4090,55,"port"],[3986,12,4090,59],[3986,15,4090,62,"_a"],[3986,17,4090,64],[3986,18,4090,65],[3986,19,4090,66],[3986,20,4090,67],[3987,6,4091,8],[3987,13,4091,15],[3988,8,4091,17,"host"],[3988,12,4091,21],[3988,14,4091,23,"host"],[3988,18,4091,27],[3989,8,4091,29,"port"],[3989,12,4091,33],[3989,14,4091,35,"parsePort"],[3989,23,4091,44],[3989,24,4091,45,"port"],[3989,28,4091,49],[3990,6,4091,51],[3990,7,4091,52],[3991,4,4092,4],[3992,2,4093,0],[3993,2,4094,0],[3993,11,4094,9,"parsePort"],[3993,20,4094,18,"parsePort"],[3993,21,4094,19,"portStr"],[3993,28,4094,26],[3993,30,4094,28],[3994,4,4095,4],[3994,8,4095,8],[3994,9,4095,9,"portStr"],[3994,16,4095,16],[3994,18,4095,18],[3995,6,4096,8],[3995,13,4096,15],[3995,17,4096,19],[3996,4,4097,4],[3997,4,4098,4],[3997,8,4098,8,"port"],[3997,12,4098,12],[3997,15,4098,15,"Number"],[3997,21,4098,21],[3997,22,4098,22,"portStr"],[3997,29,4098,29],[3997,30,4098,30],[3998,4,4099,4],[3998,8,4099,8,"isNaN"],[3998,13,4099,13],[3998,14,4099,14,"port"],[3998,18,4099,18],[3998,19,4099,19],[3998,21,4099,21],[3999,6,4100,8],[3999,13,4100,15],[3999,17,4100,19],[4000,4,4101,4],[4001,4,4102,4],[4001,11,4102,11,"port"],[4001,15,4102,15],[4002,2,4103,0],[4003,2,4104,0],[4003,11,4104,9,"emitEmulatorWarning"],[4003,30,4104,28,"emitEmulatorWarning"],[4003,31,4104,28],[4003,33,4104,31],[4004,4,4105,4],[4004,13,4105,13,"attachBanner"],[4004,25,4105,25,"attachBanner"],[4004,26,4105,25],[4004,28,4105,28],[4005,6,4106,8],[4005,10,4106,12,"el"],[4005,12,4106,14],[4005,15,4106,17,"document"],[4005,23,4106,25],[4005,24,4106,26,"createElement"],[4005,37,4106,39],[4005,38,4106,40],[4005,41,4106,43],[4005,42,4106,44],[4006,6,4107,8],[4006,10,4107,12,"sty"],[4006,13,4107,15],[4006,16,4107,18,"el"],[4006,18,4107,20],[4006,19,4107,21,"style"],[4006,24,4107,26],[4007,6,4108,8,"el"],[4007,8,4108,10],[4007,9,4108,11,"innerText"],[4007,18,4108,20],[4007,21,4109,12],[4007,88,4109,79],[4008,6,4110,8,"sty"],[4008,9,4110,11],[4008,10,4110,12,"position"],[4008,18,4110,20],[4008,21,4110,23],[4008,28,4110,30],[4009,6,4111,8,"sty"],[4009,9,4111,11],[4009,10,4111,12,"width"],[4009,15,4111,17],[4009,18,4111,20],[4009,24,4111,26],[4010,6,4112,8,"sty"],[4010,9,4112,11],[4010,10,4112,12,"backgroundColor"],[4010,25,4112,27],[4010,28,4112,30],[4010,37,4112,39],[4011,6,4113,8,"sty"],[4011,9,4113,11],[4011,10,4113,12,"border"],[4011,16,4113,18],[4011,19,4113,21],[4011,39,4113,41],[4012,6,4114,8,"sty"],[4012,9,4114,11],[4012,10,4114,12,"color"],[4012,15,4114,17],[4012,18,4114,20],[4012,27,4114,29],[4013,6,4115,8,"sty"],[4013,9,4115,11],[4013,10,4115,12,"bottom"],[4013,16,4115,18],[4013,19,4115,21],[4013,24,4115,26],[4014,6,4116,8,"sty"],[4014,9,4116,11],[4014,10,4116,12,"left"],[4014,14,4116,16],[4014,17,4116,19],[4014,22,4116,24],[4015,6,4117,8,"sty"],[4015,9,4117,11],[4015,10,4117,12,"margin"],[4015,16,4117,18],[4015,19,4117,21],[4015,24,4117,26],[4016,6,4118,8,"sty"],[4016,9,4118,11],[4016,10,4118,12,"zIndex"],[4016,16,4118,18],[4016,19,4118,21],[4016,26,4118,28],[4017,6,4119,8,"sty"],[4017,9,4119,11],[4017,10,4119,12,"textAlign"],[4017,19,4119,21],[4017,22,4119,24],[4017,30,4119,32],[4018,6,4120,8,"el"],[4018,8,4120,10],[4018,9,4120,11,"classList"],[4018,18,4120,20],[4018,19,4120,21,"add"],[4018,22,4120,24],[4018,23,4120,25],[4018,50,4120,52],[4018,51,4120,53],[4019,6,4121,8,"document"],[4019,14,4121,16],[4019,15,4121,17,"body"],[4019,19,4121,21],[4019,20,4121,22,"appendChild"],[4019,31,4121,33],[4019,32,4121,34,"el"],[4019,34,4121,36],[4019,35,4121,37],[4020,4,4122,4],[4021,4,4123,4],[4021,8,4123,8],[4021,15,4123,15,"console"],[4021,22,4123,22],[4021,27,4123,27],[4021,38,4123,38],[4021,42,4123,42],[4021,49,4123,49,"console"],[4021,56,4123,56],[4021,57,4123,57,"info"],[4021,61,4123,61],[4021,66,4123,66],[4021,76,4123,76],[4021,78,4123,78],[4022,6,4124,8,"console"],[4022,13,4124,15],[4022,14,4124,16,"info"],[4022,18,4124,20],[4022,145,4126,38],[4022,146,4126,39],[4023,4,4127,4],[4024,4,4128,4],[4024,8,4128,8],[4024,15,4128,15,"window"],[4024,21,4128,21],[4024,26,4128,26],[4024,37,4128,37],[4024,41,4128,41],[4024,48,4128,48,"document"],[4024,56,4128,56],[4024,61,4128,61],[4024,72,4128,72],[4024,74,4128,74],[4025,6,4129,8],[4025,10,4129,12,"document"],[4025,18,4129,20],[4025,19,4129,21,"readyState"],[4025,29,4129,31],[4025,34,4129,36],[4025,43,4129,45],[4025,45,4129,47],[4026,8,4130,12,"window"],[4026,14,4130,18],[4026,15,4130,19,"addEventListener"],[4026,31,4130,35],[4026,32,4130,36],[4026,50,4130,54],[4026,52,4130,56,"attachBanner"],[4026,64,4130,68],[4026,65,4130,69],[4027,6,4131,8],[4027,7,4131,9],[4027,13,4132,13],[4028,8,4133,12,"attachBanner"],[4028,20,4133,24],[4028,21,4133,25],[4028,22,4133,26],[4029,6,4134,8],[4030,4,4135,4],[4031,2,4136,0],[4033,2,4138,0],[4034,0,4139,0],[4035,0,4140,0],[4036,0,4141,0],[4037,0,4142,0],[4038,0,4143,0],[4039,0,4144,0],[4040,0,4145,0],[4041,0,4146,0],[4042,0,4147,0],[4043,0,4148,0],[4044,0,4149,0],[4045,0,4150,0],[4046,0,4151,0],[4047,0,4152,0],[4048,0,4153,0],[4049,2,4154,0],[4050,0,4155,0],[4051,0,4156,0],[4052,0,4157,0],[4053,0,4158,0],[4054,0,4159,0],[4055,0,4160,0],[4056,0,4161,0],[4057,2,4162,0],[4057,6,4162,4,"AuthCredential"],[4057,20,4162,18],[4057,23,4162,21],[4057,36,4162,36],[4057,48,4162,48],[4058,4,4163,4],[4059,4,4164,4],[4059,13,4164,13,"AuthCredential"],[4059,27,4164,27,"AuthCredential"],[4060,4,4165,4],[4061,0,4166,0],[4062,0,4167,0],[4063,0,4168,0],[4064,0,4169,0],[4065,0,4170,0],[4066,4,4171,4,"providerId"],[4066,14,4171,14],[4067,4,4172,4],[4068,0,4173,0],[4069,0,4174,0],[4070,0,4175,0],[4071,0,4176,0],[4072,0,4177,0],[4073,0,4178,0],[4074,0,4179,0],[4075,4,4180,4,"signInMethod"],[4075,16,4180,16],[4075,18,4180,18],[4076,6,4181,8],[4076,10,4181,12],[4076,11,4181,13,"providerId"],[4076,21,4181,23],[4076,24,4181,26,"providerId"],[4076,34,4181,36],[4077,6,4182,8],[4077,10,4182,12],[4077,11,4182,13,"signInMethod"],[4077,23,4182,25],[4077,26,4182,28,"signInMethod"],[4077,38,4182,40],[4078,4,4183,4],[4079,4,4184,4],[4080,0,4185,0],[4081,0,4186,0],[4082,0,4187,0],[4083,0,4188,0],[4084,4,4189,4,"AuthCredential"],[4084,18,4189,18],[4084,19,4189,19,"prototype"],[4084,28,4189,28],[4084,29,4189,29,"toJSON"],[4084,35,4189,35],[4084,38,4189,38],[4084,50,4189,50],[4085,6,4190,8],[4085,13,4190,15,"debugFail"],[4085,22,4190,24],[4085,23,4190,25],[4085,40,4190,42],[4085,41,4190,43],[4086,4,4191,4],[4086,5,4191,5],[4087,4,4192,4],[4088,4,4193,4,"AuthCredential"],[4088,18,4193,18],[4088,19,4193,19,"prototype"],[4088,28,4193,28],[4088,29,4193,29,"_getIdTokenResponse"],[4088,48,4193,48],[4088,51,4193,51],[4088,61,4193,61,"_auth"],[4088,66,4193,66],[4088,68,4193,68],[4089,6,4194,8],[4089,13,4194,15,"debugFail"],[4089,22,4194,24],[4089,23,4194,25],[4089,40,4194,42],[4089,41,4194,43],[4090,4,4195,4],[4090,5,4195,5],[4091,4,4196,4],[4092,4,4197,4,"AuthCredential"],[4092,18,4197,18],[4092,19,4197,19,"prototype"],[4092,28,4197,28],[4092,29,4197,29,"_linkToIdToken"],[4092,43,4197,43],[4092,46,4197,46],[4092,56,4197,56,"_auth"],[4092,61,4197,61],[4092,63,4197,63,"_idToken"],[4092,71,4197,71],[4092,73,4197,73],[4093,6,4198,8],[4093,13,4198,15,"debugFail"],[4093,22,4198,24],[4093,23,4198,25],[4093,40,4198,42],[4093,41,4198,43],[4094,4,4199,4],[4094,5,4199,5],[4095,4,4200,4],[4096,4,4201,4,"AuthCredential"],[4096,18,4201,18],[4096,19,4201,19,"prototype"],[4096,28,4201,28],[4096,29,4201,29,"_getReauthenticationResolver"],[4096,57,4201,57],[4096,60,4201,60],[4096,70,4201,70,"_auth"],[4096,75,4201,75],[4096,77,4201,77],[4097,6,4202,8],[4097,13,4202,15,"debugFail"],[4097,22,4202,24],[4097,23,4202,25],[4097,40,4202,42],[4097,41,4202,43],[4098,4,4203,4],[4098,5,4203,5],[4099,4,4204,4],[4099,11,4204,11,"AuthCredential"],[4099,25,4204,25],[4100,2,4205,0],[4100,3,4205,1],[4100,4,4205,2],[4100,5,4205,4],[4102,2,4207,0],[4103,0,4208,0],[4104,0,4209,0],[4105,0,4210,0],[4106,0,4211,0],[4107,0,4212,0],[4108,0,4213,0],[4109,0,4214,0],[4110,0,4215,0],[4111,0,4216,0],[4112,0,4217,0],[4113,0,4218,0],[4114,0,4219,0],[4115,0,4220,0],[4116,0,4221,0],[4117,0,4222,0],[4118,2,4223,0],[4118,11,4223,9,"resetPassword"],[4118,24,4223,22,"resetPassword"],[4118,25,4223,23,"auth"],[4118,29,4223,27],[4118,31,4223,29,"request"],[4118,38,4223,36],[4118,40,4223,38],[4119,4,4224,4],[4119,11,4224,11,"tslib"],[4119,16,4224,16],[4119,17,4224,17,"__awaiter"],[4119,26,4224,26],[4119,27,4224,27],[4119,31,4224,31],[4119,33,4224,31,"undefined"],[4119,42,4224,31],[4119,44,4224,31,"undefined"],[4119,53,4224,31],[4119,55,4224,49],[4119,67,4224,61],[4120,6,4225,8],[4120,13,4225,15,"tslib"],[4120,18,4225,20],[4120,19,4225,21,"__generator"],[4120,30,4225,32],[4120,31,4225,33],[4120,35,4225,37],[4120,37,4225,39],[4120,47,4225,49,"_a"],[4120,49,4225,51],[4120,51,4225,53],[4121,8,4226,12],[4121,15,4226,19],[4121,16,4226,20],[4121,17,4226,21],[4121,18,4226,22],[4121,30,4226,34,"_performApiRequest"],[4121,48,4226,52],[4121,49,4226,53,"auth"],[4121,53,4226,57],[4121,55,4226,59],[4121,61,4226,65],[4121,62,4226,66],[4121,85,4226,89],[4121,113,4226,117],[4121,114,4226,118],[4121,145,4226,149,"_addTidIfNecessary"],[4121,163,4226,167],[4121,164,4226,168,"auth"],[4121,168,4226,172],[4121,170,4226,174,"request"],[4121,177,4226,181],[4121,178,4226,182],[4121,179,4226,183],[4121,180,4226,184],[4122,6,4227,8],[4122,7,4227,9],[4122,8,4227,10],[4123,4,4228,4],[4123,5,4228,5],[4123,6,4228,6],[4124,2,4229,0],[4125,2,4230,0],[4125,11,4230,9,"updateEmailPassword"],[4125,30,4230,28,"updateEmailPassword"],[4125,31,4230,29,"auth"],[4125,35,4230,33],[4125,37,4230,35,"request"],[4125,44,4230,42],[4125,46,4230,44],[4126,4,4231,4],[4126,11,4231,11,"tslib"],[4126,16,4231,16],[4126,17,4231,17,"__awaiter"],[4126,26,4231,26],[4126,27,4231,27],[4126,31,4231,31],[4126,33,4231,31,"undefined"],[4126,42,4231,31],[4126,44,4231,31,"undefined"],[4126,53,4231,31],[4126,55,4231,49],[4126,67,4231,61],[4127,6,4232,8],[4127,13,4232,15,"tslib"],[4127,18,4232,20],[4127,19,4232,21,"__generator"],[4127,30,4232,32],[4127,31,4232,33],[4127,35,4232,37],[4127,37,4232,39],[4127,47,4232,49,"_a"],[4127,49,4232,51],[4127,51,4232,53],[4128,8,4233,12],[4128,15,4233,19],[4128,16,4233,20],[4128,17,4233,21],[4128,18,4233,22],[4128,30,4233,34,"_performApiRequest"],[4128,48,4233,52],[4128,49,4233,53,"auth"],[4128,53,4233,57],[4128,55,4233,59],[4128,61,4233,65],[4128,62,4233,66],[4128,85,4233,89],[4128,106,4233,110],[4128,107,4233,111],[4128,140,4233,144,"request"],[4128,147,4233,151],[4128,148,4233,152],[4128,149,4233,153],[4129,6,4234,8],[4129,7,4234,9],[4129,8,4234,10],[4130,4,4235,4],[4130,5,4235,5],[4130,6,4235,6],[4131,2,4236,0],[4132,2,4237,0],[4133,2,4238,0],[4134,2,4239,0],[4134,11,4239,9,"linkEmailPassword"],[4134,28,4239,26,"linkEmailPassword"],[4134,29,4239,27,"auth"],[4134,33,4239,31],[4134,35,4239,33,"request"],[4134,42,4239,40],[4134,44,4239,42],[4135,4,4240,4],[4135,11,4240,11,"tslib"],[4135,16,4240,16],[4135,17,4240,17,"__awaiter"],[4135,26,4240,26],[4135,27,4240,27],[4135,31,4240,31],[4135,33,4240,31,"undefined"],[4135,42,4240,31],[4135,44,4240,31,"undefined"],[4135,53,4240,31],[4135,55,4240,49],[4135,67,4240,61],[4136,6,4241,8],[4136,13,4241,15,"tslib"],[4136,18,4241,20],[4136,19,4241,21,"__generator"],[4136,30,4241,32],[4136,31,4241,33],[4136,35,4241,37],[4136,37,4241,39],[4136,47,4241,49,"_a"],[4136,49,4241,51],[4136,51,4241,53],[4137,8,4242,12],[4137,15,4242,19],[4137,16,4242,20],[4137,17,4242,21],[4137,18,4242,22],[4137,30,4242,34,"_performApiRequest"],[4137,48,4242,52],[4137,49,4242,53,"auth"],[4137,53,4242,57],[4137,55,4242,59],[4137,61,4242,65],[4137,62,4242,66],[4137,85,4242,89],[4137,106,4242,110],[4137,107,4242,111],[4137,131,4242,135,"request"],[4137,138,4242,142],[4137,139,4242,143],[4137,140,4242,144],[4138,6,4243,8],[4138,7,4243,9],[4138,8,4243,10],[4139,4,4244,4],[4139,5,4244,5],[4139,6,4244,6],[4140,2,4245,0],[4141,2,4246,0],[4141,11,4246,9,"applyActionCode$1"],[4141,28,4246,26,"applyActionCode$1"],[4141,29,4246,27,"auth"],[4141,33,4246,31],[4141,35,4246,33,"request"],[4141,42,4246,40],[4141,44,4246,42],[4142,4,4247,4],[4142,11,4247,11,"tslib"],[4142,16,4247,16],[4142,17,4247,17,"__awaiter"],[4142,26,4247,26],[4142,27,4247,27],[4142,31,4247,31],[4142,33,4247,31,"undefined"],[4142,42,4247,31],[4142,44,4247,31,"undefined"],[4142,53,4247,31],[4142,55,4247,49],[4142,67,4247,61],[4143,6,4248,8],[4143,13,4248,15,"tslib"],[4143,18,4248,20],[4143,19,4248,21,"__generator"],[4143,30,4248,32],[4143,31,4248,33],[4143,35,4248,37],[4143,37,4248,39],[4143,47,4248,49,"_a"],[4143,49,4248,51],[4143,51,4248,53],[4144,8,4249,12],[4144,15,4249,19],[4144,16,4249,20],[4144,17,4249,21],[4144,18,4249,22],[4144,30,4249,34,"_performApiRequest"],[4144,48,4249,52],[4144,49,4249,53,"auth"],[4144,53,4249,57],[4144,55,4249,59],[4144,61,4249,65],[4144,62,4249,66],[4144,85,4249,89],[4144,106,4249,110],[4144,107,4249,111],[4144,140,4249,144,"_addTidIfNecessary"],[4144,158,4249,162],[4144,159,4249,163,"auth"],[4144,163,4249,167],[4144,165,4249,169,"request"],[4144,172,4249,176],[4144,173,4249,177],[4144,174,4249,178],[4144,175,4249,179],[4145,6,4250,8],[4145,7,4250,9],[4145,8,4250,10],[4146,4,4251,4],[4146,5,4251,5],[4146,6,4251,6],[4147,2,4252,0],[4149,2,4254,0],[4150,0,4255,0],[4151,0,4256,0],[4152,0,4257,0],[4153,0,4258,0],[4154,0,4259,0],[4155,0,4260,0],[4156,0,4261,0],[4157,0,4262,0],[4158,0,4263,0],[4159,0,4264,0],[4160,0,4265,0],[4161,0,4266,0],[4162,0,4267,0],[4163,0,4268,0],[4164,0,4269,0],[4165,2,4270,0],[4165,11,4270,9,"signInWithPassword"],[4165,29,4270,27,"signInWithPassword"],[4165,30,4270,28,"auth"],[4165,34,4270,32],[4165,36,4270,34,"request"],[4165,43,4270,41],[4165,45,4270,43],[4166,4,4271,4],[4166,11,4271,11,"tslib"],[4166,16,4271,16],[4166,17,4271,17,"__awaiter"],[4166,26,4271,26],[4166,27,4271,27],[4166,31,4271,31],[4166,33,4271,31,"undefined"],[4166,42,4271,31],[4166,44,4271,31,"undefined"],[4166,53,4271,31],[4166,55,4271,49],[4166,67,4271,61],[4167,6,4272,8],[4167,13,4272,15,"tslib"],[4167,18,4272,20],[4167,19,4272,21,"__generator"],[4167,30,4272,32],[4167,31,4272,33],[4167,35,4272,37],[4167,37,4272,39],[4167,47,4272,49,"_a"],[4167,49,4272,51],[4167,51,4272,53],[4168,8,4273,12],[4168,15,4273,19],[4168,16,4273,20],[4168,17,4273,21],[4168,18,4273,22],[4168,30,4273,34,"_performSignInRequest"],[4168,51,4273,55],[4168,52,4273,56,"auth"],[4168,56,4273,60],[4168,58,4273,62],[4168,64,4273,68],[4168,65,4273,69],[4168,88,4273,92],[4168,121,4273,125],[4168,122,4273,126],[4168,160,4273,164,"_addTidIfNecessary"],[4168,178,4273,182],[4168,179,4273,183,"auth"],[4168,183,4273,187],[4168,185,4273,189,"request"],[4168,192,4273,196],[4168,193,4273,197],[4168,194,4273,198],[4168,195,4273,199],[4169,6,4274,8],[4169,7,4274,9],[4169,8,4274,10],[4170,4,4275,4],[4170,5,4275,5],[4170,6,4275,6],[4171,2,4276,0],[4172,2,4277,0],[4172,11,4277,9,"sendOobCode"],[4172,22,4277,20,"sendOobCode"],[4172,23,4277,21,"auth"],[4172,27,4277,25],[4172,29,4277,27,"request"],[4172,36,4277,34],[4172,38,4277,36],[4173,4,4278,4],[4173,11,4278,11,"tslib"],[4173,16,4278,16],[4173,17,4278,17,"__awaiter"],[4173,26,4278,26],[4173,27,4278,27],[4173,31,4278,31],[4173,33,4278,31,"undefined"],[4173,42,4278,31],[4173,44,4278,31,"undefined"],[4173,53,4278,31],[4173,55,4278,49],[4173,67,4278,61],[4174,6,4279,8],[4174,13,4279,15,"tslib"],[4174,18,4279,20],[4174,19,4279,21,"__generator"],[4174,30,4279,32],[4174,31,4279,33],[4174,35,4279,37],[4174,37,4279,39],[4174,47,4279,49,"_a"],[4174,49,4279,51],[4174,51,4279,53],[4175,8,4280,12],[4175,15,4280,19],[4175,16,4280,20],[4175,17,4280,21],[4175,18,4280,22],[4175,30,4280,34,"_performApiRequest"],[4175,48,4280,52],[4175,49,4280,53,"auth"],[4175,53,4280,57],[4175,55,4280,59],[4175,61,4280,65],[4175,62,4280,66],[4175,85,4280,89],[4175,111,4280,115],[4175,112,4280,116],[4175,142,4280,146,"_addTidIfNecessary"],[4175,160,4280,164],[4175,161,4280,165,"auth"],[4175,165,4280,169],[4175,167,4280,171,"request"],[4175,174,4280,178],[4175,175,4280,179],[4175,176,4280,180],[4175,177,4280,181],[4176,6,4281,8],[4176,7,4281,9],[4176,8,4281,10],[4177,4,4282,4],[4177,5,4282,5],[4177,6,4282,6],[4178,2,4283,0],[4179,2,4284,0],[4179,11,4284,9,"sendEmailVerification$1"],[4179,34,4284,32,"sendEmailVerification$1"],[4179,35,4284,33,"auth"],[4179,39,4284,37],[4179,41,4284,39,"request"],[4179,48,4284,46],[4179,50,4284,48],[4180,4,4285,4],[4180,11,4285,11,"tslib"],[4180,16,4285,16],[4180,17,4285,17,"__awaiter"],[4180,26,4285,26],[4180,27,4285,27],[4180,31,4285,31],[4180,33,4285,31,"undefined"],[4180,42,4285,31],[4180,44,4285,31,"undefined"],[4180,53,4285,31],[4180,55,4285,49],[4180,67,4285,61],[4181,6,4286,8],[4181,13,4286,15,"tslib"],[4181,18,4286,20],[4181,19,4286,21,"__generator"],[4181,30,4286,32],[4181,31,4286,33],[4181,35,4286,37],[4181,37,4286,39],[4181,47,4286,49,"_a"],[4181,49,4286,51],[4181,51,4286,53],[4182,8,4287,12],[4182,15,4287,19],[4182,16,4287,20],[4182,17,4287,21],[4182,18,4287,22],[4182,30,4287,34,"sendOobCode"],[4182,41,4287,45],[4182,42,4287,46,"auth"],[4182,46,4287,50],[4182,48,4287,52,"request"],[4182,55,4287,59],[4182,56,4287,60],[4182,57,4287,61],[4183,6,4288,8],[4183,7,4288,9],[4183,8,4288,10],[4184,4,4289,4],[4184,5,4289,5],[4184,6,4289,6],[4185,2,4290,0],[4186,2,4291,0],[4186,11,4291,9,"sendPasswordResetEmail$1"],[4186,35,4291,33,"sendPasswordResetEmail$1"],[4186,36,4291,34,"auth"],[4186,40,4291,38],[4186,42,4291,40,"request"],[4186,49,4291,47],[4186,51,4291,49],[4187,4,4292,4],[4187,11,4292,11,"tslib"],[4187,16,4292,16],[4187,17,4292,17,"__awaiter"],[4187,26,4292,26],[4187,27,4292,27],[4187,31,4292,31],[4187,33,4292,31,"undefined"],[4187,42,4292,31],[4187,44,4292,31,"undefined"],[4187,53,4292,31],[4187,55,4292,49],[4187,67,4292,61],[4188,6,4293,8],[4188,13,4293,15,"tslib"],[4188,18,4293,20],[4188,19,4293,21,"__generator"],[4188,30,4293,32],[4188,31,4293,33],[4188,35,4293,37],[4188,37,4293,39],[4188,47,4293,49,"_a"],[4188,49,4293,51],[4188,51,4293,53],[4189,8,4294,12],[4189,15,4294,19],[4189,16,4294,20],[4189,17,4294,21],[4189,18,4294,22],[4189,30,4294,34,"sendOobCode"],[4189,41,4294,45],[4189,42,4294,46,"auth"],[4189,46,4294,50],[4189,48,4294,52,"request"],[4189,55,4294,59],[4189,56,4294,60],[4189,57,4294,61],[4190,6,4295,8],[4190,7,4295,9],[4190,8,4295,10],[4191,4,4296,4],[4191,5,4296,5],[4191,6,4296,6],[4192,2,4297,0],[4193,2,4298,0],[4193,11,4298,9,"sendSignInLinkToEmail$1"],[4193,34,4298,32,"sendSignInLinkToEmail$1"],[4193,35,4298,33,"auth"],[4193,39,4298,37],[4193,41,4298,39,"request"],[4193,48,4298,46],[4193,50,4298,48],[4194,4,4299,4],[4194,11,4299,11,"tslib"],[4194,16,4299,16],[4194,17,4299,17,"__awaiter"],[4194,26,4299,26],[4194,27,4299,27],[4194,31,4299,31],[4194,33,4299,31,"undefined"],[4194,42,4299,31],[4194,44,4299,31,"undefined"],[4194,53,4299,31],[4194,55,4299,49],[4194,67,4299,61],[4195,6,4300,8],[4195,13,4300,15,"tslib"],[4195,18,4300,20],[4195,19,4300,21,"__generator"],[4195,30,4300,32],[4195,31,4300,33],[4195,35,4300,37],[4195,37,4300,39],[4195,47,4300,49,"_a"],[4195,49,4300,51],[4195,51,4300,53],[4196,8,4301,12],[4196,15,4301,19],[4196,16,4301,20],[4196,17,4301,21],[4196,18,4301,22],[4196,30,4301,34,"sendOobCode"],[4196,41,4301,45],[4196,42,4301,46,"auth"],[4196,46,4301,50],[4196,48,4301,52,"request"],[4196,55,4301,59],[4196,56,4301,60],[4196,57,4301,61],[4197,6,4302,8],[4197,7,4302,9],[4197,8,4302,10],[4198,4,4303,4],[4198,5,4303,5],[4198,6,4303,6],[4199,2,4304,0],[4200,2,4305,0],[4200,11,4305,9,"verifyAndChangeEmail"],[4200,31,4305,29,"verifyAndChangeEmail"],[4200,32,4305,30,"auth"],[4200,36,4305,34],[4200,38,4305,36,"request"],[4200,45,4305,43],[4200,47,4305,45],[4201,4,4306,4],[4201,11,4306,11,"tslib"],[4201,16,4306,16],[4201,17,4306,17,"__awaiter"],[4201,26,4306,26],[4201,27,4306,27],[4201,31,4306,31],[4201,33,4306,31,"undefined"],[4201,42,4306,31],[4201,44,4306,31,"undefined"],[4201,53,4306,31],[4201,55,4306,49],[4201,67,4306,61],[4202,6,4307,8],[4202,13,4307,15,"tslib"],[4202,18,4307,20],[4202,19,4307,21,"__generator"],[4202,30,4307,32],[4202,31,4307,33],[4202,35,4307,37],[4202,37,4307,39],[4202,47,4307,49,"_a"],[4202,49,4307,51],[4202,51,4307,53],[4203,8,4308,12],[4203,15,4308,19],[4203,16,4308,20],[4203,17,4308,21],[4203,18,4308,22],[4203,30,4308,34,"sendOobCode"],[4203,41,4308,45],[4203,42,4308,46,"auth"],[4203,46,4308,50],[4203,48,4308,52,"request"],[4203,55,4308,59],[4203,56,4308,60],[4203,57,4308,61],[4204,6,4309,8],[4204,7,4309,9],[4204,8,4309,10],[4205,4,4310,4],[4205,5,4310,5],[4205,6,4310,6],[4206,2,4311,0],[4208,2,4313,0],[4209,0,4314,0],[4210,0,4315,0],[4211,0,4316,0],[4212,0,4317,0],[4213,0,4318,0],[4214,0,4319,0],[4215,0,4320,0],[4216,0,4321,0],[4217,0,4322,0],[4218,0,4323,0],[4219,0,4324,0],[4220,0,4325,0],[4221,0,4326,0],[4222,0,4327,0],[4223,0,4328,0],[4224,2,4329,0],[4224,11,4329,9,"signInWithEmailLink$1"],[4224,32,4329,30,"signInWithEmailLink$1"],[4224,33,4329,31,"auth"],[4224,37,4329,35],[4224,39,4329,37,"request"],[4224,46,4329,44],[4224,48,4329,46],[4225,4,4330,4],[4225,11,4330,11,"tslib"],[4225,16,4330,16],[4225,17,4330,17,"__awaiter"],[4225,26,4330,26],[4225,27,4330,27],[4225,31,4330,31],[4225,33,4330,31,"undefined"],[4225,42,4330,31],[4225,44,4330,31,"undefined"],[4225,53,4330,31],[4225,55,4330,49],[4225,67,4330,61],[4226,6,4331,8],[4226,13,4331,15,"tslib"],[4226,18,4331,20],[4226,19,4331,21,"__generator"],[4226,30,4331,32],[4226,31,4331,33],[4226,35,4331,37],[4226,37,4331,39],[4226,47,4331,49,"_a"],[4226,49,4331,51],[4226,51,4331,53],[4227,8,4332,12],[4227,15,4332,19],[4227,16,4332,20],[4227,17,4332,21],[4227,18,4332,22],[4227,30,4332,34,"_performSignInRequest"],[4227,51,4332,55],[4227,52,4332,56,"auth"],[4227,56,4332,60],[4227,58,4332,62],[4227,64,4332,68],[4227,65,4332,69],[4227,88,4332,92],[4227,122,4332,126],[4227,123,4332,127],[4227,163,4332,167,"_addTidIfNecessary"],[4227,181,4332,185],[4227,182,4332,186,"auth"],[4227,186,4332,190],[4227,188,4332,192,"request"],[4227,195,4332,199],[4227,196,4332,200],[4227,197,4332,201],[4227,198,4332,202],[4228,6,4333,8],[4228,7,4333,9],[4228,8,4333,10],[4229,4,4334,4],[4229,5,4334,5],[4229,6,4334,6],[4230,2,4335,0],[4231,2,4336,0],[4231,11,4336,9,"signInWithEmailLinkForLinking"],[4231,40,4336,38,"signInWithEmailLinkForLinking"],[4231,41,4336,39,"auth"],[4231,45,4336,43],[4231,47,4336,45,"request"],[4231,54,4336,52],[4231,56,4336,54],[4232,4,4337,4],[4232,11,4337,11,"tslib"],[4232,16,4337,16],[4232,17,4337,17,"__awaiter"],[4232,26,4337,26],[4232,27,4337,27],[4232,31,4337,31],[4232,33,4337,31,"undefined"],[4232,42,4337,31],[4232,44,4337,31,"undefined"],[4232,53,4337,31],[4232,55,4337,49],[4232,67,4337,61],[4233,6,4338,8],[4233,13,4338,15,"tslib"],[4233,18,4338,20],[4233,19,4338,21,"__generator"],[4233,30,4338,32],[4233,31,4338,33],[4233,35,4338,37],[4233,37,4338,39],[4233,47,4338,49,"_a"],[4233,49,4338,51],[4233,51,4338,53],[4234,8,4339,12],[4234,15,4339,19],[4234,16,4339,20],[4234,17,4339,21],[4234,18,4339,22],[4234,30,4339,34,"_performSignInRequest"],[4234,51,4339,55],[4234,52,4339,56,"auth"],[4234,56,4339,60],[4234,58,4339,62],[4234,64,4339,68],[4234,65,4339,69],[4234,88,4339,92],[4234,122,4339,126],[4234,123,4339,127],[4234,163,4339,167,"_addTidIfNecessary"],[4234,181,4339,185],[4234,182,4339,186,"auth"],[4234,186,4339,190],[4234,188,4339,192,"request"],[4234,195,4339,199],[4234,196,4339,200],[4234,197,4339,201],[4234,198,4339,202],[4235,6,4340,8],[4235,7,4340,9],[4235,8,4340,10],[4236,4,4341,4],[4236,5,4341,5],[4236,6,4341,6],[4237,2,4342,0],[4239,2,4344,0],[4240,0,4345,0],[4241,0,4346,0],[4242,0,4347,0],[4243,0,4348,0],[4244,0,4349,0],[4245,0,4350,0],[4246,0,4351,0],[4247,0,4352,0],[4248,0,4353,0],[4249,0,4354,0],[4250,0,4355,0],[4251,0,4356,0],[4252,0,4357,0],[4253,0,4358,0],[4254,0,4359,0],[4255,2,4360,0],[4256,0,4361,0],[4257,0,4362,0],[4258,0,4363,0],[4259,0,4364,0],[4260,0,4365,0],[4261,0,4366,0],[4262,0,4367,0],[4263,0,4368,0],[4264,0,4369,0],[4265,2,4370,0],[4265,6,4370,4,"EmailAuthCredential"],[4265,25,4370,23],[4265,28,4370,26],[4265,41,4370,41],[4265,51,4370,51,"_super"],[4265,57,4370,57],[4265,59,4370,59],[4266,4,4371,4,"tslib"],[4266,9,4371,9],[4266,10,4371,10,"__extends"],[4266,19,4371,19],[4266,20,4371,20,"EmailAuthCredential"],[4266,39,4371,39],[4266,41,4371,41,"_super"],[4266,47,4371,47],[4266,48,4371,48],[4267,4,4372,4],[4268,4,4373,4],[4268,13,4373,13,"EmailAuthCredential"],[4268,32,4373,32,"EmailAuthCredential"],[4268,33,4374,4],[4269,4,4375,4,"_email"],[4269,10,4375,10],[4269,12,4376,4],[4270,4,4377,4,"_password"],[4270,13,4377,13],[4270,15,4377,15,"signInMethod"],[4270,27,4377,27],[4270,29,4378,4],[4271,4,4379,4,"_tenantId"],[4271,13,4379,13],[4271,15,4379,15],[4272,6,4380,8],[4272,10,4380,12,"_tenantId"],[4272,19,4380,21],[4272,24,4380,21,"undefined"],[4272,33,4380,32],[4272,35,4380,34],[4273,8,4380,36,"_tenantId"],[4273,17,4380,45],[4273,20,4380,48],[4273,24,4380,52],[4274,6,4380,54],[4275,6,4381,8],[4275,10,4381,12,"_this"],[4275,15,4381,17],[4275,18,4381,20,"_super"],[4275,24,4381,26],[4275,25,4381,27,"call"],[4275,29,4381,31],[4275,30,4381,32],[4275,34,4381,36],[4275,36,4381,38],[4275,46,4381,48],[4275,47,4381,49],[4275,74,4381,76,"signInMethod"],[4275,86,4381,88],[4275,87,4381,89],[4275,91,4381,93],[4275,95,4381,97],[4276,6,4382,8,"_this"],[4276,11,4382,13],[4276,12,4382,14,"_email"],[4276,18,4382,20],[4276,21,4382,23,"_email"],[4276,27,4382,29],[4277,6,4383,8,"_this"],[4277,11,4383,13],[4277,12,4383,14,"_password"],[4277,21,4383,23],[4277,24,4383,26,"_password"],[4277,33,4383,35],[4278,6,4384,8,"_this"],[4278,11,4384,13],[4278,12,4384,14,"_tenantId"],[4278,21,4384,23],[4278,24,4384,26,"_tenantId"],[4278,33,4384,35],[4279,6,4385,8],[4279,13,4385,15,"_this"],[4279,18,4385,20],[4280,4,4386,4],[4281,4,4387,4],[4282,4,4388,4,"EmailAuthCredential"],[4282,23,4388,23],[4282,24,4388,24,"_fromEmailAndPassword"],[4282,45,4388,45],[4282,48,4388,48],[4282,58,4388,58,"email"],[4282,63,4388,63],[4282,65,4388,65,"password"],[4282,73,4388,73],[4282,75,4388,75],[4283,6,4389,8],[4283,13,4389,15],[4283,17,4389,19,"EmailAuthCredential"],[4283,36,4389,38],[4283,37,4389,39,"email"],[4283,42,4389,44],[4283,44,4389,46,"password"],[4283,52,4389,54],[4283,54,4389,56],[4283,64,4389,66],[4283,65,4389,67],[4283,98,4389,100],[4283,99,4389,101],[4284,4,4390,4],[4284,5,4390,5],[4285,4,4391,4],[4286,4,4392,4,"EmailAuthCredential"],[4286,23,4392,23],[4286,24,4392,24,"_fromEmailAndCode"],[4286,41,4392,41],[4286,44,4392,44],[4286,54,4392,54,"email"],[4286,59,4392,59],[4286,61,4392,61,"oobCode"],[4286,68,4392,68],[4286,70,4392,70,"tenantId"],[4286,78,4392,78],[4286,80,4392,80],[4287,6,4393,8],[4287,10,4393,12,"tenantId"],[4287,18,4393,20],[4287,23,4393,20,"undefined"],[4287,32,4393,31],[4287,34,4393,33],[4288,8,4393,35,"tenantId"],[4288,16,4393,43],[4288,19,4393,46],[4288,23,4393,50],[4289,6,4393,52],[4290,6,4394,8],[4290,13,4394,15],[4290,17,4394,19,"EmailAuthCredential"],[4290,36,4394,38],[4290,37,4394,39,"email"],[4290,42,4394,44],[4290,44,4394,46,"oobCode"],[4290,51,4394,53],[4290,53,4394,55],[4290,64,4394,66],[4290,65,4394,67],[4290,96,4394,98,"tenantId"],[4290,104,4394,106],[4290,105,4394,107],[4291,4,4395,4],[4291,5,4395,5],[4292,4,4396,4],[4293,4,4397,4,"EmailAuthCredential"],[4293,23,4397,23],[4293,24,4397,24,"prototype"],[4293,33,4397,33],[4293,34,4397,34,"toJSON"],[4293,40,4397,40],[4293,43,4397,43],[4293,55,4397,55],[4294,6,4398,8],[4294,13,4398,15],[4295,8,4399,12,"email"],[4295,13,4399,17],[4295,15,4399,19],[4295,19,4399,23],[4295,20,4399,24,"_email"],[4295,26,4399,30],[4296,8,4400,12,"password"],[4296,16,4400,20],[4296,18,4400,22],[4296,22,4400,26],[4296,23,4400,27,"_password"],[4296,32,4400,36],[4297,8,4401,12,"signInMethod"],[4297,20,4401,24],[4297,22,4401,26],[4297,26,4401,30],[4297,27,4401,31,"signInMethod"],[4297,39,4401,43],[4298,8,4402,12,"tenantId"],[4298,16,4402,20],[4298,18,4402,22],[4298,22,4402,26],[4298,23,4402,27,"_tenantId"],[4299,6,4403,8],[4299,7,4403,9],[4300,4,4404,4],[4300,5,4404,5],[4301,4,4405,4],[4302,0,4406,0],[4303,0,4407,0],[4304,0,4408,0],[4305,0,4409,0],[4306,0,4410,0],[4307,0,4411,0],[4308,0,4412,0],[4309,4,4413,4,"EmailAuthCredential"],[4309,23,4413,23],[4309,24,4413,24,"fromJSON"],[4309,32,4413,32],[4309,35,4413,35],[4309,45,4413,45,"json"],[4309,49,4413,49],[4309,51,4413,51],[4310,6,4414,8],[4310,10,4414,12,"obj"],[4310,13,4414,15],[4310,16,4414,18],[4310,23,4414,25,"json"],[4310,27,4414,29],[4310,32,4414,34],[4310,40,4414,42],[4310,43,4414,45,"JSON"],[4310,47,4414,49],[4310,48,4414,50,"parse"],[4310,53,4414,55],[4310,54,4414,56,"json"],[4310,58,4414,60],[4310,59,4414,61],[4310,62,4414,64,"json"],[4310,66,4414,68],[4311,6,4415,8],[4311,10,4415,12],[4311,11,4415,13,"obj"],[4311,14,4415,16],[4311,19,4415,21],[4311,23,4415,25],[4311,27,4415,29,"obj"],[4311,30,4415,32],[4311,35,4415,32,"undefined"],[4311,44,4415,43],[4311,47,4415,43,"undefined"],[4311,56,4415,43],[4311,59,4415,55,"obj"],[4311,62,4415,58],[4311,63,4415,59,"email"],[4311,68,4415,64],[4311,74,4415,70,"obj"],[4311,77,4415,73],[4311,82,4415,78],[4311,86,4415,82],[4311,90,4415,86,"obj"],[4311,93,4415,89],[4311,98,4415,89,"undefined"],[4311,107,4415,100],[4311,110,4415,100,"undefined"],[4311,119,4415,100],[4311,122,4415,112,"obj"],[4311,125,4415,115],[4311,126,4415,116,"password"],[4311,134,4415,124],[4311,135,4415,125],[4311,137,4415,127],[4312,8,4416,12],[4312,12,4416,16,"obj"],[4312,15,4416,19],[4312,16,4416,20,"signInMethod"],[4312,28,4416,32],[4312,33,4416,37],[4312,43,4416,47],[4312,44,4416,48],[4312,79,4416,83],[4313,10,4417,16],[4313,17,4417,23],[4313,21,4417,27],[4313,22,4417,28,"_fromEmailAndPassword"],[4313,43,4417,49],[4313,44,4417,50,"obj"],[4313,47,4417,53],[4313,48,4417,54,"email"],[4313,53,4417,59],[4313,55,4417,61,"obj"],[4313,58,4417,64],[4313,59,4417,65,"password"],[4313,67,4417,73],[4313,68,4417,74],[4314,8,4418,12],[4314,9,4418,13],[4314,15,4419,17],[4314,19,4419,21,"obj"],[4314,22,4419,24],[4314,23,4419,25,"signInMethod"],[4314,35,4419,37],[4314,40,4419,42],[4314,51,4419,53],[4314,52,4419,54],[4314,83,4419,85],[4315,10,4420,16],[4315,17,4420,23],[4315,21,4420,27],[4315,22,4420,28,"_fromEmailAndCode"],[4315,39,4420,45],[4315,40,4420,46,"obj"],[4315,43,4420,49],[4315,44,4420,50,"email"],[4315,49,4420,55],[4315,51,4420,57,"obj"],[4315,54,4420,60],[4315,55,4420,61,"password"],[4315,63,4420,69],[4315,65,4420,71,"obj"],[4315,68,4420,74],[4315,69,4420,75,"tenantId"],[4315,77,4420,83],[4315,78,4420,84],[4316,8,4421,12],[4317,6,4422,8],[4318,6,4423,8],[4318,13,4423,15],[4318,17,4423,19],[4319,4,4424,4],[4319,5,4424,5],[4320,4,4425,4],[4321,4,4426,4,"EmailAuthCredential"],[4321,23,4426,23],[4321,24,4426,24,"prototype"],[4321,33,4426,33],[4321,34,4426,34,"_getIdTokenResponse"],[4321,53,4426,53],[4321,56,4426,56],[4321,66,4426,66,"auth"],[4321,70,4426,70],[4321,72,4426,72],[4322,6,4427,8],[4322,13,4427,15,"tslib"],[4322,18,4427,20],[4322,19,4427,21,"__awaiter"],[4322,28,4427,30],[4322,29,4427,31],[4322,33,4427,35],[4322,35,4427,35,"undefined"],[4322,44,4427,35],[4322,46,4427,35,"undefined"],[4322,55,4427,35],[4322,57,4427,53],[4322,69,4427,65],[4323,8,4428,12],[4323,12,4428,16,"request"],[4323,19,4428,23],[4324,8,4429,12],[4324,15,4429,19,"tslib"],[4324,20,4429,24],[4324,21,4429,25,"__generator"],[4324,32,4429,36],[4324,33,4429,37],[4324,37,4429,41],[4324,39,4429,43],[4324,49,4429,53,"_a"],[4324,51,4429,55],[4324,53,4429,57],[4325,10,4430,16],[4325,18,4430,24],[4325,22,4430,28],[4325,23,4430,29,"signInMethod"],[4325,35,4430,41],[4326,12,4431,20],[4326,17,4431,25],[4326,27,4431,35],[4326,28,4431,36],[4327,14,4432,24,"request"],[4327,21,4432,31],[4327,24,4432,34],[4328,16,4433,28,"returnSecureToken"],[4328,33,4433,45],[4328,35,4433,47],[4328,39,4433,51],[4329,16,4434,28,"email"],[4329,21,4434,33],[4329,23,4434,35],[4329,27,4434,39],[4329,28,4434,40,"_email"],[4329,34,4434,46],[4330,16,4435,28,"password"],[4330,24,4435,36],[4330,26,4435,38],[4330,30,4435,42],[4330,31,4435,43,"_password"],[4330,40,4435,52],[4331,16,4436,28,"clientType"],[4331,26,4436,38],[4331,28,4436,40],[4331,45,4436,57],[4331,46,4436,58],[4332,14,4437,24],[4332,15,4437,25],[4333,14,4438,24],[4333,21,4438,31],[4333,22,4438,32],[4333,23,4438,33],[4333,24,4438,34],[4333,36,4438,46,"handleRecaptchaFlow"],[4333,55,4438,65],[4333,56,4438,66,"auth"],[4333,60,4438,70],[4333,62,4438,72,"request"],[4333,69,4438,79],[4333,71,4438,81],[4333,91,4438,101],[4333,92,4438,102],[4333,141,4438,151,"signInWithPassword"],[4333,159,4438,169],[4333,160,4438,170],[4333,161,4438,171],[4334,12,4439,20],[4334,17,4439,25],[4334,28,4439,36],[4334,29,4439,37],[4335,14,4440,24],[4335,21,4440,31],[4335,22,4440,32],[4335,23,4440,33],[4335,24,4440,34],[4335,36,4440,46,"signInWithEmailLink$1"],[4335,57,4440,67],[4335,58,4440,68,"auth"],[4335,62,4440,72],[4335,64,4440,74],[4336,16,4441,32,"email"],[4336,21,4441,37],[4336,23,4441,39],[4336,27,4441,43],[4336,28,4441,44,"_email"],[4336,34,4441,50],[4337,16,4442,32,"oobCode"],[4337,23,4442,39],[4337,25,4442,41],[4337,29,4442,45],[4337,30,4442,46,"_password"],[4338,14,4443,28],[4338,15,4443,29],[4338,16,4443,30],[4338,17,4443,31],[4339,12,4444,20],[4340,14,4445,24,"_fail"],[4340,19,4445,29],[4340,20,4445,30,"auth"],[4340,24,4445,34],[4340,26,4445,36],[4340,42,4445,52],[4340,43,4445,53],[4340,77,4445,87],[4340,78,4445,88],[4341,10,4446,16],[4342,10,4447,16],[4342,17,4447,23],[4342,18,4447,24],[4342,19,4447,25],[4342,20,4447,26],[4342,31,4447,37],[4343,8,4448,12],[4343,9,4448,13],[4343,10,4448,14],[4344,6,4449,8],[4344,7,4449,9],[4344,8,4449,10],[4345,4,4450,4],[4345,5,4450,5],[4346,4,4451,4],[4347,4,4452,4,"EmailAuthCredential"],[4347,23,4452,23],[4347,24,4452,24,"prototype"],[4347,33,4452,33],[4347,34,4452,34,"_linkToIdToken"],[4347,48,4452,48],[4347,51,4452,51],[4347,61,4452,61,"auth"],[4347,65,4452,65],[4347,67,4452,67,"idToken"],[4347,74,4452,74],[4347,76,4452,76],[4348,6,4453,8],[4348,13,4453,15,"tslib"],[4348,18,4453,20],[4348,19,4453,21,"__awaiter"],[4348,28,4453,30],[4348,29,4453,31],[4348,33,4453,35],[4348,35,4453,35,"undefined"],[4348,44,4453,35],[4348,46,4453,35,"undefined"],[4348,55,4453,35],[4348,57,4453,53],[4348,69,4453,65],[4349,8,4454,12],[4349,12,4454,16,"request"],[4349,19,4454,23],[4350,8,4455,12],[4350,15,4455,19,"tslib"],[4350,20,4455,24],[4350,21,4455,25,"__generator"],[4350,32,4455,36],[4350,33,4455,37],[4350,37,4455,41],[4350,39,4455,43],[4350,49,4455,53,"_a"],[4350,51,4455,55],[4350,53,4455,57],[4351,10,4456,16],[4351,18,4456,24],[4351,22,4456,28],[4351,23,4456,29,"signInMethod"],[4351,35,4456,41],[4352,12,4457,20],[4352,17,4457,25],[4352,27,4457,35],[4352,28,4457,36],[4353,14,4458,24,"request"],[4353,21,4458,31],[4353,24,4458,34],[4354,16,4459,28,"idToken"],[4354,23,4459,35],[4354,25,4459,37,"idToken"],[4354,32,4459,44],[4355,16,4460,28,"returnSecureToken"],[4355,33,4460,45],[4355,35,4460,47],[4355,39,4460,51],[4356,16,4461,28,"email"],[4356,21,4461,33],[4356,23,4461,35],[4356,27,4461,39],[4356,28,4461,40,"_email"],[4356,34,4461,46],[4357,16,4462,28,"password"],[4357,24,4462,36],[4357,26,4462,38],[4357,30,4462,42],[4357,31,4462,43,"_password"],[4357,40,4462,52],[4358,16,4463,28,"clientType"],[4358,26,4463,38],[4358,28,4463,40],[4358,45,4463,57],[4358,46,4463,58],[4359,14,4464,24],[4359,15,4464,25],[4360,14,4465,24],[4360,21,4465,31],[4360,22,4465,32],[4360,23,4465,33],[4360,24,4465,34],[4360,36,4465,46,"handleRecaptchaFlow"],[4360,55,4465,65],[4360,56,4465,66,"auth"],[4360,60,4465,70],[4360,62,4465,72,"request"],[4360,69,4465,79],[4360,71,4465,81],[4360,87,4465,97],[4360,88,4465,98],[4360,132,4465,142,"linkEmailPassword"],[4360,149,4465,159],[4360,150,4465,160],[4360,151,4465,161],[4361,12,4466,20],[4361,17,4466,25],[4361,28,4466,36],[4361,29,4466,37],[4362,14,4467,24],[4362,21,4467,31],[4362,22,4467,32],[4362,23,4467,33],[4362,24,4467,34],[4362,36,4467,46,"signInWithEmailLinkForLinking"],[4362,65,4467,75],[4362,66,4467,76,"auth"],[4362,70,4467,80],[4362,72,4467,82],[4363,16,4468,32,"idToken"],[4363,23,4468,39],[4363,25,4468,41,"idToken"],[4363,32,4468,48],[4364,16,4469,32,"email"],[4364,21,4469,37],[4364,23,4469,39],[4364,27,4469,43],[4364,28,4469,44,"_email"],[4364,34,4469,50],[4365,16,4470,32,"oobCode"],[4365,23,4470,39],[4365,25,4470,41],[4365,29,4470,45],[4365,30,4470,46,"_password"],[4366,14,4471,28],[4366,15,4471,29],[4366,16,4471,30],[4366,17,4471,31],[4367,12,4472,20],[4368,14,4473,24,"_fail"],[4368,19,4473,29],[4368,20,4473,30,"auth"],[4368,24,4473,34],[4368,26,4473,36],[4368,42,4473,52],[4368,43,4473,53],[4368,77,4473,87],[4368,78,4473,88],[4369,10,4474,16],[4370,10,4475,16],[4370,17,4475,23],[4370,18,4475,24],[4370,19,4475,25],[4370,20,4475,26],[4370,31,4475,37],[4371,8,4476,12],[4371,9,4476,13],[4371,10,4476,14],[4372,6,4477,8],[4372,7,4477,9],[4372,8,4477,10],[4373,4,4478,4],[4373,5,4478,5],[4374,4,4479,4],[4375,4,4480,4,"EmailAuthCredential"],[4375,23,4480,23],[4375,24,4480,24,"prototype"],[4375,33,4480,33],[4375,34,4480,34,"_getReauthenticationResolver"],[4375,62,4480,62],[4375,65,4480,65],[4375,75,4480,75,"auth"],[4375,79,4480,79],[4375,81,4480,81],[4376,6,4481,8],[4376,13,4481,15],[4376,17,4481,19],[4376,18,4481,20,"_getIdTokenResponse"],[4376,37,4481,39],[4376,38,4481,40,"auth"],[4376,42,4481,44],[4376,43,4481,45],[4377,4,4482,4],[4377,5,4482,5],[4378,4,4483,4],[4378,11,4483,11,"EmailAuthCredential"],[4378,30,4483,30],[4379,2,4484,0],[4379,3,4484,1],[4379,4,4484,2,"AuthCredential"],[4379,18,4484,16],[4379,19,4484,18],[4381,2,4486,0],[4382,0,4487,0],[4383,0,4488,0],[4384,0,4489,0],[4385,0,4490,0],[4386,0,4491,0],[4387,0,4492,0],[4388,0,4493,0],[4389,0,4494,0],[4390,0,4495,0],[4391,0,4496,0],[4392,0,4497,0],[4393,0,4498,0],[4394,0,4499,0],[4395,0,4500,0],[4396,0,4501,0],[4397,2,4502,0],[4397,11,4502,9,"signInWithIdp"],[4397,24,4502,22,"signInWithIdp"],[4397,25,4502,23,"auth"],[4397,29,4502,27],[4397,31,4502,29,"request"],[4397,38,4502,36],[4397,40,4502,38],[4398,4,4503,4],[4398,11,4503,11,"tslib"],[4398,16,4503,16],[4398,17,4503,17,"__awaiter"],[4398,26,4503,26],[4398,27,4503,27],[4398,31,4503,31],[4398,33,4503,31,"undefined"],[4398,42,4503,31],[4398,44,4503,31,"undefined"],[4398,53,4503,31],[4398,55,4503,49],[4398,67,4503,61],[4399,6,4504,8],[4399,13,4504,15,"tslib"],[4399,18,4504,20],[4399,19,4504,21,"__generator"],[4399,30,4504,32],[4399,31,4504,33],[4399,35,4504,37],[4399,37,4504,39],[4399,47,4504,49,"_a"],[4399,49,4504,51],[4399,51,4504,53],[4400,8,4505,12],[4400,15,4505,19],[4400,16,4505,20],[4400,17,4505,21],[4400,18,4505,22],[4400,30,4505,34,"_performSignInRequest"],[4400,51,4505,55],[4400,52,4505,56,"auth"],[4400,56,4505,60],[4400,58,4505,62],[4400,64,4505,68],[4400,65,4505,69],[4400,88,4505,92],[4400,116,4505,120],[4400,117,4505,121],[4400,150,4505,154,"_addTidIfNecessary"],[4400,168,4505,172],[4400,169,4505,173,"auth"],[4400,173,4505,177],[4400,175,4505,179,"request"],[4400,182,4505,186],[4400,183,4505,187],[4400,184,4505,188],[4400,185,4505,189],[4401,6,4506,8],[4401,7,4506,9],[4401,8,4506,10],[4402,4,4507,4],[4402,5,4507,5],[4402,6,4507,6],[4403,2,4508,0],[4405,2,4510,0],[4406,0,4511,0],[4407,0,4512,0],[4408,0,4513,0],[4409,0,4514,0],[4410,0,4515,0],[4411,0,4516,0],[4412,0,4517,0],[4413,0,4518,0],[4414,0,4519,0],[4415,0,4520,0],[4416,0,4521,0],[4417,0,4522,0],[4418,0,4523,0],[4419,0,4524,0],[4420,0,4525,0],[4421,2,4526,0],[4421,6,4526,4,"IDP_REQUEST_URI$1"],[4421,23,4526,21],[4421,26,4526,24],[4421,44,4526,42],[4422,2,4527,0],[4423,0,4528,0],[4424,0,4529,0],[4425,0,4530,0],[4426,0,4531,0],[4427,0,4532,0],[4428,0,4533,0],[4429,0,4534,0],[4430,2,4535,0],[4430,6,4535,4,"OAuthCredential"],[4430,21,4535,19],[4430,24,4535,22],[4430,37,4535,37],[4430,47,4535,47,"_super"],[4430,53,4535,53],[4430,55,4535,55],[4431,4,4536,4,"tslib"],[4431,9,4536,9],[4431,10,4536,10,"__extends"],[4431,19,4536,19],[4431,20,4536,20,"OAuthCredential"],[4431,35,4536,35],[4431,37,4536,37,"_super"],[4431,43,4536,43],[4431,44,4536,44],[4432,4,4537,4],[4432,13,4537,13,"OAuthCredential"],[4432,28,4537,28,"OAuthCredential"],[4432,29,4537,28],[4432,31,4537,31],[4433,6,4538,8],[4433,10,4538,12,"_this"],[4433,15,4538,17],[4433,18,4538,20,"_super"],[4433,24,4538,26],[4433,29,4538,31],[4433,33,4538,35],[4433,37,4538,39,"_super"],[4433,43,4538,45],[4433,44,4538,46,"apply"],[4433,49,4538,51],[4433,50,4538,52],[4433,54,4538,56],[4433,56,4538,58,"arguments"],[4433,65,4538,67],[4433,66,4538,68],[4433,70,4538,72],[4433,74,4538,76],[4434,6,4539,8,"_this"],[4434,11,4539,13],[4434,12,4539,14,"pendingToken"],[4434,24,4539,26],[4434,27,4539,29],[4434,31,4539,33],[4435,6,4540,8],[4435,13,4540,15,"_this"],[4435,18,4540,20],[4436,4,4541,4],[4437,4,4542,4],[4438,4,4543,4,"OAuthCredential"],[4438,19,4543,19],[4438,20,4543,20,"_fromParams"],[4438,31,4543,31],[4438,34,4543,34],[4438,44,4543,44,"params"],[4438,50,4543,50],[4438,52,4543,52],[4439,6,4544,8],[4439,10,4544,12,"cred"],[4439,14,4544,16],[4439,17,4544,19],[4439,21,4544,23,"OAuthCredential"],[4439,36,4544,38],[4439,37,4544,39,"params"],[4439,43,4544,45],[4439,44,4544,46,"providerId"],[4439,54,4544,56],[4439,56,4544,58,"params"],[4439,62,4544,64],[4439,63,4544,65,"signInMethod"],[4439,75,4544,77],[4439,76,4544,78],[4440,6,4545,8],[4440,10,4545,12,"params"],[4440,16,4545,18],[4440,17,4545,19,"idToken"],[4440,24,4545,26],[4440,28,4545,30,"params"],[4440,34,4545,36],[4440,35,4545,37,"accessToken"],[4440,46,4545,48],[4440,48,4545,50],[4441,8,4546,12],[4442,8,4547,12],[4442,12,4547,16,"params"],[4442,18,4547,22],[4442,19,4547,23,"idToken"],[4442,26,4547,30],[4442,28,4547,32],[4443,10,4548,16,"cred"],[4443,14,4548,20],[4443,15,4548,21,"idToken"],[4443,22,4548,28],[4443,25,4548,31,"params"],[4443,31,4548,37],[4443,32,4548,38,"idToken"],[4443,39,4548,45],[4444,8,4549,12],[4445,8,4550,12],[4445,12,4550,16,"params"],[4445,18,4550,22],[4445,19,4550,23,"accessToken"],[4445,30,4550,34],[4445,32,4550,36],[4446,10,4551,16,"cred"],[4446,14,4551,20],[4446,15,4551,21,"accessToken"],[4446,26,4551,32],[4446,29,4551,35,"params"],[4446,35,4551,41],[4446,36,4551,42,"accessToken"],[4446,47,4551,53],[4447,8,4552,12],[4448,8,4553,12],[4449,8,4554,12],[4449,12,4554,16,"params"],[4449,18,4554,22],[4449,19,4554,23,"nonce"],[4449,24,4554,28],[4449,28,4554,32],[4449,29,4554,33,"params"],[4449,35,4554,39],[4449,36,4554,40,"pendingToken"],[4449,48,4554,52],[4449,50,4554,54],[4450,10,4555,16,"cred"],[4450,14,4555,20],[4450,15,4555,21,"nonce"],[4450,20,4555,26],[4450,23,4555,29,"params"],[4450,29,4555,35],[4450,30,4555,36,"nonce"],[4450,35,4555,41],[4451,8,4556,12],[4452,8,4557,12],[4452,12,4557,16,"params"],[4452,18,4557,22],[4452,19,4557,23,"pendingToken"],[4452,31,4557,35],[4452,33,4557,37],[4453,10,4558,16,"cred"],[4453,14,4558,20],[4453,15,4558,21,"pendingToken"],[4453,27,4558,33],[4453,30,4558,36,"params"],[4453,36,4558,42],[4453,37,4558,43,"pendingToken"],[4453,49,4558,55],[4454,8,4559,12],[4455,6,4560,8],[4455,7,4560,9],[4455,13,4561,13],[4455,17,4561,17,"params"],[4455,23,4561,23],[4455,24,4561,24,"oauthToken"],[4455,34,4561,34],[4455,38,4561,38,"params"],[4455,44,4561,44],[4455,45,4561,45,"oauthTokenSecret"],[4455,61,4561,61],[4455,63,4561,63],[4456,8,4562,12],[4457,8,4563,12,"cred"],[4457,12,4563,16],[4457,13,4563,17,"accessToken"],[4457,24,4563,28],[4457,27,4563,31,"params"],[4457,33,4563,37],[4457,34,4563,38,"oauthToken"],[4457,44,4563,48],[4458,8,4564,12,"cred"],[4458,12,4564,16],[4458,13,4564,17,"secret"],[4458,19,4564,23],[4458,22,4564,26,"params"],[4458,28,4564,32],[4458,29,4564,33,"oauthTokenSecret"],[4458,45,4564,49],[4459,6,4565,8],[4459,7,4565,9],[4459,13,4566,13],[4460,8,4567,12,"_fail"],[4460,13,4567,17],[4460,14,4567,18],[4460,30,4567,34],[4460,31,4567,35],[4460,65,4567,69],[4460,66,4567,70],[4461,6,4568,8],[4462,6,4569,8],[4462,13,4569,15,"cred"],[4462,17,4569,19],[4463,4,4570,4],[4463,5,4570,5],[4464,4,4571,4],[4465,4,4572,4,"OAuthCredential"],[4465,19,4572,19],[4465,20,4572,20,"prototype"],[4465,29,4572,29],[4465,30,4572,30,"toJSON"],[4465,36,4572,36],[4465,39,4572,39],[4465,51,4572,51],[4466,6,4573,8],[4466,13,4573,15],[4467,8,4574,12,"idToken"],[4467,15,4574,19],[4467,17,4574,21],[4467,21,4574,25],[4467,22,4574,26,"idToken"],[4467,29,4574,33],[4468,8,4575,12,"accessToken"],[4468,19,4575,23],[4468,21,4575,25],[4468,25,4575,29],[4468,26,4575,30,"accessToken"],[4468,37,4575,41],[4469,8,4576,12,"secret"],[4469,14,4576,18],[4469,16,4576,20],[4469,20,4576,24],[4469,21,4576,25,"secret"],[4469,27,4576,31],[4470,8,4577,12,"nonce"],[4470,13,4577,17],[4470,15,4577,19],[4470,19,4577,23],[4470,20,4577,24,"nonce"],[4470,25,4577,29],[4471,8,4578,12,"pendingToken"],[4471,20,4578,24],[4471,22,4578,26],[4471,26,4578,30],[4471,27,4578,31,"pendingToken"],[4471,39,4578,43],[4472,8,4579,12,"providerId"],[4472,18,4579,22],[4472,20,4579,24],[4472,24,4579,28],[4472,25,4579,29,"providerId"],[4472,35,4579,39],[4473,8,4580,12,"signInMethod"],[4473,20,4580,24],[4473,22,4580,26],[4473,26,4580,30],[4473,27,4580,31,"signInMethod"],[4474,6,4581,8],[4474,7,4581,9],[4475,4,4582,4],[4475,5,4582,5],[4476,4,4583,4],[4477,0,4584,0],[4478,0,4585,0],[4479,0,4586,0],[4480,0,4587,0],[4481,0,4588,0],[4482,0,4589,0],[4483,0,4590,0],[4484,0,4591,0],[4485,4,4592,4,"OAuthCredential"],[4485,19,4592,19],[4485,20,4592,20,"fromJSON"],[4485,28,4592,28],[4485,31,4592,31],[4485,41,4592,41,"json"],[4485,45,4592,45],[4485,47,4592,47],[4486,6,4593,8],[4486,10,4593,12,"obj"],[4486,13,4593,15],[4486,16,4593,18],[4486,23,4593,25,"json"],[4486,27,4593,29],[4486,32,4593,34],[4486,40,4593,42],[4486,43,4593,45,"JSON"],[4486,47,4593,49],[4486,48,4593,50,"parse"],[4486,53,4593,55],[4486,54,4593,56,"json"],[4486,58,4593,60],[4486,59,4593,61],[4486,62,4593,64,"json"],[4486,66,4593,68],[4487,6,4594,8],[4487,10,4594,12,"providerId"],[4487,20,4594,22],[4487,23,4594,25,"obj"],[4487,26,4594,28],[4487,27,4594,29,"providerId"],[4487,37,4594,39],[4488,8,4594,41,"signInMethod"],[4488,20,4594,53],[4488,23,4594,56,"obj"],[4488,26,4594,59],[4488,27,4594,60,"signInMethod"],[4488,39,4594,72],[4489,8,4594,74,"rest"],[4489,12,4594,78],[4489,15,4594,81,"tslib"],[4489,20,4594,86],[4489,21,4594,87,"__rest"],[4489,27,4594,93],[4489,28,4594,94,"obj"],[4489,31,4594,97],[4489,33,4594,99],[4489,34,4594,100],[4489,46,4594,112],[4489,48,4594,114],[4489,62,4594,128],[4489,63,4594,129],[4489,64,4594,130],[4490,6,4595,8],[4490,10,4595,12],[4490,11,4595,13,"providerId"],[4490,21,4595,23],[4490,25,4595,27],[4490,26,4595,28,"signInMethod"],[4490,38,4595,40],[4490,40,4595,42],[4491,8,4596,12],[4491,15,4596,19],[4491,19,4596,23],[4492,6,4597,8],[4493,6,4598,8],[4493,10,4598,12,"cred"],[4493,14,4598,16],[4493,17,4598,19],[4493,21,4598,23,"OAuthCredential"],[4493,36,4598,38],[4493,37,4598,39,"providerId"],[4493,47,4598,49],[4493,49,4598,51,"signInMethod"],[4493,61,4598,63],[4493,62,4598,64],[4494,6,4599,8,"cred"],[4494,10,4599,12],[4494,11,4599,13,"idToken"],[4494,18,4599,20],[4494,21,4599,23,"rest"],[4494,25,4599,27],[4494,26,4599,28,"idToken"],[4494,33,4599,35],[4494,37,4599,39,"undefined"],[4494,46,4599,48],[4495,6,4600,8,"cred"],[4495,10,4600,12],[4495,11,4600,13,"accessToken"],[4495,22,4600,24],[4495,25,4600,27,"rest"],[4495,29,4600,31],[4495,30,4600,32,"accessToken"],[4495,41,4600,43],[4495,45,4600,47,"undefined"],[4495,54,4600,56],[4496,6,4601,8,"cred"],[4496,10,4601,12],[4496,11,4601,13,"secret"],[4496,17,4601,19],[4496,20,4601,22,"rest"],[4496,24,4601,26],[4496,25,4601,27,"secret"],[4496,31,4601,33],[4497,6,4602,8,"cred"],[4497,10,4602,12],[4497,11,4602,13,"nonce"],[4497,16,4602,18],[4497,19,4602,21,"rest"],[4497,23,4602,25],[4497,24,4602,26,"nonce"],[4497,29,4602,31],[4498,6,4603,8,"cred"],[4498,10,4603,12],[4498,11,4603,13,"pendingToken"],[4498,23,4603,25],[4498,26,4603,28,"rest"],[4498,30,4603,32],[4498,31,4603,33,"pendingToken"],[4498,43,4603,45],[4498,47,4603,49],[4498,51,4603,53],[4499,6,4604,8],[4499,13,4604,15,"cred"],[4499,17,4604,19],[4500,4,4605,4],[4500,5,4605,5],[4501,4,4606,4],[4502,4,4607,4,"OAuthCredential"],[4502,19,4607,19],[4502,20,4607,20,"prototype"],[4502,29,4607,29],[4502,30,4607,30,"_getIdTokenResponse"],[4502,49,4607,49],[4502,52,4607,52],[4502,62,4607,62,"auth"],[4502,66,4607,66],[4502,68,4607,68],[4503,6,4608,8],[4503,10,4608,12,"request"],[4503,17,4608,19],[4503,20,4608,22],[4503,24,4608,26],[4503,25,4608,27,"buildRequest"],[4503,37,4608,39],[4503,38,4608,40],[4503,39,4608,41],[4504,6,4609,8],[4504,13,4609,15,"signInWithIdp"],[4504,26,4609,28],[4504,27,4609,29,"auth"],[4504,31,4609,33],[4504,33,4609,35,"request"],[4504,40,4609,42],[4504,41,4609,43],[4505,4,4610,4],[4505,5,4610,5],[4506,4,4611,4],[4507,4,4612,4,"OAuthCredential"],[4507,19,4612,19],[4507,20,4612,20,"prototype"],[4507,29,4612,29],[4507,30,4612,30,"_linkToIdToken"],[4507,44,4612,44],[4507,47,4612,47],[4507,57,4612,57,"auth"],[4507,61,4612,61],[4507,63,4612,63,"idToken"],[4507,70,4612,70],[4507,72,4612,72],[4508,6,4613,8],[4508,10,4613,12,"request"],[4508,17,4613,19],[4508,20,4613,22],[4508,24,4613,26],[4508,25,4613,27,"buildRequest"],[4508,37,4613,39],[4508,38,4613,40],[4508,39,4613,41],[4509,6,4614,8,"request"],[4509,13,4614,15],[4509,14,4614,16,"idToken"],[4509,21,4614,23],[4509,24,4614,26,"idToken"],[4509,31,4614,33],[4510,6,4615,8],[4510,13,4615,15,"signInWithIdp"],[4510,26,4615,28],[4510,27,4615,29,"auth"],[4510,31,4615,33],[4510,33,4615,35,"request"],[4510,40,4615,42],[4510,41,4615,43],[4511,4,4616,4],[4511,5,4616,5],[4512,4,4617,4],[4513,4,4618,4,"OAuthCredential"],[4513,19,4618,19],[4513,20,4618,20,"prototype"],[4513,29,4618,29],[4513,30,4618,30,"_getReauthenticationResolver"],[4513,58,4618,58],[4513,61,4618,61],[4513,71,4618,71,"auth"],[4513,75,4618,75],[4513,77,4618,77],[4514,6,4619,8],[4514,10,4619,12,"request"],[4514,17,4619,19],[4514,20,4619,22],[4514,24,4619,26],[4514,25,4619,27,"buildRequest"],[4514,37,4619,39],[4514,38,4619,40],[4514,39,4619,41],[4515,6,4620,8,"request"],[4515,13,4620,15],[4515,14,4620,16,"autoCreate"],[4515,24,4620,26],[4515,27,4620,29],[4515,32,4620,34],[4516,6,4621,8],[4516,13,4621,15,"signInWithIdp"],[4516,26,4621,28],[4516,27,4621,29,"auth"],[4516,31,4621,33],[4516,33,4621,35,"request"],[4516,40,4621,42],[4516,41,4621,43],[4517,4,4622,4],[4517,5,4622,5],[4518,4,4623,4,"OAuthCredential"],[4518,19,4623,19],[4518,20,4623,20,"prototype"],[4518,29,4623,29],[4518,30,4623,30,"buildRequest"],[4518,42,4623,42],[4518,45,4623,45],[4518,57,4623,57],[4519,6,4624,8],[4519,10,4624,12,"request"],[4519,17,4624,19],[4519,20,4624,22],[4520,8,4625,12,"requestUri"],[4520,18,4625,22],[4520,20,4625,24,"IDP_REQUEST_URI$1"],[4520,37,4625,41],[4521,8,4626,12,"returnSecureToken"],[4521,25,4626,29],[4521,27,4626,31],[4522,6,4627,8],[4522,7,4627,9],[4523,6,4628,8],[4523,10,4628,12],[4523,14,4628,16],[4523,15,4628,17,"pendingToken"],[4523,27,4628,29],[4523,29,4628,31],[4524,8,4629,12,"request"],[4524,15,4629,19],[4524,16,4629,20,"pendingToken"],[4524,28,4629,32],[4524,31,4629,35],[4524,35,4629,39],[4524,36,4629,40,"pendingToken"],[4524,48,4629,52],[4525,6,4630,8],[4525,7,4630,9],[4525,13,4631,13],[4526,8,4632,12],[4526,12,4632,16,"postBody"],[4526,20,4632,24],[4526,23,4632,27],[4526,24,4632,28],[4526,25,4632,29],[4527,8,4633,12],[4527,12,4633,16],[4527,16,4633,20],[4527,17,4633,21,"idToken"],[4527,24,4633,28],[4527,26,4633,30],[4528,10,4634,16,"postBody"],[4528,18,4634,24],[4528,19,4634,25],[4528,29,4634,35],[4528,30,4634,36],[4528,33,4634,39],[4528,37,4634,43],[4528,38,4634,44,"idToken"],[4528,45,4634,51],[4529,8,4635,12],[4530,8,4636,12],[4530,12,4636,16],[4530,16,4636,20],[4530,17,4636,21,"accessToken"],[4530,28,4636,32],[4530,30,4636,34],[4531,10,4637,16,"postBody"],[4531,18,4637,24],[4531,19,4637,25],[4531,33,4637,39],[4531,34,4637,40],[4531,37,4637,43],[4531,41,4637,47],[4531,42,4637,48,"accessToken"],[4531,53,4637,59],[4532,8,4638,12],[4533,8,4639,12],[4533,12,4639,16],[4533,16,4639,20],[4533,17,4639,21,"secret"],[4533,23,4639,27],[4533,25,4639,29],[4534,10,4640,16,"postBody"],[4534,18,4640,24],[4534,19,4640,25],[4534,39,4640,45],[4534,40,4640,46],[4534,43,4640,49],[4534,47,4640,53],[4534,48,4640,54,"secret"],[4534,54,4640,60],[4535,8,4641,12],[4536,8,4642,12,"postBody"],[4536,16,4642,20],[4536,17,4642,21],[4536,29,4642,33],[4536,30,4642,34],[4536,33,4642,37],[4536,37,4642,41],[4536,38,4642,42,"providerId"],[4536,48,4642,52],[4537,8,4643,12],[4537,12,4643,16],[4537,16,4643,20],[4537,17,4643,21,"nonce"],[4537,22,4643,26],[4537,26,4643,30],[4537,27,4643,31],[4537,31,4643,35],[4537,32,4643,36,"pendingToken"],[4537,44,4643,48],[4537,46,4643,50],[4538,10,4644,16,"postBody"],[4538,18,4644,24],[4538,19,4644,25],[4538,26,4644,32],[4538,27,4644,33],[4538,30,4644,36],[4538,34,4644,40],[4538,35,4644,41,"nonce"],[4538,40,4644,46],[4539,8,4645,12],[4540,8,4646,12,"request"],[4540,15,4646,19],[4540,16,4646,20,"postBody"],[4540,24,4646,28],[4540,27,4646,31,"util"],[4540,31,4646,35],[4540,32,4646,36,"querystring"],[4540,43,4646,47],[4540,44,4646,48,"postBody"],[4540,52,4646,56],[4540,53,4646,57],[4541,6,4647,8],[4542,6,4648,8],[4542,13,4648,15,"request"],[4542,20,4648,22],[4543,4,4649,4],[4543,5,4649,5],[4544,4,4650,4],[4544,11,4650,11,"OAuthCredential"],[4544,26,4650,26],[4545,2,4651,0],[4545,3,4651,1],[4545,4,4651,2,"AuthCredential"],[4545,18,4651,16],[4545,19,4651,18],[4547,2,4653,0],[4548,0,4654,0],[4549,0,4655,0],[4550,0,4656,0],[4551,0,4657,0],[4552,0,4658,0],[4553,0,4659,0],[4554,0,4660,0],[4555,0,4661,0],[4556,0,4662,0],[4557,0,4663,0],[4558,0,4664,0],[4559,0,4665,0],[4560,0,4666,0],[4561,0,4667,0],[4562,0,4668,0],[4563,2,4669,0],[4563,6,4669,4,"_a"],[4563,8,4669,6],[4564,2,4670,0],[4564,11,4670,9,"sendPhoneVerificationCode"],[4564,36,4670,34,"sendPhoneVerificationCode"],[4564,37,4670,35,"auth"],[4564,41,4670,39],[4564,43,4670,41,"request"],[4564,50,4670,48],[4564,52,4670,50],[4565,4,4671,4],[4565,11,4671,11,"tslib"],[4565,16,4671,16],[4565,17,4671,17,"__awaiter"],[4565,26,4671,26],[4565,27,4671,27],[4565,31,4671,31],[4565,33,4671,31,"undefined"],[4565,42,4671,31],[4565,44,4671,31,"undefined"],[4565,53,4671,31],[4565,55,4671,49],[4565,67,4671,61],[4566,6,4672,8],[4566,13,4672,15,"tslib"],[4566,18,4672,20],[4566,19,4672,21,"__generator"],[4566,30,4672,32],[4566,31,4672,33],[4566,35,4672,37],[4566,37,4672,39],[4566,47,4672,49,"_a"],[4566,49,4672,51],[4566,51,4672,53],[4567,8,4673,12],[4567,15,4673,19],[4567,16,4673,20],[4567,17,4673,21],[4567,18,4673,22],[4567,30,4673,34,"_performApiRequest"],[4567,48,4673,52],[4567,49,4673,53,"auth"],[4567,53,4673,57],[4567,55,4673,59],[4567,61,4673,65],[4567,62,4673,66],[4567,85,4673,89],[4567,120,4673,124],[4567,121,4673,125],[4567,160,4673,164,"_addTidIfNecessary"],[4567,178,4673,182],[4567,179,4673,183,"auth"],[4567,183,4673,187],[4567,185,4673,189,"request"],[4567,192,4673,196],[4567,193,4673,197],[4567,194,4673,198],[4567,195,4673,199],[4568,6,4674,8],[4568,7,4674,9],[4568,8,4674,10],[4569,4,4675,4],[4569,5,4675,5],[4569,6,4675,6],[4570,2,4676,0],[4571,2,4677,0],[4571,11,4677,9,"signInWithPhoneNumber$1"],[4571,34,4677,32,"signInWithPhoneNumber$1"],[4571,35,4677,33,"auth"],[4571,39,4677,37],[4571,41,4677,39,"request"],[4571,48,4677,46],[4571,50,4677,48],[4572,4,4678,4],[4572,11,4678,11,"tslib"],[4572,16,4678,16],[4572,17,4678,17,"__awaiter"],[4572,26,4678,26],[4572,27,4678,27],[4572,31,4678,31],[4572,33,4678,31,"undefined"],[4572,42,4678,31],[4572,44,4678,31,"undefined"],[4572,53,4678,31],[4572,55,4678,49],[4572,67,4678,61],[4573,6,4679,8],[4573,13,4679,15,"tslib"],[4573,18,4679,20],[4573,19,4679,21,"__generator"],[4573,30,4679,32],[4573,31,4679,33],[4573,35,4679,37],[4573,37,4679,39],[4573,47,4679,49,"_a"],[4573,49,4679,51],[4573,51,4679,53],[4574,8,4680,12],[4574,15,4680,19],[4574,16,4680,20],[4574,17,4680,21],[4574,18,4680,22],[4574,30,4680,34,"_performSignInRequest"],[4574,51,4680,55],[4574,52,4680,56,"auth"],[4574,56,4680,60],[4574,58,4680,62],[4574,64,4680,68],[4574,65,4680,69],[4574,88,4680,92],[4574,124,4680,128],[4574,125,4680,129],[4574,167,4680,171,"_addTidIfNecessary"],[4574,185,4680,189],[4574,186,4680,190,"auth"],[4574,190,4680,194],[4574,192,4680,196,"request"],[4574,199,4680,203],[4574,200,4680,204],[4574,201,4680,205],[4574,202,4680,206],[4575,6,4681,8],[4575,7,4681,9],[4575,8,4681,10],[4576,4,4682,4],[4576,5,4682,5],[4576,6,4682,6],[4577,2,4683,0],[4578,2,4684,0],[4578,11,4684,9,"linkWithPhoneNumber$1"],[4578,32,4684,30,"linkWithPhoneNumber$1"],[4578,33,4684,31,"auth"],[4578,37,4684,35],[4578,39,4684,37,"request"],[4578,46,4684,44],[4578,48,4684,46],[4579,4,4685,4],[4579,11,4685,11,"tslib"],[4579,16,4685,16],[4579,17,4685,17,"__awaiter"],[4579,26,4685,26],[4579,27,4685,27],[4579,31,4685,31],[4579,33,4685,31,"undefined"],[4579,42,4685,31],[4579,44,4685,31,"undefined"],[4579,53,4685,31],[4579,55,4685,49],[4579,67,4685,61],[4580,6,4686,8],[4580,10,4686,12,"response"],[4580,18,4686,20],[4581,6,4687,8],[4581,13,4687,15,"tslib"],[4581,18,4687,20],[4581,19,4687,21,"__generator"],[4581,30,4687,32],[4581,31,4687,33],[4581,35,4687,37],[4581,37,4687,39],[4581,47,4687,49,"_a"],[4581,49,4687,51],[4581,51,4687,53],[4582,8,4688,12],[4582,16,4688,20,"_a"],[4582,18,4688,22],[4582,19,4688,23,"label"],[4582,24,4688,28],[4583,10,4689,16],[4583,15,4689,21],[4583,16,4689,22],[4584,12,4689,24],[4584,19,4689,31],[4584,20,4689,32],[4584,21,4689,33],[4584,22,4689,34],[4584,33,4689,45,"_performSignInRequest"],[4584,54,4689,66],[4584,55,4689,67,"auth"],[4584,59,4689,71],[4584,61,4689,73],[4584,67,4689,79],[4584,68,4689,80],[4584,91,4689,103],[4584,127,4689,139],[4584,128,4689,140],[4584,170,4689,182,"_addTidIfNecessary"],[4584,188,4689,200],[4584,189,4689,201,"auth"],[4584,193,4689,205],[4584,195,4689,207,"request"],[4584,202,4689,214],[4584,203,4689,215],[4584,204,4689,216],[4584,205,4689,217],[4585,10,4690,16],[4585,15,4690,21],[4585,16,4690,22],[4586,12,4691,20,"response"],[4586,20,4691,28],[4586,23,4691,31,"_a"],[4586,25,4691,33],[4586,26,4691,34,"sent"],[4586,30,4691,38],[4586,31,4691,39],[4586,32,4691,40],[4587,12,4692,20],[4587,16,4692,24,"response"],[4587,24,4692,32],[4587,25,4692,33,"temporaryProof"],[4587,39,4692,47],[4587,41,4692,49],[4588,14,4693,24],[4588,20,4693,30,"_makeTaggedError"],[4588,36,4693,46],[4588,37,4693,47,"auth"],[4588,41,4693,51],[4588,43,4693,53],[4588,85,4693,95],[4588,86,4693,96],[4588,125,4693,135,"response"],[4588,133,4693,143],[4588,134,4693,144],[4589,12,4694,20],[4590,12,4695,20],[4590,19,4695,27],[4590,20,4695,28],[4590,21,4695,29],[4590,22,4695,30],[4590,34,4695,42,"response"],[4590,42,4695,50],[4590,43,4695,51],[4591,8,4696,12],[4592,6,4697,8],[4592,7,4697,9],[4592,8,4697,10],[4593,4,4698,4],[4593,5,4698,5],[4593,6,4698,6],[4594,2,4699,0],[4595,2,4700,0],[4595,6,4700,4,"VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_"],[4595,49,4700,47],[4595,53,4700,51,"_a"],[4595,55,4700,53],[4595,58,4700,56],[4595,59,4700,57],[4595,60,4700,58],[4595,62,4701,4,"_a"],[4595,64,4701,6],[4595,65,4701,7],[4595,81,4701,23],[4595,82,4701,24],[4595,115,4701,57],[4595,118,4701,60],[4595,134,4701,76],[4595,135,4701,77],[4595,169,4702,4,"_a"],[4595,171,4702,6],[4595,172,4702,7],[4596,2,4703,0],[4596,11,4703,9,"verifyPhoneNumberForExisting"],[4596,39,4703,37,"verifyPhoneNumberForExisting"],[4596,40,4703,38,"auth"],[4596,44,4703,42],[4596,46,4703,44,"request"],[4596,53,4703,51],[4596,55,4703,53],[4597,4,4704,4],[4597,11,4704,11,"tslib"],[4597,16,4704,16],[4597,17,4704,17,"__awaiter"],[4597,26,4704,26],[4597,27,4704,27],[4597,31,4704,31],[4597,33,4704,31,"undefined"],[4597,42,4704,31],[4597,44,4704,31,"undefined"],[4597,53,4704,31],[4597,55,4704,49],[4597,67,4704,61],[4598,6,4705,8],[4598,10,4705,12,"apiRequest"],[4598,20,4705,22],[4599,6,4706,8],[4599,13,4706,15,"tslib"],[4599,18,4706,20],[4599,19,4706,21,"__generator"],[4599,30,4706,32],[4599,31,4706,33],[4599,35,4706,37],[4599,37,4706,39],[4599,47,4706,49,"_a"],[4599,49,4706,51],[4599,51,4706,53],[4600,8,4707,12,"apiRequest"],[4600,18,4707,22],[4600,21,4707,25,"tslib"],[4600,26,4707,30],[4600,27,4707,31,"__assign"],[4600,35,4707,39],[4600,36,4707,40,"tslib"],[4600,41,4707,45],[4600,42,4707,46,"__assign"],[4600,50,4707,54],[4600,51,4707,55],[4600,52,4707,56],[4600,53,4707,57],[4600,55,4707,59,"request"],[4600,62,4707,66],[4600,63,4707,67],[4600,65,4707,69],[4601,10,4707,71,"operation"],[4601,19,4707,80],[4601,21,4707,82],[4602,8,4707,91],[4602,9,4707,92],[4602,10,4707,93],[4603,8,4708,12],[4603,15,4708,19],[4603,16,4708,20],[4603,17,4708,21],[4603,18,4708,22],[4603,30,4708,34,"_performSignInRequest"],[4603,51,4708,55],[4603,52,4708,56,"auth"],[4603,56,4708,60],[4603,58,4708,62],[4603,64,4708,68],[4603,65,4708,69],[4603,88,4708,92],[4603,124,4708,128],[4603,125,4708,129],[4603,167,4708,171,"_addTidIfNecessary"],[4603,185,4708,189],[4603,186,4708,190,"auth"],[4603,190,4708,194],[4603,192,4708,196,"apiRequest"],[4603,202,4708,206],[4603,203,4708,207],[4603,205,4708,209,"VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_"],[4603,248,4708,252],[4603,249,4708,253],[4603,250,4708,254],[4604,6,4709,8],[4604,7,4709,9],[4604,8,4709,10],[4605,4,4710,4],[4605,5,4710,5],[4605,6,4710,6],[4606,2,4711,0],[4608,2,4713,0],[4609,0,4714,0],[4610,0,4715,0],[4611,0,4716,0],[4612,0,4717,0],[4613,0,4718,0],[4614,0,4719,0],[4615,0,4720,0],[4616,0,4721,0],[4617,0,4722,0],[4618,0,4723,0],[4619,0,4724,0],[4620,0,4725,0],[4621,0,4726,0],[4622,0,4727,0],[4623,0,4728,0],[4624,2,4729,0],[4625,0,4730,0],[4626,0,4731,0],[4627,0,4732,0],[4628,0,4733,0],[4629,2,4734,0],[4629,6,4734,4,"PhoneAuthCredential"],[4629,25,4734,23],[4629,28,4734,26],[4629,41,4734,41],[4629,51,4734,51,"_super"],[4629,57,4734,57],[4629,59,4734,59],[4630,4,4735,4,"tslib"],[4630,9,4735,9],[4630,10,4735,10,"__extends"],[4630,19,4735,19],[4630,20,4735,20,"PhoneAuthCredential"],[4630,39,4735,39],[4630,41,4735,41,"_super"],[4630,47,4735,47],[4630,48,4735,48],[4631,4,4736,4],[4631,13,4736,13,"PhoneAuthCredential"],[4631,32,4736,32,"PhoneAuthCredential"],[4631,33,4736,33,"params"],[4631,39,4736,39],[4631,41,4736,41],[4632,6,4737,8],[4632,10,4737,12,"_this"],[4632,15,4737,17],[4632,18,4737,20,"_super"],[4632,24,4737,26],[4632,25,4737,27,"call"],[4632,29,4737,31],[4632,30,4737,32],[4632,34,4737,36],[4632,36,4737,38],[4632,43,4737,45],[4632,44,4737,46],[4632,68,4737,70],[4632,75,4737,77],[4632,76,4737,78],[4632,100,4737,102],[4632,101,4737,103],[4632,105,4737,107],[4632,109,4737,111],[4633,6,4738,8,"_this"],[4633,11,4738,13],[4633,12,4738,14,"params"],[4633,18,4738,20],[4633,21,4738,23,"params"],[4633,27,4738,29],[4634,6,4739,8],[4634,13,4739,15,"_this"],[4634,18,4739,20],[4635,4,4740,4],[4636,4,4741,4],[4637,4,4742,4,"PhoneAuthCredential"],[4637,23,4742,23],[4637,24,4742,24,"_fromVerification"],[4637,41,4742,41],[4637,44,4742,44],[4637,54,4742,54,"verificationId"],[4637,68,4742,68],[4637,70,4742,70,"verificationCode"],[4637,86,4742,86],[4637,88,4742,88],[4638,6,4743,8],[4638,13,4743,15],[4638,17,4743,19,"PhoneAuthCredential"],[4638,36,4743,38],[4638,37,4743,39],[4639,8,4743,41,"verificationId"],[4639,22,4743,55],[4639,24,4743,57,"verificationId"],[4639,38,4743,71],[4640,8,4743,73,"verificationCode"],[4640,24,4743,89],[4640,26,4743,91,"verificationCode"],[4641,6,4743,108],[4641,7,4743,109],[4641,8,4743,110],[4642,4,4744,4],[4642,5,4744,5],[4643,4,4745,4],[4644,4,4746,4,"PhoneAuthCredential"],[4644,23,4746,23],[4644,24,4746,24,"_fromTokenResponse"],[4644,42,4746,42],[4644,45,4746,45],[4644,55,4746,55,"phoneNumber"],[4644,66,4746,66],[4644,68,4746,68,"temporaryProof"],[4644,82,4746,82],[4644,84,4746,84],[4645,6,4747,8],[4645,13,4747,15],[4645,17,4747,19,"PhoneAuthCredential"],[4645,36,4747,38],[4645,37,4747,39],[4646,8,4747,41,"phoneNumber"],[4646,19,4747,52],[4646,21,4747,54,"phoneNumber"],[4646,32,4747,65],[4647,8,4747,67,"temporaryProof"],[4647,22,4747,81],[4647,24,4747,83,"temporaryProof"],[4648,6,4747,98],[4648,7,4747,99],[4648,8,4747,100],[4649,4,4748,4],[4649,5,4748,5],[4650,4,4749,4],[4651,4,4750,4,"PhoneAuthCredential"],[4651,23,4750,23],[4651,24,4750,24,"prototype"],[4651,33,4750,33],[4651,34,4750,34,"_getIdTokenResponse"],[4651,53,4750,53],[4651,56,4750,56],[4651,66,4750,66,"auth"],[4651,70,4750,70],[4651,72,4750,72],[4652,6,4751,8],[4652,13,4751,15,"signInWithPhoneNumber$1"],[4652,36,4751,38],[4652,37,4751,39,"auth"],[4652,41,4751,43],[4652,43,4751,45],[4652,47,4751,49],[4652,48,4751,50,"_makeVerificationRequest"],[4652,72,4751,74],[4652,73,4751,75],[4652,74,4751,76],[4652,75,4751,77],[4653,4,4752,4],[4653,5,4752,5],[4654,4,4753,4],[4655,4,4754,4,"PhoneAuthCredential"],[4655,23,4754,23],[4655,24,4754,24,"prototype"],[4655,33,4754,33],[4655,34,4754,34,"_linkToIdToken"],[4655,48,4754,48],[4655,51,4754,51],[4655,61,4754,61,"auth"],[4655,65,4754,65],[4655,67,4754,67,"idToken"],[4655,74,4754,74],[4655,76,4754,76],[4656,6,4755,8],[4656,13,4755,15,"linkWithPhoneNumber$1"],[4656,34,4755,36],[4656,35,4755,37,"auth"],[4656,39,4755,41],[4656,41,4755,43,"tslib"],[4656,46,4755,48],[4656,47,4755,49,"__assign"],[4656,55,4755,57],[4656,56,4755,58],[4657,8,4755,60,"idToken"],[4657,15,4755,67],[4657,17,4755,69,"idToken"],[4658,6,4755,77],[4658,7,4755,78],[4658,9,4755,80],[4658,13,4755,84],[4658,14,4755,85,"_makeVerificationRequest"],[4658,38,4755,109],[4658,39,4755,110],[4658,40,4755,111],[4658,41,4755,112],[4658,42,4755,113],[4659,4,4756,4],[4659,5,4756,5],[4660,4,4757,4],[4661,4,4758,4,"PhoneAuthCredential"],[4661,23,4758,23],[4661,24,4758,24,"prototype"],[4661,33,4758,33],[4661,34,4758,34,"_getReauthenticationResolver"],[4661,62,4758,62],[4661,65,4758,65],[4661,75,4758,75,"auth"],[4661,79,4758,79],[4661,81,4758,81],[4662,6,4759,8],[4662,13,4759,15,"verifyPhoneNumberForExisting"],[4662,41,4759,43],[4662,42,4759,44,"auth"],[4662,46,4759,48],[4662,48,4759,50],[4662,52,4759,54],[4662,53,4759,55,"_makeVerificationRequest"],[4662,77,4759,79],[4662,78,4759,80],[4662,79,4759,81],[4662,80,4759,82],[4663,4,4760,4],[4663,5,4760,5],[4664,4,4761,4],[4665,4,4762,4,"PhoneAuthCredential"],[4665,23,4762,23],[4665,24,4762,24,"prototype"],[4665,33,4762,33],[4665,34,4762,34,"_makeVerificationRequest"],[4665,58,4762,58],[4665,61,4762,61],[4665,73,4762,73],[4666,6,4763,8],[4666,10,4763,12,"_a"],[4666,12,4763,14],[4666,15,4763,17],[4666,19,4763,21],[4666,20,4763,22,"params"],[4666,26,4763,28],[4667,8,4763,30,"temporaryProof"],[4667,22,4763,44],[4667,25,4763,47,"_a"],[4667,27,4763,49],[4667,28,4763,50,"temporaryProof"],[4667,42,4763,64],[4668,8,4763,66,"phoneNumber"],[4668,19,4763,77],[4668,22,4763,80,"_a"],[4668,24,4763,82],[4668,25,4763,83,"phoneNumber"],[4668,36,4763,94],[4669,8,4763,96,"verificationId"],[4669,22,4763,110],[4669,25,4763,113,"_a"],[4669,27,4763,115],[4669,28,4763,116,"verificationId"],[4669,42,4763,130],[4670,8,4763,132,"verificationCode"],[4670,24,4763,148],[4670,27,4763,151,"_a"],[4670,29,4763,153],[4670,30,4763,154,"verificationCode"],[4670,46,4763,170],[4671,6,4764,8],[4671,10,4764,12,"temporaryProof"],[4671,24,4764,26],[4671,28,4764,30,"phoneNumber"],[4671,39,4764,41],[4671,41,4764,43],[4672,8,4765,12],[4672,15,4765,19],[4673,10,4765,21,"temporaryProof"],[4673,24,4765,35],[4673,26,4765,37,"temporaryProof"],[4673,40,4765,51],[4674,10,4765,53,"phoneNumber"],[4674,21,4765,64],[4674,23,4765,66,"phoneNumber"],[4675,8,4765,78],[4675,9,4765,79],[4676,6,4766,8],[4677,6,4767,8],[4677,13,4767,15],[4678,8,4768,12,"sessionInfo"],[4678,19,4768,23],[4678,21,4768,25,"verificationId"],[4678,35,4768,39],[4679,8,4769,12,"code"],[4679,12,4769,16],[4679,14,4769,18,"verificationCode"],[4680,6,4770,8],[4680,7,4770,9],[4681,4,4771,4],[4681,5,4771,5],[4682,4,4772,4],[4683,4,4773,4,"PhoneAuthCredential"],[4683,23,4773,23],[4683,24,4773,24,"prototype"],[4683,33,4773,33],[4683,34,4773,34,"toJSON"],[4683,40,4773,40],[4683,43,4773,43],[4683,55,4773,55],[4684,6,4774,8],[4684,10,4774,12,"obj"],[4684,13,4774,15],[4684,16,4774,18],[4685,8,4775,12,"providerId"],[4685,18,4775,22],[4685,20,4775,24],[4685,24,4775,28],[4685,25,4775,29,"providerId"],[4686,6,4776,8],[4686,7,4776,9],[4687,6,4777,8],[4687,10,4777,12],[4687,14,4777,16],[4687,15,4777,17,"params"],[4687,21,4777,23],[4687,22,4777,24,"phoneNumber"],[4687,33,4777,35],[4687,35,4777,37],[4688,8,4778,12,"obj"],[4688,11,4778,15],[4688,12,4778,16,"phoneNumber"],[4688,23,4778,27],[4688,26,4778,30],[4688,30,4778,34],[4688,31,4778,35,"params"],[4688,37,4778,41],[4688,38,4778,42,"phoneNumber"],[4688,49,4778,53],[4689,6,4779,8],[4690,6,4780,8],[4690,10,4780,12],[4690,14,4780,16],[4690,15,4780,17,"params"],[4690,21,4780,23],[4690,22,4780,24,"temporaryProof"],[4690,36,4780,38],[4690,38,4780,40],[4691,8,4781,12,"obj"],[4691,11,4781,15],[4691,12,4781,16,"temporaryProof"],[4691,26,4781,30],[4691,29,4781,33],[4691,33,4781,37],[4691,34,4781,38,"params"],[4691,40,4781,44],[4691,41,4781,45,"temporaryProof"],[4691,55,4781,59],[4692,6,4782,8],[4693,6,4783,8],[4693,10,4783,12],[4693,14,4783,16],[4693,15,4783,17,"params"],[4693,21,4783,23],[4693,22,4783,24,"verificationCode"],[4693,38,4783,40],[4693,40,4783,42],[4694,8,4784,12,"obj"],[4694,11,4784,15],[4694,12,4784,16,"verificationCode"],[4694,28,4784,32],[4694,31,4784,35],[4694,35,4784,39],[4694,36,4784,40,"params"],[4694,42,4784,46],[4694,43,4784,47,"verificationCode"],[4694,59,4784,63],[4695,6,4785,8],[4696,6,4786,8],[4696,10,4786,12],[4696,14,4786,16],[4696,15,4786,17,"params"],[4696,21,4786,23],[4696,22,4786,24,"verificationId"],[4696,36,4786,38],[4696,38,4786,40],[4697,8,4787,12,"obj"],[4697,11,4787,15],[4697,12,4787,16,"verificationId"],[4697,26,4787,30],[4697,29,4787,33],[4697,33,4787,37],[4697,34,4787,38,"params"],[4697,40,4787,44],[4697,41,4787,45,"verificationId"],[4697,55,4787,59],[4698,6,4788,8],[4699,6,4789,8],[4699,13,4789,15,"obj"],[4699,16,4789,18],[4700,4,4790,4],[4700,5,4790,5],[4701,4,4791,4],[4702,4,4792,4,"PhoneAuthCredential"],[4702,23,4792,23],[4702,24,4792,24,"fromJSON"],[4702,32,4792,32],[4702,35,4792,35],[4702,45,4792,45,"json"],[4702,49,4792,49],[4702,51,4792,51],[4703,6,4793,8],[4703,10,4793,12],[4703,17,4793,19,"json"],[4703,21,4793,23],[4703,26,4793,28],[4703,34,4793,36],[4703,36,4793,38],[4704,8,4794,12,"json"],[4704,12,4794,16],[4704,15,4794,19,"JSON"],[4704,19,4794,23],[4704,20,4794,24,"parse"],[4704,25,4794,29],[4704,26,4794,30,"json"],[4704,30,4794,34],[4704,31,4794,35],[4705,6,4795,8],[4706,6,4796,8],[4706,10,4796,12,"_a"],[4706,12,4796,14],[4706,15,4796,17,"json"],[4706,19,4796,21],[4707,8,4796,23,"verificationId"],[4707,22,4796,37],[4707,25,4796,40,"_a"],[4707,27,4796,42],[4707,28,4796,43,"verificationId"],[4707,42,4796,57],[4708,8,4796,59,"verificationCode"],[4708,24,4796,75],[4708,27,4796,78,"_a"],[4708,29,4796,80],[4708,30,4796,81,"verificationCode"],[4708,46,4796,97],[4709,8,4796,99,"phoneNumber"],[4709,19,4796,110],[4709,22,4796,113,"_a"],[4709,24,4796,115],[4709,25,4796,116,"phoneNumber"],[4709,36,4796,127],[4710,8,4796,129,"temporaryProof"],[4710,22,4796,143],[4710,25,4796,146,"_a"],[4710,27,4796,148],[4710,28,4796,149,"temporaryProof"],[4710,42,4796,163],[4711,6,4797,8],[4711,10,4797,12],[4711,11,4797,13,"verificationCode"],[4711,27,4797,29],[4711,31,4798,12],[4711,32,4798,13,"verificationId"],[4711,46,4798,27],[4711,50,4799,12],[4711,51,4799,13,"phoneNumber"],[4711,62,4799,24],[4711,66,4800,12],[4711,67,4800,13,"temporaryProof"],[4711,81,4800,27],[4711,83,4800,29],[4712,8,4801,12],[4712,15,4801,19],[4712,19,4801,23],[4713,6,4802,8],[4714,6,4803,8],[4714,13,4803,15],[4714,17,4803,19,"PhoneAuthCredential"],[4714,36,4803,38],[4714,37,4803,39],[4715,8,4804,12,"verificationId"],[4715,22,4804,26],[4715,24,4804,28,"verificationId"],[4715,38,4804,42],[4716,8,4805,12,"verificationCode"],[4716,24,4805,28],[4716,26,4805,30,"verificationCode"],[4716,42,4805,46],[4717,8,4806,12,"phoneNumber"],[4717,19,4806,23],[4717,21,4806,25,"phoneNumber"],[4717,32,4806,36],[4718,8,4807,12,"temporaryProof"],[4718,22,4807,26],[4718,24,4807,28,"temporaryProof"],[4719,6,4808,8],[4719,7,4808,9],[4719,8,4808,10],[4720,4,4809,4],[4720,5,4809,5],[4721,4,4810,4],[4721,11,4810,11,"PhoneAuthCredential"],[4721,30,4810,30],[4722,2,4811,0],[4722,3,4811,1],[4722,4,4811,2,"AuthCredential"],[4722,18,4811,16],[4722,19,4811,18],[4724,2,4813,0],[4725,0,4814,0],[4726,0,4815,0],[4727,0,4816,0],[4728,0,4817,0],[4729,0,4818,0],[4730,0,4819,0],[4731,0,4820,0],[4732,0,4821,0],[4733,0,4822,0],[4734,0,4823,0],[4735,0,4824,0],[4736,0,4825,0],[4737,0,4826,0],[4738,0,4827,0],[4739,0,4828,0],[4740,2,4829,0],[4741,0,4830,0],[4742,0,4831,0],[4743,0,4832,0],[4744,0,4833,0],[4745,2,4834,0],[4745,11,4834,9,"parseMode"],[4745,20,4834,18,"parseMode"],[4745,21,4834,19,"mode"],[4745,25,4834,23],[4745,27,4834,25],[4746,4,4835,4],[4746,12,4835,12,"mode"],[4746,16,4835,16],[4747,6,4836,8],[4747,11,4836,13],[4747,25,4836,27],[4748,8,4837,12],[4748,15,4837,19],[4748,30,4837,34],[4748,31,4837,35],[4749,6,4838,8],[4749,11,4838,13],[4749,26,4838,28],[4750,8,4839,12],[4750,15,4839,19],[4750,31,4839,35],[4750,32,4839,36],[4751,6,4840,8],[4751,11,4840,13],[4751,19,4840,21],[4752,8,4841,12],[4752,15,4841,19],[4752,29,4841,33],[4752,30,4841,34],[4753,6,4842,8],[4753,11,4842,13],[4753,24,4842,26],[4754,8,4843,12],[4754,15,4843,19],[4754,29,4843,33],[4754,30,4843,34],[4755,6,4844,8],[4755,11,4844,13],[4755,33,4844,35],[4756,8,4845,12],[4756,15,4845,19],[4756,40,4845,44],[4756,41,4845,45],[4757,6,4846,8],[4757,11,4846,13],[4757,39,4846,41],[4758,8,4847,12],[4758,15,4847,19],[4758,46,4847,50],[4758,47,4847,51],[4759,6,4848,8],[4760,8,4849,12],[4760,15,4849,19],[4760,19,4849,23],[4761,4,4850,4],[4762,2,4851,0],[4763,2,4852,0],[4764,0,4853,0],[4765,0,4854,0],[4766,0,4855,0],[4767,0,4856,0],[4768,2,4857,0],[4768,11,4857,9,"parseDeepLink"],[4768,24,4857,22,"parseDeepLink"],[4768,25,4857,23,"url"],[4768,28,4857,26],[4768,30,4857,28],[4769,4,4858,4],[4769,8,4858,8,"link"],[4769,12,4858,12],[4769,15,4858,15,"util"],[4769,19,4858,19],[4769,20,4858,20,"querystringDecode"],[4769,37,4858,37],[4769,38,4858,38,"util"],[4769,42,4858,42],[4769,43,4858,43,"extractQuerystring"],[4769,61,4858,61],[4769,62,4858,62,"url"],[4769,65,4858,65],[4769,66,4858,66],[4769,67,4858,67],[4769,68,4858,68],[4769,74,4858,74],[4769,75,4858,75],[4770,4,4859,4],[4771,4,4860,4],[4771,8,4860,8,"doubleDeepLink"],[4771,22,4860,22],[4771,25,4860,25,"link"],[4771,29,4860,29],[4771,32,4861,10,"util"],[4771,36,4861,14],[4771,37,4861,15,"querystringDecode"],[4771,54,4861,32],[4771,55,4861,33,"util"],[4771,59,4861,37],[4771,60,4861,38,"extractQuerystring"],[4771,78,4861,56],[4771,79,4861,57,"link"],[4771,83,4861,61],[4771,84,4861,62],[4771,85,4861,63],[4771,86,4861,64],[4771,100,4861,78],[4771,101,4861,79],[4771,104,4862,10],[4771,108,4862,14],[4772,4,4863,4],[4773,4,4864,4],[4773,8,4864,8,"iOSDeepLink"],[4773,19,4864,19],[4773,22,4864,22,"util"],[4773,26,4864,26],[4773,27,4864,27,"querystringDecode"],[4773,44,4864,44],[4773,45,4864,45,"util"],[4773,49,4864,49],[4773,50,4864,50,"extractQuerystring"],[4773,68,4864,68],[4773,69,4864,69,"url"],[4773,72,4864,72],[4773,73,4864,73],[4773,74,4864,74],[4773,75,4864,75],[4773,89,4864,89],[4773,90,4864,90],[4774,4,4865,4],[4774,8,4865,8,"iOSDoubleDeepLink"],[4774,25,4865,25],[4774,28,4865,28,"iOSDeepLink"],[4774,39,4865,39],[4774,42,4866,10,"util"],[4774,46,4866,14],[4774,47,4866,15,"querystringDecode"],[4774,64,4866,32],[4774,65,4866,33,"util"],[4774,69,4866,37],[4774,70,4866,38,"extractQuerystring"],[4774,88,4866,56],[4774,89,4866,57,"iOSDeepLink"],[4774,100,4866,68],[4774,101,4866,69],[4774,102,4866,70],[4774,103,4866,71],[4774,109,4866,77],[4774,110,4866,78],[4774,113,4867,10],[4774,117,4867,14],[4775,4,4868,4],[4775,11,4868,11,"iOSDoubleDeepLink"],[4775,28,4868,28],[4775,32,4868,32,"iOSDeepLink"],[4775,43,4868,43],[4775,47,4868,47,"doubleDeepLink"],[4775,61,4868,61],[4775,65,4868,65,"link"],[4775,69,4868,69],[4775,73,4868,73,"url"],[4775,76,4868,76],[4776,2,4869,0],[4777,2,4870,0],[4778,0,4871,0],[4779,0,4872,0],[4780,0,4873,0],[4781,0,4874,0],[4782,0,4875,0],[4783,2,4876,0],[4783,6,4876,4,"ActionCodeURL"],[4783,19,4876,17],[4783,22,4876,20],[4783,35,4876,35],[4783,47,4876,47],[4784,4,4877,4],[4785,0,4878,0],[4786,0,4879,0],[4787,0,4880,0],[4788,0,4881,0],[4789,0,4882,0],[4790,4,4883,4],[4790,13,4883,13,"ActionCodeURL"],[4790,26,4883,26,"ActionCodeURL"],[4790,27,4883,27,"actionLink"],[4790,37,4883,37],[4790,39,4883,39],[4791,6,4884,8],[4791,10,4884,12,"_a"],[4791,12,4884,14],[4791,14,4884,16,"_b"],[4791,16,4884,18],[4791,18,4884,20,"_c"],[4791,20,4884,22],[4791,22,4884,24,"_d"],[4791,24,4884,26],[4791,26,4884,28,"_e"],[4791,28,4884,30],[4791,30,4884,32,"_f"],[4791,32,4884,34],[4792,6,4885,8],[4792,10,4885,12,"searchParams"],[4792,22,4885,24],[4792,25,4885,27,"util"],[4792,29,4885,31],[4792,30,4885,32,"querystringDecode"],[4792,47,4885,49],[4792,48,4885,50,"util"],[4792,52,4885,54],[4792,53,4885,55,"extractQuerystring"],[4792,71,4885,73],[4792,72,4885,74,"actionLink"],[4792,82,4885,84],[4792,83,4885,85],[4792,84,4885,86],[4793,6,4886,8],[4793,10,4886,12,"apiKey"],[4793,16,4886,18],[4793,19,4886,21],[4793,20,4886,22,"_a"],[4793,22,4886,24],[4793,25,4886,27,"searchParams"],[4793,37,4886,39],[4793,38,4886,40],[4793,46,4886,48],[4793,47,4886,49],[4793,72,4886,74],[4793,78,4886,80],[4793,82,4886,84],[4793,86,4886,88,"_a"],[4793,88,4886,90],[4793,93,4886,90,"undefined"],[4793,102,4886,101],[4793,105,4886,104,"_a"],[4793,107,4886,106],[4793,110,4886,109],[4793,114,4886,113],[4794,6,4887,8],[4794,10,4887,12,"code"],[4794,14,4887,16],[4794,17,4887,19],[4794,18,4887,20,"_b"],[4794,20,4887,22],[4794,23,4887,25,"searchParams"],[4794,35,4887,37],[4794,36,4887,38],[4794,45,4887,47],[4794,46,4887,48],[4794,68,4887,70],[4794,74,4887,76],[4794,78,4887,80],[4794,82,4887,84,"_b"],[4794,84,4887,86],[4794,89,4887,86,"undefined"],[4794,98,4887,97],[4794,101,4887,100,"_b"],[4794,103,4887,102],[4794,106,4887,105],[4794,110,4887,109],[4795,6,4888,8],[4795,10,4888,12,"operation"],[4795,19,4888,21],[4795,22,4888,24,"parseMode"],[4795,31,4888,33],[4795,32,4888,34],[4795,33,4888,35,"_c"],[4795,35,4888,37],[4795,38,4888,40,"searchParams"],[4795,50,4888,52],[4795,51,4888,53],[4795,57,4888,59],[4795,58,4888,60],[4795,80,4888,82],[4795,86,4888,88],[4795,90,4888,92],[4795,94,4888,96,"_c"],[4795,96,4888,98],[4795,101,4888,98,"undefined"],[4795,110,4888,109],[4795,113,4888,112,"_c"],[4795,115,4888,114],[4795,118,4888,117],[4795,122,4888,121],[4795,123,4888,122],[4796,6,4889,8],[4797,6,4890,8,"_assert"],[4797,13,4890,15],[4797,14,4890,16,"apiKey"],[4797,20,4890,22],[4797,24,4890,26,"code"],[4797,28,4890,30],[4797,32,4890,34,"operation"],[4797,41,4890,43],[4797,43,4890,45],[4797,59,4890,61],[4797,60,4890,62],[4797,94,4890,96],[4797,95,4890,97],[4798,6,4891,8],[4798,10,4891,12],[4798,11,4891,13,"apiKey"],[4798,17,4891,19],[4798,20,4891,22,"apiKey"],[4798,26,4891,28],[4799,6,4892,8],[4799,10,4892,12],[4799,11,4892,13,"operation"],[4799,20,4892,22],[4799,23,4892,25,"operation"],[4799,32,4892,34],[4800,6,4893,8],[4800,10,4893,12],[4800,11,4893,13,"code"],[4800,15,4893,17],[4800,18,4893,20,"code"],[4800,22,4893,24],[4801,6,4894,8],[4801,10,4894,12],[4801,11,4894,13,"continueUrl"],[4801,22,4894,24],[4801,25,4894,27],[4801,26,4894,28,"_d"],[4801,28,4894,30],[4801,31,4894,33,"searchParams"],[4801,43,4894,45],[4801,44,4894,46],[4801,57,4894,59],[4801,58,4894,60],[4801,88,4894,90],[4801,94,4894,96],[4801,98,4894,100],[4801,102,4894,104,"_d"],[4801,104,4894,106],[4801,109,4894,106,"undefined"],[4801,118,4894,117],[4801,121,4894,120,"_d"],[4801,123,4894,122],[4801,126,4894,125],[4801,130,4894,129],[4802,6,4895,8],[4802,10,4895,12],[4802,11,4895,13,"languageCode"],[4802,23,4895,25],[4802,26,4895,28],[4802,27,4895,29,"_e"],[4802,29,4895,31],[4802,32,4895,34,"searchParams"],[4802,44,4895,46],[4802,45,4895,47],[4802,59,4895,61],[4802,60,4895,62],[4802,91,4895,93],[4802,97,4895,99],[4802,101,4895,103],[4802,105,4895,107,"_e"],[4802,107,4895,109],[4802,112,4895,109,"undefined"],[4802,121,4895,120],[4802,124,4895,123,"_e"],[4802,126,4895,125],[4802,129,4895,128],[4802,133,4895,132],[4803,6,4896,8],[4803,10,4896,12],[4803,11,4896,13,"tenantId"],[4803,19,4896,21],[4803,22,4896,24],[4803,23,4896,25,"_f"],[4803,25,4896,27],[4803,28,4896,30,"searchParams"],[4803,40,4896,42],[4803,41,4896,43],[4803,51,4896,53],[4803,52,4896,54],[4803,79,4896,81],[4803,85,4896,87],[4803,89,4896,91],[4803,93,4896,95,"_f"],[4803,95,4896,97],[4803,100,4896,97,"undefined"],[4803,109,4896,108],[4803,112,4896,111,"_f"],[4803,114,4896,113],[4803,117,4896,116],[4803,121,4896,120],[4804,4,4897,4],[4805,4,4898,4],[4806,0,4899,0],[4807,0,4900,0],[4808,0,4901,0],[4809,0,4902,0],[4810,0,4903,0],[4811,0,4904,0],[4812,0,4905,0],[4813,0,4906,0],[4814,4,4907,4,"ActionCodeURL"],[4814,17,4907,17],[4814,18,4907,18,"parseLink"],[4814,27,4907,27],[4814,30,4907,30],[4814,40,4907,40,"link"],[4814,44,4907,44],[4814,46,4907,46],[4815,6,4908,8],[4815,10,4908,12,"actionLink"],[4815,20,4908,22],[4815,23,4908,25,"parseDeepLink"],[4815,36,4908,38],[4815,37,4908,39,"link"],[4815,41,4908,43],[4815,42,4908,44],[4816,6,4909,8],[4816,10,4909,12],[4817,8,4910,12],[4817,15,4910,19],[4817,19,4910,23,"ActionCodeURL"],[4817,32,4910,36],[4817,33,4910,37,"actionLink"],[4817,43,4910,47],[4817,44,4910,48],[4818,6,4911,8],[4818,7,4911,9],[4818,8,4912,8],[4818,15,4912,15,"_a"],[4818,17,4912,17],[4818,19,4912,19],[4819,8,4913,12],[4819,15,4913,19],[4819,19,4913,23],[4820,6,4914,8],[4821,4,4915,4],[4821,5,4915,5],[4822,4,4916,4],[4822,11,4916,11,"ActionCodeURL"],[4822,24,4916,24],[4823,2,4917,0],[4823,3,4917,1],[4823,4,4917,2],[4823,5,4917,4],[4824,2,4918,0],[4825,0,4919,0],[4826,0,4920,0],[4827,0,4921,0],[4828,0,4922,0],[4829,0,4923,0],[4830,2,4924,0],[4830,11,4924,9,"parseActionCodeURL"],[4830,29,4924,27,"parseActionCodeURL"],[4830,30,4924,28,"link"],[4830,34,4924,32],[4830,36,4924,34],[4831,4,4925,4],[4831,11,4925,11,"ActionCodeURL"],[4831,24,4925,24],[4831,25,4925,25,"parseLink"],[4831,34,4925,34],[4831,35,4925,35,"link"],[4831,39,4925,39],[4831,40,4925,40],[4832,2,4926,0],[4834,2,4928,0],[4835,0,4929,0],[4836,0,4930,0],[4837,0,4931,0],[4838,0,4932,0],[4839,0,4933,0],[4840,0,4934,0],[4841,0,4935,0],[4842,0,4936,0],[4843,0,4937,0],[4844,0,4938,0],[4845,0,4939,0],[4846,0,4940,0],[4847,0,4941,0],[4848,0,4942,0],[4849,0,4943,0],[4850,2,4944,0],[4851,0,4945,0],[4852,0,4946,0],[4853,0,4947,0],[4854,0,4948,0],[4855,2,4949,0],[4855,6,4949,4,"EmailAuthProvider"],[4855,23,4949,21],[4855,26,4949,24],[4855,39,4949,39],[4855,51,4949,51],[4856,4,4950,4],[4856,13,4950,13,"EmailAuthProvider"],[4856,30,4950,30,"EmailAuthProvider"],[4856,31,4950,30],[4856,33,4950,33],[4857,6,4951,8],[4858,0,4952,0],[4859,0,4953,0],[4860,6,4954,8],[4860,10,4954,12],[4860,11,4954,13,"providerId"],[4860,21,4954,23],[4860,24,4954,26,"EmailAuthProvider"],[4860,41,4954,43],[4860,42,4954,44,"PROVIDER_ID"],[4860,53,4954,55],[4861,4,4955,4],[4862,4,4956,4],[4863,0,4957,0],[4864,0,4958,0],[4865,0,4959,0],[4866,0,4960,0],[4867,0,4961,0],[4868,0,4962,0],[4869,0,4963,0],[4870,0,4964,0],[4871,0,4965,0],[4872,0,4966,0],[4873,0,4967,0],[4874,0,4968,0],[4875,0,4969,0],[4876,0,4970,0],[4877,0,4971,0],[4878,0,4972,0],[4879,0,4973,0],[4880,4,4974,4,"EmailAuthProvider"],[4880,21,4974,21],[4880,22,4974,22,"credential"],[4880,32,4974,32],[4880,35,4974,35],[4880,45,4974,45,"email"],[4880,50,4974,50],[4880,52,4974,52,"password"],[4880,60,4974,60],[4880,62,4974,62],[4881,6,4975,8],[4881,13,4975,15,"EmailAuthCredential"],[4881,32,4975,34],[4881,33,4975,35,"_fromEmailAndPassword"],[4881,54,4975,56],[4881,55,4975,57,"email"],[4881,60,4975,62],[4881,62,4975,64,"password"],[4881,70,4975,72],[4881,71,4975,73],[4882,4,4976,4],[4882,5,4976,5],[4883,4,4977,4],[4884,0,4978,0],[4885,0,4979,0],[4886,0,4980,0],[4887,0,4981,0],[4888,0,4982,0],[4889,0,4983,0],[4890,0,4984,0],[4891,0,4985,0],[4892,0,4986,0],[4893,0,4987,0],[4894,0,4988,0],[4895,0,4989,0],[4896,0,4990,0],[4897,0,4991,0],[4898,0,4992,0],[4899,0,4993,0],[4900,0,4994,0],[4901,0,4995,0],[4902,0,4996,0],[4903,0,4997,0],[4904,0,4998,0],[4905,4,4999,4,"EmailAuthProvider"],[4905,21,4999,21],[4905,22,4999,22,"credentialWithLink"],[4905,40,4999,40],[4905,43,4999,43],[4905,53,4999,53,"email"],[4905,58,4999,58],[4905,60,4999,60,"emailLink"],[4905,69,4999,69],[4905,71,4999,71],[4906,6,5000,8],[4906,10,5000,12,"actionCodeUrl"],[4906,23,5000,25],[4906,26,5000,28,"ActionCodeURL"],[4906,39,5000,41],[4906,40,5000,42,"parseLink"],[4906,49,5000,51],[4906,50,5000,52,"emailLink"],[4906,59,5000,61],[4906,60,5000,62],[4907,6,5001,8,"_assert"],[4907,13,5001,15],[4907,14,5001,16,"actionCodeUrl"],[4907,27,5001,29],[4907,29,5001,31],[4907,45,5001,47],[4907,46,5001,48],[4907,80,5001,82],[4907,81,5001,83],[4908,6,5002,8],[4908,13,5002,15,"EmailAuthCredential"],[4908,32,5002,34],[4908,33,5002,35,"_fromEmailAndCode"],[4908,50,5002,52],[4908,51,5002,53,"email"],[4908,56,5002,58],[4908,58,5002,60,"actionCodeUrl"],[4908,71,5002,73],[4908,72,5002,74,"code"],[4908,76,5002,78],[4908,78,5002,80,"actionCodeUrl"],[4908,91,5002,93],[4908,92,5002,94,"tenantId"],[4908,100,5002,102],[4908,101,5002,103],[4909,4,5003,4],[4909,5,5003,5],[4910,4,5004,4],[4911,0,5005,0],[4912,0,5006,0],[4913,4,5007,4,"EmailAuthProvider"],[4913,21,5007,21],[4913,22,5007,22,"PROVIDER_ID"],[4913,33,5007,33],[4913,36,5007,36],[4913,46,5007,46],[4913,47,5007,47],[4914,4,5008,4],[4915,0,5009,0],[4916,0,5010,0],[4917,4,5011,4,"EmailAuthProvider"],[4917,21,5011,21],[4917,22,5011,22,"EMAIL_PASSWORD_SIGN_IN_METHOD"],[4917,51,5011,51],[4917,54,5011,54],[4917,64,5011,64],[4917,65,5011,65],[4918,4,5012,4],[4919,0,5013,0],[4920,0,5014,0],[4921,4,5015,4,"EmailAuthProvider"],[4921,21,5015,21],[4921,22,5015,22,"EMAIL_LINK_SIGN_IN_METHOD"],[4921,47,5015,47],[4921,50,5015,50],[4921,61,5015,61],[4921,62,5015,62],[4922,4,5016,4],[4922,11,5016,11,"EmailAuthProvider"],[4922,28,5016,28],[4923,2,5017,0],[4923,3,5017,1],[4923,4,5017,2],[4923,5,5017,4],[4925,2,5019,0],[4926,0,5020,0],[4927,0,5021,0],[4928,0,5022,0],[4929,0,5023,0],[4930,0,5024,0],[4931,0,5025,0],[4932,0,5026,0],[4933,0,5027,0],[4934,0,5028,0],[4935,0,5029,0],[4936,0,5030,0],[4937,0,5031,0],[4938,0,5032,0],[4939,0,5033,0],[4940,0,5034,0],[4941,2,5035,0],[4942,0,5036,0],[4943,0,5037,0],[4944,0,5038,0],[4945,0,5039,0],[4946,0,5040,0],[4947,0,5041,0],[4948,2,5042,0],[4948,6,5042,4,"FederatedAuthProvider"],[4948,27,5042,25],[4948,30,5042,28],[4948,43,5042,43],[4948,55,5042,55],[4949,4,5043,4],[4950,0,5044,0],[4951,0,5045,0],[4952,0,5046,0],[4953,0,5047,0],[4954,4,5048,4],[4954,13,5048,13,"FederatedAuthProvider"],[4954,34,5048,34,"FederatedAuthProvider"],[4954,35,5048,35,"providerId"],[4954,45,5048,45],[4954,47,5048,47],[4955,6,5049,8],[4955,10,5049,12],[4955,11,5049,13,"providerId"],[4955,21,5049,23],[4955,24,5049,26,"providerId"],[4955,34,5049,36],[4956,6,5050,8],[4957,6,5051,8],[4957,10,5051,12],[4957,11,5051,13,"defaultLanguageCode"],[4957,30,5051,32],[4957,33,5051,35],[4957,37,5051,39],[4958,6,5052,8],[4959,6,5053,8],[4959,10,5053,12],[4959,11,5053,13,"customParameters"],[4959,27,5053,29],[4959,30,5053,32],[4959,31,5053,33],[4959,32,5053,34],[4960,4,5054,4],[4961,4,5055,4],[4962,0,5056,0],[4963,0,5057,0],[4964,0,5058,0],[4965,0,5059,0],[4966,4,5060,4,"FederatedAuthProvider"],[4966,25,5060,25],[4966,26,5060,26,"prototype"],[4966,35,5060,35],[4966,36,5060,36,"setDefaultLanguage"],[4966,54,5060,54],[4966,57,5060,57],[4966,67,5060,67,"languageCode"],[4966,79,5060,79],[4966,81,5060,81],[4967,6,5061,8],[4967,10,5061,12],[4967,11,5061,13,"defaultLanguageCode"],[4967,30,5061,32],[4967,33,5061,35,"languageCode"],[4967,45,5061,47],[4968,4,5062,4],[4968,5,5062,5],[4969,4,5063,4],[4970,0,5064,0],[4971,0,5065,0],[4972,0,5066,0],[4973,0,5067,0],[4974,0,5068,0],[4975,0,5069,0],[4976,0,5070,0],[4977,0,5071,0],[4978,0,5072,0],[4979,4,5073,4,"FederatedAuthProvider"],[4979,25,5073,25],[4979,26,5073,26,"prototype"],[4979,35,5073,35],[4979,36,5073,36,"setCustomParameters"],[4979,55,5073,55],[4979,58,5073,58],[4979,68,5073,68,"customOAuthParameters"],[4979,89,5073,89],[4979,91,5073,91],[4980,6,5074,8],[4980,10,5074,12],[4980,11,5074,13,"customParameters"],[4980,27,5074,29],[4980,30,5074,32,"customOAuthParameters"],[4980,51,5074,53],[4981,6,5075,8],[4981,13,5075,15],[4981,17,5075,19],[4982,4,5076,4],[4982,5,5076,5],[4983,4,5077,4],[4984,0,5078,0],[4985,0,5079,0],[4986,4,5080,4,"FederatedAuthProvider"],[4986,25,5080,25],[4986,26,5080,26,"prototype"],[4986,35,5080,35],[4986,36,5080,36,"getCustomParameters"],[4986,55,5080,55],[4986,58,5080,58],[4986,70,5080,70],[4987,6,5081,8],[4987,13,5081,15],[4987,17,5081,19],[4987,18,5081,20,"customParameters"],[4987,34,5081,36],[4988,4,5082,4],[4988,5,5082,5],[4989,4,5083,4],[4989,11,5083,11,"FederatedAuthProvider"],[4989,32,5083,32],[4990,2,5084,0],[4990,3,5084,1],[4990,4,5084,2],[4990,5,5084,4],[4992,2,5086,0],[4993,0,5087,0],[4994,0,5088,0],[4995,0,5089,0],[4996,0,5090,0],[4997,0,5091,0],[4998,0,5092,0],[4999,0,5093,0],[5000,0,5094,0],[5001,0,5095,0],[5002,0,5096,0],[5003,0,5097,0],[5004,0,5098,0],[5005,0,5099,0],[5006,0,5100,0],[5007,0,5101,0],[5008,2,5102,0],[5009,0,5103,0],[5010,0,5104,0],[5011,0,5105,0],[5012,0,5106,0],[5013,0,5107,0],[5014,2,5108,0],[5014,6,5108,4,"BaseOAuthProvider"],[5014,23,5108,21],[5014,26,5108,24],[5014,39,5108,39],[5014,49,5108,49,"_super"],[5014,55,5108,55],[5014,57,5108,57],[5015,4,5109,4,"tslib"],[5015,9,5109,9],[5015,10,5109,10,"__extends"],[5015,19,5109,19],[5015,20,5109,20,"BaseOAuthProvider"],[5015,37,5109,37],[5015,39,5109,39,"_super"],[5015,45,5109,45],[5015,46,5109,46],[5016,4,5110,4],[5016,13,5110,13,"BaseOAuthProvider"],[5016,30,5110,30,"BaseOAuthProvider"],[5016,31,5110,30],[5016,33,5110,33],[5017,6,5111,8],[5017,10,5111,12,"_this"],[5017,15,5111,17],[5017,18,5111,20,"_super"],[5017,24,5111,26],[5017,29,5111,31],[5017,33,5111,35],[5017,37,5111,39,"_super"],[5017,43,5111,45],[5017,44,5111,46,"apply"],[5017,49,5111,51],[5017,50,5111,52],[5017,54,5111,56],[5017,56,5111,58,"arguments"],[5017,65,5111,67],[5017,66,5111,68],[5017,70,5111,72],[5017,74,5111,76],[5018,6,5112,8],[5019,6,5113,8,"_this"],[5019,11,5113,13],[5019,12,5113,14,"scopes"],[5019,18,5113,20],[5019,21,5113,23],[5019,23,5113,25],[5020,6,5114,8],[5020,13,5114,15,"_this"],[5020,18,5114,20],[5021,4,5115,4],[5022,4,5116,4],[5023,0,5117,0],[5024,0,5118,0],[5025,0,5119,0],[5026,0,5120,0],[5027,4,5121,4,"BaseOAuthProvider"],[5027,21,5121,21],[5027,22,5121,22,"prototype"],[5027,31,5121,31],[5027,32,5121,32,"addScope"],[5027,40,5121,40],[5027,43,5121,43],[5027,53,5121,53,"scope"],[5027,58,5121,58],[5027,60,5121,60],[5028,6,5122,8],[5029,6,5123,8],[5029,10,5123,12],[5029,11,5123,13],[5029,15,5123,17],[5029,16,5123,18,"scopes"],[5029,22,5123,24],[5029,23,5123,25,"includes"],[5029,31,5123,33],[5029,32,5123,34,"scope"],[5029,37,5123,39],[5029,38,5123,40],[5029,40,5123,42],[5030,8,5124,12],[5030,12,5124,16],[5030,13,5124,17,"scopes"],[5030,19,5124,23],[5030,20,5124,24,"push"],[5030,24,5124,28],[5030,25,5124,29,"scope"],[5030,30,5124,34],[5030,31,5124,35],[5031,6,5125,8],[5032,6,5126,8],[5032,13,5126,15],[5032,17,5126,19],[5033,4,5127,4],[5033,5,5127,5],[5034,4,5128,4],[5035,0,5129,0],[5036,0,5130,0],[5037,4,5131,4,"BaseOAuthProvider"],[5037,21,5131,21],[5037,22,5131,22,"prototype"],[5037,31,5131,31],[5037,32,5131,32,"getScopes"],[5037,41,5131,41],[5037,44,5131,44],[5037,56,5131,56],[5038,6,5132,8],[5038,13,5132,15,"tslib"],[5038,18,5132,20],[5038,19,5132,21,"__spreadArray"],[5038,32,5132,34],[5038,33,5132,35],[5038,35,5132,37],[5038,37,5132,39],[5038,41,5132,43],[5038,42,5132,44,"scopes"],[5038,48,5132,50],[5038,50,5132,52],[5038,54,5132,56],[5038,55,5132,57],[5039,4,5133,4],[5039,5,5133,5],[5040,4,5134,4],[5040,11,5134,11,"BaseOAuthProvider"],[5040,28,5134,28],[5041,2,5135,0],[5041,3,5135,1],[5041,4,5135,2,"FederatedAuthProvider"],[5041,25,5135,23],[5041,26,5135,25],[5042,2,5136,0],[5043,0,5137,0],[5044,0,5138,0],[5045,0,5139,0],[5046,0,5140,0],[5047,0,5141,0],[5048,0,5142,0],[5049,0,5143,0],[5050,0,5144,0],[5051,0,5145,0],[5052,0,5146,0],[5053,0,5147,0],[5054,0,5148,0],[5055,0,5149,0],[5056,0,5150,0],[5057,0,5151,0],[5058,0,5152,0],[5059,0,5153,0],[5060,0,5154,0],[5061,0,5155,0],[5062,0,5156,0],[5063,0,5157,0],[5064,0,5158,0],[5065,0,5159,0],[5066,0,5160,0],[5067,0,5161,0],[5068,0,5162,0],[5069,0,5163,0],[5070,0,5164,0],[5071,0,5165,0],[5072,0,5166,0],[5073,0,5167,0],[5074,0,5168,0],[5075,0,5169,0],[5076,0,5170,0],[5077,0,5171,0],[5078,0,5172,0],[5079,0,5173,0],[5080,0,5174,0],[5081,0,5175,0],[5082,2,5176,0],[5082,6,5176,4,"OAuthProvider"],[5082,19,5176,17],[5082,22,5176,20],[5082,35,5176,35],[5082,45,5176,45,"_super"],[5082,51,5176,51],[5082,53,5176,53],[5083,4,5177,4,"tslib"],[5083,9,5177,9],[5083,10,5177,10,"__extends"],[5083,19,5177,19],[5083,20,5177,20,"OAuthProvider"],[5083,33,5177,33],[5083,35,5177,35,"_super"],[5083,41,5177,41],[5083,42,5177,42],[5084,4,5178,4],[5084,13,5178,13,"OAuthProvider"],[5084,26,5178,26,"OAuthProvider"],[5084,27,5178,26],[5084,29,5178,29],[5085,6,5179,8],[5085,13,5179,15,"_super"],[5085,19,5179,21],[5085,24,5179,26],[5085,28,5179,30],[5085,32,5179,34,"_super"],[5085,38,5179,40],[5085,39,5179,41,"apply"],[5085,44,5179,46],[5085,45,5179,47],[5085,49,5179,51],[5085,51,5179,53,"arguments"],[5085,60,5179,62],[5085,61,5179,63],[5085,65,5179,67],[5085,69,5179,71],[5086,4,5180,4],[5087,4,5181,4],[5088,0,5182,0],[5089,0,5183,0],[5090,0,5184,0],[5091,4,5185,4,"OAuthProvider"],[5091,17,5185,17],[5091,18,5185,18,"credentialFromJSON"],[5091,36,5185,36],[5091,39,5185,39],[5091,49,5185,49,"json"],[5091,53,5185,53],[5091,55,5185,55],[5092,6,5186,8],[5092,10,5186,12,"obj"],[5092,13,5186,15],[5092,16,5186,18],[5092,23,5186,25,"json"],[5092,27,5186,29],[5092,32,5186,34],[5092,40,5186,42],[5092,43,5186,45,"JSON"],[5092,47,5186,49],[5092,48,5186,50,"parse"],[5092,53,5186,55],[5092,54,5186,56,"json"],[5092,58,5186,60],[5092,59,5186,61],[5092,62,5186,64,"json"],[5092,66,5186,68],[5093,6,5187,8,"_assert"],[5093,13,5187,15],[5093,14,5187,16],[5093,26,5187,28],[5093,30,5187,32,"obj"],[5093,33,5187,35],[5093,37,5187,39],[5093,51,5187,53],[5093,55,5187,57,"obj"],[5093,58,5187,60],[5093,60,5187,62],[5093,76,5187,78],[5093,77,5187,79],[5093,111,5187,113],[5093,112,5187,114],[5094,6,5188,8],[5094,13,5188,15,"OAuthCredential"],[5094,28,5188,30],[5094,29,5188,31,"_fromParams"],[5094,40,5188,42],[5094,41,5188,43,"obj"],[5094,44,5188,46],[5094,45,5188,47],[5095,4,5189,4],[5095,5,5189,5],[5096,4,5190,4],[5097,0,5191,0],[5098,0,5192,0],[5099,0,5193,0],[5100,0,5194,0],[5101,0,5195,0],[5102,0,5196,0],[5103,0,5197,0],[5104,0,5198,0],[5105,0,5199,0],[5106,0,5200,0],[5107,0,5201,0],[5108,0,5202,0],[5109,0,5203,0],[5110,0,5204,0],[5111,0,5205,0],[5112,0,5206,0],[5113,0,5207,0],[5114,0,5208,0],[5115,0,5209,0],[5116,0,5210,0],[5117,4,5211,4,"OAuthProvider"],[5117,17,5211,17],[5117,18,5211,18,"prototype"],[5117,27,5211,27],[5117,28,5211,28,"credential"],[5117,38,5211,38],[5117,41,5211,41],[5117,51,5211,51,"params"],[5117,57,5211,57],[5117,59,5211,59],[5118,6,5212,8],[5118,13,5212,15],[5118,17,5212,19],[5118,18,5212,20,"_credential"],[5118,29,5212,31],[5118,30,5212,32,"tslib"],[5118,35,5212,37],[5118,36,5212,38,"__assign"],[5118,44,5212,46],[5118,45,5212,47,"tslib"],[5118,50,5212,52],[5118,51,5212,53,"__assign"],[5118,59,5212,61],[5118,60,5212,62],[5118,61,5212,63],[5118,62,5212,64],[5118,64,5212,66,"params"],[5118,70,5212,72],[5118,71,5212,73],[5118,73,5212,75],[5119,8,5212,77,"nonce"],[5119,13,5212,82],[5119,15,5212,84,"params"],[5119,21,5212,90],[5119,22,5212,91,"rawNonce"],[5120,6,5212,100],[5120,7,5212,101],[5120,8,5212,102],[5120,9,5212,103],[5121,4,5213,4],[5121,5,5213,5],[5122,4,5214,4],[5123,4,5215,4,"OAuthProvider"],[5123,17,5215,17],[5123,18,5215,18,"prototype"],[5123,27,5215,27],[5123,28,5215,28,"_credential"],[5123,39,5215,39],[5123,42,5215,42],[5123,52,5215,52,"params"],[5123,58,5215,58],[5123,60,5215,60],[5124,6,5216,8,"_assert"],[5124,13,5216,15],[5124,14,5216,16,"params"],[5124,20,5216,22],[5124,21,5216,23,"idToken"],[5124,28,5216,30],[5124,32,5216,34,"params"],[5124,38,5216,40],[5124,39,5216,41,"accessToken"],[5124,50,5216,52],[5124,52,5216,54],[5124,68,5216,70],[5124,69,5216,71],[5124,103,5216,105],[5124,104,5216,106],[5125,6,5217,8],[5126,6,5218,8],[5126,13,5218,15,"OAuthCredential"],[5126,28,5218,30],[5126,29,5218,31,"_fromParams"],[5126,40,5218,42],[5126,41,5218,43,"tslib"],[5126,46,5218,48],[5126,47,5218,49,"__assign"],[5126,55,5218,57],[5126,56,5218,58,"tslib"],[5126,61,5218,63],[5126,62,5218,64,"__assign"],[5126,70,5218,72],[5126,71,5218,73],[5126,72,5218,74],[5126,73,5218,75],[5126,75,5218,77,"params"],[5126,81,5218,83],[5126,82,5218,84],[5126,84,5218,86],[5127,8,5218,88,"providerId"],[5127,18,5218,98],[5127,20,5218,100],[5127,24,5218,104],[5127,25,5218,105,"providerId"],[5127,35,5218,115],[5128,8,5218,117,"signInMethod"],[5128,20,5218,129],[5128,22,5218,131],[5128,26,5218,135],[5128,27,5218,136,"providerId"],[5129,6,5218,147],[5129,7,5218,148],[5129,8,5218,149],[5129,9,5218,150],[5130,4,5219,4],[5130,5,5219,5],[5131,4,5220,4],[5132,0,5221,0],[5133,0,5222,0],[5134,0,5223,0],[5135,0,5224,0],[5136,4,5225,4,"OAuthProvider"],[5136,17,5225,17],[5136,18,5225,18,"credentialFromResult"],[5136,38,5225,38],[5136,41,5225,41],[5136,51,5225,51,"userCredential"],[5136,65,5225,65],[5136,67,5225,67],[5137,6,5226,8],[5137,13,5226,15,"OAuthProvider"],[5137,26,5226,28],[5137,27,5226,29,"oauthCredentialFromTaggedObject"],[5137,58,5226,60],[5137,59,5226,61,"userCredential"],[5137,73,5226,75],[5137,74,5226,76],[5138,4,5227,4],[5138,5,5227,5],[5139,4,5228,4],[5140,0,5229,0],[5141,0,5230,0],[5142,0,5231,0],[5143,0,5232,0],[5144,0,5233,0],[5145,4,5234,4,"OAuthProvider"],[5145,17,5234,17],[5145,18,5234,18,"credentialFromError"],[5145,37,5234,37],[5145,40,5234,40],[5145,50,5234,50,"error"],[5145,55,5234,55],[5145,57,5234,57],[5146,6,5235,8],[5146,13,5235,15,"OAuthProvider"],[5146,26,5235,28],[5146,27,5235,29,"oauthCredentialFromTaggedObject"],[5146,58,5235,60],[5146,59,5235,62,"error"],[5146,64,5235,67],[5146,65,5235,68,"customData"],[5146,75,5235,78],[5146,79,5235,82],[5146,80,5235,83],[5146,81,5235,85],[5146,82,5235,86],[5147,4,5236,4],[5147,5,5236,5],[5148,4,5237,4,"OAuthProvider"],[5148,17,5237,17],[5148,18,5237,18,"oauthCredentialFromTaggedObject"],[5148,49,5237,49],[5148,52,5237,52],[5148,62,5237,62,"_a"],[5148,64,5237,64],[5148,66,5237,66],[5149,6,5238,8],[5149,10,5238,12,"tokenResponse"],[5149,23,5238,25],[5149,26,5238,28,"_a"],[5149,28,5238,30],[5149,29,5238,31,"_tokenResponse"],[5149,43,5238,45],[5150,6,5239,8],[5150,10,5239,12],[5150,11,5239,13,"tokenResponse"],[5150,24,5239,26],[5150,26,5239,28],[5151,8,5240,12],[5151,15,5240,19],[5151,19,5240,23],[5152,6,5241,8],[5153,6,5242,8],[5153,10,5242,12,"_b"],[5153,12,5242,14],[5153,15,5242,17,"tokenResponse"],[5153,28,5242,30],[5154,8,5242,32,"oauthIdToken"],[5154,20,5242,44],[5154,23,5242,47,"_b"],[5154,25,5242,49],[5154,26,5242,50,"oauthIdToken"],[5154,38,5242,62],[5155,8,5242,64,"oauthAccessToken"],[5155,24,5242,80],[5155,27,5242,83,"_b"],[5155,29,5242,85],[5155,30,5242,86,"oauthAccessToken"],[5155,46,5242,102],[5156,8,5242,104,"oauthTokenSecret"],[5156,24,5242,120],[5156,27,5242,123,"_b"],[5156,29,5242,125],[5156,30,5242,126,"oauthTokenSecret"],[5156,46,5242,142],[5157,8,5242,144,"pendingToken"],[5157,20,5242,156],[5157,23,5242,159,"_b"],[5157,25,5242,161],[5157,26,5242,162,"pendingToken"],[5157,38,5242,174],[5158,8,5242,176,"nonce"],[5158,13,5242,181],[5158,16,5242,184,"_b"],[5158,18,5242,186],[5158,19,5242,187,"nonce"],[5158,24,5242,192],[5159,8,5242,194,"providerId"],[5159,18,5242,204],[5159,21,5242,207,"_b"],[5159,23,5242,209],[5159,24,5242,210,"providerId"],[5159,34,5242,220],[5160,6,5243,8],[5160,10,5243,12],[5160,11,5243,13,"oauthAccessToken"],[5160,27,5243,29],[5160,31,5244,12],[5160,32,5244,13,"oauthTokenSecret"],[5160,48,5244,29],[5160,52,5245,12],[5160,53,5245,13,"oauthIdToken"],[5160,65,5245,25],[5160,69,5246,12],[5160,70,5246,13,"pendingToken"],[5160,82,5246,25],[5160,84,5246,27],[5161,8,5247,12],[5161,15,5247,19],[5161,19,5247,23],[5162,6,5248,8],[5163,6,5249,8],[5163,10,5249,12],[5163,11,5249,13,"providerId"],[5163,21,5249,23],[5163,23,5249,25],[5164,8,5250,12],[5164,15,5250,19],[5164,19,5250,23],[5165,6,5251,8],[5166,6,5252,8],[5166,10,5252,12],[5167,8,5253,12],[5167,15,5253,19],[5167,19,5253,23,"OAuthProvider"],[5167,32,5253,36],[5167,33,5253,37,"providerId"],[5167,43,5253,47],[5167,44,5253,48],[5167,45,5253,49,"_credential"],[5167,56,5253,60],[5167,57,5253,61],[5168,10,5254,16,"idToken"],[5168,17,5254,23],[5168,19,5254,25,"oauthIdToken"],[5168,31,5254,37],[5169,10,5255,16,"accessToken"],[5169,21,5255,27],[5169,23,5255,29,"oauthAccessToken"],[5169,39,5255,45],[5170,10,5256,16,"nonce"],[5170,15,5256,21],[5170,17,5256,23,"nonce"],[5170,22,5256,28],[5171,10,5257,16,"pendingToken"],[5171,22,5257,28],[5171,24,5257,30,"pendingToken"],[5172,8,5258,12],[5172,9,5258,13],[5172,10,5258,14],[5173,6,5259,8],[5173,7,5259,9],[5173,8,5260,8],[5173,15,5260,15,"e"],[5173,16,5260,16],[5173,18,5260,18],[5174,8,5261,12],[5174,15,5261,19],[5174,19,5261,23],[5175,6,5262,8],[5176,4,5263,4],[5176,5,5263,5],[5177,4,5264,4],[5177,11,5264,11,"OAuthProvider"],[5177,24,5264,24],[5178,2,5265,0],[5178,3,5265,1],[5178,4,5265,2,"BaseOAuthProvider"],[5178,21,5265,19],[5178,22,5265,21],[5180,2,5267,0],[5181,0,5268,0],[5182,0,5269,0],[5183,0,5270,0],[5184,0,5271,0],[5185,0,5272,0],[5186,0,5273,0],[5187,0,5274,0],[5188,0,5275,0],[5189,0,5276,0],[5190,0,5277,0],[5191,0,5278,0],[5192,0,5279,0],[5193,0,5280,0],[5194,0,5281,0],[5195,0,5282,0],[5196,2,5283,0],[5197,0,5284,0],[5198,0,5285,0],[5199,0,5286,0],[5200,0,5287,0],[5201,0,5288,0],[5202,0,5289,0],[5203,0,5290,0],[5204,0,5291,0],[5205,0,5292,0],[5206,0,5293,0],[5207,0,5294,0],[5208,0,5295,0],[5209,0,5296,0],[5210,0,5297,0],[5211,0,5298,0],[5212,0,5299,0],[5213,0,5300,0],[5214,0,5301,0],[5215,0,5302,0],[5216,0,5303,0],[5217,0,5304,0],[5218,0,5305,0],[5219,0,5306,0],[5220,0,5307,0],[5221,0,5308,0],[5222,0,5309,0],[5223,0,5310,0],[5224,0,5311,0],[5225,0,5312,0],[5226,0,5313,0],[5227,0,5314,0],[5228,0,5315,0],[5229,0,5316,0],[5230,0,5317,0],[5231,0,5318,0],[5232,0,5319,0],[5233,0,5320,0],[5234,0,5321,0],[5235,2,5322,0],[5235,6,5322,4,"FacebookAuthProvider"],[5235,26,5322,24],[5235,29,5322,27],[5235,42,5322,42],[5235,52,5322,52,"_super"],[5235,58,5322,58],[5235,60,5322,60],[5236,4,5323,4,"tslib"],[5236,9,5323,9],[5236,10,5323,10,"__extends"],[5236,19,5323,19],[5236,20,5323,20,"FacebookAuthProvider"],[5236,40,5323,40],[5236,42,5323,42,"_super"],[5236,48,5323,48],[5236,49,5323,49],[5237,4,5324,4],[5237,13,5324,13,"FacebookAuthProvider"],[5237,33,5324,33,"FacebookAuthProvider"],[5237,34,5324,33],[5237,36,5324,36],[5238,6,5325,8],[5238,13,5325,15,"_super"],[5238,19,5325,21],[5238,20,5325,22,"call"],[5238,24,5325,26],[5238,25,5325,27],[5238,29,5325,31],[5238,31,5325,33],[5238,45,5325,47],[5238,46,5325,48],[5238,71,5325,73],[5238,72,5325,74],[5238,76,5325,78],[5238,80,5325,82],[5239,4,5326,4],[5240,4,5327,4],[5241,0,5328,0],[5242,0,5329,0],[5243,0,5330,0],[5244,0,5331,0],[5245,0,5332,0],[5246,0,5333,0],[5247,0,5334,0],[5248,0,5335,0],[5249,0,5336,0],[5250,0,5337,0],[5251,0,5338,0],[5252,4,5339,4,"FacebookAuthProvider"],[5252,24,5339,24],[5252,25,5339,25,"credential"],[5252,35,5339,35],[5252,38,5339,38],[5252,48,5339,48,"accessToken"],[5252,59,5339,59],[5252,61,5339,61],[5253,6,5340,8],[5253,13,5340,15,"OAuthCredential"],[5253,28,5340,30],[5253,29,5340,31,"_fromParams"],[5253,40,5340,42],[5253,41,5340,43],[5254,8,5341,12,"providerId"],[5254,18,5341,22],[5254,20,5341,24,"FacebookAuthProvider"],[5254,40,5341,44],[5254,41,5341,45,"PROVIDER_ID"],[5254,52,5341,56],[5255,8,5342,12,"signInMethod"],[5255,20,5342,24],[5255,22,5342,26,"FacebookAuthProvider"],[5255,42,5342,46],[5255,43,5342,47,"FACEBOOK_SIGN_IN_METHOD"],[5255,66,5342,70],[5256,8,5343,12,"accessToken"],[5256,19,5343,23],[5256,21,5343,25,"accessToken"],[5257,6,5344,8],[5257,7,5344,9],[5257,8,5344,10],[5258,4,5345,4],[5258,5,5345,5],[5259,4,5346,4],[5260,0,5347,0],[5261,0,5348,0],[5262,0,5349,0],[5263,0,5350,0],[5264,4,5351,4,"FacebookAuthProvider"],[5264,24,5351,24],[5264,25,5351,25,"credentialFromResult"],[5264,45,5351,45],[5264,48,5351,48],[5264,58,5351,58,"userCredential"],[5264,72,5351,72],[5264,74,5351,74],[5265,6,5352,8],[5265,13,5352,15,"FacebookAuthProvider"],[5265,33,5352,35],[5265,34,5352,36,"credentialFromTaggedObject"],[5265,60,5352,62],[5265,61,5352,63,"userCredential"],[5265,75,5352,77],[5265,76,5352,78],[5266,4,5353,4],[5266,5,5353,5],[5267,4,5354,4],[5268,0,5355,0],[5269,0,5356,0],[5270,0,5357,0],[5271,0,5358,0],[5272,0,5359,0],[5273,4,5360,4,"FacebookAuthProvider"],[5273,24,5360,24],[5273,25,5360,25,"credentialFromError"],[5273,44,5360,44],[5273,47,5360,47],[5273,57,5360,57,"error"],[5273,62,5360,62],[5273,64,5360,64],[5274,6,5361,8],[5274,13,5361,15,"FacebookAuthProvider"],[5274,33,5361,35],[5274,34,5361,36,"credentialFromTaggedObject"],[5274,60,5361,62],[5274,61,5361,64,"error"],[5274,66,5361,69],[5274,67,5361,70,"customData"],[5274,77,5361,80],[5274,81,5361,84],[5274,82,5361,85],[5274,83,5361,87],[5274,84,5361,88],[5275,4,5362,4],[5275,5,5362,5],[5276,4,5363,4,"FacebookAuthProvider"],[5276,24,5363,24],[5276,25,5363,25,"credentialFromTaggedObject"],[5276,51,5363,51],[5276,54,5363,54],[5276,64,5363,64,"_a"],[5276,66,5363,66],[5276,68,5363,68],[5277,6,5364,8],[5277,10,5364,12,"tokenResponse"],[5277,23,5364,25],[5277,26,5364,28,"_a"],[5277,28,5364,30],[5277,29,5364,31,"_tokenResponse"],[5277,43,5364,45],[5278,6,5365,8],[5278,10,5365,12],[5278,11,5365,13,"tokenResponse"],[5278,24,5365,26],[5278,28,5365,30],[5278,30,5365,32],[5278,48,5365,50],[5278,52,5365,54,"tokenResponse"],[5278,65,5365,67],[5278,66,5365,68],[5278,68,5365,70],[5279,8,5366,12],[5279,15,5366,19],[5279,19,5366,23],[5280,6,5367,8],[5281,6,5368,8],[5281,10,5368,12],[5281,11,5368,13,"tokenResponse"],[5281,24,5368,26],[5281,25,5368,27,"oauthAccessToken"],[5281,41,5368,43],[5281,43,5368,45],[5282,8,5369,12],[5282,15,5369,19],[5282,19,5369,23],[5283,6,5370,8],[5284,6,5371,8],[5284,10,5371,12],[5285,8,5372,12],[5285,15,5372,19,"FacebookAuthProvider"],[5285,35,5372,39],[5285,36,5372,40,"credential"],[5285,46,5372,50],[5285,47,5372,51,"tokenResponse"],[5285,60,5372,64],[5285,61,5372,65,"oauthAccessToken"],[5285,77,5372,81],[5285,78,5372,82],[5286,6,5373,8],[5286,7,5373,9],[5286,8,5374,8],[5286,15,5374,15,"_b"],[5286,17,5374,17],[5286,19,5374,19],[5287,8,5375,12],[5287,15,5375,19],[5287,19,5375,23],[5288,6,5376,8],[5289,4,5377,4],[5289,5,5377,5],[5290,4,5378,4],[5291,4,5379,4,"FacebookAuthProvider"],[5291,24,5379,24],[5291,25,5379,25,"FACEBOOK_SIGN_IN_METHOD"],[5291,48,5379,48],[5291,51,5379,51],[5291,65,5379,65],[5291,66,5379,66],[5292,4,5380,4],[5293,4,5381,4,"FacebookAuthProvider"],[5293,24,5381,24],[5293,25,5381,25,"PROVIDER_ID"],[5293,36,5381,36],[5293,39,5381,39],[5293,53,5381,53],[5293,54,5381,54],[5294,4,5382,4],[5294,11,5382,11,"FacebookAuthProvider"],[5294,31,5382,31],[5295,2,5383,0],[5295,3,5383,1],[5295,4,5383,2,"BaseOAuthProvider"],[5295,21,5383,19],[5295,22,5383,21],[5297,2,5385,0],[5298,0,5386,0],[5299,0,5387,0],[5300,0,5388,0],[5301,0,5389,0],[5302,0,5390,0],[5303,0,5391,0],[5304,0,5392,0],[5305,0,5393,0],[5306,0,5394,0],[5307,0,5395,0],[5308,0,5396,0],[5309,0,5397,0],[5310,0,5398,0],[5311,0,5399,0],[5312,0,5400,0],[5313,2,5401,0],[5314,0,5402,0],[5315,0,5403,0],[5316,0,5404,0],[5317,0,5405,0],[5318,0,5406,0],[5319,0,5407,0],[5320,0,5408,0],[5321,0,5409,0],[5322,0,5410,0],[5323,0,5411,0],[5324,0,5412,0],[5325,0,5413,0],[5326,0,5414,0],[5327,0,5415,0],[5328,0,5416,0],[5329,0,5417,0],[5330,0,5418,0],[5331,0,5419,0],[5332,0,5420,0],[5333,0,5421,0],[5334,0,5422,0],[5335,0,5423,0],[5336,0,5424,0],[5337,0,5425,0],[5338,0,5426,0],[5339,0,5427,0],[5340,0,5428,0],[5341,0,5429,0],[5342,0,5430,0],[5343,0,5431,0],[5344,0,5432,0],[5345,0,5433,0],[5346,0,5434,0],[5347,0,5435,0],[5348,0,5436,0],[5349,0,5437,0],[5350,0,5438,0],[5351,0,5439,0],[5352,0,5440,0],[5353,0,5441,0],[5354,2,5442,0],[5354,6,5442,4,"GoogleAuthProvider"],[5354,24,5442,22],[5354,27,5442,25],[5354,40,5442,40],[5354,50,5442,50,"_super"],[5354,56,5442,56],[5354,58,5442,58],[5355,4,5443,4,"tslib"],[5355,9,5443,9],[5355,10,5443,10,"__extends"],[5355,19,5443,19],[5355,20,5443,20,"GoogleAuthProvider"],[5355,38,5443,38],[5355,40,5443,40,"_super"],[5355,46,5443,46],[5355,47,5443,47],[5356,4,5444,4],[5356,13,5444,13,"GoogleAuthProvider"],[5356,31,5444,31,"GoogleAuthProvider"],[5356,32,5444,31],[5356,34,5444,34],[5357,6,5445,8],[5357,10,5445,12,"_this"],[5357,15,5445,17],[5357,18,5445,20,"_super"],[5357,24,5445,26],[5357,25,5445,27,"call"],[5357,29,5445,31],[5357,30,5445,32],[5357,34,5445,36],[5357,36,5445,38],[5357,48,5445,50],[5357,49,5445,51],[5357,72,5445,74],[5357,73,5445,75],[5357,77,5445,79],[5357,81,5445,83],[5358,6,5446,8,"_this"],[5358,11,5446,13],[5358,12,5446,14,"addScope"],[5358,20,5446,22],[5358,21,5446,23],[5358,30,5446,32],[5358,31,5446,33],[5359,6,5447,8],[5359,13,5447,15,"_this"],[5359,18,5447,20],[5360,4,5448,4],[5361,4,5449,4],[5362,0,5450,0],[5363,0,5451,0],[5364,0,5452,0],[5365,0,5453,0],[5366,0,5454,0],[5367,0,5455,0],[5368,0,5456,0],[5369,0,5457,0],[5370,0,5458,0],[5371,0,5459,0],[5372,0,5460,0],[5373,0,5461,0],[5374,4,5462,4,"GoogleAuthProvider"],[5374,22,5462,22],[5374,23,5462,23,"credential"],[5374,33,5462,33],[5374,36,5462,36],[5374,46,5462,46,"idToken"],[5374,53,5462,53],[5374,55,5462,55,"accessToken"],[5374,66,5462,66],[5374,68,5462,68],[5375,6,5463,8],[5375,13,5463,15,"OAuthCredential"],[5375,28,5463,30],[5375,29,5463,31,"_fromParams"],[5375,40,5463,42],[5375,41,5463,43],[5376,8,5464,12,"providerId"],[5376,18,5464,22],[5376,20,5464,24,"GoogleAuthProvider"],[5376,38,5464,42],[5376,39,5464,43,"PROVIDER_ID"],[5376,50,5464,54],[5377,8,5465,12,"signInMethod"],[5377,20,5465,24],[5377,22,5465,26,"GoogleAuthProvider"],[5377,40,5465,44],[5377,41,5465,45,"GOOGLE_SIGN_IN_METHOD"],[5377,62,5465,66],[5378,8,5466,12,"idToken"],[5378,15,5466,19],[5378,17,5466,21,"idToken"],[5378,24,5466,28],[5379,8,5467,12,"accessToken"],[5379,19,5467,23],[5379,21,5467,25,"accessToken"],[5380,6,5468,8],[5380,7,5468,9],[5380,8,5468,10],[5381,4,5469,4],[5381,5,5469,5],[5382,4,5470,4],[5383,0,5471,0],[5384,0,5472,0],[5385,0,5473,0],[5386,0,5474,0],[5387,4,5475,4,"GoogleAuthProvider"],[5387,22,5475,22],[5387,23,5475,23,"credentialFromResult"],[5387,43,5475,43],[5387,46,5475,46],[5387,56,5475,56,"userCredential"],[5387,70,5475,70],[5387,72,5475,72],[5388,6,5476,8],[5388,13,5476,15,"GoogleAuthProvider"],[5388,31,5476,33],[5388,32,5476,34,"credentialFromTaggedObject"],[5388,58,5476,60],[5388,59,5476,61,"userCredential"],[5388,73,5476,75],[5388,74,5476,76],[5389,4,5477,4],[5389,5,5477,5],[5390,4,5478,4],[5391,0,5479,0],[5392,0,5480,0],[5393,0,5481,0],[5394,0,5482,0],[5395,0,5483,0],[5396,4,5484,4,"GoogleAuthProvider"],[5396,22,5484,22],[5396,23,5484,23,"credentialFromError"],[5396,42,5484,42],[5396,45,5484,45],[5396,55,5484,55,"error"],[5396,60,5484,60],[5396,62,5484,62],[5397,6,5485,8],[5397,13,5485,15,"GoogleAuthProvider"],[5397,31,5485,33],[5397,32,5485,34,"credentialFromTaggedObject"],[5397,58,5485,60],[5397,59,5485,62,"error"],[5397,64,5485,67],[5397,65,5485,68,"customData"],[5397,75,5485,78],[5397,79,5485,82],[5397,80,5485,83],[5397,81,5485,85],[5397,82,5485,86],[5398,4,5486,4],[5398,5,5486,5],[5399,4,5487,4,"GoogleAuthProvider"],[5399,22,5487,22],[5399,23,5487,23,"credentialFromTaggedObject"],[5399,49,5487,49],[5399,52,5487,52],[5399,62,5487,62,"_a"],[5399,64,5487,64],[5399,66,5487,66],[5400,6,5488,8],[5400,10,5488,12,"tokenResponse"],[5400,23,5488,25],[5400,26,5488,28,"_a"],[5400,28,5488,30],[5400,29,5488,31,"_tokenResponse"],[5400,43,5488,45],[5401,6,5489,8],[5401,10,5489,12],[5401,11,5489,13,"tokenResponse"],[5401,24,5489,26],[5401,26,5489,28],[5402,8,5490,12],[5402,15,5490,19],[5402,19,5490,23],[5403,6,5491,8],[5404,6,5492,8],[5404,10,5492,12,"_b"],[5404,12,5492,14],[5404,15,5492,17,"tokenResponse"],[5404,28,5492,30],[5405,8,5492,32,"oauthIdToken"],[5405,20,5492,44],[5405,23,5492,47,"_b"],[5405,25,5492,49],[5405,26,5492,50,"oauthIdToken"],[5405,38,5492,62],[5406,8,5492,64,"oauthAccessToken"],[5406,24,5492,80],[5406,27,5492,83,"_b"],[5406,29,5492,85],[5406,30,5492,86,"oauthAccessToken"],[5406,46,5492,102],[5407,6,5493,8],[5407,10,5493,12],[5407,11,5493,13,"oauthIdToken"],[5407,23,5493,25],[5407,27,5493,29],[5407,28,5493,30,"oauthAccessToken"],[5407,44,5493,46],[5407,46,5493,48],[5408,8,5494,12],[5409,8,5495,12],[5409,15,5495,19],[5409,19,5495,23],[5410,6,5496,8],[5411,6,5497,8],[5411,10,5497,12],[5412,8,5498,12],[5412,15,5498,19,"GoogleAuthProvider"],[5412,33,5498,37],[5412,34,5498,38,"credential"],[5412,44,5498,48],[5412,45,5498,49,"oauthIdToken"],[5412,57,5498,61],[5412,59,5498,63,"oauthAccessToken"],[5412,75,5498,79],[5412,76,5498,80],[5413,6,5499,8],[5413,7,5499,9],[5413,8,5500,8],[5413,15,5500,15,"_c"],[5413,17,5500,17],[5413,19,5500,19],[5414,8,5501,12],[5414,15,5501,19],[5414,19,5501,23],[5415,6,5502,8],[5416,4,5503,4],[5416,5,5503,5],[5417,4,5504,4],[5418,4,5505,4,"GoogleAuthProvider"],[5418,22,5505,22],[5418,23,5505,23,"GOOGLE_SIGN_IN_METHOD"],[5418,44,5505,44],[5418,47,5505,47],[5418,59,5505,59],[5418,60,5505,60],[5419,4,5506,4],[5420,4,5507,4,"GoogleAuthProvider"],[5420,22,5507,22],[5420,23,5507,23,"PROVIDER_ID"],[5420,34,5507,34],[5420,37,5507,37],[5420,49,5507,49],[5420,50,5507,50],[5421,4,5508,4],[5421,11,5508,11,"GoogleAuthProvider"],[5421,29,5508,29],[5422,2,5509,0],[5422,3,5509,1],[5422,4,5509,2,"BaseOAuthProvider"],[5422,21,5509,19],[5422,22,5509,21],[5424,2,5511,0],[5425,0,5512,0],[5426,0,5513,0],[5427,0,5514,0],[5428,0,5515,0],[5429,0,5516,0],[5430,0,5517,0],[5431,0,5518,0],[5432,0,5519,0],[5433,0,5520,0],[5434,0,5521,0],[5435,0,5522,0],[5436,0,5523,0],[5437,0,5524,0],[5438,0,5525,0],[5439,0,5526,0],[5440,2,5527,0],[5441,0,5528,0],[5442,0,5529,0],[5443,0,5530,0],[5444,0,5531,0],[5445,0,5532,0],[5446,0,5533,0],[5447,0,5534,0],[5448,0,5535,0],[5449,0,5536,0],[5450,0,5537,0],[5451,0,5538,0],[5452,0,5539,0],[5453,0,5540,0],[5454,0,5541,0],[5455,0,5542,0],[5456,0,5543,0],[5457,0,5544,0],[5458,0,5545,0],[5459,0,5546,0],[5460,0,5547,0],[5461,0,5548,0],[5462,0,5549,0],[5463,0,5550,0],[5464,0,5551,0],[5465,0,5552,0],[5466,0,5553,0],[5467,0,5554,0],[5468,0,5555,0],[5469,0,5556,0],[5470,0,5557,0],[5471,0,5558,0],[5472,0,5559,0],[5473,0,5560,0],[5474,0,5561,0],[5475,0,5562,0],[5476,0,5563,0],[5477,0,5564,0],[5478,0,5565,0],[5479,0,5566,0],[5480,0,5567,0],[5481,0,5568,0],[5482,2,5569,0],[5482,6,5569,4,"GithubAuthProvider"],[5482,24,5569,22],[5482,27,5569,25],[5482,40,5569,40],[5482,50,5569,50,"_super"],[5482,56,5569,56],[5482,58,5569,58],[5483,4,5570,4,"tslib"],[5483,9,5570,9],[5483,10,5570,10,"__extends"],[5483,19,5570,19],[5483,20,5570,20,"GithubAuthProvider"],[5483,38,5570,38],[5483,40,5570,40,"_super"],[5483,46,5570,46],[5483,47,5570,47],[5484,4,5571,4],[5484,13,5571,13,"GithubAuthProvider"],[5484,31,5571,31,"GithubAuthProvider"],[5484,32,5571,31],[5484,34,5571,34],[5485,6,5572,8],[5485,13,5572,15,"_super"],[5485,19,5572,21],[5485,20,5572,22,"call"],[5485,24,5572,26],[5485,25,5572,27],[5485,29,5572,31],[5485,31,5572,33],[5485,43,5572,45],[5485,44,5572,46],[5485,67,5572,69],[5485,68,5572,70],[5485,72,5572,74],[5485,76,5572,78],[5486,4,5573,4],[5487,4,5574,4],[5488,0,5575,0],[5489,0,5576,0],[5490,0,5577,0],[5491,0,5578,0],[5492,4,5579,4,"GithubAuthProvider"],[5492,22,5579,22],[5492,23,5579,23,"credential"],[5492,33,5579,33],[5492,36,5579,36],[5492,46,5579,46,"accessToken"],[5492,57,5579,57],[5492,59,5579,59],[5493,6,5580,8],[5493,13,5580,15,"OAuthCredential"],[5493,28,5580,30],[5493,29,5580,31,"_fromParams"],[5493,40,5580,42],[5493,41,5580,43],[5494,8,5581,12,"providerId"],[5494,18,5581,22],[5494,20,5581,24,"GithubAuthProvider"],[5494,38,5581,42],[5494,39,5581,43,"PROVIDER_ID"],[5494,50,5581,54],[5495,8,5582,12,"signInMethod"],[5495,20,5582,24],[5495,22,5582,26,"GithubAuthProvider"],[5495,40,5582,44],[5495,41,5582,45,"GITHUB_SIGN_IN_METHOD"],[5495,62,5582,66],[5496,8,5583,12,"accessToken"],[5496,19,5583,23],[5496,21,5583,25,"accessToken"],[5497,6,5584,8],[5497,7,5584,9],[5497,8,5584,10],[5498,4,5585,4],[5498,5,5585,5],[5499,4,5586,4],[5500,0,5587,0],[5501,0,5588,0],[5502,0,5589,0],[5503,0,5590,0],[5504,4,5591,4,"GithubAuthProvider"],[5504,22,5591,22],[5504,23,5591,23,"credentialFromResult"],[5504,43,5591,43],[5504,46,5591,46],[5504,56,5591,56,"userCredential"],[5504,70,5591,70],[5504,72,5591,72],[5505,6,5592,8],[5505,13,5592,15,"GithubAuthProvider"],[5505,31,5592,33],[5505,32,5592,34,"credentialFromTaggedObject"],[5505,58,5592,60],[5505,59,5592,61,"userCredential"],[5505,73,5592,75],[5505,74,5592,76],[5506,4,5593,4],[5506,5,5593,5],[5507,4,5594,4],[5508,0,5595,0],[5509,0,5596,0],[5510,0,5597,0],[5511,0,5598,0],[5512,0,5599,0],[5513,4,5600,4,"GithubAuthProvider"],[5513,22,5600,22],[5513,23,5600,23,"credentialFromError"],[5513,42,5600,42],[5513,45,5600,45],[5513,55,5600,55,"error"],[5513,60,5600,60],[5513,62,5600,62],[5514,6,5601,8],[5514,13,5601,15,"GithubAuthProvider"],[5514,31,5601,33],[5514,32,5601,34,"credentialFromTaggedObject"],[5514,58,5601,60],[5514,59,5601,62,"error"],[5514,64,5601,67],[5514,65,5601,68,"customData"],[5514,75,5601,78],[5514,79,5601,82],[5514,80,5601,83],[5514,81,5601,85],[5514,82,5601,86],[5515,4,5602,4],[5515,5,5602,5],[5516,4,5603,4,"GithubAuthProvider"],[5516,22,5603,22],[5516,23,5603,23,"credentialFromTaggedObject"],[5516,49,5603,49],[5516,52,5603,52],[5516,62,5603,62,"_a"],[5516,64,5603,64],[5516,66,5603,66],[5517,6,5604,8],[5517,10,5604,12,"tokenResponse"],[5517,23,5604,25],[5517,26,5604,28,"_a"],[5517,28,5604,30],[5517,29,5604,31,"_tokenResponse"],[5517,43,5604,45],[5518,6,5605,8],[5518,10,5605,12],[5518,11,5605,13,"tokenResponse"],[5518,24,5605,26],[5518,28,5605,30],[5518,30,5605,32],[5518,48,5605,50],[5518,52,5605,54,"tokenResponse"],[5518,65,5605,67],[5518,66,5605,68],[5518,68,5605,70],[5519,8,5606,12],[5519,15,5606,19],[5519,19,5606,23],[5520,6,5607,8],[5521,6,5608,8],[5521,10,5608,12],[5521,11,5608,13,"tokenResponse"],[5521,24,5608,26],[5521,25,5608,27,"oauthAccessToken"],[5521,41,5608,43],[5521,43,5608,45],[5522,8,5609,12],[5522,15,5609,19],[5522,19,5609,23],[5523,6,5610,8],[5524,6,5611,8],[5524,10,5611,12],[5525,8,5612,12],[5525,15,5612,19,"GithubAuthProvider"],[5525,33,5612,37],[5525,34,5612,38,"credential"],[5525,44,5612,48],[5525,45,5612,49,"tokenResponse"],[5525,58,5612,62],[5525,59,5612,63,"oauthAccessToken"],[5525,75,5612,79],[5525,76,5612,80],[5526,6,5613,8],[5526,7,5613,9],[5526,8,5614,8],[5526,15,5614,15,"_b"],[5526,17,5614,17],[5526,19,5614,19],[5527,8,5615,12],[5527,15,5615,19],[5527,19,5615,23],[5528,6,5616,8],[5529,4,5617,4],[5529,5,5617,5],[5530,4,5618,4],[5531,4,5619,4,"GithubAuthProvider"],[5531,22,5619,22],[5531,23,5619,23,"GITHUB_SIGN_IN_METHOD"],[5531,44,5619,44],[5531,47,5619,47],[5531,59,5619,59],[5531,60,5619,60],[5532,4,5620,4],[5533,4,5621,4,"GithubAuthProvider"],[5533,22,5621,22],[5533,23,5621,23,"PROVIDER_ID"],[5533,34,5621,34],[5533,37,5621,37],[5533,49,5621,49],[5533,50,5621,50],[5534,4,5622,4],[5534,11,5622,11,"GithubAuthProvider"],[5534,29,5622,29],[5535,2,5623,0],[5535,3,5623,1],[5535,4,5623,2,"BaseOAuthProvider"],[5535,21,5623,19],[5535,22,5623,21],[5537,2,5625,0],[5538,0,5626,0],[5539,0,5627,0],[5540,0,5628,0],[5541,0,5629,0],[5542,0,5630,0],[5543,0,5631,0],[5544,0,5632,0],[5545,0,5633,0],[5546,0,5634,0],[5547,0,5635,0],[5548,0,5636,0],[5549,0,5637,0],[5550,0,5638,0],[5551,0,5639,0],[5552,0,5640,0],[5553,2,5641,0],[5553,6,5641,4,"IDP_REQUEST_URI"],[5553,21,5641,19],[5553,24,5641,22],[5553,42,5641,40],[5554,2,5642,0],[5555,0,5643,0],[5556,0,5644,0],[5557,2,5645,0],[5557,6,5645,4,"SAMLAuthCredential"],[5557,24,5645,22],[5557,27,5645,25],[5557,40,5645,40],[5557,50,5645,50,"_super"],[5557,56,5645,56],[5557,58,5645,58],[5558,4,5646,4,"tslib"],[5558,9,5646,9],[5558,10,5646,10,"__extends"],[5558,19,5646,19],[5558,20,5646,20,"SAMLAuthCredential"],[5558,38,5646,38],[5558,40,5646,40,"_super"],[5558,46,5646,46],[5558,47,5646,47],[5559,4,5647,4],[5560,4,5648,4],[5560,13,5648,13,"SAMLAuthCredential"],[5560,31,5648,31,"SAMLAuthCredential"],[5560,32,5648,32,"providerId"],[5560,42,5648,42],[5560,44,5648,44,"pendingToken"],[5560,56,5648,56],[5560,58,5648,58],[5561,6,5649,8],[5561,10,5649,12,"_this"],[5561,15,5649,17],[5561,18,5649,20,"_super"],[5561,24,5649,26],[5561,25,5649,27,"call"],[5561,29,5649,31],[5561,30,5649,32],[5561,34,5649,36],[5561,36,5649,38,"providerId"],[5561,46,5649,48],[5561,48,5649,50,"providerId"],[5561,58,5649,60],[5561,59,5649,61],[5561,63,5649,65],[5561,67,5649,69],[5562,6,5650,8,"_this"],[5562,11,5650,13],[5562,12,5650,14,"pendingToken"],[5562,24,5650,26],[5562,27,5650,29,"pendingToken"],[5562,39,5650,41],[5563,6,5651,8],[5563,13,5651,15,"_this"],[5563,18,5651,20],[5564,4,5652,4],[5565,4,5653,4],[5566,4,5654,4,"SAMLAuthCredential"],[5566,22,5654,22],[5566,23,5654,23,"prototype"],[5566,32,5654,32],[5566,33,5654,33,"_getIdTokenResponse"],[5566,52,5654,52],[5566,55,5654,55],[5566,65,5654,65,"auth"],[5566,69,5654,69],[5566,71,5654,71],[5567,6,5655,8],[5567,10,5655,12,"request"],[5567,17,5655,19],[5567,20,5655,22],[5567,24,5655,26],[5567,25,5655,27,"buildRequest"],[5567,37,5655,39],[5567,38,5655,40],[5567,39,5655,41],[5568,6,5656,8],[5568,13,5656,15,"signInWithIdp"],[5568,26,5656,28],[5568,27,5656,29,"auth"],[5568,31,5656,33],[5568,33,5656,35,"request"],[5568,40,5656,42],[5568,41,5656,43],[5569,4,5657,4],[5569,5,5657,5],[5570,4,5658,4],[5571,4,5659,4,"SAMLAuthCredential"],[5571,22,5659,22],[5571,23,5659,23,"prototype"],[5571,32,5659,32],[5571,33,5659,33,"_linkToIdToken"],[5571,47,5659,47],[5571,50,5659,50],[5571,60,5659,60,"auth"],[5571,64,5659,64],[5571,66,5659,66,"idToken"],[5571,73,5659,73],[5571,75,5659,75],[5572,6,5660,8],[5572,10,5660,12,"request"],[5572,17,5660,19],[5572,20,5660,22],[5572,24,5660,26],[5572,25,5660,27,"buildRequest"],[5572,37,5660,39],[5572,38,5660,40],[5572,39,5660,41],[5573,6,5661,8,"request"],[5573,13,5661,15],[5573,14,5661,16,"idToken"],[5573,21,5661,23],[5573,24,5661,26,"idToken"],[5573,31,5661,33],[5574,6,5662,8],[5574,13,5662,15,"signInWithIdp"],[5574,26,5662,28],[5574,27,5662,29,"auth"],[5574,31,5662,33],[5574,33,5662,35,"request"],[5574,40,5662,42],[5574,41,5662,43],[5575,4,5663,4],[5575,5,5663,5],[5576,4,5664,4],[5577,4,5665,4,"SAMLAuthCredential"],[5577,22,5665,22],[5577,23,5665,23,"prototype"],[5577,32,5665,32],[5577,33,5665,33,"_getReauthenticationResolver"],[5577,61,5665,61],[5577,64,5665,64],[5577,74,5665,74,"auth"],[5577,78,5665,78],[5577,80,5665,80],[5578,6,5666,8],[5578,10,5666,12,"request"],[5578,17,5666,19],[5578,20,5666,22],[5578,24,5666,26],[5578,25,5666,27,"buildRequest"],[5578,37,5666,39],[5578,38,5666,40],[5578,39,5666,41],[5579,6,5667,8,"request"],[5579,13,5667,15],[5579,14,5667,16,"autoCreate"],[5579,24,5667,26],[5579,27,5667,29],[5579,32,5667,34],[5580,6,5668,8],[5580,13,5668,15,"signInWithIdp"],[5580,26,5668,28],[5580,27,5668,29,"auth"],[5580,31,5668,33],[5580,33,5668,35,"request"],[5580,40,5668,42],[5580,41,5668,43],[5581,4,5669,4],[5581,5,5669,5],[5582,4,5670,4],[5583,4,5671,4,"SAMLAuthCredential"],[5583,22,5671,22],[5583,23,5671,23,"prototype"],[5583,32,5671,32],[5583,33,5671,33,"toJSON"],[5583,39,5671,39],[5583,42,5671,42],[5583,54,5671,54],[5584,6,5672,8],[5584,13,5672,15],[5585,8,5673,12,"signInMethod"],[5585,20,5673,24],[5585,22,5673,26],[5585,26,5673,30],[5585,27,5673,31,"signInMethod"],[5585,39,5673,43],[5586,8,5674,12,"providerId"],[5586,18,5674,22],[5586,20,5674,24],[5586,24,5674,28],[5586,25,5674,29,"providerId"],[5586,35,5674,39],[5587,8,5675,12,"pendingToken"],[5587,20,5675,24],[5587,22,5675,26],[5587,26,5675,30],[5587,27,5675,31,"pendingToken"],[5588,6,5676,8],[5588,7,5676,9],[5589,4,5677,4],[5589,5,5677,5],[5590,4,5678,4],[5591,0,5679,0],[5592,0,5680,0],[5593,0,5681,0],[5594,0,5682,0],[5595,0,5683,0],[5596,0,5684,0],[5597,0,5685,0],[5598,0,5686,0],[5599,4,5687,4,"SAMLAuthCredential"],[5599,22,5687,22],[5599,23,5687,23,"fromJSON"],[5599,31,5687,31],[5599,34,5687,34],[5599,44,5687,44,"json"],[5599,48,5687,48],[5599,50,5687,50],[5600,6,5688,8],[5600,10,5688,12,"obj"],[5600,13,5688,15],[5600,16,5688,18],[5600,23,5688,25,"json"],[5600,27,5688,29],[5600,32,5688,34],[5600,40,5688,42],[5600,43,5688,45,"JSON"],[5600,47,5688,49],[5600,48,5688,50,"parse"],[5600,53,5688,55],[5600,54,5688,56,"json"],[5600,58,5688,60],[5600,59,5688,61],[5600,62,5688,64,"json"],[5600,66,5688,68],[5601,6,5689,8],[5601,10,5689,12,"providerId"],[5601,20,5689,22],[5601,23,5689,25,"obj"],[5601,26,5689,28],[5601,27,5689,29,"providerId"],[5601,37,5689,39],[5602,8,5689,41,"signInMethod"],[5602,20,5689,53],[5602,23,5689,56,"obj"],[5602,26,5689,59],[5602,27,5689,60,"signInMethod"],[5602,39,5689,72],[5603,8,5689,74,"pendingToken"],[5603,20,5689,86],[5603,23,5689,89,"obj"],[5603,26,5689,92],[5603,27,5689,93,"pendingToken"],[5603,39,5689,105],[5604,6,5690,8],[5604,10,5690,12],[5604,11,5690,13,"providerId"],[5604,21,5690,23],[5604,25,5691,12],[5604,26,5691,13,"signInMethod"],[5604,38,5691,25],[5604,42,5692,12],[5604,43,5692,13,"pendingToken"],[5604,55,5692,25],[5604,59,5693,12,"providerId"],[5604,69,5693,22],[5604,74,5693,27,"signInMethod"],[5604,86,5693,39],[5604,88,5693,41],[5605,8,5694,12],[5605,15,5694,19],[5605,19,5694,23],[5606,6,5695,8],[5607,6,5696,8],[5607,13,5696,15],[5607,17,5696,19,"SAMLAuthCredential"],[5607,35,5696,37],[5607,36,5696,38,"providerId"],[5607,46,5696,48],[5607,48,5696,50,"pendingToken"],[5607,60,5696,62],[5607,61,5696,63],[5608,4,5697,4],[5608,5,5697,5],[5609,4,5698,4],[5610,0,5699,0],[5611,0,5700,0],[5612,0,5701,0],[5613,0,5702,0],[5614,4,5703,4,"SAMLAuthCredential"],[5614,22,5703,22],[5614,23,5703,23,"_create"],[5614,30,5703,30],[5614,33,5703,33],[5614,43,5703,43,"providerId"],[5614,53,5703,53],[5614,55,5703,55,"pendingToken"],[5614,67,5703,67],[5614,69,5703,69],[5615,6,5704,8],[5615,13,5704,15],[5615,17,5704,19,"SAMLAuthCredential"],[5615,35,5704,37],[5615,36,5704,38,"providerId"],[5615,46,5704,48],[5615,48,5704,50,"pendingToken"],[5615,60,5704,62],[5615,61,5704,63],[5616,4,5705,4],[5616,5,5705,5],[5617,4,5706,4,"SAMLAuthCredential"],[5617,22,5706,22],[5617,23,5706,23,"prototype"],[5617,32,5706,32],[5617,33,5706,33,"buildRequest"],[5617,45,5706,45],[5617,48,5706,48],[5617,60,5706,60],[5618,6,5707,8],[5618,13,5707,15],[5619,8,5708,12,"requestUri"],[5619,18,5708,22],[5619,20,5708,24,"IDP_REQUEST_URI"],[5619,35,5708,39],[5620,8,5709,12,"returnSecureToken"],[5620,25,5709,29],[5620,27,5709,31],[5620,31,5709,35],[5621,8,5710,12,"pendingToken"],[5621,20,5710,24],[5621,22,5710,26],[5621,26,5710,30],[5621,27,5710,31,"pendingToken"],[5622,6,5711,8],[5622,7,5711,9],[5623,4,5712,4],[5623,5,5712,5],[5624,4,5713,4],[5624,11,5713,11,"SAMLAuthCredential"],[5624,29,5713,29],[5625,2,5714,0],[5625,3,5714,1],[5625,4,5714,2,"AuthCredential"],[5625,18,5714,16],[5625,19,5714,18],[5627,2,5716,0],[5628,0,5717,0],[5629,0,5718,0],[5630,0,5719,0],[5631,0,5720,0],[5632,0,5721,0],[5633,0,5722,0],[5634,0,5723,0],[5635,0,5724,0],[5636,0,5725,0],[5637,0,5726,0],[5638,0,5727,0],[5639,0,5728,0],[5640,0,5729,0],[5641,0,5730,0],[5642,0,5731,0],[5643,2,5732,0],[5643,6,5732,4,"SAML_PROVIDER_PREFIX"],[5643,26,5732,24],[5643,29,5732,27],[5643,36,5732,34],[5644,2,5733,0],[5645,0,5734,0],[5646,0,5735,0],[5647,0,5736,0],[5648,0,5737,0],[5649,2,5738,0],[5649,6,5738,4,"SAMLAuthProvider"],[5649,22,5738,20],[5649,25,5738,23],[5649,38,5738,38],[5649,48,5738,48,"_super"],[5649,54,5738,54],[5649,56,5738,56],[5650,4,5739,4,"tslib"],[5650,9,5739,9],[5650,10,5739,10,"__extends"],[5650,19,5739,19],[5650,20,5739,20,"SAMLAuthProvider"],[5650,36,5739,36],[5650,38,5739,38,"_super"],[5650,44,5739,44],[5650,45,5739,45],[5651,4,5740,4],[5652,0,5741,0],[5653,0,5742,0],[5654,0,5743,0],[5655,4,5744,4],[5655,13,5744,13,"SAMLAuthProvider"],[5655,29,5744,29,"SAMLAuthProvider"],[5655,30,5744,30,"providerId"],[5655,40,5744,40],[5655,42,5744,42],[5656,6,5745,8,"_assert"],[5656,13,5745,15],[5656,14,5745,16,"providerId"],[5656,24,5745,26],[5656,25,5745,27,"startsWith"],[5656,35,5745,37],[5656,36,5745,38,"SAML_PROVIDER_PREFIX"],[5656,56,5745,58],[5656,57,5745,59],[5656,59,5745,61],[5656,75,5745,77],[5656,76,5745,78],[5656,110,5745,112],[5656,111,5745,113],[5657,6,5746,8],[5657,13,5746,15,"_super"],[5657,19,5746,21],[5657,20,5746,22,"call"],[5657,24,5746,26],[5657,25,5746,27],[5657,29,5746,31],[5657,31,5746,33,"providerId"],[5657,41,5746,43],[5657,42,5746,44],[5657,46,5746,48],[5657,50,5746,52],[5658,4,5747,4],[5659,4,5748,4],[5660,0,5749,0],[5661,0,5750,0],[5662,0,5751,0],[5663,0,5752,0],[5664,0,5753,0],[5665,0,5754,0],[5666,0,5755,0],[5667,0,5756,0],[5668,0,5757,0],[5669,0,5758,0],[5670,0,5759,0],[5671,0,5760,0],[5672,0,5761,0],[5673,0,5762,0],[5674,0,5763,0],[5675,4,5764,4,"SAMLAuthProvider"],[5675,20,5764,20],[5675,21,5764,21,"credentialFromResult"],[5675,41,5764,41],[5675,44,5764,44],[5675,54,5764,54,"userCredential"],[5675,68,5764,68],[5675,70,5764,70],[5676,6,5765,8],[5676,13,5765,15,"SAMLAuthProvider"],[5676,29,5765,31],[5676,30,5765,32,"samlCredentialFromTaggedObject"],[5676,60,5765,62],[5676,61,5765,63,"userCredential"],[5676,75,5765,77],[5676,76,5765,78],[5677,4,5766,4],[5677,5,5766,5],[5678,4,5767,4],[5679,0,5768,0],[5680,0,5769,0],[5681,0,5770,0],[5682,0,5771,0],[5683,0,5772,0],[5684,4,5773,4,"SAMLAuthProvider"],[5684,20,5773,20],[5684,21,5773,21,"credentialFromError"],[5684,40,5773,40],[5684,43,5773,43],[5684,53,5773,53,"error"],[5684,58,5773,58],[5684,60,5773,60],[5685,6,5774,8],[5685,13,5774,15,"SAMLAuthProvider"],[5685,29,5774,31],[5685,30,5774,32,"samlCredentialFromTaggedObject"],[5685,60,5774,62],[5685,61,5774,64,"error"],[5685,66,5774,69],[5685,67,5774,70,"customData"],[5685,77,5774,80],[5685,81,5774,84],[5685,82,5774,85],[5685,83,5774,87],[5685,84,5774,88],[5686,4,5775,4],[5686,5,5775,5],[5687,4,5776,4],[5688,0,5777,0],[5689,0,5778,0],[5690,0,5779,0],[5691,4,5780,4,"SAMLAuthProvider"],[5691,20,5780,20],[5691,21,5780,21,"credentialFromJSON"],[5691,39,5780,39],[5691,42,5780,42],[5691,52,5780,52,"json"],[5691,56,5780,56],[5691,58,5780,58],[5692,6,5781,8],[5692,10,5781,12,"credential"],[5692,20,5781,22],[5692,23,5781,25,"SAMLAuthCredential"],[5692,41,5781,43],[5692,42,5781,44,"fromJSON"],[5692,50,5781,52],[5692,51,5781,53,"json"],[5692,55,5781,57],[5692,56,5781,58],[5693,6,5782,8,"_assert"],[5693,13,5782,15],[5693,14,5782,16,"credential"],[5693,24,5782,26],[5693,26,5782,28],[5693,42,5782,44],[5693,43,5782,45],[5693,77,5782,79],[5693,78,5782,80],[5694,6,5783,8],[5694,13,5783,15,"credential"],[5694,23,5783,25],[5695,4,5784,4],[5695,5,5784,5],[5696,4,5785,4,"SAMLAuthProvider"],[5696,20,5785,20],[5696,21,5785,21,"samlCredentialFromTaggedObject"],[5696,51,5785,51],[5696,54,5785,54],[5696,64,5785,64,"_a"],[5696,66,5785,66],[5696,68,5785,68],[5697,6,5786,8],[5697,10,5786,12,"tokenResponse"],[5697,23,5786,25],[5697,26,5786,28,"_a"],[5697,28,5786,30],[5697,29,5786,31,"_tokenResponse"],[5697,43,5786,45],[5698,6,5787,8],[5698,10,5787,12],[5698,11,5787,13,"tokenResponse"],[5698,24,5787,26],[5698,26,5787,28],[5699,8,5788,12],[5699,15,5788,19],[5699,19,5788,23],[5700,6,5789,8],[5701,6,5790,8],[5701,10,5790,12,"_b"],[5701,12,5790,14],[5701,15,5790,17,"tokenResponse"],[5701,28,5790,30],[5702,8,5790,32,"pendingToken"],[5702,20,5790,44],[5702,23,5790,47,"_b"],[5702,25,5790,49],[5702,26,5790,50,"pendingToken"],[5702,38,5790,62],[5703,8,5790,64,"providerId"],[5703,18,5790,74],[5703,21,5790,77,"_b"],[5703,23,5790,79],[5703,24,5790,80,"providerId"],[5703,34,5790,90],[5704,6,5791,8],[5704,10,5791,12],[5704,11,5791,13,"pendingToken"],[5704,23,5791,25],[5704,27,5791,29],[5704,28,5791,30,"providerId"],[5704,38,5791,40],[5704,40,5791,42],[5705,8,5792,12],[5705,15,5792,19],[5705,19,5792,23],[5706,6,5793,8],[5707,6,5794,8],[5707,10,5794,12],[5708,8,5795,12],[5708,15,5795,19,"SAMLAuthCredential"],[5708,33,5795,37],[5708,34,5795,38,"_create"],[5708,41,5795,45],[5708,42,5795,46,"providerId"],[5708,52,5795,56],[5708,54,5795,58,"pendingToken"],[5708,66,5795,70],[5708,67,5795,71],[5709,6,5796,8],[5709,7,5796,9],[5709,8,5797,8],[5709,15,5797,15,"e"],[5709,16,5797,16],[5709,18,5797,18],[5710,8,5798,12],[5710,15,5798,19],[5710,19,5798,23],[5711,6,5799,8],[5712,4,5800,4],[5712,5,5800,5],[5713,4,5801,4],[5713,11,5801,11,"SAMLAuthProvider"],[5713,27,5801,27],[5714,2,5802,0],[5714,3,5802,1],[5714,4,5802,2,"FederatedAuthProvider"],[5714,25,5802,23],[5714,26,5802,25],[5716,2,5804,0],[5717,0,5805,0],[5718,0,5806,0],[5719,0,5807,0],[5720,0,5808,0],[5721,0,5809,0],[5722,0,5810,0],[5723,0,5811,0],[5724,0,5812,0],[5725,0,5813,0],[5726,0,5814,0],[5727,0,5815,0],[5728,0,5816,0],[5729,0,5817,0],[5730,0,5818,0],[5731,0,5819,0],[5732,2,5820,0],[5733,0,5821,0],[5734,0,5822,0],[5735,0,5823,0],[5736,0,5824,0],[5737,0,5825,0],[5738,0,5826,0],[5739,0,5827,0],[5740,0,5828,0],[5741,0,5829,0],[5742,0,5830,0],[5743,0,5831,0],[5744,0,5832,0],[5745,0,5833,0],[5746,0,5834,0],[5747,0,5835,0],[5748,0,5836,0],[5749,0,5837,0],[5750,0,5838,0],[5751,0,5839,0],[5752,0,5840,0],[5753,0,5841,0],[5754,0,5842,0],[5755,0,5843,0],[5756,0,5844,0],[5757,0,5845,0],[5758,0,5846,0],[5759,0,5847,0],[5760,0,5848,0],[5761,0,5849,0],[5762,0,5850,0],[5763,0,5851,0],[5764,0,5852,0],[5765,0,5853,0],[5766,0,5854,0],[5767,0,5855,0],[5768,0,5856,0],[5769,0,5857,0],[5770,0,5858,0],[5771,2,5859,0],[5771,6,5859,4,"TwitterAuthProvider"],[5771,25,5859,23],[5771,28,5859,26],[5771,41,5859,41],[5771,51,5859,51,"_super"],[5771,57,5859,57],[5771,59,5859,59],[5772,4,5860,4,"tslib"],[5772,9,5860,9],[5772,10,5860,10,"__extends"],[5772,19,5860,19],[5772,20,5860,20,"TwitterAuthProvider"],[5772,39,5860,39],[5772,41,5860,41,"_super"],[5772,47,5860,47],[5772,48,5860,48],[5773,4,5861,4],[5773,13,5861,13,"TwitterAuthProvider"],[5773,32,5861,32,"TwitterAuthProvider"],[5773,33,5861,32],[5773,35,5861,35],[5774,6,5862,8],[5774,13,5862,15,"_super"],[5774,19,5862,21],[5774,20,5862,22,"call"],[5774,24,5862,26],[5774,25,5862,27],[5774,29,5862,31],[5774,31,5862,33],[5774,44,5862,46],[5774,45,5862,47],[5774,69,5862,71],[5774,70,5862,72],[5774,74,5862,76],[5774,78,5862,80],[5775,4,5863,4],[5776,4,5864,4],[5777,0,5865,0],[5778,0,5866,0],[5779,0,5867,0],[5780,0,5868,0],[5781,0,5869,0],[5782,4,5870,4,"TwitterAuthProvider"],[5782,23,5870,23],[5782,24,5870,24,"credential"],[5782,34,5870,34],[5782,37,5870,37],[5782,47,5870,47,"token"],[5782,52,5870,52],[5782,54,5870,54,"secret"],[5782,60,5870,60],[5782,62,5870,62],[5783,6,5871,8],[5783,13,5871,15,"OAuthCredential"],[5783,28,5871,30],[5783,29,5871,31,"_fromParams"],[5783,40,5871,42],[5783,41,5871,43],[5784,8,5872,12,"providerId"],[5784,18,5872,22],[5784,20,5872,24,"TwitterAuthProvider"],[5784,39,5872,43],[5784,40,5872,44,"PROVIDER_ID"],[5784,51,5872,55],[5785,8,5873,12,"signInMethod"],[5785,20,5873,24],[5785,22,5873,26,"TwitterAuthProvider"],[5785,41,5873,45],[5785,42,5873,46,"TWITTER_SIGN_IN_METHOD"],[5785,64,5873,68],[5786,8,5874,12,"oauthToken"],[5786,18,5874,22],[5786,20,5874,24,"token"],[5786,25,5874,29],[5787,8,5875,12,"oauthTokenSecret"],[5787,24,5875,28],[5787,26,5875,30,"secret"],[5788,6,5876,8],[5788,7,5876,9],[5788,8,5876,10],[5789,4,5877,4],[5789,5,5877,5],[5790,4,5878,4],[5791,0,5879,0],[5792,0,5880,0],[5793,0,5881,0],[5794,0,5882,0],[5795,4,5883,4,"TwitterAuthProvider"],[5795,23,5883,23],[5795,24,5883,24,"credentialFromResult"],[5795,44,5883,44],[5795,47,5883,47],[5795,57,5883,57,"userCredential"],[5795,71,5883,71],[5795,73,5883,73],[5796,6,5884,8],[5796,13,5884,15,"TwitterAuthProvider"],[5796,32,5884,34],[5796,33,5884,35,"credentialFromTaggedObject"],[5796,59,5884,61],[5796,60,5884,62,"userCredential"],[5796,74,5884,76],[5796,75,5884,77],[5797,4,5885,4],[5797,5,5885,5],[5798,4,5886,4],[5799,0,5887,0],[5800,0,5888,0],[5801,0,5889,0],[5802,0,5890,0],[5803,0,5891,0],[5804,4,5892,4,"TwitterAuthProvider"],[5804,23,5892,23],[5804,24,5892,24,"credentialFromError"],[5804,43,5892,43],[5804,46,5892,46],[5804,56,5892,56,"error"],[5804,61,5892,61],[5804,63,5892,63],[5805,6,5893,8],[5805,13,5893,15,"TwitterAuthProvider"],[5805,32,5893,34],[5805,33,5893,35,"credentialFromTaggedObject"],[5805,59,5893,61],[5805,60,5893,63,"error"],[5805,65,5893,68],[5805,66,5893,69,"customData"],[5805,76,5893,79],[5805,80,5893,83],[5805,81,5893,84],[5805,82,5893,86],[5805,83,5893,87],[5806,4,5894,4],[5806,5,5894,5],[5807,4,5895,4,"TwitterAuthProvider"],[5807,23,5895,23],[5807,24,5895,24,"credentialFromTaggedObject"],[5807,50,5895,50],[5807,53,5895,53],[5807,63,5895,63,"_a"],[5807,65,5895,65],[5807,67,5895,67],[5808,6,5896,8],[5808,10,5896,12,"tokenResponse"],[5808,23,5896,25],[5808,26,5896,28,"_a"],[5808,28,5896,30],[5808,29,5896,31,"_tokenResponse"],[5808,43,5896,45],[5809,6,5897,8],[5809,10,5897,12],[5809,11,5897,13,"tokenResponse"],[5809,24,5897,26],[5809,26,5897,28],[5810,8,5898,12],[5810,15,5898,19],[5810,19,5898,23],[5811,6,5899,8],[5812,6,5900,8],[5812,10,5900,12,"_b"],[5812,12,5900,14],[5812,15,5900,17,"tokenResponse"],[5812,28,5900,30],[5813,8,5900,32,"oauthAccessToken"],[5813,24,5900,48],[5813,27,5900,51,"_b"],[5813,29,5900,53],[5813,30,5900,54,"oauthAccessToken"],[5813,46,5900,70],[5814,8,5900,72,"oauthTokenSecret"],[5814,24,5900,88],[5814,27,5900,91,"_b"],[5814,29,5900,93],[5814,30,5900,94,"oauthTokenSecret"],[5814,46,5900,110],[5815,6,5901,8],[5815,10,5901,12],[5815,11,5901,13,"oauthAccessToken"],[5815,27,5901,29],[5815,31,5901,33],[5815,32,5901,34,"oauthTokenSecret"],[5815,48,5901,50],[5815,50,5901,52],[5816,8,5902,12],[5816,15,5902,19],[5816,19,5902,23],[5817,6,5903,8],[5818,6,5904,8],[5818,10,5904,12],[5819,8,5905,12],[5819,15,5905,19,"TwitterAuthProvider"],[5819,34,5905,38],[5819,35,5905,39,"credential"],[5819,45,5905,49],[5819,46,5905,50,"oauthAccessToken"],[5819,62,5905,66],[5819,64,5905,68,"oauthTokenSecret"],[5819,80,5905,84],[5819,81,5905,85],[5820,6,5906,8],[5820,7,5906,9],[5820,8,5907,8],[5820,15,5907,15,"_c"],[5820,17,5907,17],[5820,19,5907,19],[5821,8,5908,12],[5821,15,5908,19],[5821,19,5908,23],[5822,6,5909,8],[5823,4,5910,4],[5823,5,5910,5],[5824,4,5911,4],[5825,4,5912,4,"TwitterAuthProvider"],[5825,23,5912,23],[5825,24,5912,24,"TWITTER_SIGN_IN_METHOD"],[5825,46,5912,46],[5825,49,5912,49],[5825,62,5912,62],[5825,63,5912,63],[5826,4,5913,4],[5827,4,5914,4,"TwitterAuthProvider"],[5827,23,5914,23],[5827,24,5914,24,"PROVIDER_ID"],[5827,35,5914,35],[5827,38,5914,38],[5827,51,5914,51],[5827,52,5914,52],[5828,4,5915,4],[5828,11,5915,11,"TwitterAuthProvider"],[5828,30,5915,30],[5829,2,5916,0],[5829,3,5916,1],[5829,4,5916,2,"BaseOAuthProvider"],[5829,21,5916,19],[5829,22,5916,21],[5831,2,5918,0],[5832,0,5919,0],[5833,0,5920,0],[5834,0,5921,0],[5835,0,5922,0],[5836,0,5923,0],[5837,0,5924,0],[5838,0,5925,0],[5839,0,5926,0],[5840,0,5927,0],[5841,0,5928,0],[5842,0,5929,0],[5843,0,5930,0],[5844,0,5931,0],[5845,0,5932,0],[5846,0,5933,0],[5847,2,5934,0],[5847,11,5934,9,"signUp"],[5847,17,5934,15,"signUp"],[5847,18,5934,16,"auth"],[5847,22,5934,20],[5847,24,5934,22,"request"],[5847,31,5934,29],[5847,33,5934,31],[5848,4,5935,4],[5848,11,5935,11,"tslib"],[5848,16,5935,16],[5848,17,5935,17,"__awaiter"],[5848,26,5935,26],[5848,27,5935,27],[5848,31,5935,31],[5848,33,5935,31,"undefined"],[5848,42,5935,31],[5848,44,5935,31,"undefined"],[5848,53,5935,31],[5848,55,5935,49],[5848,67,5935,61],[5849,6,5936,8],[5849,13,5936,15,"tslib"],[5849,18,5936,20],[5849,19,5936,21,"__generator"],[5849,30,5936,32],[5849,31,5936,33],[5849,35,5936,37],[5849,37,5936,39],[5849,47,5936,49,"_a"],[5849,49,5936,51],[5849,51,5936,53],[5850,8,5937,12],[5850,15,5937,19],[5850,16,5937,20],[5850,17,5937,21],[5850,18,5937,22],[5850,30,5937,34,"_performSignInRequest"],[5850,51,5937,55],[5850,52,5937,56,"auth"],[5850,56,5937,60],[5850,58,5937,62],[5850,64,5937,68],[5850,65,5937,69],[5850,88,5937,92],[5850,109,5937,113],[5850,110,5937,114],[5850,134,5937,138,"_addTidIfNecessary"],[5850,152,5937,156],[5850,153,5937,157,"auth"],[5850,157,5937,161],[5850,159,5937,163,"request"],[5850,166,5937,170],[5850,167,5937,171],[5850,168,5937,172],[5850,169,5937,173],[5851,6,5938,8],[5851,7,5938,9],[5851,8,5938,10],[5852,4,5939,4],[5852,5,5939,5],[5852,6,5939,6],[5853,2,5940,0],[5855,2,5942,0],[5856,0,5943,0],[5857,0,5944,0],[5858,0,5945,0],[5859,0,5946,0],[5860,0,5947,0],[5861,0,5948,0],[5862,0,5949,0],[5863,0,5950,0],[5864,0,5951,0],[5865,0,5952,0],[5866,0,5953,0],[5867,0,5954,0],[5868,0,5955,0],[5869,0,5956,0],[5870,0,5957,0],[5871,2,5958,0],[5871,6,5958,4,"UserCredentialImpl"],[5871,24,5958,22],[5871,27,5958,25],[5871,40,5958,40],[5871,52,5958,52],[5872,4,5959,4],[5872,13,5959,13,"UserCredentialImpl"],[5872,31,5959,31,"UserCredentialImpl"],[5872,32,5959,32,"params"],[5872,38,5959,38],[5872,40,5959,40],[5873,6,5960,8],[5873,10,5960,12],[5873,11,5960,13,"user"],[5873,15,5960,17],[5873,18,5960,20,"params"],[5873,24,5960,26],[5873,25,5960,27,"user"],[5873,29,5960,31],[5874,6,5961,8],[5874,10,5961,12],[5874,11,5961,13,"providerId"],[5874,21,5961,23],[5874,24,5961,26,"params"],[5874,30,5961,32],[5874,31,5961,33,"providerId"],[5874,41,5961,43],[5875,6,5962,8],[5875,10,5962,12],[5875,11,5962,13,"_tokenResponse"],[5875,25,5962,27],[5875,28,5962,30,"params"],[5875,34,5962,36],[5875,35,5962,37,"_tokenResponse"],[5875,49,5962,51],[5876,6,5963,8],[5876,10,5963,12],[5876,11,5963,13,"operationType"],[5876,24,5963,26],[5876,27,5963,29,"params"],[5876,33,5963,35],[5876,34,5963,36,"operationType"],[5876,47,5963,49],[5877,4,5964,4],[5878,4,5965,4,"UserCredentialImpl"],[5878,22,5965,22],[5878,23,5965,23,"_fromIdTokenResponse"],[5878,43,5965,43],[5878,46,5965,46],[5878,56,5965,56,"auth"],[5878,60,5965,60],[5878,62,5965,62,"operationType"],[5878,75,5965,75],[5878,77,5965,77,"idTokenResponse"],[5878,92,5965,92],[5878,94,5965,94,"isAnonymous"],[5878,105,5965,105],[5878,107,5965,107],[5879,6,5966,8],[5879,10,5966,12,"isAnonymous"],[5879,21,5966,23],[5879,26,5966,23,"undefined"],[5879,35,5966,34],[5879,37,5966,36],[5880,8,5966,38,"isAnonymous"],[5880,19,5966,49],[5880,22,5966,52],[5880,27,5966,57],[5881,6,5966,59],[5882,6,5967,8],[5882,13,5967,15,"tslib"],[5882,18,5967,20],[5882,19,5967,21,"__awaiter"],[5882,28,5967,30],[5882,29,5967,31],[5882,33,5967,35],[5882,35,5967,35,"undefined"],[5882,44,5967,35],[5882,46,5967,35,"undefined"],[5882,55,5967,35],[5882,57,5967,53],[5882,69,5967,65],[5883,8,5968,12],[5883,12,5968,16,"user"],[5883,16,5968,20],[5883,18,5968,22,"providerId"],[5883,28,5968,32],[5883,30,5968,34,"userCred"],[5883,38,5968,42],[5884,8,5969,12],[5884,15,5969,19,"tslib"],[5884,20,5969,24],[5884,21,5969,25,"__generator"],[5884,32,5969,36],[5884,33,5969,37],[5884,37,5969,41],[5884,39,5969,43],[5884,49,5969,53,"_a"],[5884,51,5969,55],[5884,53,5969,57],[5885,10,5970,16],[5885,18,5970,24,"_a"],[5885,20,5970,26],[5885,21,5970,27,"label"],[5885,26,5970,32],[5886,12,5971,20],[5886,17,5971,25],[5886,18,5971,26],[5887,14,5971,28],[5887,21,5971,35],[5887,22,5971,36],[5887,23,5971,37],[5887,24,5971,38],[5887,35,5971,49,"UserImpl"],[5887,43,5971,57],[5887,44,5971,58,"_fromIdTokenResponse"],[5887,64,5971,78],[5887,65,5971,79,"auth"],[5887,69,5971,83],[5887,71,5971,85,"idTokenResponse"],[5887,86,5971,100],[5887,88,5971,102,"isAnonymous"],[5887,99,5971,113],[5887,100,5971,114],[5887,101,5971,115],[5888,12,5972,20],[5888,17,5972,25],[5888,18,5972,26],[5889,14,5973,24,"user"],[5889,18,5973,28],[5889,21,5973,31,"_a"],[5889,23,5973,33],[5889,24,5973,34,"sent"],[5889,28,5973,38],[5889,29,5973,39],[5889,30,5973,40],[5890,14,5974,24,"providerId"],[5890,24,5974,34],[5890,27,5974,37,"providerIdForResponse"],[5890,48,5974,58],[5890,49,5974,59,"idTokenResponse"],[5890,64,5974,74],[5890,65,5974,75],[5891,14,5975,24,"userCred"],[5891,22,5975,32],[5891,25,5975,35],[5891,29,5975,39,"UserCredentialImpl"],[5891,47,5975,57],[5891,48,5975,58],[5892,16,5976,28,"user"],[5892,20,5976,32],[5892,22,5976,34,"user"],[5892,26,5976,38],[5893,16,5977,28,"providerId"],[5893,26,5977,38],[5893,28,5977,40,"providerId"],[5893,38,5977,50],[5894,16,5978,28,"_tokenResponse"],[5894,30,5978,42],[5894,32,5978,44,"idTokenResponse"],[5894,47,5978,59],[5895,16,5979,28,"operationType"],[5895,29,5979,41],[5895,31,5979,43,"operationType"],[5896,14,5980,24],[5896,15,5980,25],[5896,16,5980,26],[5897,14,5981,24],[5897,21,5981,31],[5897,22,5981,32],[5897,23,5981,33],[5897,24,5981,34],[5897,36,5981,46,"userCred"],[5897,44,5981,54],[5897,45,5981,55],[5898,10,5982,16],[5899,8,5983,12],[5899,9,5983,13],[5899,10,5983,14],[5900,6,5984,8],[5900,7,5984,9],[5900,8,5984,10],[5901,4,5985,4],[5901,5,5985,5],[5902,4,5986,4,"UserCredentialImpl"],[5902,22,5986,22],[5902,23,5986,23,"_forOperation"],[5902,36,5986,36],[5902,39,5986,39],[5902,49,5986,49,"user"],[5902,53,5986,53],[5902,55,5986,55,"operationType"],[5902,68,5986,68],[5902,70,5986,70,"response"],[5902,78,5986,78],[5902,80,5986,80],[5903,6,5987,8],[5903,13,5987,15,"tslib"],[5903,18,5987,20],[5903,19,5987,21,"__awaiter"],[5903,28,5987,30],[5903,29,5987,31],[5903,33,5987,35],[5903,35,5987,35,"undefined"],[5903,44,5987,35],[5903,46,5987,35,"undefined"],[5903,55,5987,35],[5903,57,5987,53],[5903,69,5987,65],[5904,8,5988,12],[5904,12,5988,16,"providerId"],[5904,22,5988,26],[5905,8,5989,12],[5905,15,5989,19,"tslib"],[5905,20,5989,24],[5905,21,5989,25,"__generator"],[5905,32,5989,36],[5905,33,5989,37],[5905,37,5989,41],[5905,39,5989,43],[5905,49,5989,53,"_a"],[5905,51,5989,55],[5905,53,5989,57],[5906,10,5990,16],[5906,18,5990,24,"_a"],[5906,20,5990,26],[5906,21,5990,27,"label"],[5906,26,5990,32],[5907,12,5991,20],[5907,17,5991,25],[5907,18,5991,26],[5908,14,5991,28],[5908,21,5991,35],[5908,22,5991,36],[5908,23,5991,37],[5908,24,5991,38],[5908,35,5991,49,"user"],[5908,39,5991,53],[5908,40,5991,54,"_updateTokensIfNecessary"],[5908,64,5991,78],[5908,65,5991,79,"response"],[5908,73,5991,87],[5908,75,5991,89],[5908,87,5991,102],[5908,91,5991,106],[5908,92,5991,107],[5908,93,5991,108],[5909,12,5992,20],[5909,17,5992,25],[5909,18,5992,26],[5910,14,5993,24,"_a"],[5910,16,5993,26],[5910,17,5993,27,"sent"],[5910,21,5993,31],[5910,22,5993,32],[5910,23,5993,33],[5911,14,5994,24,"providerId"],[5911,24,5994,34],[5911,27,5994,37,"providerIdForResponse"],[5911,48,5994,58],[5911,49,5994,59,"response"],[5911,57,5994,67],[5911,58,5994,68],[5912,14,5995,24],[5912,21,5995,31],[5912,22,5995,32],[5912,23,5995,33],[5912,24,5995,34],[5912,36,5995,46],[5912,40,5995,50,"UserCredentialImpl"],[5912,58,5995,68],[5912,59,5995,69],[5913,16,5996,32,"user"],[5913,20,5996,36],[5913,22,5996,38,"user"],[5913,26,5996,42],[5914,16,5997,32,"providerId"],[5914,26,5997,42],[5914,28,5997,44,"providerId"],[5914,38,5997,54],[5915,16,5998,32,"_tokenResponse"],[5915,30,5998,46],[5915,32,5998,48,"response"],[5915,40,5998,56],[5916,16,5999,32,"operationType"],[5916,29,5999,45],[5916,31,5999,47,"operationType"],[5917,14,6000,28],[5917,15,6000,29],[5917,16,6000,30],[5917,17,6000,31],[5918,10,6001,16],[5919,8,6002,12],[5919,9,6002,13],[5919,10,6002,14],[5920,6,6003,8],[5920,7,6003,9],[5920,8,6003,10],[5921,4,6004,4],[5921,5,6004,5],[5922,4,6005,4],[5922,11,6005,11,"UserCredentialImpl"],[5922,29,6005,29],[5923,2,6006,0],[5923,3,6006,1],[5923,4,6006,2],[5923,5,6006,4],[5924,2,6007,0],[5924,11,6007,9,"providerIdForResponse"],[5924,32,6007,30,"providerIdForResponse"],[5924,33,6007,31,"response"],[5924,41,6007,39],[5924,43,6007,41],[5925,4,6008,4],[5925,8,6008,8,"response"],[5925,16,6008,16],[5925,17,6008,17,"providerId"],[5925,27,6008,27],[5925,29,6008,29],[5926,6,6009,8],[5926,13,6009,15,"response"],[5926,21,6009,23],[5926,22,6009,24,"providerId"],[5926,32,6009,34],[5927,4,6010,4],[5928,4,6011,4],[5928,8,6011,8],[5928,21,6011,21],[5928,25,6011,25,"response"],[5928,33,6011,33],[5928,35,6011,35],[5929,6,6012,8],[5929,13,6012,15],[5929,20,6012,22],[5929,21,6012,23],[5930,4,6013,4],[5931,4,6014,4],[5931,11,6014,11],[5931,15,6014,15],[5932,2,6015,0],[5934,2,6017,0],[5935,0,6018,0],[5936,0,6019,0],[5937,0,6020,0],[5938,0,6021,0],[5939,0,6022,0],[5940,0,6023,0],[5941,0,6024,0],[5942,0,6025,0],[5943,0,6026,0],[5944,0,6027,0],[5945,0,6028,0],[5946,0,6029,0],[5947,0,6030,0],[5948,0,6031,0],[5949,0,6032,0],[5950,2,6033,0],[5951,0,6034,0],[5952,0,6035,0],[5953,0,6036,0],[5954,0,6037,0],[5955,0,6038,0],[5956,0,6039,0],[5957,0,6040,0],[5958,0,6041,0],[5959,0,6042,0],[5960,0,6043,0],[5961,0,6044,0],[5962,0,6045,0],[5963,0,6046,0],[5964,2,6047,0],[5964,11,6047,9,"signInAnonymously"],[5964,28,6047,26,"signInAnonymously"],[5964,29,6047,27,"auth"],[5964,33,6047,31],[5964,35,6047,33],[5965,4,6048,4],[5965,8,6048,8,"_a"],[5965,10,6048,10],[5966,4,6049,4],[5966,11,6049,11,"tslib"],[5966,16,6049,16],[5966,17,6049,17,"__awaiter"],[5966,26,6049,26],[5966,27,6049,27],[5966,31,6049,31],[5966,33,6049,31,"undefined"],[5966,42,6049,31],[5966,44,6049,31,"undefined"],[5966,53,6049,31],[5966,55,6049,49],[5966,67,6049,61],[5967,6,6050,8],[5967,10,6050,12,"authInternal"],[5967,22,6050,24],[5967,24,6050,26,"response"],[5967,32,6050,34],[5967,34,6050,36,"userCredential"],[5967,48,6050,50],[5968,6,6051,8],[5968,13,6051,15,"tslib"],[5968,18,6051,20],[5968,19,6051,21,"__generator"],[5968,30,6051,32],[5968,31,6051,33],[5968,35,6051,37],[5968,37,6051,39],[5968,47,6051,49,"_b"],[5968,49,6051,51],[5968,51,6051,53],[5969,8,6052,12],[5969,16,6052,20,"_b"],[5969,18,6052,22],[5969,19,6052,23,"label"],[5969,24,6052,28],[5970,10,6053,16],[5970,15,6053,21],[5970,16,6053,22],[5971,12,6054,20],[5971,16,6054,24,"app"],[5971,19,6054,27],[5971,20,6054,28,"_isFirebaseServerApp"],[5971,40,6054,48],[5971,41,6054,49,"auth"],[5971,45,6054,53],[5971,46,6054,54,"app"],[5971,49,6054,57],[5971,50,6054,58],[5971,52,6054,60],[5972,14,6055,24],[5972,21,6055,31],[5972,22,6055,32],[5972,23,6055,33],[5972,24,6055,34],[5972,36,6055,46,"Promise"],[5972,43,6055,53],[5972,44,6055,54,"reject"],[5972,50,6055,60],[5972,51,6055,61,"_serverAppCurrentUserOperationNotSupportedError"],[5972,98,6055,108],[5972,99,6055,109,"auth"],[5972,103,6055,113],[5972,104,6055,114],[5972,105,6055,115],[5972,106,6055,116],[5973,12,6056,20],[5974,12,6057,20,"authInternal"],[5974,24,6057,32],[5974,27,6057,35,"_castAuth"],[5974,36,6057,44],[5974,37,6057,45,"auth"],[5974,41,6057,49],[5974,42,6057,50],[5975,12,6058,20],[5975,19,6058,27],[5975,20,6058,28],[5975,21,6058,29],[5975,22,6058,30],[5975,33,6058,41,"authInternal"],[5975,45,6058,53],[5975,46,6058,54,"_initializationPromise"],[5975,68,6058,76],[5975,69,6058,77],[5976,10,6059,16],[5976,15,6059,21],[5976,16,6059,22],[5977,12,6060,20,"_b"],[5977,14,6060,22],[5977,15,6060,23,"sent"],[5977,19,6060,27],[5977,20,6060,28],[5977,21,6060,29],[5978,12,6061,20],[5978,16,6061,24],[5978,17,6061,25,"_a"],[5978,19,6061,27],[5978,22,6061,30,"authInternal"],[5978,34,6061,42],[5978,35,6061,43,"currentUser"],[5978,46,6061,54],[5978,52,6061,60],[5978,56,6061,64],[5978,60,6061,68,"_a"],[5978,62,6061,70],[5978,67,6061,70,"undefined"],[5978,76,6061,81],[5978,79,6061,81,"undefined"],[5978,88,6061,81],[5978,91,6061,93,"_a"],[5978,93,6061,95],[5978,94,6061,96,"isAnonymous"],[5978,105,6061,107],[5978,107,6061,109],[5979,14,6062,24],[5980,14,6063,24],[5980,21,6063,31],[5980,22,6063,32],[5980,23,6063,33],[5980,24,6063,34],[5980,36,6063,46],[5980,40,6063,50,"UserCredentialImpl"],[5980,58,6063,68],[5980,59,6063,69],[5981,16,6064,32,"user"],[5981,20,6064,36],[5981,22,6064,38,"authInternal"],[5981,34,6064,50],[5981,35,6064,51,"currentUser"],[5981,46,6064,62],[5982,16,6065,32,"providerId"],[5982,26,6065,42],[5982,28,6065,44],[5982,32,6065,48],[5983,16,6066,32,"operationType"],[5983,29,6066,45],[5983,31,6066,47],[5983,39,6066,55],[5983,40,6066,56],[5984,14,6067,28],[5984,15,6067,29],[5984,16,6067,30],[5984,17,6067,31],[5985,12,6068,20],[5986,12,6069,20],[5986,19,6069,27],[5986,20,6069,28],[5986,21,6069,29],[5986,22,6069,30],[5986,33,6069,41,"signUp"],[5986,39,6069,47],[5986,40,6069,48,"authInternal"],[5986,52,6069,60],[5986,54,6069,62],[5987,14,6070,28,"returnSecureToken"],[5987,31,6070,45],[5987,33,6070,47],[5988,12,6071,24],[5988,13,6071,25],[5988,14,6071,26],[5988,15,6071,27],[5989,10,6072,16],[5989,15,6072,21],[5989,16,6072,22],[5990,12,6073,20,"response"],[5990,20,6073,28],[5990,23,6073,31,"_b"],[5990,25,6073,33],[5990,26,6073,34,"sent"],[5990,30,6073,38],[5990,31,6073,39],[5990,32,6073,40],[5991,12,6074,20],[5991,19,6074,27],[5991,20,6074,28],[5991,21,6074,29],[5991,22,6074,30],[5991,33,6074,41,"UserCredentialImpl"],[5991,51,6074,59],[5991,52,6074,60,"_fromIdTokenResponse"],[5991,72,6074,80],[5991,73,6074,81,"authInternal"],[5991,85,6074,93],[5991,87,6074,95],[5991,95,6074,103],[5991,96,6074,104],[5991,125,6074,133,"response"],[5991,133,6074,141],[5991,135,6074,143],[5991,139,6074,147],[5991,140,6074,148],[5991,141,6074,149],[5992,10,6075,16],[5992,15,6075,21],[5992,16,6075,22],[5993,12,6076,20,"userCredential"],[5993,26,6076,34],[5993,29,6076,37,"_b"],[5993,31,6076,39],[5993,32,6076,40,"sent"],[5993,36,6076,44],[5993,37,6076,45],[5993,38,6076,46],[5994,12,6077,20],[5994,19,6077,27],[5994,20,6077,28],[5994,21,6077,29],[5994,22,6077,30],[5994,33,6077,41,"authInternal"],[5994,45,6077,53],[5994,46,6077,54,"_updateCurrentUser"],[5994,64,6077,72],[5994,65,6077,73,"userCredential"],[5994,79,6077,87],[5994,80,6077,88,"user"],[5994,84,6077,92],[5994,85,6077,93],[5994,86,6077,94],[5995,10,6078,16],[5995,15,6078,21],[5995,16,6078,22],[5996,12,6079,20,"_b"],[5996,14,6079,22],[5996,15,6079,23,"sent"],[5996,19,6079,27],[5996,20,6079,28],[5996,21,6079,29],[5997,12,6080,20],[5997,19,6080,27],[5997,20,6080,28],[5997,21,6080,29],[5997,22,6080,30],[5997,34,6080,42,"userCredential"],[5997,48,6080,56],[5997,49,6080,57],[5998,8,6081,12],[5999,6,6082,8],[5999,7,6082,9],[5999,8,6082,10],[6000,4,6083,4],[6000,5,6083,5],[6000,6,6083,6],[6001,2,6084,0],[6003,2,6086,0],[6004,0,6087,0],[6005,0,6088,0],[6006,0,6089,0],[6007,0,6090,0],[6008,0,6091,0],[6009,0,6092,0],[6010,0,6093,0],[6011,0,6094,0],[6012,0,6095,0],[6013,0,6096,0],[6014,0,6097,0],[6015,0,6098,0],[6016,0,6099,0],[6017,0,6100,0],[6018,0,6101,0],[6019,2,6102,0],[6019,6,6102,4,"MultiFactorError"],[6019,22,6102,20],[6019,25,6102,23],[6019,38,6102,38],[6019,48,6102,48,"_super"],[6019,54,6102,54],[6019,56,6102,56],[6020,4,6103,4,"tslib"],[6020,9,6103,9],[6020,10,6103,10,"__extends"],[6020,19,6103,19],[6020,20,6103,20,"MultiFactorError"],[6020,36,6103,36],[6020,38,6103,38,"_super"],[6020,44,6103,44],[6020,45,6103,45],[6021,4,6104,4],[6021,13,6104,13,"MultiFactorError"],[6021,29,6104,29,"MultiFactorError"],[6021,30,6104,30,"auth"],[6021,34,6104,34],[6021,36,6104,36,"error"],[6021,41,6104,41],[6021,43,6104,43,"operationType"],[6021,56,6104,56],[6021,58,6104,58,"user"],[6021,62,6104,62],[6021,64,6104,64],[6022,6,6105,8],[6022,10,6105,12,"_this"],[6022,15,6105,17],[6022,18,6105,20],[6022,22,6105,24],[6023,6,6106,8],[6023,10,6106,12,"_a"],[6023,12,6106,14],[6024,6,6107,8,"_this"],[6024,11,6107,13],[6024,14,6107,16,"_super"],[6024,20,6107,22],[6024,21,6107,23,"call"],[6024,25,6107,27],[6024,26,6107,28],[6024,30,6107,32],[6024,32,6107,34,"error"],[6024,37,6107,39],[6024,38,6107,40,"code"],[6024,42,6107,44],[6024,44,6107,46,"error"],[6024,49,6107,51],[6024,50,6107,52,"message"],[6024,57,6107,59],[6024,58,6107,60],[6024,62,6107,64],[6024,66,6107,68],[6025,6,6108,8,"_this"],[6025,11,6108,13],[6025,12,6108,14,"operationType"],[6025,25,6108,27],[6025,28,6108,30,"operationType"],[6025,41,6108,43],[6026,6,6109,8,"_this"],[6026,11,6109,13],[6026,12,6109,14,"user"],[6026,16,6109,18],[6026,19,6109,21,"user"],[6026,23,6109,25],[6027,6,6110,8],[6028,6,6111,8,"Object"],[6028,12,6111,14],[6028,13,6111,15,"setPrototypeOf"],[6028,27,6111,29],[6028,28,6111,30,"_this"],[6028,33,6111,35],[6028,35,6111,37,"MultiFactorError"],[6028,51,6111,53],[6028,52,6111,54,"prototype"],[6028,61,6111,63],[6028,62,6111,64],[6029,6,6112,8,"_this"],[6029,11,6112,13],[6029,12,6112,14,"customData"],[6029,22,6112,24],[6029,25,6112,27],[6030,8,6113,12,"appName"],[6030,15,6113,19],[6030,17,6113,21,"auth"],[6030,21,6113,25],[6030,22,6113,26,"name"],[6030,26,6113,30],[6031,8,6114,12,"tenantId"],[6031,16,6114,20],[6031,18,6114,22],[6031,19,6114,23,"_a"],[6031,21,6114,25],[6031,24,6114,28,"auth"],[6031,28,6114,32],[6031,29,6114,33,"tenantId"],[6031,37,6114,41],[6031,43,6114,47],[6031,47,6114,51],[6031,51,6114,55,"_a"],[6031,53,6114,57],[6031,58,6114,57,"undefined"],[6031,67,6114,68],[6031,70,6114,71,"_a"],[6031,72,6114,73],[6031,75,6114,76,"undefined"],[6031,84,6114,85],[6032,8,6115,12,"_serverResponse"],[6032,23,6115,27],[6032,25,6115,29,"error"],[6032,30,6115,34],[6032,31,6115,35,"customData"],[6032,41,6115,45],[6032,42,6115,46,"_serverResponse"],[6032,57,6115,61],[6033,8,6116,12,"operationType"],[6033,21,6116,25],[6033,23,6116,27,"operationType"],[6034,6,6117,8],[6034,7,6117,9],[6035,6,6118,8],[6035,13,6118,15,"_this"],[6035,18,6118,20],[6036,4,6119,4],[6037,4,6120,4,"MultiFactorError"],[6037,20,6120,20],[6037,21,6120,21,"_fromErrorAndOperation"],[6037,43,6120,43],[6037,46,6120,46],[6037,56,6120,56,"auth"],[6037,60,6120,60],[6037,62,6120,62,"error"],[6037,67,6120,67],[6037,69,6120,69,"operationType"],[6037,82,6120,82],[6037,84,6120,84,"user"],[6037,88,6120,88],[6037,90,6120,90],[6038,6,6121,8],[6038,13,6121,15],[6038,17,6121,19,"MultiFactorError"],[6038,33,6121,35],[6038,34,6121,36,"auth"],[6038,38,6121,40],[6038,40,6121,42,"error"],[6038,45,6121,47],[6038,47,6121,49,"operationType"],[6038,60,6121,62],[6038,62,6121,64,"user"],[6038,66,6121,68],[6038,67,6121,69],[6039,4,6122,4],[6039,5,6122,5],[6040,4,6123,4],[6040,11,6123,11,"MultiFactorError"],[6040,27,6123,27],[6041,2,6124,0],[6041,3,6124,1],[6041,4,6124,2,"util"],[6041,8,6124,6],[6041,9,6124,7,"FirebaseError"],[6041,22,6124,20],[6041,23,6124,22],[6042,2,6125,0],[6042,11,6125,9,"_processCredentialSavingMfaContextIfNecessary"],[6042,56,6125,54,"_processCredentialSavingMfaContextIfNecessary"],[6042,57,6125,55,"auth"],[6042,61,6125,59],[6042,63,6125,61,"operationType"],[6042,76,6125,74],[6042,78,6125,76,"credential"],[6042,88,6125,86],[6042,90,6125,88,"user"],[6042,94,6125,92],[6042,96,6125,94],[6043,4,6126,4],[6043,8,6126,8,"idTokenProvider"],[6043,23,6126,23],[6043,26,6126,26,"operationType"],[6043,39,6126,39],[6043,44,6126,44],[6043,60,6126,60],[6043,61,6126,61],[6043,98,6127,10,"credential"],[6043,108,6127,20],[6043,109,6127,21,"_getReauthenticationResolver"],[6043,137,6127,49],[6043,138,6127,50,"auth"],[6043,142,6127,54],[6043,143,6127,55],[6043,146,6128,10,"credential"],[6043,156,6128,20],[6043,157,6128,21,"_getIdTokenResponse"],[6043,176,6128,40],[6043,177,6128,41,"auth"],[6043,181,6128,45],[6043,182,6128,46],[6044,4,6129,4],[6044,11,6129,11,"idTokenProvider"],[6044,26,6129,26],[6044,27,6129,27,"catch"],[6044,32,6129,32],[6044,33,6129,33],[6044,43,6129,43,"error"],[6044,48,6129,48],[6044,50,6129,50],[6045,6,6130,8],[6045,10,6130,12,"error"],[6045,15,6130,17],[6045,16,6130,18,"code"],[6045,20,6130,22],[6045,25,6130,27],[6045,32,6130,34],[6045,33,6130,35,"concat"],[6045,39,6130,41],[6045,40,6130,42],[6045,68,6130,70],[6045,69,6130,71],[6045,101,6130,103],[6045,102,6130,104],[6045,104,6130,106],[6046,8,6131,12],[6046,14,6131,18,"MultiFactorError"],[6046,30,6131,34],[6046,31,6131,35,"_fromErrorAndOperation"],[6046,53,6131,57],[6046,54,6131,58,"auth"],[6046,58,6131,62],[6046,60,6131,64,"error"],[6046,65,6131,69],[6046,67,6131,71,"operationType"],[6046,80,6131,84],[6046,82,6131,86,"user"],[6046,86,6131,90],[6046,87,6131,91],[6047,6,6132,8],[6048,6,6133,8],[6048,12,6133,14,"error"],[6048,17,6133,19],[6049,4,6134,4],[6049,5,6134,5],[6049,6,6134,6],[6050,2,6135,0],[6052,2,6137,0],[6053,0,6138,0],[6054,0,6139,0],[6055,0,6140,0],[6056,0,6141,0],[6057,0,6142,0],[6058,0,6143,0],[6059,0,6144,0],[6060,0,6145,0],[6061,0,6146,0],[6062,0,6147,0],[6063,0,6148,0],[6064,0,6149,0],[6065,0,6150,0],[6066,0,6151,0],[6067,0,6152,0],[6068,2,6153,0],[6069,0,6154,0],[6070,0,6155,0],[6071,2,6156,0],[6071,11,6156,9,"providerDataAsNames"],[6071,30,6156,28,"providerDataAsNames"],[6071,31,6156,29,"providerData"],[6071,43,6156,41],[6071,45,6156,43],[6072,4,6157,4],[6072,11,6157,11],[6072,15,6157,15,"Set"],[6072,18,6157,18],[6072,19,6157,19,"providerData"],[6072,31,6157,31],[6072,32,6158,9,"map"],[6072,35,6158,12],[6072,36,6158,13],[6072,46,6158,23,"_a"],[6072,48,6158,25],[6072,50,6158,27],[6073,6,6159,8],[6073,10,6159,12,"providerId"],[6073,20,6159,22],[6073,23,6159,25,"_a"],[6073,25,6159,27],[6073,26,6159,28,"providerId"],[6073,36,6159,38],[6074,6,6160,8],[6074,13,6160,15,"providerId"],[6074,23,6160,25],[6075,4,6161,4],[6075,5,6161,5],[6075,6,6161,6],[6075,7,6162,9,"filter"],[6075,13,6162,15],[6075,14,6162,16],[6075,24,6162,26,"pid"],[6075,27,6162,29],[6075,29,6162,31],[6076,6,6162,33],[6076,13,6162,40],[6076,14,6162,41],[6076,15,6162,42,"pid"],[6076,18,6162,45],[6077,4,6162,47],[6077,5,6162,48],[6077,6,6162,49],[6077,7,6162,50],[6078,2,6163,0],[6080,2,6165,0],[6081,0,6166,0],[6082,0,6167,0],[6083,0,6168,0],[6084,0,6169,0],[6085,0,6170,0],[6086,0,6171,0],[6087,0,6172,0],[6088,0,6173,0],[6089,0,6174,0],[6090,0,6175,0],[6091,0,6176,0],[6092,0,6177,0],[6093,0,6178,0],[6094,0,6179,0],[6095,0,6180,0],[6096,2,6181,0],[6097,0,6182,0],[6098,0,6183,0],[6099,0,6184,0],[6100,0,6185,0],[6101,0,6186,0],[6102,0,6187,0],[6103,0,6188,0],[6104,2,6189,0],[6104,11,6189,9,"unlink"],[6104,17,6189,15,"unlink"],[6104,18,6189,16,"user"],[6104,22,6189,20],[6104,24,6189,22,"providerId"],[6104,34,6189,32],[6104,36,6189,34],[6105,4,6190,4],[6105,11,6190,11,"tslib"],[6105,16,6190,16],[6105,17,6190,17,"__awaiter"],[6105,26,6190,26],[6105,27,6190,27],[6105,31,6190,31],[6105,33,6190,31,"undefined"],[6105,42,6190,31],[6105,44,6190,31,"undefined"],[6105,53,6190,31],[6105,55,6190,49],[6105,67,6190,61],[6106,6,6191,8],[6106,10,6191,12,"userInternal"],[6106,22,6191,24],[6106,24,6191,26,"providerUserInfo"],[6106,40,6191,42],[6106,42,6191,44,"_a"],[6106,44,6191,46],[6106,46,6191,48,"_b"],[6106,48,6191,50],[6106,50,6191,52,"providersLeft"],[6106,63,6191,65],[6107,6,6192,8],[6107,10,6192,12,"_c"],[6107,12,6192,14],[6108,6,6193,8],[6108,13,6193,15,"tslib"],[6108,18,6193,20],[6108,19,6193,21,"__generator"],[6108,30,6193,32],[6108,31,6193,33],[6108,35,6193,37],[6108,37,6193,39],[6108,47,6193,49,"_d"],[6108,49,6193,51],[6108,51,6193,53],[6109,8,6194,12],[6109,16,6194,20,"_d"],[6109,18,6194,22],[6109,19,6194,23,"label"],[6109,24,6194,28],[6110,10,6195,16],[6110,15,6195,21],[6110,16,6195,22],[6111,12,6196,20,"userInternal"],[6111,24,6196,32],[6111,27,6196,35,"util"],[6111,31,6196,39],[6111,32,6196,40,"getModularInstance"],[6111,50,6196,58],[6111,51,6196,59,"user"],[6111,55,6196,63],[6111,56,6196,64],[6112,12,6197,20],[6112,19,6197,27],[6112,20,6197,28],[6112,21,6197,29],[6112,22,6197,30],[6112,33,6197,41,"_assertLinkedStatus"],[6112,52,6197,60],[6112,53,6197,61],[6112,57,6197,65],[6112,59,6197,67,"userInternal"],[6112,71,6197,79],[6112,73,6197,81,"providerId"],[6112,83,6197,91],[6112,84,6197,92],[6112,85,6197,93],[6113,10,6198,16],[6113,15,6198,21],[6113,16,6198,22],[6114,12,6199,20,"_d"],[6114,14,6199,22],[6114,15,6199,23,"sent"],[6114,19,6199,27],[6114,20,6199,28],[6114,21,6199,29],[6115,12,6200,20,"_a"],[6115,14,6200,22],[6115,17,6200,25,"deleteLinkedAccounts"],[6115,37,6200,45],[6116,12,6201,20,"_b"],[6116,14,6201,22],[6116,17,6201,25],[6116,18,6201,26,"userInternal"],[6116,30,6201,38],[6116,31,6201,39,"auth"],[6116,35,6201,43],[6116,36,6201,44],[6117,12,6202,20,"_c"],[6117,14,6202,22],[6117,17,6202,25],[6117,18,6202,26],[6117,19,6202,27],[6118,12,6203,20],[6118,19,6203,27],[6118,20,6203,28],[6118,21,6203,29],[6118,22,6203,30],[6118,33,6203,41,"userInternal"],[6118,45,6203,53],[6118,46,6203,54,"getIdToken"],[6118,56,6203,64],[6118,57,6203,65],[6118,58,6203,66],[6118,59,6203,67],[6119,10,6204,16],[6119,15,6204,21],[6119,16,6204,22],[6120,12,6204,24],[6120,19,6204,31],[6120,20,6204,32],[6120,21,6204,33],[6120,22,6204,34],[6120,33,6204,45,"_a"],[6120,35,6204,47],[6120,36,6204,48,"apply"],[6120,41,6204,53],[6120,42,6204,53,"undefined"],[6120,51,6204,53],[6120,53,6204,62,"_b"],[6120,55,6204,64],[6120,56,6204,65,"concat"],[6120,62,6204,71],[6120,63,6204,72],[6120,65,6204,74,"_c"],[6120,67,6204,76],[6120,68,6204,77,"idToken"],[6120,75,6204,84],[6120,78,6204,87,"_d"],[6120,80,6204,89],[6120,81,6204,90,"sent"],[6120,85,6204,94],[6120,86,6204,95],[6120,87,6204,96],[6120,89,6205,28,"_c"],[6120,91,6205,30],[6120,92,6205,31,"deleteProvider"],[6120,106,6205,45],[6120,109,6205,48],[6120,110,6205,49,"providerId"],[6120,120,6205,59],[6120,121,6205,60],[6120,123,6206,28,"_c"],[6120,125,6206,30],[6120,127,6206,32],[6120,128,6206,33],[6120,129,6206,34],[6120,130,6206,35],[6121,10,6207,16],[6121,15,6207,21],[6121,16,6207,22],[6122,12,6208,20,"providerUserInfo"],[6122,28,6208,36],[6122,31,6208,40,"_d"],[6122,33,6208,42],[6122,34,6208,43,"sent"],[6122,38,6208,47],[6122,39,6208,48],[6122,40,6208,49],[6122,41,6208,51,"providerUserInfo"],[6122,57,6208,67],[6123,12,6209,20,"providersLeft"],[6123,25,6209,33],[6123,28,6209,36,"providerDataAsNames"],[6123,47,6209,55],[6123,48,6209,56,"providerUserInfo"],[6123,64,6209,72],[6123,68,6209,76],[6123,70,6209,78],[6123,71,6209,79],[6124,12,6210,20,"userInternal"],[6124,24,6210,32],[6124,25,6210,33,"providerData"],[6124,37,6210,45],[6124,40,6210,48,"userInternal"],[6124,52,6210,60],[6124,53,6210,61,"providerData"],[6124,65,6210,73],[6124,66,6210,74,"filter"],[6124,72,6210,80],[6124,73,6210,81],[6124,83,6210,91,"pd"],[6124,85,6210,93],[6124,87,6210,95],[6125,14,6211,24],[6125,21,6211,31,"providersLeft"],[6125,34,6211,44],[6125,35,6211,45,"has"],[6125,38,6211,48],[6125,39,6211,49,"pd"],[6125,41,6211,51],[6125,42,6211,52,"providerId"],[6125,52,6211,62],[6125,53,6211,63],[6126,12,6212,20],[6126,13,6212,21],[6126,14,6212,22],[6127,12,6213,20],[6127,16,6213,24],[6127,17,6213,25,"providersLeft"],[6127,30,6213,38],[6127,31,6213,39,"has"],[6127,34,6213,42],[6127,35,6213,43],[6127,42,6213,50],[6127,43,6213,51],[6127,65,6213,73],[6127,66,6213,74],[6127,68,6213,76],[6128,14,6214,24,"userInternal"],[6128,26,6214,36],[6128,27,6214,37,"phoneNumber"],[6128,38,6214,48],[6128,41,6214,51],[6128,45,6214,55],[6129,12,6215,20],[6130,12,6216,20],[6130,19,6216,27],[6130,20,6216,28],[6130,21,6216,29],[6130,22,6216,30],[6130,33,6216,41,"userInternal"],[6130,45,6216,53],[6130,46,6216,54,"auth"],[6130,50,6216,58],[6130,51,6216,59,"_persistUserIfCurrent"],[6130,72,6216,80],[6130,73,6216,81,"userInternal"],[6130,85,6216,93],[6130,86,6216,94],[6130,87,6216,95],[6131,10,6217,16],[6131,15,6217,21],[6131,16,6217,22],[6132,12,6218,20,"_d"],[6132,14,6218,22],[6132,15,6218,23,"sent"],[6132,19,6218,27],[6132,20,6218,28],[6132,21,6218,29],[6133,12,6219,20],[6133,19,6219,27],[6133,20,6219,28],[6133,21,6219,29],[6133,22,6219,30],[6133,34,6219,42,"userInternal"],[6133,46,6219,54],[6133,47,6219,55],[6134,8,6220,12],[6135,6,6221,8],[6135,7,6221,9],[6135,8,6221,10],[6136,4,6222,4],[6136,5,6222,5],[6136,6,6222,6],[6137,2,6223,0],[6138,2,6224,0],[6138,11,6224,9,"_link"],[6138,16,6224,14,"_link"],[6138,17,6224,15,"user"],[6138,21,6224,19],[6138,23,6224,21,"credential"],[6138,33,6224,31],[6138,35,6224,33,"bypassAuthState"],[6138,50,6224,48],[6138,52,6224,50],[6139,4,6225,4],[6139,8,6225,8,"bypassAuthState"],[6139,23,6225,23],[6139,28,6225,23,"undefined"],[6139,37,6225,34],[6139,39,6225,36],[6140,6,6225,38,"bypassAuthState"],[6140,21,6225,53],[6140,24,6225,56],[6140,29,6225,61],[6141,4,6225,63],[6142,4,6226,4],[6142,11,6226,11,"tslib"],[6142,16,6226,16],[6142,17,6226,17,"__awaiter"],[6142,26,6226,26],[6142,27,6226,27],[6142,31,6226,31],[6142,33,6226,31,"undefined"],[6142,42,6226,31],[6142,44,6226,31,"undefined"],[6142,53,6226,31],[6142,55,6226,49],[6142,67,6226,61],[6143,6,6227,8],[6143,10,6227,12,"response"],[6143,18,6227,20],[6143,20,6227,22,"_a"],[6143,22,6227,24],[6143,24,6227,26,"_b"],[6143,26,6227,28],[6143,28,6227,30,"_c"],[6143,30,6227,32],[6143,32,6227,34,"_d"],[6143,34,6227,36],[6143,36,6227,38,"_e"],[6143,38,6227,40],[6144,6,6228,8],[6144,13,6228,15,"tslib"],[6144,18,6228,20],[6144,19,6228,21,"__generator"],[6144,30,6228,32],[6144,31,6228,33],[6144,35,6228,37],[6144,37,6228,39],[6144,47,6228,49,"_f"],[6144,49,6228,51],[6144,51,6228,53],[6145,8,6229,12],[6145,16,6229,20,"_f"],[6145,18,6229,22],[6145,19,6229,23,"label"],[6145,24,6229,28],[6146,10,6230,16],[6146,15,6230,21],[6146,16,6230,22],[6147,12,6231,20,"_a"],[6147,14,6231,22],[6147,17,6231,25,"_logoutIfInvalidated"],[6147,37,6231,45],[6148,12,6232,20,"_b"],[6148,14,6232,22],[6148,17,6232,25],[6148,18,6232,26,"user"],[6148,22,6232,30],[6148,23,6232,31],[6149,12,6233,20,"_d"],[6149,14,6233,22],[6149,17,6233,25],[6149,18,6233,26,"_c"],[6149,20,6233,28],[6149,23,6233,31,"credential"],[6149,33,6233,41],[6149,35,6233,43,"_linkToIdToken"],[6149,49,6233,57],[6150,12,6234,20,"_e"],[6150,14,6234,22],[6150,17,6234,25],[6150,18,6234,26,"user"],[6150,22,6234,30],[6150,23,6234,31,"auth"],[6150,27,6234,35],[6150,28,6234,36],[6151,12,6235,20],[6151,19,6235,27],[6151,20,6235,28],[6151,21,6235,29],[6151,22,6235,30],[6151,33,6235,41,"user"],[6151,37,6235,45],[6151,38,6235,46,"getIdToken"],[6151,48,6235,56],[6151,49,6235,57],[6151,50,6235,58],[6151,51,6235,59],[6152,10,6236,16],[6152,15,6236,21],[6152,16,6236,22],[6153,12,6236,24],[6153,19,6236,31],[6153,20,6236,32],[6153,21,6236,33],[6153,22,6236,34],[6153,33,6236,45,"_a"],[6153,35,6236,47],[6153,36,6236,48,"apply"],[6153,41,6236,53],[6153,42,6236,53,"undefined"],[6153,51,6236,53],[6153,53,6236,62,"_b"],[6153,55,6236,64],[6153,56,6236,65,"concat"],[6153,62,6236,71],[6153,63,6236,72],[6153,64,6236,73,"_d"],[6153,66,6236,75],[6153,67,6236,76,"apply"],[6153,72,6236,81],[6153,73,6236,82,"_c"],[6153,75,6236,84],[6153,77,6236,86,"_e"],[6153,79,6236,88],[6153,80,6236,89,"concat"],[6153,86,6236,95],[6153,87,6236,96],[6153,88,6236,97,"_f"],[6153,90,6236,99],[6153,91,6236,100,"sent"],[6153,95,6236,104],[6153,96,6236,105],[6153,97,6236,106],[6153,98,6236,107],[6153,99,6236,108],[6153,100,6236,109],[6153,102,6237,24,"bypassAuthState"],[6153,117,6237,39],[6153,118,6237,40],[6153,119,6237,41],[6153,120,6237,42],[6153,121,6237,43],[6154,10,6238,16],[6154,15,6238,21],[6154,16,6238,22],[6155,12,6239,20,"response"],[6155,20,6239,28],[6155,23,6239,31,"_f"],[6155,25,6239,33],[6155,26,6239,34,"sent"],[6155,30,6239,38],[6155,31,6239,39],[6155,32,6239,40],[6156,12,6240,20],[6156,19,6240,27],[6156,20,6240,28],[6156,21,6240,29],[6156,22,6240,30],[6156,34,6240,42,"UserCredentialImpl"],[6156,52,6240,60],[6156,53,6240,61,"_forOperation"],[6156,66,6240,74],[6156,67,6240,75,"user"],[6156,71,6240,79],[6156,73,6240,81],[6156,79,6240,87],[6156,80,6240,88],[6156,106,6240,114,"response"],[6156,114,6240,122],[6156,115,6240,123],[6156,116,6240,124],[6157,8,6241,12],[6158,6,6242,8],[6158,7,6242,9],[6158,8,6242,10],[6159,4,6243,4],[6159,5,6243,5],[6159,6,6243,6],[6160,2,6244,0],[6161,2,6245,0],[6161,11,6245,9,"_assertLinkedStatus"],[6161,30,6245,28,"_assertLinkedStatus"],[6161,31,6245,29,"expected"],[6161,39,6245,37],[6161,41,6245,39,"user"],[6161,45,6245,43],[6161,47,6245,45,"provider"],[6161,55,6245,53],[6161,57,6245,55],[6162,4,6246,4],[6162,11,6246,11,"tslib"],[6162,16,6246,16],[6162,17,6246,17,"__awaiter"],[6162,26,6246,26],[6162,27,6246,27],[6162,31,6246,31],[6162,33,6246,31,"undefined"],[6162,42,6246,31],[6162,44,6246,31,"undefined"],[6162,53,6246,31],[6162,55,6246,49],[6162,67,6246,61],[6163,6,6247,8],[6163,10,6247,12,"providerIds"],[6163,21,6247,23],[6163,23,6247,25,"code"],[6163,27,6247,29],[6164,6,6248,8],[6164,13,6248,15,"tslib"],[6164,18,6248,20],[6164,19,6248,21,"__generator"],[6164,30,6248,32],[6164,31,6248,33],[6164,35,6248,37],[6164,37,6248,39],[6164,47,6248,49,"_a"],[6164,49,6248,51],[6164,51,6248,53],[6165,8,6249,12],[6165,16,6249,20,"_a"],[6165,18,6249,22],[6165,19,6249,23,"label"],[6165,24,6249,28],[6166,10,6250,16],[6166,15,6250,21],[6166,16,6250,22],[6167,12,6250,24],[6167,19,6250,31],[6167,20,6250,32],[6167,21,6250,33],[6167,22,6250,34],[6167,33,6250,45,"_reloadWithoutSaving"],[6167,53,6250,65],[6167,54,6250,66,"user"],[6167,58,6250,70],[6167,59,6250,71],[6167,60,6250,72],[6168,10,6251,16],[6168,15,6251,21],[6168,16,6251,22],[6169,12,6252,20,"_a"],[6169,14,6252,22],[6169,15,6252,23,"sent"],[6169,19,6252,27],[6169,20,6252,28],[6169,21,6252,29],[6170,12,6253,20,"providerIds"],[6170,23,6253,31],[6170,26,6253,34,"providerDataAsNames"],[6170,45,6253,53],[6170,46,6253,54,"user"],[6170,50,6253,58],[6170,51,6253,59,"providerData"],[6170,63,6253,71],[6170,64,6253,72],[6171,12,6254,20,"code"],[6171,16,6254,24],[6171,19,6254,27,"expected"],[6171,27,6254,35],[6171,32,6254,40],[6171,37,6254,45],[6171,40,6255,26],[6171,65,6255,51],[6171,66,6255,52],[6171,112,6256,26],[6171,130,6256,44],[6171,131,6256,45],[6172,12,6257,20,"_assert"],[6172,19,6257,27],[6172,20,6257,28,"providerIds"],[6172,31,6257,39],[6172,32,6257,40,"has"],[6172,35,6257,43],[6172,36,6257,44,"provider"],[6172,44,6257,52],[6172,45,6257,53],[6172,50,6257,58,"expected"],[6172,58,6257,66],[6172,60,6257,68,"user"],[6172,64,6257,72],[6172,65,6257,73,"auth"],[6172,69,6257,77],[6172,71,6257,79,"code"],[6172,75,6257,83],[6172,76,6257,84],[6173,12,6258,20],[6173,19,6258,27],[6173,20,6258,28],[6173,21,6258,29],[6173,22,6258,30],[6173,33,6258,41],[6174,8,6259,12],[6175,6,6260,8],[6175,7,6260,9],[6175,8,6260,10],[6176,4,6261,4],[6176,5,6261,5],[6176,6,6261,6],[6177,2,6262,0],[6179,2,6264,0],[6180,0,6265,0],[6181,0,6266,0],[6182,0,6267,0],[6183,0,6268,0],[6184,0,6269,0],[6185,0,6270,0],[6186,0,6271,0],[6187,0,6272,0],[6188,0,6273,0],[6189,0,6274,0],[6190,0,6275,0],[6191,0,6276,0],[6192,0,6277,0],[6193,0,6278,0],[6194,0,6279,0],[6195,2,6280,0],[6195,11,6280,9,"_reauthenticate"],[6195,26,6280,24,"_reauthenticate"],[6195,27,6280,25,"user"],[6195,31,6280,29],[6195,33,6280,31,"credential"],[6195,43,6280,41],[6195,45,6280,43,"bypassAuthState"],[6195,60,6280,58],[6195,62,6280,60],[6196,4,6281,4],[6196,8,6281,8,"bypassAuthState"],[6196,23,6281,23],[6196,28,6281,23,"undefined"],[6196,37,6281,34],[6196,39,6281,36],[6197,6,6281,38,"bypassAuthState"],[6197,21,6281,53],[6197,24,6281,56],[6197,29,6281,61],[6198,4,6281,63],[6199,4,6282,4],[6199,11,6282,11,"tslib"],[6199,16,6282,16],[6199,17,6282,17,"__awaiter"],[6199,26,6282,26],[6199,27,6282,27],[6199,31,6282,31],[6199,33,6282,31,"undefined"],[6199,42,6282,31],[6199,44,6282,31,"undefined"],[6199,53,6282,31],[6199,55,6282,49],[6199,67,6282,61],[6200,6,6283,8],[6200,10,6283,12,"auth"],[6200,14,6283,16],[6200,16,6283,18,"operationType"],[6200,29,6283,31],[6200,31,6283,33,"response"],[6200,39,6283,41],[6200,41,6283,43,"parsed"],[6200,47,6283,49],[6200,49,6283,51,"localId"],[6200,56,6283,58],[6200,58,6283,60,"e_1"],[6200,61,6283,63],[6201,6,6284,8],[6201,13,6284,15,"tslib"],[6201,18,6284,20],[6201,19,6284,21,"__generator"],[6201,30,6284,32],[6201,31,6284,33],[6201,35,6284,37],[6201,37,6284,39],[6201,47,6284,49,"_a"],[6201,49,6284,51],[6201,51,6284,53],[6202,8,6285,12],[6202,16,6285,20,"_a"],[6202,18,6285,22],[6202,19,6285,23,"label"],[6202,24,6285,28],[6203,10,6286,16],[6203,15,6286,21],[6203,16,6286,22],[6204,12,6287,20,"auth"],[6204,16,6287,24],[6204,19,6287,27,"user"],[6204,23,6287,31],[6204,24,6287,32,"auth"],[6204,28,6287,36],[6205,12,6288,20],[6205,16,6288,24,"app"],[6205,19,6288,27],[6205,20,6288,28,"_isFirebaseServerApp"],[6205,40,6288,48],[6205,41,6288,49,"auth"],[6205,45,6288,53],[6205,46,6288,54,"app"],[6205,49,6288,57],[6205,50,6288,58],[6205,52,6288,60],[6206,14,6289,24],[6206,21,6289,31],[6206,22,6289,32],[6206,23,6289,33],[6206,24,6289,34],[6206,36,6289,46,"Promise"],[6206,43,6289,53],[6206,44,6289,54,"reject"],[6206,50,6289,60],[6206,51,6289,61,"_serverAppCurrentUserOperationNotSupportedError"],[6206,98,6289,108],[6206,99,6289,109,"auth"],[6206,103,6289,113],[6206,104,6289,114],[6206,105,6289,115],[6206,106,6289,116],[6207,12,6290,20],[6208,12,6291,20,"operationType"],[6208,25,6291,33],[6208,28,6291,36],[6208,44,6291,52],[6208,45,6291,53],[6209,12,6292,20,"_a"],[6209,14,6292,22],[6209,15,6292,23,"label"],[6209,20,6292,28],[6209,23,6292,31],[6209,24,6292,32],[6210,10,6293,16],[6210,15,6293,21],[6210,16,6293,22],[6211,12,6294,20,"_a"],[6211,14,6294,22],[6211,15,6294,23,"trys"],[6211,19,6294,27],[6211,20,6294,28,"push"],[6211,24,6294,32],[6211,25,6294,33],[6211,26,6294,34],[6211,27,6294,35],[6211,29,6294,37],[6211,30,6294,38],[6211,33,6294,42],[6211,34,6294,43],[6211,35,6294,44],[6211,36,6294,45],[6212,12,6295,20],[6212,19,6295,27],[6212,20,6295,28],[6212,21,6295,29],[6212,22,6295,30],[6212,33,6295,41,"_logoutIfInvalidated"],[6212,53,6295,61],[6212,54,6295,62,"user"],[6212,58,6295,66],[6212,60,6295,68,"_processCredentialSavingMfaContextIfNecessary"],[6212,105,6295,113],[6212,106,6295,114,"auth"],[6212,110,6295,118],[6212,112,6295,120,"operationType"],[6212,125,6295,133],[6212,127,6295,135,"credential"],[6212,137,6295,145],[6212,139,6295,147,"user"],[6212,143,6295,151],[6212,144,6295,152],[6212,146,6295,154,"bypassAuthState"],[6212,161,6295,169],[6212,162,6295,170],[6212,163,6295,171],[6213,10,6296,16],[6213,15,6296,21],[6213,16,6296,22],[6214,12,6297,20,"response"],[6214,20,6297,28],[6214,23,6297,31,"_a"],[6214,25,6297,33],[6214,26,6297,34,"sent"],[6214,30,6297,38],[6214,31,6297,39],[6214,32,6297,40],[6215,12,6298,20,"_assert"],[6215,19,6298,27],[6215,20,6298,28,"response"],[6215,28,6298,36],[6215,29,6298,37,"idToken"],[6215,36,6298,44],[6215,38,6298,46,"auth"],[6215,42,6298,50],[6215,44,6298,52],[6215,60,6298,68],[6215,61,6298,69],[6215,95,6298,103],[6215,96,6298,104],[6216,12,6299,20,"parsed"],[6216,18,6299,26],[6216,21,6299,29,"_parseToken"],[6216,32,6299,40],[6216,33,6299,41,"response"],[6216,41,6299,49],[6216,42,6299,50,"idToken"],[6216,49,6299,57],[6216,50,6299,58],[6217,12,6300,20,"_assert"],[6217,19,6300,27],[6217,20,6300,28,"parsed"],[6217,26,6300,34],[6217,28,6300,36,"auth"],[6217,32,6300,40],[6217,34,6300,42],[6217,50,6300,58],[6217,51,6300,59],[6217,85,6300,93],[6217,86,6300,94],[6218,12,6301,20,"localId"],[6218,19,6301,27],[6218,22,6301,30,"parsed"],[6218,28,6301,36],[6218,29,6301,37,"sub"],[6218,32,6301,40],[6219,12,6302,20,"_assert"],[6219,19,6302,27],[6219,20,6302,28,"user"],[6219,24,6302,32],[6219,25,6302,33,"uid"],[6219,28,6302,36],[6219,33,6302,41,"localId"],[6219,40,6302,48],[6219,42,6302,50,"auth"],[6219,46,6302,54],[6219,48,6302,56],[6219,63,6302,71],[6219,64,6302,72],[6219,97,6302,105],[6219,98,6302,106],[6220,12,6303,20],[6220,19,6303,27],[6220,20,6303,28],[6220,21,6303,29],[6220,22,6303,30],[6220,34,6303,42,"UserCredentialImpl"],[6220,52,6303,60],[6220,53,6303,61,"_forOperation"],[6220,66,6303,74],[6220,67,6303,75,"user"],[6220,71,6303,79],[6220,73,6303,81,"operationType"],[6220,86,6303,94],[6220,88,6303,96,"response"],[6220,96,6303,104],[6220,97,6303,105],[6220,98,6303,106],[6221,10,6304,16],[6221,15,6304,21],[6221,16,6304,22],[6222,12,6305,20,"e_1"],[6222,15,6305,23],[6222,18,6305,26,"_a"],[6222,20,6305,28],[6222,21,6305,29,"sent"],[6222,25,6305,33],[6222,26,6305,34],[6222,27,6305,35],[6223,12,6306,20],[6224,12,6307,20],[6224,16,6307,24],[6224,17,6307,25,"e_1"],[6224,20,6307,28],[6224,25,6307,33],[6224,29,6307,37],[6224,33,6307,41,"e_1"],[6224,36,6307,44],[6224,41,6307,44,"undefined"],[6224,50,6307,55],[6224,53,6307,55,"undefined"],[6224,62,6307,55],[6224,65,6307,67,"e_1"],[6224,68,6307,70],[6224,69,6307,71,"code"],[6224,73,6307,75],[6224,79,6307,81],[6224,86,6307,88],[6224,87,6307,89,"concat"],[6224,93,6307,95],[6224,94,6307,96],[6224,110,6307,112],[6224,111,6307,113],[6224,143,6307,145],[6224,144,6307,146],[6224,146,6307,148],[6225,14,6308,24,"_fail"],[6225,19,6308,29],[6225,20,6308,30,"auth"],[6225,24,6308,34],[6225,26,6308,36],[6225,41,6308,51],[6225,42,6308,52],[6225,75,6308,85],[6225,76,6308,86],[6226,12,6309,20],[6227,12,6310,20],[6227,18,6310,26,"e_1"],[6227,21,6310,29],[6228,10,6311,16],[6228,15,6311,21],[6228,16,6311,22],[6229,12,6311,24],[6229,19,6311,31],[6229,20,6311,32],[6229,21,6311,33],[6229,22,6311,34],[6229,33,6311,45],[6230,8,6312,12],[6231,6,6313,8],[6231,7,6313,9],[6231,8,6313,10],[6232,4,6314,4],[6232,5,6314,5],[6232,6,6314,6],[6233,2,6315,0],[6235,2,6317,0],[6236,0,6318,0],[6237,0,6319,0],[6238,0,6320,0],[6239,0,6321,0],[6240,0,6322,0],[6241,0,6323,0],[6242,0,6324,0],[6243,0,6325,0],[6244,0,6326,0],[6245,0,6327,0],[6246,0,6328,0],[6247,0,6329,0],[6248,0,6330,0],[6249,0,6331,0],[6250,0,6332,0],[6251,2,6333,0],[6251,11,6333,9,"_signInWithCredential"],[6251,32,6333,30,"_signInWithCredential"],[6251,33,6333,31,"auth"],[6251,37,6333,35],[6251,39,6333,37,"credential"],[6251,49,6333,47],[6251,51,6333,49,"bypassAuthState"],[6251,66,6333,64],[6251,68,6333,66],[6252,4,6334,4],[6252,8,6334,8,"bypassAuthState"],[6252,23,6334,23],[6252,28,6334,23,"undefined"],[6252,37,6334,34],[6252,39,6334,36],[6253,6,6334,38,"bypassAuthState"],[6253,21,6334,53],[6253,24,6334,56],[6253,29,6334,61],[6254,4,6334,63],[6255,4,6335,4],[6255,11,6335,11,"tslib"],[6255,16,6335,16],[6255,17,6335,17,"__awaiter"],[6255,26,6335,26],[6255,27,6335,27],[6255,31,6335,31],[6255,33,6335,31,"undefined"],[6255,42,6335,31],[6255,44,6335,31,"undefined"],[6255,53,6335,31],[6255,55,6335,49],[6255,67,6335,61],[6256,6,6336,8],[6256,10,6336,12,"operationType"],[6256,23,6336,25],[6256,25,6336,27,"response"],[6256,33,6336,35],[6256,35,6336,37,"userCredential"],[6256,49,6336,51],[6257,6,6337,8],[6257,13,6337,15,"tslib"],[6257,18,6337,20],[6257,19,6337,21,"__generator"],[6257,30,6337,32],[6257,31,6337,33],[6257,35,6337,37],[6257,37,6337,39],[6257,47,6337,49,"_a"],[6257,49,6337,51],[6257,51,6337,53],[6258,8,6338,12],[6258,16,6338,20,"_a"],[6258,18,6338,22],[6258,19,6338,23,"label"],[6258,24,6338,28],[6259,10,6339,16],[6259,15,6339,21],[6259,16,6339,22],[6260,12,6340,20],[6260,16,6340,24,"app"],[6260,19,6340,27],[6260,20,6340,28,"_isFirebaseServerApp"],[6260,40,6340,48],[6260,41,6340,49,"auth"],[6260,45,6340,53],[6260,46,6340,54,"app"],[6260,49,6340,57],[6260,50,6340,58],[6260,52,6340,60],[6261,14,6341,24],[6261,21,6341,31],[6261,22,6341,32],[6261,23,6341,33],[6261,24,6341,34],[6261,36,6341,46,"Promise"],[6261,43,6341,53],[6261,44,6341,54,"reject"],[6261,50,6341,60],[6261,51,6341,61,"_serverAppCurrentUserOperationNotSupportedError"],[6261,98,6341,108],[6261,99,6341,109,"auth"],[6261,103,6341,113],[6261,104,6341,114],[6261,105,6341,115],[6261,106,6341,116],[6262,12,6342,20],[6263,12,6343,20,"operationType"],[6263,25,6343,33],[6263,28,6343,36],[6263,36,6343,44],[6263,37,6343,45],[6264,12,6344,20],[6264,19,6344,27],[6264,20,6344,28],[6264,21,6344,29],[6264,22,6344,30],[6264,33,6344,41,"_processCredentialSavingMfaContextIfNecessary"],[6264,78,6344,86],[6264,79,6344,87,"auth"],[6264,83,6344,91],[6264,85,6344,93,"operationType"],[6264,98,6344,106],[6264,100,6344,108,"credential"],[6264,110,6344,118],[6264,111,6344,119],[6264,112,6344,120],[6265,10,6345,16],[6265,15,6345,21],[6265,16,6345,22],[6266,12,6346,20,"response"],[6266,20,6346,28],[6266,23,6346,31,"_a"],[6266,25,6346,33],[6266,26,6346,34,"sent"],[6266,30,6346,38],[6266,31,6346,39],[6266,32,6346,40],[6267,12,6347,20],[6267,19,6347,27],[6267,20,6347,28],[6267,21,6347,29],[6267,22,6347,30],[6267,33,6347,41,"UserCredentialImpl"],[6267,51,6347,59],[6267,52,6347,60,"_fromIdTokenResponse"],[6267,72,6347,80],[6267,73,6347,81,"auth"],[6267,77,6347,85],[6267,79,6347,87,"operationType"],[6267,92,6347,100],[6267,94,6347,102,"response"],[6267,102,6347,110],[6267,103,6347,111],[6267,104,6347,112],[6268,10,6348,16],[6268,15,6348,21],[6268,16,6348,22],[6269,12,6349,20,"userCredential"],[6269,26,6349,34],[6269,29,6349,37,"_a"],[6269,31,6349,39],[6269,32,6349,40,"sent"],[6269,36,6349,44],[6269,37,6349,45],[6269,38,6349,46],[6270,12,6350,20],[6270,16,6350,24],[6270,17,6350,25],[6270,18,6350,26,"bypassAuthState"],[6270,33,6350,41],[6270,35,6350,43],[6270,42,6350,50],[6270,43,6350,51],[6270,44,6350,52],[6270,45,6350,53],[6270,56,6350,64],[6270,57,6350,65],[6270,58,6350,66],[6271,12,6351,20],[6271,19,6351,27],[6271,20,6351,28],[6271,21,6351,29],[6271,22,6351,30],[6271,33,6351,41,"auth"],[6271,37,6351,45],[6271,38,6351,46,"_updateCurrentUser"],[6271,56,6351,64],[6271,57,6351,65,"userCredential"],[6271,71,6351,79],[6271,72,6351,80,"user"],[6271,76,6351,84],[6271,77,6351,85],[6271,78,6351,86],[6272,10,6352,16],[6272,15,6352,21],[6272,16,6352,22],[6273,12,6353,20,"_a"],[6273,14,6353,22],[6273,15,6353,23,"sent"],[6273,19,6353,27],[6273,20,6353,28],[6273,21,6353,29],[6274,12,6354,20,"_a"],[6274,14,6354,22],[6274,15,6354,23,"label"],[6274,20,6354,28],[6274,23,6354,31],[6274,24,6354,32],[6275,10,6355,16],[6275,15,6355,21],[6275,16,6355,22],[6276,12,6355,24],[6276,19,6355,31],[6276,20,6355,32],[6276,21,6355,33],[6276,22,6355,34],[6276,34,6355,46,"userCredential"],[6276,48,6355,60],[6276,49,6355,61],[6277,8,6356,12],[6278,6,6357,8],[6278,7,6357,9],[6278,8,6357,10],[6279,4,6358,4],[6279,5,6358,5],[6279,6,6358,6],[6280,2,6359,0],[6281,2,6360,0],[6282,0,6361,0],[6283,0,6362,0],[6284,0,6363,0],[6285,0,6364,0],[6286,0,6365,0],[6287,0,6366,0],[6288,0,6367,0],[6289,0,6368,0],[6290,0,6369,0],[6291,0,6370,0],[6292,0,6371,0],[6293,0,6372,0],[6294,0,6373,0],[6295,2,6374,0],[6295,11,6374,9,"signInWithCredential"],[6295,31,6374,29,"signInWithCredential"],[6295,32,6374,30,"auth"],[6295,36,6374,34],[6295,38,6374,36,"credential"],[6295,48,6374,46],[6295,50,6374,48],[6296,4,6375,4],[6296,11,6375,11,"tslib"],[6296,16,6375,16],[6296,17,6375,17,"__awaiter"],[6296,26,6375,26],[6296,27,6375,27],[6296,31,6375,31],[6296,33,6375,31,"undefined"],[6296,42,6375,31],[6296,44,6375,31,"undefined"],[6296,53,6375,31],[6296,55,6375,49],[6296,67,6375,61],[6297,6,6376,8],[6297,13,6376,15,"tslib"],[6297,18,6376,20],[6297,19,6376,21,"__generator"],[6297,30,6376,32],[6297,31,6376,33],[6297,35,6376,37],[6297,37,6376,39],[6297,47,6376,49,"_a"],[6297,49,6376,51],[6297,51,6376,53],[6298,8,6377,12],[6298,15,6377,19],[6298,16,6377,20],[6298,17,6377,21],[6298,18,6377,22],[6298,30,6377,34,"_signInWithCredential"],[6298,51,6377,55],[6298,52,6377,56,"_castAuth"],[6298,61,6377,65],[6298,62,6377,66,"auth"],[6298,66,6377,70],[6298,67,6377,71],[6298,69,6377,73,"credential"],[6298,79,6377,83],[6298,80,6377,84],[6298,81,6377,85],[6299,6,6378,8],[6299,7,6378,9],[6299,8,6378,10],[6300,4,6379,4],[6300,5,6379,5],[6300,6,6379,6],[6301,2,6380,0],[6302,2,6381,0],[6303,0,6382,0],[6304,0,6383,0],[6305,0,6384,0],[6306,0,6385,0],[6307,0,6386,0],[6308,0,6387,0],[6309,0,6388,0],[6310,0,6389,0],[6311,0,6390,0],[6312,0,6391,0],[6313,2,6392,0],[6313,11,6392,9,"linkWithCredential"],[6313,29,6392,27,"linkWithCredential"],[6313,30,6392,28,"user"],[6313,34,6392,32],[6313,36,6392,34,"credential"],[6313,46,6392,44],[6313,48,6392,46],[6314,4,6393,4],[6314,11,6393,11,"tslib"],[6314,16,6393,16],[6314,17,6393,17,"__awaiter"],[6314,26,6393,26],[6314,27,6393,27],[6314,31,6393,31],[6314,33,6393,31,"undefined"],[6314,42,6393,31],[6314,44,6393,31,"undefined"],[6314,53,6393,31],[6314,55,6393,49],[6314,67,6393,61],[6315,6,6394,8],[6315,10,6394,12,"userInternal"],[6315,22,6394,24],[6316,6,6395,8],[6316,13,6395,15,"tslib"],[6316,18,6395,20],[6316,19,6395,21,"__generator"],[6316,30,6395,32],[6316,31,6395,33],[6316,35,6395,37],[6316,37,6395,39],[6316,47,6395,49,"_a"],[6316,49,6395,51],[6316,51,6395,53],[6317,8,6396,12],[6317,16,6396,20,"_a"],[6317,18,6396,22],[6317,19,6396,23,"label"],[6317,24,6396,28],[6318,10,6397,16],[6318,15,6397,21],[6318,16,6397,22],[6319,12,6398,20,"userInternal"],[6319,24,6398,32],[6319,27,6398,35,"util"],[6319,31,6398,39],[6319,32,6398,40,"getModularInstance"],[6319,50,6398,58],[6319,51,6398,59,"user"],[6319,55,6398,63],[6319,56,6398,64],[6320,12,6399,20],[6320,19,6399,27],[6320,20,6399,28],[6320,21,6399,29],[6320,22,6399,30],[6320,33,6399,41,"_assertLinkedStatus"],[6320,52,6399,60],[6320,53,6399,61],[6320,58,6399,66],[6320,60,6399,68,"userInternal"],[6320,72,6399,80],[6320,74,6399,82,"credential"],[6320,84,6399,92],[6320,85,6399,93,"providerId"],[6320,95,6399,103],[6320,96,6399,104],[6320,97,6399,105],[6321,10,6400,16],[6321,15,6400,21],[6321,16,6400,22],[6322,12,6401,20,"_a"],[6322,14,6401,22],[6322,15,6401,23,"sent"],[6322,19,6401,27],[6322,20,6401,28],[6322,21,6401,29],[6323,12,6402,20],[6323,19,6402,27],[6323,20,6402,28],[6323,21,6402,29],[6323,22,6402,30],[6323,34,6402,42,"_link"],[6323,39,6402,47],[6323,40,6402,48,"userInternal"],[6323,52,6402,60],[6323,54,6402,62,"credential"],[6323,64,6402,72],[6323,65,6402,73],[6323,66,6402,74],[6324,8,6403,12],[6325,6,6404,8],[6325,7,6404,9],[6325,8,6404,10],[6326,4,6405,4],[6326,5,6405,5],[6326,6,6405,6],[6327,2,6406,0],[6328,2,6407,0],[6329,0,6408,0],[6330,0,6409,0],[6331,0,6410,0],[6332,0,6411,0],[6333,0,6412,0],[6334,0,6413,0],[6335,0,6414,0],[6336,0,6415,0],[6337,0,6416,0],[6338,0,6417,0],[6339,0,6418,0],[6340,0,6419,0],[6341,0,6420,0],[6342,0,6421,0],[6343,0,6422,0],[6344,2,6423,0],[6344,11,6423,9,"reauthenticateWithCredential"],[6344,39,6423,37,"reauthenticateWithCredential"],[6344,40,6423,38,"user"],[6344,44,6423,42],[6344,46,6423,44,"credential"],[6344,56,6423,54],[6344,58,6423,56],[6345,4,6424,4],[6345,11,6424,11,"tslib"],[6345,16,6424,16],[6345,17,6424,17,"__awaiter"],[6345,26,6424,26],[6345,27,6424,27],[6345,31,6424,31],[6345,33,6424,31,"undefined"],[6345,42,6424,31],[6345,44,6424,31,"undefined"],[6345,53,6424,31],[6345,55,6424,49],[6345,67,6424,61],[6346,6,6425,8],[6346,13,6425,15,"tslib"],[6346,18,6425,20],[6346,19,6425,21,"__generator"],[6346,30,6425,32],[6346,31,6425,33],[6346,35,6425,37],[6346,37,6425,39],[6346,47,6425,49,"_a"],[6346,49,6425,51],[6346,51,6425,53],[6347,8,6426,12],[6347,15,6426,19],[6347,16,6426,20],[6347,17,6426,21],[6347,18,6426,22],[6347,30,6426,34,"_reauthenticate"],[6347,45,6426,49],[6347,46,6426,50,"util"],[6347,50,6426,54],[6347,51,6426,55,"getModularInstance"],[6347,69,6426,73],[6347,70,6426,74,"user"],[6347,74,6426,78],[6347,75,6426,79],[6347,77,6426,81,"credential"],[6347,87,6426,91],[6347,88,6426,92],[6347,89,6426,93],[6348,6,6427,8],[6348,7,6427,9],[6348,8,6427,10],[6349,4,6428,4],[6349,5,6428,5],[6349,6,6428,6],[6350,2,6429,0],[6352,2,6431,0],[6353,0,6432,0],[6354,0,6433,0],[6355,0,6434,0],[6356,0,6435,0],[6357,0,6436,0],[6358,0,6437,0],[6359,0,6438,0],[6360,0,6439,0],[6361,0,6440,0],[6362,0,6441,0],[6363,0,6442,0],[6364,0,6443,0],[6365,0,6444,0],[6366,0,6445,0],[6367,0,6446,0],[6368,2,6447,0],[6368,11,6447,9,"signInWithCustomToken$1"],[6368,34,6447,32,"signInWithCustomToken$1"],[6368,35,6447,33,"auth"],[6368,39,6447,37],[6368,41,6447,39,"request"],[6368,48,6447,46],[6368,50,6447,48],[6369,4,6448,4],[6369,11,6448,11,"tslib"],[6369,16,6448,16],[6369,17,6448,17,"__awaiter"],[6369,26,6448,26],[6369,27,6448,27],[6369,31,6448,31],[6369,33,6448,31,"undefined"],[6369,42,6448,31],[6369,44,6448,31,"undefined"],[6369,53,6448,31],[6369,55,6448,49],[6369,67,6448,61],[6370,6,6449,8],[6370,13,6449,15,"tslib"],[6370,18,6449,20],[6370,19,6449,21,"__generator"],[6370,30,6449,32],[6370,31,6449,33],[6370,35,6449,37],[6370,37,6449,39],[6370,47,6449,49,"_a"],[6370,49,6449,51],[6370,51,6449,53],[6371,8,6450,12],[6371,15,6450,19],[6371,16,6450,20],[6371,17,6450,21],[6371,18,6450,22],[6371,30,6450,34,"_performSignInRequest"],[6371,51,6450,55],[6371,52,6450,56,"auth"],[6371,56,6450,60],[6371,58,6450,62],[6371,64,6450,68],[6371,65,6450,69],[6371,88,6450,92],[6371,124,6450,128],[6371,125,6450,129],[6371,167,6450,171,"_addTidIfNecessary"],[6371,185,6450,189],[6371,186,6450,190,"auth"],[6371,190,6450,194],[6371,192,6450,196,"request"],[6371,199,6450,203],[6371,200,6450,204],[6371,201,6450,205],[6371,202,6450,206],[6372,6,6451,8],[6372,7,6451,9],[6372,8,6451,10],[6373,4,6452,4],[6373,5,6452,5],[6373,6,6452,6],[6374,2,6453,0],[6376,2,6455,0],[6377,0,6456,0],[6378,0,6457,0],[6379,0,6458,0],[6380,0,6459,0],[6381,0,6460,0],[6382,0,6461,0],[6383,0,6462,0],[6384,0,6463,0],[6385,0,6464,0],[6386,0,6465,0],[6387,0,6466,0],[6388,0,6467,0],[6389,0,6468,0],[6390,0,6469,0],[6391,0,6470,0],[6392,2,6471,0],[6393,0,6472,0],[6394,0,6473,0],[6395,0,6474,0],[6396,0,6475,0],[6397,0,6476,0],[6398,0,6477,0],[6399,0,6478,0],[6400,0,6479,0],[6401,0,6480,0],[6402,0,6481,0],[6403,0,6482,0],[6404,0,6483,0],[6405,0,6484,0],[6406,0,6485,0],[6407,0,6486,0],[6408,0,6487,0],[6409,0,6488,0],[6410,0,6489,0],[6411,2,6490,0],[6411,11,6490,9,"signInWithCustomToken"],[6411,32,6490,30,"signInWithCustomToken"],[6411,33,6490,31,"auth"],[6411,37,6490,35],[6411,39,6490,37,"customToken"],[6411,50,6490,48],[6411,52,6490,50],[6412,4,6491,4],[6412,11,6491,11,"tslib"],[6412,16,6491,16],[6412,17,6491,17,"__awaiter"],[6412,26,6491,26],[6412,27,6491,27],[6412,31,6491,31],[6412,33,6491,31,"undefined"],[6412,42,6491,31],[6412,44,6491,31,"undefined"],[6412,53,6491,31],[6412,55,6491,49],[6412,67,6491,61],[6413,6,6492,8],[6413,10,6492,12,"authInternal"],[6413,22,6492,24],[6413,24,6492,26,"response"],[6413,32,6492,34],[6413,34,6492,36,"cred"],[6413,38,6492,40],[6414,6,6493,8],[6414,13,6493,15,"tslib"],[6414,18,6493,20],[6414,19,6493,21,"__generator"],[6414,30,6493,32],[6414,31,6493,33],[6414,35,6493,37],[6414,37,6493,39],[6414,47,6493,49,"_a"],[6414,49,6493,51],[6414,51,6493,53],[6415,8,6494,12],[6415,16,6494,20,"_a"],[6415,18,6494,22],[6415,19,6494,23,"label"],[6415,24,6494,28],[6416,10,6495,16],[6416,15,6495,21],[6416,16,6495,22],[6417,12,6496,20],[6417,16,6496,24,"app"],[6417,19,6496,27],[6417,20,6496,28,"_isFirebaseServerApp"],[6417,40,6496,48],[6417,41,6496,49,"auth"],[6417,45,6496,53],[6417,46,6496,54,"app"],[6417,49,6496,57],[6417,50,6496,58],[6417,52,6496,60],[6418,14,6497,24],[6418,21,6497,31],[6418,22,6497,32],[6418,23,6497,33],[6418,24,6497,34],[6418,36,6497,46,"Promise"],[6418,43,6497,53],[6418,44,6497,54,"reject"],[6418,50,6497,60],[6418,51,6497,61,"_serverAppCurrentUserOperationNotSupportedError"],[6418,98,6497,108],[6418,99,6497,109,"auth"],[6418,103,6497,113],[6418,104,6497,114],[6418,105,6497,115],[6418,106,6497,116],[6419,12,6498,20],[6420,12,6499,20,"authInternal"],[6420,24,6499,32],[6420,27,6499,35,"_castAuth"],[6420,36,6499,44],[6420,37,6499,45,"auth"],[6420,41,6499,49],[6420,42,6499,50],[6421,12,6500,20],[6421,19,6500,27],[6421,20,6500,28],[6421,21,6500,29],[6421,22,6500,30],[6421,33,6500,41,"signInWithCustomToken$1"],[6421,56,6500,64],[6421,57,6500,65,"authInternal"],[6421,69,6500,77],[6421,71,6500,79],[6422,14,6501,28,"token"],[6422,19,6501,33],[6422,21,6501,35,"customToken"],[6422,32,6501,46],[6423,14,6502,28,"returnSecureToken"],[6423,31,6502,45],[6423,33,6502,47],[6424,12,6503,24],[6424,13,6503,25],[6424,14,6503,26],[6424,15,6503,27],[6425,10,6504,16],[6425,15,6504,21],[6425,16,6504,22],[6426,12,6505,20,"response"],[6426,20,6505,28],[6426,23,6505,31,"_a"],[6426,25,6505,33],[6426,26,6505,34,"sent"],[6426,30,6505,38],[6426,31,6505,39],[6426,32,6505,40],[6427,12,6506,20],[6427,19,6506,27],[6427,20,6506,28],[6427,21,6506,29],[6427,22,6506,30],[6427,33,6506,41,"UserCredentialImpl"],[6427,51,6506,59],[6427,52,6506,60,"_fromIdTokenResponse"],[6427,72,6506,80],[6427,73,6506,81,"authInternal"],[6427,85,6506,93],[6427,87,6506,95],[6427,95,6506,103],[6427,96,6506,104],[6427,125,6506,133,"response"],[6427,133,6506,141],[6427,134,6506,142],[6427,135,6506,143],[6428,10,6507,16],[6428,15,6507,21],[6428,16,6507,22],[6429,12,6508,20,"cred"],[6429,16,6508,24],[6429,19,6508,27,"_a"],[6429,21,6508,29],[6429,22,6508,30,"sent"],[6429,26,6508,34],[6429,27,6508,35],[6429,28,6508,36],[6430,12,6509,20],[6430,19,6509,27],[6430,20,6509,28],[6430,21,6509,29],[6430,22,6509,30],[6430,33,6509,41,"authInternal"],[6430,45,6509,53],[6430,46,6509,54,"_updateCurrentUser"],[6430,64,6509,72],[6430,65,6509,73,"cred"],[6430,69,6509,77],[6430,70,6509,78,"user"],[6430,74,6509,82],[6430,75,6509,83],[6430,76,6509,84],[6431,10,6510,16],[6431,15,6510,21],[6431,16,6510,22],[6432,12,6511,20,"_a"],[6432,14,6511,22],[6432,15,6511,23,"sent"],[6432,19,6511,27],[6432,20,6511,28],[6432,21,6511,29],[6433,12,6512,20],[6433,19,6512,27],[6433,20,6512,28],[6433,21,6512,29],[6433,22,6512,30],[6433,34,6512,42,"cred"],[6433,38,6512,46],[6433,39,6512,47],[6434,8,6513,12],[6435,6,6514,8],[6435,7,6514,9],[6435,8,6514,10],[6436,4,6515,4],[6436,5,6515,5],[6436,6,6515,6],[6437,2,6516,0],[6439,2,6518,0],[6440,0,6519,0],[6441,0,6520,0],[6442,0,6521,0],[6443,0,6522,0],[6444,0,6523,0],[6445,0,6524,0],[6446,0,6525,0],[6447,0,6526,0],[6448,0,6527,0],[6449,0,6528,0],[6450,0,6529,0],[6451,0,6530,0],[6452,0,6531,0],[6453,0,6532,0],[6454,0,6533,0],[6455,2,6534,0],[6455,6,6534,4,"MultiFactorInfoImpl"],[6455,25,6534,23],[6455,28,6534,26],[6455,41,6534,41],[6455,53,6534,53],[6456,4,6535,4],[6456,13,6535,13,"MultiFactorInfoImpl"],[6456,32,6535,32,"MultiFactorInfoImpl"],[6456,33,6535,33,"factorId"],[6456,41,6535,41],[6456,43,6535,43,"response"],[6456,51,6535,51],[6456,53,6535,53],[6457,6,6536,8],[6457,10,6536,12],[6457,11,6536,13,"factorId"],[6457,19,6536,21],[6457,22,6536,24,"factorId"],[6457,30,6536,32],[6458,6,6537,8],[6458,10,6537,12],[6458,11,6537,13,"uid"],[6458,14,6537,16],[6458,17,6537,19,"response"],[6458,25,6537,27],[6458,26,6537,28,"mfaEnrollmentId"],[6458,41,6537,43],[6459,6,6538,8],[6459,10,6538,12],[6459,11,6538,13,"enrollmentTime"],[6459,25,6538,27],[6459,28,6538,30],[6459,32,6538,34,"Date"],[6459,36,6538,38],[6459,37,6538,39,"response"],[6459,45,6538,47],[6459,46,6538,48,"enrolledAt"],[6459,56,6538,58],[6459,57,6538,59],[6459,58,6538,60,"toUTCString"],[6459,69,6538,71],[6459,70,6538,72],[6459,71,6538,73],[6460,6,6539,8],[6460,10,6539,12],[6460,11,6539,13,"displayName"],[6460,22,6539,24],[6460,25,6539,27,"response"],[6460,33,6539,35],[6460,34,6539,36,"displayName"],[6460,45,6539,47],[6461,4,6540,4],[6462,4,6541,4,"MultiFactorInfoImpl"],[6462,23,6541,23],[6462,24,6541,24,"_fromServerResponse"],[6462,43,6541,43],[6462,46,6541,46],[6462,56,6541,56,"auth"],[6462,60,6541,60],[6462,62,6541,62,"enrollment"],[6462,72,6541,72],[6462,74,6541,74],[6463,6,6542,8],[6463,10,6542,12],[6463,21,6542,23],[6463,25,6542,27,"enrollment"],[6463,35,6542,37],[6463,37,6542,39],[6464,8,6543,12],[6464,15,6543,19,"PhoneMultiFactorInfoImpl"],[6464,39,6543,43],[6464,40,6543,44,"_fromServerResponse"],[6464,59,6543,63],[6464,60,6543,64,"auth"],[6464,64,6543,68],[6464,66,6543,70,"enrollment"],[6464,76,6543,80],[6464,77,6543,81],[6465,6,6544,8],[6465,7,6544,9],[6465,13,6545,13],[6465,17,6545,17],[6465,27,6545,27],[6465,31,6545,31,"enrollment"],[6465,41,6545,41],[6465,43,6545,43],[6466,8,6546,12],[6466,15,6546,19,"TotpMultiFactorInfoImpl"],[6466,38,6546,42],[6466,39,6546,43,"_fromServerResponse"],[6466,58,6546,62],[6466,59,6546,63,"auth"],[6466,63,6546,67],[6466,65,6546,69,"enrollment"],[6466,75,6546,79],[6466,76,6546,80],[6467,6,6547,8],[6468,6,6548,8],[6468,13,6548,15,"_fail"],[6468,18,6548,20],[6468,19,6548,21,"auth"],[6468,23,6548,25],[6468,25,6548,27],[6468,41,6548,43],[6468,42,6548,44],[6468,76,6548,78],[6468,77,6548,79],[6469,4,6549,4],[6469,5,6549,5],[6470,4,6550,4],[6470,11,6550,11,"MultiFactorInfoImpl"],[6470,30,6550,30],[6471,2,6551,0],[6471,3,6551,1],[6471,4,6551,2],[6471,5,6551,4],[6472,2,6552,0],[6472,6,6552,4,"PhoneMultiFactorInfoImpl"],[6472,30,6552,28],[6472,33,6552,31],[6472,46,6552,46],[6472,56,6552,56,"_super"],[6472,62,6552,62],[6472,64,6552,64],[6473,4,6553,4,"tslib"],[6473,9,6553,9],[6473,10,6553,10,"__extends"],[6473,19,6553,19],[6473,20,6553,20,"PhoneMultiFactorInfoImpl"],[6473,44,6553,44],[6473,46,6553,46,"_super"],[6473,52,6553,52],[6473,53,6553,53],[6474,4,6554,4],[6474,13,6554,13,"PhoneMultiFactorInfoImpl"],[6474,37,6554,37,"PhoneMultiFactorInfoImpl"],[6474,38,6554,38,"response"],[6474,46,6554,46],[6474,48,6554,48],[6475,6,6555,8],[6475,10,6555,12,"_this"],[6475,15,6555,17],[6475,18,6555,20,"_super"],[6475,24,6555,26],[6475,25,6555,27,"call"],[6475,29,6555,31],[6475,30,6555,32],[6475,34,6555,36],[6475,36,6555,38],[6475,43,6555,45],[6475,44,6555,46],[6475,66,6555,68,"response"],[6475,74,6555,76],[6475,75,6555,77],[6475,79,6555,81],[6475,83,6555,85],[6476,6,6556,8,"_this"],[6476,11,6556,13],[6476,12,6556,14,"phoneNumber"],[6476,23,6556,25],[6476,26,6556,28,"response"],[6476,34,6556,36],[6476,35,6556,37,"phoneInfo"],[6476,44,6556,46],[6477,6,6557,8],[6477,13,6557,15,"_this"],[6477,18,6557,20],[6478,4,6558,4],[6479,4,6559,4,"PhoneMultiFactorInfoImpl"],[6479,28,6559,28],[6479,29,6559,29,"_fromServerResponse"],[6479,48,6559,48],[6479,51,6559,51],[6479,61,6559,61,"_auth"],[6479,66,6559,66],[6479,68,6559,68,"enrollment"],[6479,78,6559,78],[6479,80,6559,80],[6480,6,6560,8],[6480,13,6560,15],[6480,17,6560,19,"PhoneMultiFactorInfoImpl"],[6480,41,6560,43],[6480,42,6560,44,"enrollment"],[6480,52,6560,54],[6480,53,6560,55],[6481,4,6561,4],[6481,5,6561,5],[6482,4,6562,4],[6482,11,6562,11,"PhoneMultiFactorInfoImpl"],[6482,35,6562,35],[6483,2,6563,0],[6483,3,6563,1],[6483,4,6563,2,"MultiFactorInfoImpl"],[6483,23,6563,21],[6483,24,6563,23],[6484,2,6564,0],[6484,6,6564,4,"TotpMultiFactorInfoImpl"],[6484,29,6564,27],[6484,32,6564,30],[6484,45,6564,45],[6484,55,6564,55,"_super"],[6484,61,6564,61],[6484,63,6564,63],[6485,4,6565,4,"tslib"],[6485,9,6565,9],[6485,10,6565,10,"__extends"],[6485,19,6565,19],[6485,20,6565,20,"TotpMultiFactorInfoImpl"],[6485,43,6565,43],[6485,45,6565,45,"_super"],[6485,51,6565,51],[6485,52,6565,52],[6486,4,6566,4],[6486,13,6566,13,"TotpMultiFactorInfoImpl"],[6486,36,6566,36,"TotpMultiFactorInfoImpl"],[6486,37,6566,37,"response"],[6486,45,6566,45],[6486,47,6566,47],[6487,6,6567,8],[6487,13,6567,15,"_super"],[6487,19,6567,21],[6487,20,6567,22,"call"],[6487,24,6567,26],[6487,25,6567,27],[6487,29,6567,31],[6487,31,6567,33],[6487,37,6567,39],[6487,38,6567,40],[6487,59,6567,61,"response"],[6487,67,6567,69],[6487,68,6567,70],[6487,72,6567,74],[6487,76,6567,78],[6488,4,6568,4],[6489,4,6569,4,"TotpMultiFactorInfoImpl"],[6489,27,6569,27],[6489,28,6569,28,"_fromServerResponse"],[6489,47,6569,47],[6489,50,6569,50],[6489,60,6569,60,"_auth"],[6489,65,6569,65],[6489,67,6569,67,"enrollment"],[6489,77,6569,77],[6489,79,6569,79],[6490,6,6570,8],[6490,13,6570,15],[6490,17,6570,19,"TotpMultiFactorInfoImpl"],[6490,40,6570,42],[6490,41,6570,43,"enrollment"],[6490,51,6570,53],[6490,52,6570,54],[6491,4,6571,4],[6491,5,6571,5],[6492,4,6572,4],[6492,11,6572,11,"TotpMultiFactorInfoImpl"],[6492,34,6572,34],[6493,2,6573,0],[6493,3,6573,1],[6493,4,6573,2,"MultiFactorInfoImpl"],[6493,23,6573,21],[6493,24,6573,23],[6495,2,6575,0],[6496,0,6576,0],[6497,0,6577,0],[6498,0,6578,0],[6499,0,6579,0],[6500,0,6580,0],[6501,0,6581,0],[6502,0,6582,0],[6503,0,6583,0],[6504,0,6584,0],[6505,0,6585,0],[6506,0,6586,0],[6507,0,6587,0],[6508,0,6588,0],[6509,0,6589,0],[6510,0,6590,0],[6511,2,6591,0],[6511,11,6591,9,"_setActionCodeSettingsOnRequest"],[6511,42,6591,40,"_setActionCodeSettingsOnRequest"],[6511,43,6591,41,"auth"],[6511,47,6591,45],[6511,49,6591,47,"request"],[6511,56,6591,54],[6511,58,6591,56,"actionCodeSettings"],[6511,76,6591,74],[6511,78,6591,76],[6512,4,6592,4],[6512,8,6592,8,"_a"],[6512,10,6592,10],[6513,4,6593,4,"_assert"],[6513,11,6593,11],[6513,12,6593,12],[6513,13,6593,13],[6513,14,6593,14,"_a"],[6513,16,6593,16],[6513,19,6593,19,"actionCodeSettings"],[6513,37,6593,37],[6513,38,6593,38,"url"],[6513,41,6593,41],[6513,47,6593,47],[6513,51,6593,51],[6513,55,6593,55,"_a"],[6513,57,6593,57],[6513,62,6593,57,"undefined"],[6513,71,6593,68],[6513,74,6593,68,"undefined"],[6513,83,6593,68],[6513,86,6593,80,"_a"],[6513,88,6593,82],[6513,89,6593,83,"length"],[6513,95,6593,89],[6513,99,6593,93],[6513,100,6593,94],[6513,102,6593,96,"auth"],[6513,106,6593,100],[6513,108,6593,102],[6513,130,6593,124],[6513,131,6593,125],[6513,171,6593,165],[6513,172,6593,166],[6514,4,6594,4,"_assert"],[6514,11,6594,11],[6514,12,6594,12],[6514,19,6594,19,"actionCodeSettings"],[6514,37,6594,37],[6514,38,6594,38,"dynamicLinkDomain"],[6514,55,6594,55],[6514,60,6594,60],[6514,71,6594,71],[6514,75,6595,8,"actionCodeSettings"],[6514,93,6595,26],[6514,94,6595,27,"dynamicLinkDomain"],[6514,111,6595,44],[6514,112,6595,45,"length"],[6514,118,6595,51],[6514,121,6595,54],[6514,122,6595,55],[6514,124,6595,57,"auth"],[6514,128,6595,61],[6514,130,6595,63],[6514,159,6595,92],[6514,160,6595,93],[6514,207,6595,140],[6514,208,6595,141],[6515,4,6596,4,"request"],[6515,11,6596,11],[6515,12,6596,12,"continueUrl"],[6515,23,6596,23],[6515,26,6596,26,"actionCodeSettings"],[6515,44,6596,44],[6515,45,6596,45,"url"],[6515,48,6596,48],[6516,4,6597,4,"request"],[6516,11,6597,11],[6516,12,6597,12,"dynamicLinkDomain"],[6516,29,6597,29],[6516,32,6597,32,"actionCodeSettings"],[6516,50,6597,50],[6516,51,6597,51,"dynamicLinkDomain"],[6516,68,6597,68],[6517,4,6598,4,"request"],[6517,11,6598,11],[6517,12,6598,12,"canHandleCodeInApp"],[6517,30,6598,30],[6517,33,6598,33,"actionCodeSettings"],[6517,51,6598,51],[6517,52,6598,52,"handleCodeInApp"],[6517,67,6598,67],[6518,4,6599,4],[6518,8,6599,8,"actionCodeSettings"],[6518,26,6599,26],[6518,27,6599,27,"iOS"],[6518,30,6599,30],[6518,32,6599,32],[6519,6,6600,8,"_assert"],[6519,13,6600,15],[6519,14,6600,16,"actionCodeSettings"],[6519,32,6600,34],[6519,33,6600,35,"iOS"],[6519,36,6600,38],[6519,37,6600,39,"bundleId"],[6519,45,6600,47],[6519,46,6600,48,"length"],[6519,52,6600,54],[6519,55,6600,57],[6519,56,6600,58],[6519,58,6600,60,"auth"],[6519,62,6600,64],[6519,64,6600,66],[6519,87,6600,89],[6519,88,6600,90],[6519,129,6600,131],[6519,130,6600,132],[6520,6,6601,8,"request"],[6520,13,6601,15],[6520,14,6601,16,"iOSBundleId"],[6520,25,6601,27],[6520,28,6601,30,"actionCodeSettings"],[6520,46,6601,48],[6520,47,6601,49,"iOS"],[6520,50,6601,52],[6520,51,6601,53,"bundleId"],[6520,59,6601,61],[6521,4,6602,4],[6522,4,6603,4],[6522,8,6603,8,"actionCodeSettings"],[6522,26,6603,26],[6522,27,6603,27,"android"],[6522,34,6603,34],[6522,36,6603,36],[6523,6,6604,8,"_assert"],[6523,13,6604,15],[6523,14,6604,16,"actionCodeSettings"],[6523,32,6604,34],[6523,33,6604,35,"android"],[6523,40,6604,42],[6523,41,6604,43,"packageName"],[6523,52,6604,54],[6523,53,6604,55,"length"],[6523,59,6604,61],[6523,62,6604,64],[6523,63,6604,65],[6523,65,6604,67,"auth"],[6523,69,6604,71],[6523,71,6604,73],[6523,97,6604,99],[6523,98,6604,100],[6523,146,6604,148],[6523,147,6604,149],[6524,6,6605,8,"request"],[6524,13,6605,15],[6524,14,6605,16,"androidInstallApp"],[6524,31,6605,33],[6524,34,6605,36,"actionCodeSettings"],[6524,52,6605,54],[6524,53,6605,55,"android"],[6524,60,6605,62],[6524,61,6605,63,"installApp"],[6524,71,6605,73],[6525,6,6606,8,"request"],[6525,13,6606,15],[6525,14,6606,16,"androidMinimumVersionCode"],[6525,39,6606,41],[6525,42,6607,12,"actionCodeSettings"],[6525,60,6607,30],[6525,61,6607,31,"android"],[6525,68,6607,38],[6525,69,6607,39,"minimumVersion"],[6525,83,6607,53],[6526,6,6608,8,"request"],[6526,13,6608,15],[6526,14,6608,16,"androidPackageName"],[6526,32,6608,34],[6526,35,6608,37,"actionCodeSettings"],[6526,53,6608,55],[6526,54,6608,56,"android"],[6526,61,6608,63],[6526,62,6608,64,"packageName"],[6526,73,6608,75],[6527,4,6609,4],[6528,2,6610,0],[6530,2,6612,0],[6531,0,6613,0],[6532,0,6614,0],[6533,0,6615,0],[6534,0,6616,0],[6535,0,6617,0],[6536,0,6618,0],[6537,0,6619,0],[6538,0,6620,0],[6539,0,6621,0],[6540,0,6622,0],[6541,0,6623,0],[6542,0,6624,0],[6543,0,6625,0],[6544,0,6626,0],[6545,0,6627,0],[6546,2,6628,0],[6547,0,6629,0],[6548,0,6630,0],[6549,0,6631,0],[6550,0,6632,0],[6551,0,6633,0],[6552,0,6634,0],[6553,0,6635,0],[6554,0,6636,0],[6555,0,6637,0],[6556,0,6638,0],[6557,0,6639,0],[6558,0,6640,0],[6559,2,6641,0],[6559,11,6641,9,"recachePasswordPolicy"],[6559,32,6641,30,"recachePasswordPolicy"],[6559,33,6641,31,"auth"],[6559,37,6641,35],[6559,39,6641,37],[6560,4,6642,4],[6560,11,6642,11,"tslib"],[6560,16,6642,16],[6560,17,6642,17,"__awaiter"],[6560,26,6642,26],[6560,27,6642,27],[6560,31,6642,31],[6560,33,6642,31,"undefined"],[6560,42,6642,31],[6560,44,6642,31,"undefined"],[6560,53,6642,31],[6560,55,6642,49],[6560,67,6642,61],[6561,6,6643,8],[6561,10,6643,12,"authInternal"],[6561,22,6643,24],[6562,6,6644,8],[6562,13,6644,15,"tslib"],[6562,18,6644,20],[6562,19,6644,21,"__generator"],[6562,30,6644,32],[6562,31,6644,33],[6562,35,6644,37],[6562,37,6644,39],[6562,47,6644,49,"_a"],[6562,49,6644,51],[6562,51,6644,53],[6563,8,6645,12],[6563,16,6645,20,"_a"],[6563,18,6645,22],[6563,19,6645,23,"label"],[6563,24,6645,28],[6564,10,6646,16],[6564,15,6646,21],[6564,16,6646,22],[6565,12,6647,20,"authInternal"],[6565,24,6647,32],[6565,27,6647,35,"_castAuth"],[6565,36,6647,44],[6565,37,6647,45,"auth"],[6565,41,6647,49],[6565,42,6647,50],[6566,12,6648,20],[6566,16,6648,24],[6566,17,6648,25,"authInternal"],[6566,29,6648,37],[6566,30,6648,38,"_getPasswordPolicyInternal"],[6566,56,6648,64],[6566,57,6648,65],[6566,58,6648,66],[6566,60,6648,68],[6566,67,6648,75],[6566,68,6648,76],[6566,69,6648,77],[6566,70,6648,78],[6566,81,6648,89],[6566,82,6648,90],[6566,83,6648,91],[6567,12,6649,20],[6567,19,6649,27],[6567,20,6649,28],[6567,21,6649,29],[6567,22,6649,30],[6567,33,6649,41,"authInternal"],[6567,45,6649,53],[6567,46,6649,54,"_updatePasswordPolicy"],[6567,67,6649,75],[6567,68,6649,76],[6567,69,6649,77],[6567,70,6649,78],[6568,10,6650,16],[6568,15,6650,21],[6568,16,6650,22],[6569,12,6651,20,"_a"],[6569,14,6651,22],[6569,15,6651,23,"sent"],[6569,19,6651,27],[6569,20,6651,28],[6569,21,6651,29],[6570,12,6652,20,"_a"],[6570,14,6652,22],[6570,15,6652,23,"label"],[6570,20,6652,28],[6570,23,6652,31],[6570,24,6652,32],[6571,10,6653,16],[6571,15,6653,21],[6571,16,6653,22],[6572,12,6653,24],[6572,19,6653,31],[6572,20,6653,32],[6572,21,6653,33],[6572,22,6653,34],[6572,33,6653,45],[6573,8,6654,12],[6574,6,6655,8],[6574,7,6655,9],[6574,8,6655,10],[6575,4,6656,4],[6575,5,6656,5],[6575,6,6656,6],[6576,2,6657,0],[6577,2,6658,0],[6578,0,6659,0],[6579,0,6660,0],[6580,0,6661,0],[6581,0,6662,0],[6582,0,6663,0],[6583,0,6664,0],[6584,0,6665,0],[6585,0,6666,0],[6586,0,6667,0],[6587,0,6668,0],[6588,0,6669,0],[6589,0,6670,0],[6590,0,6671,0],[6591,0,6672,0],[6592,0,6673,0],[6593,0,6674,0],[6594,0,6675,0],[6595,0,6676,0],[6596,0,6677,0],[6597,0,6678,0],[6598,0,6679,0],[6599,0,6680,0],[6600,0,6681,0],[6601,0,6682,0],[6602,0,6683,0],[6603,0,6684,0],[6604,0,6685,0],[6605,0,6686,0],[6606,0,6687,0],[6607,0,6688,0],[6608,0,6689,0],[6609,0,6690,0],[6610,0,6691,0],[6611,0,6692,0],[6612,2,6693,0],[6612,11,6693,9,"sendPasswordResetEmail"],[6612,33,6693,31,"sendPasswordResetEmail"],[6612,34,6693,32,"auth"],[6612,38,6693,36],[6612,40,6693,38,"email"],[6612,45,6693,43],[6612,47,6693,45,"actionCodeSettings"],[6612,65,6693,63],[6612,67,6693,65],[6613,4,6694,4],[6613,11,6694,11,"tslib"],[6613,16,6694,16],[6613,17,6694,17,"__awaiter"],[6613,26,6694,26],[6613,27,6694,27],[6613,31,6694,31],[6613,33,6694,31,"undefined"],[6613,42,6694,31],[6613,44,6694,31,"undefined"],[6613,53,6694,31],[6613,55,6694,49],[6613,67,6694,61],[6614,6,6695,8],[6614,10,6695,12,"authInternal"],[6614,22,6695,24],[6614,24,6695,26,"request"],[6614,31,6695,33],[6615,6,6696,8],[6615,13,6696,15,"tslib"],[6615,18,6696,20],[6615,19,6696,21,"__generator"],[6615,30,6696,32],[6615,31,6696,33],[6615,35,6696,37],[6615,37,6696,39],[6615,47,6696,49,"_a"],[6615,49,6696,51],[6615,51,6696,53],[6616,8,6697,12],[6616,16,6697,20,"_a"],[6616,18,6697,22],[6616,19,6697,23,"label"],[6616,24,6697,28],[6617,10,6698,16],[6617,15,6698,21],[6617,16,6698,22],[6618,12,6699,20,"authInternal"],[6618,24,6699,32],[6618,27,6699,35,"_castAuth"],[6618,36,6699,44],[6618,37,6699,45,"auth"],[6618,41,6699,49],[6618,42,6699,50],[6619,12,6700,20,"request"],[6619,19,6700,27],[6619,22,6700,30],[6620,14,6701,24,"requestType"],[6620,25,6701,35],[6620,27,6701,37],[6620,43,6701,53],[6620,44,6701,54],[6621,14,6702,24,"email"],[6621,19,6702,29],[6621,21,6702,31,"email"],[6621,26,6702,36],[6622,14,6703,24,"clientType"],[6622,24,6703,34],[6622,26,6703,36],[6622,43,6703,53],[6622,44,6703,54],[6623,12,6704,20],[6623,13,6704,21],[6624,12,6705,20],[6624,16,6705,24,"actionCodeSettings"],[6624,34,6705,42],[6624,36,6705,44],[6625,14,6706,24,"_setActionCodeSettingsOnRequest"],[6625,45,6706,55],[6625,46,6706,56,"authInternal"],[6625,58,6706,68],[6625,60,6706,70,"request"],[6625,67,6706,77],[6625,69,6706,79,"actionCodeSettings"],[6625,87,6706,97],[6625,88,6706,98],[6626,12,6707,20],[6627,12,6708,20],[6627,19,6708,27],[6627,20,6708,28],[6627,21,6708,29],[6627,22,6708,30],[6627,33,6708,41,"handleRecaptchaFlow"],[6627,52,6708,60],[6627,53,6708,61,"authInternal"],[6627,65,6708,73],[6627,67,6708,75,"request"],[6627,74,6708,82],[6627,76,6708,84],[6627,88,6708,96],[6627,89,6708,97],[6627,129,6708,137,"sendPasswordResetEmail$1"],[6627,153,6708,161],[6627,154,6708,162],[6627,155,6708,163],[6628,10,6709,16],[6628,15,6709,21],[6628,16,6709,22],[6629,12,6710,20,"_a"],[6629,14,6710,22],[6629,15,6710,23,"sent"],[6629,19,6710,27],[6629,20,6710,28],[6629,21,6710,29],[6630,12,6711,20],[6630,19,6711,27],[6630,20,6711,28],[6630,21,6711,29],[6630,22,6711,30],[6630,33,6711,41],[6631,8,6712,12],[6632,6,6713,8],[6632,7,6713,9],[6632,8,6713,10],[6633,4,6714,4],[6633,5,6714,5],[6633,6,6714,6],[6634,2,6715,0],[6635,2,6716,0],[6636,0,6717,0],[6637,0,6718,0],[6638,0,6719,0],[6639,0,6720,0],[6640,0,6721,0],[6641,0,6722,0],[6642,0,6723,0],[6643,0,6724,0],[6644,2,6725,0],[6644,11,6725,9,"confirmPasswordReset"],[6644,31,6725,29,"confirmPasswordReset"],[6644,32,6725,30,"auth"],[6644,36,6725,34],[6644,38,6725,36,"oobCode"],[6644,45,6725,43],[6644,47,6725,45,"newPassword"],[6644,58,6725,56],[6644,60,6725,58],[6645,4,6726,4],[6645,11,6726,11,"tslib"],[6645,16,6726,16],[6645,17,6726,17,"__awaiter"],[6645,26,6726,26],[6645,27,6726,27],[6645,31,6726,31],[6645,33,6726,31,"undefined"],[6645,42,6726,31],[6645,44,6726,31,"undefined"],[6645,53,6726,31],[6645,55,6726,49],[6645,67,6726,61],[6646,6,6727,8],[6646,10,6727,12,"_this"],[6646,15,6727,17],[6646,18,6727,20],[6646,22,6727,24],[6647,6,6728,8],[6647,13,6728,15,"tslib"],[6647,18,6728,20],[6647,19,6728,21,"__generator"],[6647,30,6728,32],[6647,31,6728,33],[6647,35,6728,37],[6647,37,6728,39],[6647,47,6728,49,"_a"],[6647,49,6728,51],[6647,51,6728,53],[6648,8,6729,12],[6648,16,6729,20,"_a"],[6648,18,6729,22],[6648,19,6729,23,"label"],[6648,24,6729,28],[6649,10,6730,16],[6649,15,6730,21],[6649,16,6730,22],[6650,12,6730,24],[6650,19,6730,31],[6650,20,6730,32],[6650,21,6730,33],[6650,22,6730,34],[6650,33,6730,45,"resetPassword"],[6650,46,6730,58],[6650,47,6730,59,"util"],[6650,51,6730,63],[6650,52,6730,64,"getModularInstance"],[6650,70,6730,82],[6650,71,6730,83,"auth"],[6650,75,6730,87],[6650,76,6730,88],[6650,78,6730,90],[6651,14,6731,24,"oobCode"],[6651,21,6731,31],[6651,23,6731,33,"oobCode"],[6651,30,6731,40],[6652,14,6732,24,"newPassword"],[6652,25,6732,35],[6652,27,6732,37,"newPassword"],[6653,12,6733,20],[6653,13,6733,21],[6653,14,6733,22],[6653,15,6734,25,"catch"],[6653,20,6734,30],[6653,21,6734,31],[6653,31,6734,41,"error"],[6653,36,6734,46],[6653,38,6734,48],[6654,14,6734,50],[6654,21,6734,57,"tslib"],[6654,26,6734,62],[6654,27,6734,63,"__awaiter"],[6654,36,6734,72],[6654,37,6734,73,"_this"],[6654,42,6734,78],[6654,44,6734,78,"undefined"],[6654,53,6734,78],[6654,55,6734,78,"undefined"],[6654,64,6734,78],[6654,66,6734,96],[6654,78,6734,108],[6655,16,6735,24],[6655,23,6735,31,"tslib"],[6655,28,6735,36],[6655,29,6735,37,"__generator"],[6655,40,6735,48],[6655,41,6735,49],[6655,45,6735,53],[6655,47,6735,55],[6655,57,6735,65,"_a"],[6655,59,6735,67],[6655,61,6735,69],[6656,18,6736,28],[6656,22,6736,32,"error"],[6656,27,6736,37],[6656,28,6736,38,"code"],[6656,32,6736,42],[6656,37,6737,32],[6656,44,6737,39],[6656,45,6737,40,"concat"],[6656,51,6737,46],[6656,52,6737,47],[6656,89,6737,84],[6656,90,6737,85],[6656,145,6737,140],[6656,146,6737,141],[6656,148,6737,143],[6657,20,6738,32],[6657,25,6738,37,"recachePasswordPolicy"],[6657,46,6738,58],[6657,47,6738,59,"auth"],[6657,51,6738,63],[6657,52,6738,64],[6658,18,6739,28],[6659,18,6740,28],[6659,24,6740,34,"error"],[6659,29,6740,39],[6660,16,6741,24],[6660,17,6741,25],[6660,18,6741,26],[6661,14,6742,20],[6661,15,6742,21],[6661,16,6742,22],[6662,12,6742,24],[6662,13,6742,25],[6662,14,6742,26],[6662,15,6742,27],[6663,10,6743,16],[6663,15,6743,21],[6663,16,6743,22],[6664,12,6744,20,"_a"],[6664,14,6744,22],[6664,15,6744,23,"sent"],[6664,19,6744,27],[6664,20,6744,28],[6664,21,6744,29],[6665,12,6745,20],[6665,19,6745,27],[6665,20,6745,28],[6665,21,6745,29],[6665,22,6745,30],[6665,33,6745,41],[6666,8,6746,12],[6667,6,6747,8],[6667,7,6747,9],[6667,8,6747,10],[6668,4,6748,4],[6668,5,6748,5],[6668,6,6748,6],[6669,2,6749,0],[6670,2,6750,0],[6671,0,6751,0],[6672,0,6752,0],[6673,0,6753,0],[6674,0,6754,0],[6675,0,6755,0],[6676,0,6756,0],[6677,0,6757,0],[6678,2,6758,0],[6678,11,6758,9,"applyActionCode"],[6678,26,6758,24,"applyActionCode"],[6678,27,6758,25,"auth"],[6678,31,6758,29],[6678,33,6758,31,"oobCode"],[6678,40,6758,38],[6678,42,6758,40],[6679,4,6759,4],[6679,11,6759,11,"tslib"],[6679,16,6759,16],[6679,17,6759,17,"__awaiter"],[6679,26,6759,26],[6679,27,6759,27],[6679,31,6759,31],[6679,33,6759,31,"undefined"],[6679,42,6759,31],[6679,44,6759,31,"undefined"],[6679,53,6759,31],[6679,55,6759,49],[6679,67,6759,61],[6680,6,6760,8],[6680,13,6760,15,"tslib"],[6680,18,6760,20],[6680,19,6760,21,"__generator"],[6680,30,6760,32],[6680,31,6760,33],[6680,35,6760,37],[6680,37,6760,39],[6680,47,6760,49,"_a"],[6680,49,6760,51],[6680,51,6760,53],[6681,8,6761,12],[6681,16,6761,20,"_a"],[6681,18,6761,22],[6681,19,6761,23,"label"],[6681,24,6761,28],[6682,10,6762,16],[6682,15,6762,21],[6682,16,6762,22],[6683,12,6762,24],[6683,19,6762,31],[6683,20,6762,32],[6683,21,6762,33],[6683,22,6762,34],[6683,33,6762,45,"applyActionCode$1"],[6683,50,6762,62],[6683,51,6762,63,"util"],[6683,55,6762,67],[6683,56,6762,68,"getModularInstance"],[6683,74,6762,86],[6683,75,6762,87,"auth"],[6683,79,6762,91],[6683,80,6762,92],[6683,82,6762,94],[6684,14,6762,96,"oobCode"],[6684,21,6762,103],[6684,23,6762,105,"oobCode"],[6685,12,6762,113],[6685,13,6762,114],[6685,14,6762,115],[6685,15,6762,116],[6686,10,6763,16],[6686,15,6763,21],[6686,16,6763,22],[6687,12,6764,20,"_a"],[6687,14,6764,22],[6687,15,6764,23,"sent"],[6687,19,6764,27],[6687,20,6764,28],[6687,21,6764,29],[6688,12,6765,20],[6688,19,6765,27],[6688,20,6765,28],[6688,21,6765,29],[6688,22,6765,30],[6688,33,6765,41],[6689,8,6766,12],[6690,6,6767,8],[6690,7,6767,9],[6690,8,6767,10],[6691,4,6768,4],[6691,5,6768,5],[6691,6,6768,6],[6692,2,6769,0],[6693,2,6770,0],[6694,0,6771,0],[6695,0,6772,0],[6696,0,6773,0],[6697,0,6774,0],[6698,0,6775,0],[6699,0,6776,0],[6700,0,6777,0],[6701,0,6778,0],[6702,0,6779,0],[6703,2,6780,0],[6703,11,6780,9,"checkActionCode"],[6703,26,6780,24,"checkActionCode"],[6703,27,6780,25,"auth"],[6703,31,6780,29],[6703,33,6780,31,"oobCode"],[6703,40,6780,38],[6703,42,6780,40],[6704,4,6781,4],[6704,11,6781,11,"tslib"],[6704,16,6781,16],[6704,17,6781,17,"__awaiter"],[6704,26,6781,26],[6704,27,6781,27],[6704,31,6781,31],[6704,33,6781,31,"undefined"],[6704,42,6781,31],[6704,44,6781,31,"undefined"],[6704,53,6781,31],[6704,55,6781,49],[6704,67,6781,61],[6705,6,6782,8],[6705,10,6782,12,"authModular"],[6705,21,6782,23],[6705,23,6782,25,"response"],[6705,31,6782,33],[6705,33,6782,35,"operation"],[6705,42,6782,44],[6705,44,6782,46,"multiFactorInfo"],[6705,59,6782,61],[6706,6,6783,8],[6706,13,6783,15,"tslib"],[6706,18,6783,20],[6706,19,6783,21,"__generator"],[6706,30,6783,32],[6706,31,6783,33],[6706,35,6783,37],[6706,37,6783,39],[6706,47,6783,49,"_a"],[6706,49,6783,51],[6706,51,6783,53],[6707,8,6784,12],[6707,16,6784,20,"_a"],[6707,18,6784,22],[6707,19,6784,23,"label"],[6707,24,6784,28],[6708,10,6785,16],[6708,15,6785,21],[6708,16,6785,22],[6709,12,6786,20,"authModular"],[6709,23,6786,31],[6709,26,6786,34,"util"],[6709,30,6786,38],[6709,31,6786,39,"getModularInstance"],[6709,49,6786,57],[6709,50,6786,58,"auth"],[6709,54,6786,62],[6709,55,6786,63],[6710,12,6787,20],[6710,19,6787,27],[6710,20,6787,28],[6710,21,6787,29],[6710,22,6787,30],[6710,33,6787,41,"resetPassword"],[6710,46,6787,54],[6710,47,6787,55,"authModular"],[6710,58,6787,66],[6710,60,6787,68],[6711,14,6787,70,"oobCode"],[6711,21,6787,77],[6711,23,6787,79,"oobCode"],[6712,12,6787,87],[6712,13,6787,88],[6712,14,6787,89],[6712,15,6787,90],[6713,10,6788,16],[6713,15,6788,21],[6713,16,6788,22],[6714,12,6789,20,"response"],[6714,20,6789,28],[6714,23,6789,31,"_a"],[6714,25,6789,33],[6714,26,6789,34,"sent"],[6714,30,6789,38],[6714,31,6789,39],[6714,32,6789,40],[6715,12,6790,20,"operation"],[6715,21,6790,29],[6715,24,6790,32,"response"],[6715,32,6790,40],[6715,33,6790,41,"requestType"],[6715,44,6790,52],[6716,12,6791,20,"_assert"],[6716,19,6791,27],[6716,20,6791,28,"operation"],[6716,29,6791,37],[6716,31,6791,39,"authModular"],[6716,42,6791,50],[6716,44,6791,52],[6716,60,6791,68],[6716,61,6791,69],[6716,95,6791,103],[6716,96,6791,104],[6717,12,6792,20],[6717,20,6792,28,"operation"],[6717,29,6792,37],[6718,14,6793,24],[6718,19,6793,29],[6718,33,6793,43],[6718,34,6793,44],[6719,16,6794,28],[6720,14,6795,24],[6720,19,6795,29],[6720,44,6795,54],[6720,45,6795,55],[6721,16,6796,28,"_assert"],[6721,23,6796,35],[6721,24,6796,36,"response"],[6721,32,6796,44],[6721,33,6796,45,"newEmail"],[6721,41,6796,53],[6721,43,6796,55,"authModular"],[6721,54,6796,66],[6721,56,6796,68],[6721,72,6796,84],[6721,73,6796,85],[6721,107,6796,119],[6721,108,6796,120],[6722,16,6797,28],[6723,14,6798,24],[6723,19,6798,29],[6723,50,6798,60],[6723,51,6798,61],[6724,16,6799,28,"_assert"],[6724,23,6799,35],[6724,24,6799,36,"response"],[6724,32,6799,44],[6724,33,6799,45,"mfaInfo"],[6724,40,6799,52],[6724,42,6799,54,"authModular"],[6724,53,6799,65],[6724,55,6799,67],[6724,71,6799,83],[6724,72,6799,84],[6724,106,6799,118],[6724,107,6799,119],[6725,14,6800,24],[6726,14,6801,24],[6727,16,6802,28,"_assert"],[6727,23,6802,35],[6727,24,6802,36,"response"],[6727,32,6802,44],[6727,33,6802,45,"email"],[6727,38,6802,50],[6727,40,6802,52,"authModular"],[6727,51,6802,63],[6727,53,6802,65],[6727,69,6802,81],[6727,70,6802,82],[6727,104,6802,116],[6727,105,6802,117],[6728,12,6803,20],[6729,12,6804,20,"multiFactorInfo"],[6729,27,6804,35],[6729,30,6804,38],[6729,34,6804,42],[6730,12,6805,20],[6730,16,6805,24,"response"],[6730,24,6805,32],[6730,25,6805,33,"mfaInfo"],[6730,32,6805,40],[6730,34,6805,42],[6731,14,6806,24,"multiFactorInfo"],[6731,29,6806,39],[6731,32,6806,42,"MultiFactorInfoImpl"],[6731,51,6806,61],[6731,52,6806,62,"_fromServerResponse"],[6731,71,6806,81],[6731,72,6806,82,"_castAuth"],[6731,81,6806,91],[6731,82,6806,92,"authModular"],[6731,93,6806,103],[6731,94,6806,104],[6731,96,6806,106,"response"],[6731,104,6806,114],[6731,105,6806,115,"mfaInfo"],[6731,112,6806,122],[6731,113,6806,123],[6732,12,6807,20],[6733,12,6808,20],[6733,19,6808,27],[6733,20,6808,28],[6733,21,6808,29],[6733,22,6808,30],[6733,34,6808,42],[6734,14,6809,28,"data"],[6734,18,6809,32],[6734,20,6809,34],[6735,16,6810,32,"email"],[6735,21,6810,37],[6735,23,6810,39],[6735,24,6810,40,"response"],[6735,32,6810,48],[6735,33,6810,49,"requestType"],[6735,44,6810,60],[6735,49,6810,65],[6735,74,6810,90],[6735,75,6810,91],[6735,127,6811,38,"response"],[6735,135,6811,46],[6735,136,6811,47,"newEmail"],[6735,144,6811,55],[6735,147,6812,38,"response"],[6735,155,6812,46],[6735,156,6812,47,"email"],[6735,161,6812,52],[6735,166,6812,57],[6735,170,6812,61],[6736,16,6813,32,"previousEmail"],[6736,29,6813,45],[6736,31,6813,47],[6736,32,6813,48,"response"],[6736,40,6813,56],[6736,41,6813,57,"requestType"],[6736,52,6813,68],[6736,57,6813,73],[6736,82,6813,98],[6736,83,6813,99],[6736,135,6814,38,"response"],[6736,143,6814,46],[6736,144,6814,47,"email"],[6736,149,6814,52],[6736,152,6815,38,"response"],[6736,160,6815,46],[6736,161,6815,47,"newEmail"],[6736,169,6815,55],[6736,174,6815,60],[6736,178,6815,64],[6737,16,6816,32,"multiFactorInfo"],[6737,31,6816,47],[6737,33,6816,49,"multiFactorInfo"],[6738,14,6817,28],[6738,15,6817,29],[6739,14,6818,28,"operation"],[6739,23,6818,37],[6739,25,6818,39,"operation"],[6740,12,6819,24],[6740,13,6819,25],[6740,14,6819,26],[6741,8,6820,12],[6742,6,6821,8],[6742,7,6821,9],[6742,8,6821,10],[6743,4,6822,4],[6743,5,6822,5],[6743,6,6822,6],[6744,2,6823,0],[6745,2,6824,0],[6746,0,6825,0],[6747,0,6826,0],[6748,0,6827,0],[6749,0,6828,0],[6750,0,6829,0],[6751,0,6830,0],[6752,0,6831,0],[6753,0,6832,0],[6754,0,6833,0],[6755,2,6834,0],[6755,11,6834,9,"verifyPasswordResetCode"],[6755,34,6834,32,"verifyPasswordResetCode"],[6755,35,6834,33,"auth"],[6755,39,6834,37],[6755,41,6834,39,"code"],[6755,45,6834,43],[6755,47,6834,45],[6756,4,6835,4],[6756,11,6835,11,"tslib"],[6756,16,6835,16],[6756,17,6835,17,"__awaiter"],[6756,26,6835,26],[6756,27,6835,27],[6756,31,6835,31],[6756,33,6835,31,"undefined"],[6756,42,6835,31],[6756,44,6835,31,"undefined"],[6756,53,6835,31],[6756,55,6835,49],[6756,67,6835,61],[6757,6,6836,8],[6757,10,6836,12,"data"],[6757,14,6836,16],[6758,6,6837,8],[6758,13,6837,15,"tslib"],[6758,18,6837,20],[6758,19,6837,21,"__generator"],[6758,30,6837,32],[6758,31,6837,33],[6758,35,6837,37],[6758,37,6837,39],[6758,47,6837,49,"_a"],[6758,49,6837,51],[6758,51,6837,53],[6759,8,6838,12],[6759,16,6838,20,"_a"],[6759,18,6838,22],[6759,19,6838,23,"label"],[6759,24,6838,28],[6760,10,6839,16],[6760,15,6839,21],[6760,16,6839,22],[6761,12,6839,24],[6761,19,6839,31],[6761,20,6839,32],[6761,21,6839,33],[6761,22,6839,34],[6761,33,6839,45,"checkActionCode"],[6761,48,6839,60],[6761,49,6839,61,"util"],[6761,53,6839,65],[6761,54,6839,66,"getModularInstance"],[6761,72,6839,84],[6761,73,6839,85,"auth"],[6761,77,6839,89],[6761,78,6839,90],[6761,80,6839,92,"code"],[6761,84,6839,96],[6761,85,6839,97],[6761,86,6839,98],[6762,10,6840,16],[6762,15,6840,21],[6762,16,6840,22],[6763,12,6841,20,"data"],[6763,16,6841,24],[6763,19,6841,28,"_a"],[6763,21,6841,30],[6763,22,6841,31,"sent"],[6763,26,6841,35],[6763,27,6841,36],[6763,28,6841,37],[6763,29,6841,39,"data"],[6763,33,6841,43],[6764,12,6842,20],[6765,12,6843,20],[6765,19,6843,27],[6765,20,6843,28],[6765,21,6843,29],[6765,22,6843,30],[6765,34,6843,42,"data"],[6765,38,6843,46],[6765,39,6843,47,"email"],[6765,44,6843,52],[6765,45,6843,53],[6766,8,6844,12],[6767,6,6845,8],[6767,7,6845,9],[6767,8,6845,10],[6768,4,6846,4],[6768,5,6846,5],[6768,6,6846,6],[6769,2,6847,0],[6770,2,6848,0],[6771,0,6849,0],[6772,0,6850,0],[6773,0,6851,0],[6774,0,6852,0],[6775,0,6853,0],[6776,0,6854,0],[6777,0,6855,0],[6778,0,6856,0],[6779,0,6857,0],[6780,0,6858,0],[6781,0,6859,0],[6782,0,6860,0],[6783,0,6861,0],[6784,0,6862,0],[6785,0,6863,0],[6786,0,6864,0],[6787,0,6865,0],[6788,0,6866,0],[6789,0,6867,0],[6790,2,6868,0],[6790,11,6868,9,"createUserWithEmailAndPassword"],[6790,41,6868,39,"createUserWithEmailAndPassword"],[6790,42,6868,40,"auth"],[6790,46,6868,44],[6790,48,6868,46,"email"],[6790,53,6868,51],[6790,55,6868,53,"password"],[6790,63,6868,61],[6790,65,6868,63],[6791,4,6869,4],[6791,11,6869,11,"tslib"],[6791,16,6869,16],[6791,17,6869,17,"__awaiter"],[6791,26,6869,26],[6791,27,6869,27],[6791,31,6869,31],[6791,33,6869,31,"undefined"],[6791,42,6869,31],[6791,44,6869,31,"undefined"],[6791,53,6869,31],[6791,55,6869,49],[6791,67,6869,61],[6792,6,6870,8],[6792,10,6870,12,"authInternal"],[6792,22,6870,24],[6792,24,6870,26,"request"],[6792,31,6870,33],[6792,33,6870,35,"signUpResponse"],[6792,47,6870,49],[6792,49,6870,51,"response"],[6792,57,6870,59],[6792,59,6870,61,"userCredential"],[6792,73,6870,75],[6793,6,6871,8],[6793,13,6871,15,"tslib"],[6793,18,6871,20],[6793,19,6871,21,"__generator"],[6793,30,6871,32],[6793,31,6871,33],[6793,35,6871,37],[6793,37,6871,39],[6793,47,6871,49,"_a"],[6793,49,6871,51],[6793,51,6871,53],[6794,8,6872,12],[6794,16,6872,20,"_a"],[6794,18,6872,22],[6794,19,6872,23,"label"],[6794,24,6872,28],[6795,10,6873,16],[6795,15,6873,21],[6795,16,6873,22],[6796,12,6874,20],[6796,16,6874,24,"app"],[6796,19,6874,27],[6796,20,6874,28,"_isFirebaseServerApp"],[6796,40,6874,48],[6796,41,6874,49,"auth"],[6796,45,6874,53],[6796,46,6874,54,"app"],[6796,49,6874,57],[6796,50,6874,58],[6796,52,6874,60],[6797,14,6875,24],[6797,21,6875,31],[6797,22,6875,32],[6797,23,6875,33],[6797,24,6875,34],[6797,36,6875,46,"Promise"],[6797,43,6875,53],[6797,44,6875,54,"reject"],[6797,50,6875,60],[6797,51,6875,61,"_serverAppCurrentUserOperationNotSupportedError"],[6797,98,6875,108],[6797,99,6875,109,"auth"],[6797,103,6875,113],[6797,104,6875,114],[6797,105,6875,115],[6797,106,6875,116],[6798,12,6876,20],[6799,12,6877,20,"authInternal"],[6799,24,6877,32],[6799,27,6877,35,"_castAuth"],[6799,36,6877,44],[6799,37,6877,45,"auth"],[6799,41,6877,49],[6799,42,6877,50],[6800,12,6878,20,"request"],[6800,19,6878,27],[6800,22,6878,30],[6801,14,6879,24,"returnSecureToken"],[6801,31,6879,41],[6801,33,6879,43],[6801,37,6879,47],[6802,14,6880,24,"email"],[6802,19,6880,29],[6802,21,6880,31,"email"],[6802,26,6880,36],[6803,14,6881,24,"password"],[6803,22,6881,32],[6803,24,6881,34,"password"],[6803,32,6881,42],[6804,14,6882,24,"clientType"],[6804,24,6882,34],[6804,26,6882,36],[6804,43,6882,53],[6804,44,6882,54],[6805,12,6883,20],[6805,13,6883,21],[6806,12,6884,20,"signUpResponse"],[6806,26,6884,34],[6806,29,6884,37,"handleRecaptchaFlow"],[6806,48,6884,56],[6806,49,6884,57,"authInternal"],[6806,61,6884,69],[6806,63,6884,71,"request"],[6806,70,6884,78],[6806,72,6884,80],[6806,88,6884,96],[6806,89,6884,97],[6806,133,6884,141,"signUp"],[6806,139,6884,147],[6806,140,6884,148],[6807,12,6885,20],[6807,19,6885,27],[6807,20,6885,28],[6807,21,6885,29],[6807,22,6885,30],[6807,33,6885,41,"signUpResponse"],[6807,47,6885,55],[6807,48,6885,56,"catch"],[6807,53,6885,61],[6807,54,6885,62],[6807,64,6885,72,"error"],[6807,69,6885,77],[6807,71,6885,79],[6808,14,6886,28],[6808,18,6886,32,"error"],[6808,23,6886,37],[6808,24,6886,38,"code"],[6808,28,6886,42],[6808,33,6886,47],[6808,40,6886,54],[6808,41,6886,55,"concat"],[6808,47,6886,61],[6808,48,6886,62],[6808,85,6886,99],[6808,86,6886,100],[6808,141,6886,155],[6808,142,6886,156],[6808,144,6886,158],[6809,16,6887,32],[6809,21,6887,37,"recachePasswordPolicy"],[6809,42,6887,58],[6809,43,6887,59,"auth"],[6809,47,6887,63],[6809,48,6887,64],[6810,14,6888,28],[6811,14,6889,28],[6811,20,6889,34,"error"],[6811,25,6889,39],[6812,12,6890,24],[6812,13,6890,25],[6812,14,6890,26],[6812,15,6890,27],[6813,10,6891,16],[6813,15,6891,21],[6813,16,6891,22],[6814,12,6892,20,"response"],[6814,20,6892,28],[6814,23,6892,31,"_a"],[6814,25,6892,33],[6814,26,6892,34,"sent"],[6814,30,6892,38],[6814,31,6892,39],[6814,32,6892,40],[6815,12,6893,20],[6815,19,6893,27],[6815,20,6893,28],[6815,21,6893,29],[6815,22,6893,30],[6815,33,6893,41,"UserCredentialImpl"],[6815,51,6893,59],[6815,52,6893,60,"_fromIdTokenResponse"],[6815,72,6893,80],[6815,73,6893,81,"authInternal"],[6815,85,6893,93],[6815,87,6893,95],[6815,95,6893,103],[6815,96,6893,104],[6815,125,6893,133,"response"],[6815,133,6893,141],[6815,134,6893,142],[6815,135,6893,143],[6816,10,6894,16],[6816,15,6894,21],[6816,16,6894,22],[6817,12,6895,20,"userCredential"],[6817,26,6895,34],[6817,29,6895,37,"_a"],[6817,31,6895,39],[6817,32,6895,40,"sent"],[6817,36,6895,44],[6817,37,6895,45],[6817,38,6895,46],[6818,12,6896,20],[6818,19,6896,27],[6818,20,6896,28],[6818,21,6896,29],[6818,22,6896,30],[6818,33,6896,41,"authInternal"],[6818,45,6896,53],[6818,46,6896,54,"_updateCurrentUser"],[6818,64,6896,72],[6818,65,6896,73,"userCredential"],[6818,79,6896,87],[6818,80,6896,88,"user"],[6818,84,6896,92],[6818,85,6896,93],[6818,86,6896,94],[6819,10,6897,16],[6819,15,6897,21],[6819,16,6897,22],[6820,12,6898,20,"_a"],[6820,14,6898,22],[6820,15,6898,23,"sent"],[6820,19,6898,27],[6820,20,6898,28],[6820,21,6898,29],[6821,12,6899,20],[6821,19,6899,27],[6821,20,6899,28],[6821,21,6899,29],[6821,22,6899,30],[6821,34,6899,42,"userCredential"],[6821,48,6899,56],[6821,49,6899,57],[6822,8,6900,12],[6823,6,6901,8],[6823,7,6901,9],[6823,8,6901,10],[6824,4,6902,4],[6824,5,6902,5],[6824,6,6902,6],[6825,2,6903,0],[6826,2,6904,0],[6827,0,6905,0],[6828,0,6906,0],[6829,0,6907,0],[6830,0,6908,0],[6831,0,6909,0],[6832,0,6910,0],[6833,0,6911,0],[6834,0,6912,0],[6835,0,6913,0],[6836,0,6914,0],[6837,0,6915,0],[6838,0,6916,0],[6839,0,6917,0],[6840,0,6918,0],[6841,0,6919,0],[6842,0,6920,0],[6843,0,6921,0],[6844,0,6922,0],[6845,0,6923,0],[6846,0,6924,0],[6847,0,6925,0],[6848,0,6926,0],[6849,2,6927,0],[6849,11,6927,9,"signInWithEmailAndPassword"],[6849,37,6927,35,"signInWithEmailAndPassword"],[6849,38,6927,36,"auth"],[6849,42,6927,40],[6849,44,6927,42,"email"],[6849,49,6927,47],[6849,51,6927,49,"password"],[6849,59,6927,57],[6849,61,6927,59],[6850,4,6928,4],[6850,8,6928,8,"_this"],[6850,13,6928,13],[6850,16,6928,16],[6850,20,6928,20],[6851,4,6929,4],[6851,8,6929,8,"app"],[6851,11,6929,11],[6851,12,6929,12,"_isFirebaseServerApp"],[6851,32,6929,32],[6851,33,6929,33,"auth"],[6851,37,6929,37],[6851,38,6929,38,"app"],[6851,41,6929,41],[6851,42,6929,42],[6851,44,6929,44],[6852,6,6930,8],[6852,13,6930,15,"Promise"],[6852,20,6930,22],[6852,21,6930,23,"reject"],[6852,27,6930,29],[6852,28,6930,30,"_serverAppCurrentUserOperationNotSupportedError"],[6852,75,6930,77],[6852,76,6930,78,"auth"],[6852,80,6930,82],[6852,81,6930,83],[6852,82,6930,84],[6853,4,6931,4],[6854,4,6932,4],[6854,11,6932,11,"signInWithCredential"],[6854,31,6932,31],[6854,32,6932,32,"util"],[6854,36,6932,36],[6854,37,6932,37,"getModularInstance"],[6854,55,6932,55],[6854,56,6932,56,"auth"],[6854,60,6932,60],[6854,61,6932,61],[6854,63,6932,63,"EmailAuthProvider"],[6854,80,6932,80],[6854,81,6932,81,"credential"],[6854,91,6932,91],[6854,92,6932,92,"email"],[6854,97,6932,97],[6854,99,6932,99,"password"],[6854,107,6932,107],[6854,108,6932,108],[6854,109,6932,109],[6854,110,6932,110,"catch"],[6854,115,6932,115],[6854,116,6932,116],[6854,126,6932,126,"error"],[6854,131,6932,131],[6854,133,6932,133],[6855,6,6932,135],[6855,13,6932,142,"tslib"],[6855,18,6932,147],[6855,19,6932,148,"__awaiter"],[6855,28,6932,157],[6855,29,6932,158,"_this"],[6855,34,6932,163],[6855,36,6932,163,"undefined"],[6855,45,6932,163],[6855,47,6932,163,"undefined"],[6855,56,6932,163],[6855,58,6932,181],[6855,70,6932,193],[6856,8,6933,8],[6856,15,6933,15,"tslib"],[6856,20,6933,20],[6856,21,6933,21,"__generator"],[6856,32,6933,32],[6856,33,6933,33],[6856,37,6933,37],[6856,39,6933,39],[6856,49,6933,49,"_a"],[6856,51,6933,51],[6856,53,6933,53],[6857,10,6934,12],[6857,14,6934,16,"error"],[6857,19,6934,21],[6857,20,6934,22,"code"],[6857,24,6934,26],[6857,29,6934,31],[6857,36,6934,38],[6857,37,6934,39,"concat"],[6857,43,6934,45],[6857,44,6934,46],[6857,81,6934,83],[6857,82,6934,84],[6857,137,6934,139],[6857,138,6934,140],[6857,140,6934,142],[6858,12,6935,16],[6858,17,6935,21,"recachePasswordPolicy"],[6858,38,6935,42],[6858,39,6935,43,"auth"],[6858,43,6935,47],[6858,44,6935,48],[6859,10,6936,12],[6860,10,6937,12],[6860,16,6937,18,"error"],[6860,21,6937,23],[6861,8,6938,8],[6861,9,6938,9],[6861,10,6938,10],[6862,6,6939,4],[6862,7,6939,5],[6862,8,6939,6],[6863,4,6939,8],[6863,5,6939,9],[6863,6,6939,10],[6864,2,6940,0],[6866,2,6942,0],[6867,0,6943,0],[6868,0,6944,0],[6869,0,6945,0],[6870,0,6946,0],[6871,0,6947,0],[6872,0,6948,0],[6873,0,6949,0],[6874,0,6950,0],[6875,0,6951,0],[6876,0,6952,0],[6877,0,6953,0],[6878,0,6954,0],[6879,0,6955,0],[6880,0,6956,0],[6881,0,6957,0],[6882,2,6958,0],[6883,0,6959,0],[6884,0,6960,0],[6885,0,6961,0],[6886,0,6962,0],[6887,0,6963,0],[6888,0,6964,0],[6889,0,6965,0],[6890,0,6966,0],[6891,0,6967,0],[6892,0,6968,0],[6893,0,6969,0],[6894,0,6970,0],[6895,0,6971,0],[6896,0,6972,0],[6897,0,6973,0],[6898,0,6974,0],[6899,0,6975,0],[6900,0,6976,0],[6901,0,6977,0],[6902,0,6978,0],[6903,0,6979,0],[6904,0,6980,0],[6905,0,6981,0],[6906,0,6982,0],[6907,0,6983,0],[6908,0,6984,0],[6909,0,6985,0],[6910,0,6986,0],[6911,0,6987,0],[6912,0,6988,0],[6913,0,6989,0],[6914,0,6990,0],[6915,0,6991,0],[6916,0,6992,0],[6917,0,6993,0],[6918,0,6994,0],[6919,0,6995,0],[6920,2,6996,0],[6920,11,6996,9,"sendSignInLinkToEmail"],[6920,32,6996,30,"sendSignInLinkToEmail"],[6920,33,6996,31,"auth"],[6920,37,6996,35],[6920,39,6996,37,"email"],[6920,44,6996,42],[6920,46,6996,44,"actionCodeSettings"],[6920,64,6996,62],[6920,66,6996,64],[6921,4,6997,4],[6921,11,6997,11,"tslib"],[6921,16,6997,16],[6921,17,6997,17,"__awaiter"],[6921,26,6997,26],[6921,27,6997,27],[6921,31,6997,31],[6921,33,6997,31,"undefined"],[6921,42,6997,31],[6921,44,6997,31,"undefined"],[6921,53,6997,31],[6921,55,6997,49],[6921,67,6997,61],[6922,6,6998,8],[6922,15,6998,17,"setActionCodeSettings"],[6922,36,6998,38,"setActionCodeSettings"],[6922,37,6998,39,"request"],[6922,44,6998,46],[6922,46,6998,48,"actionCodeSettings"],[6922,64,6998,66],[6922,66,6998,68],[6923,8,6999,12,"_assert"],[6923,15,6999,19],[6923,16,6999,20,"actionCodeSettings"],[6923,34,6999,38],[6923,35,6999,39,"handleCodeInApp"],[6923,50,6999,54],[6923,52,6999,56,"authInternal"],[6923,64,6999,68],[6923,66,6999,70],[6923,82,6999,86],[6923,83,6999,87],[6923,117,6999,121],[6923,118,6999,122],[6924,8,7000,12],[6924,12,7000,16,"actionCodeSettings"],[6924,30,7000,34],[6924,32,7000,36],[6925,10,7001,16,"_setActionCodeSettingsOnRequest"],[6925,41,7001,47],[6925,42,7001,48,"authInternal"],[6925,54,7001,60],[6925,56,7001,62,"request"],[6925,63,7001,69],[6925,65,7001,71,"actionCodeSettings"],[6925,83,7001,89],[6925,84,7001,90],[6926,8,7002,12],[6927,6,7003,8],[6928,6,7004,8],[6928,10,7004,12,"authInternal"],[6928,22,7004,24],[6928,24,7004,26,"request"],[6928,31,7004,33],[6929,6,7005,8],[6929,13,7005,15,"tslib"],[6929,18,7005,20],[6929,19,7005,21,"__generator"],[6929,30,7005,32],[6929,31,7005,33],[6929,35,7005,37],[6929,37,7005,39],[6929,47,7005,49,"_a"],[6929,49,7005,51],[6929,51,7005,53],[6930,8,7006,12],[6930,16,7006,20,"_a"],[6930,18,7006,22],[6930,19,7006,23,"label"],[6930,24,7006,28],[6931,10,7007,16],[6931,15,7007,21],[6931,16,7007,22],[6932,12,7008,20,"authInternal"],[6932,24,7008,32],[6932,27,7008,35,"_castAuth"],[6932,36,7008,44],[6932,37,7008,45,"auth"],[6932,41,7008,49],[6932,42,7008,50],[6933,12,7009,20,"request"],[6933,19,7009,27],[6933,22,7009,30],[6934,14,7010,24,"requestType"],[6934,25,7010,35],[6934,27,7010,37],[6934,41,7010,51],[6934,42,7010,52],[6935,14,7011,24,"email"],[6935,19,7011,29],[6935,21,7011,31,"email"],[6935,26,7011,36],[6936,14,7012,24,"clientType"],[6936,24,7012,34],[6936,26,7012,36],[6936,43,7012,53],[6936,44,7012,54],[6937,12,7013,20],[6937,13,7013,21],[6938,12,7014,20,"setActionCodeSettings"],[6938,33,7014,41],[6938,34,7014,42,"request"],[6938,41,7014,49],[6938,43,7014,51,"actionCodeSettings"],[6938,61,7014,69],[6938,62,7014,70],[6939,12,7015,20],[6939,19,7015,27],[6939,20,7015,28],[6939,21,7015,29],[6939,22,7015,30],[6939,33,7015,41,"handleRecaptchaFlow"],[6939,52,7015,60],[6939,53,7015,61,"authInternal"],[6939,65,7015,73],[6939,67,7015,75,"request"],[6939,74,7015,82],[6939,76,7015,84],[6939,88,7015,96],[6939,89,7015,97],[6939,129,7015,137,"sendSignInLinkToEmail$1"],[6939,152,7015,160],[6939,153,7015,161],[6939,154,7015,162],[6940,10,7016,16],[6940,15,7016,21],[6940,16,7016,22],[6941,12,7017,20,"_a"],[6941,14,7017,22],[6941,15,7017,23,"sent"],[6941,19,7017,27],[6941,20,7017,28],[6941,21,7017,29],[6942,12,7018,20],[6942,19,7018,27],[6942,20,7018,28],[6942,21,7018,29],[6942,22,7018,30],[6942,33,7018,41],[6943,8,7019,12],[6944,6,7020,8],[6944,7,7020,9],[6944,8,7020,10],[6945,4,7021,4],[6945,5,7021,5],[6945,6,7021,6],[6946,2,7022,0],[6947,2,7023,0],[6948,0,7024,0],[6949,0,7025,0],[6950,0,7026,0],[6951,0,7027,0],[6952,0,7028,0],[6953,0,7029,0],[6954,0,7030,0],[6955,2,7031,0],[6955,11,7031,9,"isSignInWithEmailLink"],[6955,32,7031,30,"isSignInWithEmailLink"],[6955,33,7031,31,"auth"],[6955,37,7031,35],[6955,39,7031,37,"emailLink"],[6955,48,7031,46],[6955,50,7031,48],[6956,4,7032,4],[6956,8,7032,8,"actionCodeUrl"],[6956,21,7032,21],[6956,24,7032,24,"ActionCodeURL"],[6956,37,7032,37],[6956,38,7032,38,"parseLink"],[6956,47,7032,47],[6956,48,7032,48,"emailLink"],[6956,57,7032,57],[6956,58,7032,58],[6957,4,7033,4],[6957,11,7033,11],[6957,12,7033,12,"actionCodeUrl"],[6957,25,7033,25],[6957,30,7033,30],[6957,34,7033,34],[6957,38,7033,38,"actionCodeUrl"],[6957,51,7033,51],[6957,56,7033,51,"undefined"],[6957,65,7033,62],[6957,68,7033,62,"undefined"],[6957,77,7033,62],[6957,80,7033,74,"actionCodeUrl"],[6957,93,7033,87],[6957,94,7033,88,"operation"],[6957,103,7033,97],[6957,109,7033,103],[6957,123,7033,117],[6957,124,7033,118],[6958,2,7034,0],[6959,2,7035,0],[6960,0,7036,0],[6961,0,7037,0],[6962,0,7038,0],[6963,0,7039,0],[6964,0,7040,0],[6965,0,7041,0],[6966,0,7042,0],[6967,0,7043,0],[6968,0,7044,0],[6969,0,7045,0],[6970,0,7046,0],[6971,0,7047,0],[6972,0,7048,0],[6973,0,7049,0],[6974,0,7050,0],[6975,0,7051,0],[6976,0,7052,0],[6977,0,7053,0],[6978,0,7054,0],[6979,0,7055,0],[6980,0,7056,0],[6981,0,7057,0],[6982,0,7058,0],[6983,0,7059,0],[6984,0,7060,0],[6985,0,7061,0],[6986,0,7062,0],[6987,0,7063,0],[6988,0,7064,0],[6989,0,7065,0],[6990,0,7066,0],[6991,0,7067,0],[6992,0,7068,0],[6993,0,7069,0],[6994,0,7070,0],[6995,0,7071,0],[6996,0,7072,0],[6997,0,7073,0],[6998,0,7074,0],[6999,0,7075,0],[7000,2,7076,0],[7000,11,7076,9,"signInWithEmailLink"],[7000,30,7076,28,"signInWithEmailLink"],[7000,31,7076,29,"auth"],[7000,35,7076,33],[7000,37,7076,35,"email"],[7000,42,7076,40],[7000,44,7076,42,"emailLink"],[7000,53,7076,51],[7000,55,7076,53],[7001,4,7077,4],[7001,11,7077,11,"tslib"],[7001,16,7077,16],[7001,17,7077,17,"__awaiter"],[7001,26,7077,26],[7001,27,7077,27],[7001,31,7077,31],[7001,33,7077,31,"undefined"],[7001,42,7077,31],[7001,44,7077,31,"undefined"],[7001,53,7077,31],[7001,55,7077,49],[7001,67,7077,61],[7002,6,7078,8],[7002,10,7078,12,"authModular"],[7002,21,7078,23],[7002,23,7078,25,"credential"],[7002,33,7078,35],[7003,6,7079,8],[7003,13,7079,15,"tslib"],[7003,18,7079,20],[7003,19,7079,21,"__generator"],[7003,30,7079,32],[7003,31,7079,33],[7003,35,7079,37],[7003,37,7079,39],[7003,47,7079,49,"_a"],[7003,49,7079,51],[7003,51,7079,53],[7004,8,7080,12],[7004,12,7080,16,"app"],[7004,15,7080,19],[7004,16,7080,20,"_isFirebaseServerApp"],[7004,36,7080,40],[7004,37,7080,41,"auth"],[7004,41,7080,45],[7004,42,7080,46,"app"],[7004,45,7080,49],[7004,46,7080,50],[7004,48,7080,52],[7005,10,7081,16],[7005,17,7081,23],[7005,18,7081,24],[7005,19,7081,25],[7005,20,7081,26],[7005,32,7081,38,"Promise"],[7005,39,7081,45],[7005,40,7081,46,"reject"],[7005,46,7081,52],[7005,47,7081,53,"_serverAppCurrentUserOperationNotSupportedError"],[7005,94,7081,100],[7005,95,7081,101,"auth"],[7005,99,7081,105],[7005,100,7081,106],[7005,101,7081,107],[7005,102,7081,108],[7006,8,7082,12],[7007,8,7083,12,"authModular"],[7007,19,7083,23],[7007,22,7083,26,"util"],[7007,26,7083,30],[7007,27,7083,31,"getModularInstance"],[7007,45,7083,49],[7007,46,7083,50,"auth"],[7007,50,7083,54],[7007,51,7083,55],[7008,8,7084,12,"credential"],[7008,18,7084,22],[7008,21,7084,25,"EmailAuthProvider"],[7008,38,7084,42],[7008,39,7084,43,"credentialWithLink"],[7008,57,7084,61],[7008,58,7084,62,"email"],[7008,63,7084,67],[7008,65,7084,69,"emailLink"],[7008,74,7084,78],[7008,78,7084,82,"_getCurrentUrl"],[7008,92,7084,96],[7008,93,7084,97],[7008,94,7084,98],[7008,95,7084,99],[7009,8,7085,12],[7010,8,7086,12],[7011,8,7087,12,"_assert"],[7011,15,7087,19],[7011,16,7087,20,"credential"],[7011,26,7087,30],[7011,27,7087,31,"_tenantId"],[7011,36,7087,40],[7011,42,7087,46,"authModular"],[7011,53,7087,57],[7011,54,7087,58,"tenantId"],[7011,62,7087,66],[7011,66,7087,70],[7011,70,7087,74],[7011,71,7087,75],[7011,73,7087,77,"authModular"],[7011,84,7087,88],[7011,86,7087,90],[7011,106,7087,110],[7011,107,7087,111],[7011,145,7087,149],[7011,146,7087,150],[7012,8,7088,12],[7012,15,7088,19],[7012,16,7088,20],[7012,17,7088,21],[7012,18,7088,22],[7012,30,7088,34,"signInWithCredential"],[7012,50,7088,54],[7012,51,7088,55,"authModular"],[7012,62,7088,66],[7012,64,7088,68,"credential"],[7012,74,7088,78],[7012,75,7088,79],[7012,76,7088,80],[7013,6,7089,8],[7013,7,7089,9],[7013,8,7089,10],[7014,4,7090,4],[7014,5,7090,5],[7014,6,7090,6],[7015,2,7091,0],[7017,2,7093,0],[7018,0,7094,0],[7019,0,7095,0],[7020,0,7096,0],[7021,0,7097,0],[7022,0,7098,0],[7023,0,7099,0],[7024,0,7100,0],[7025,0,7101,0],[7026,0,7102,0],[7027,0,7103,0],[7028,0,7104,0],[7029,0,7105,0],[7030,0,7106,0],[7031,0,7107,0],[7032,0,7108,0],[7033,2,7109,0],[7033,11,7109,9,"createAuthUri"],[7033,24,7109,22,"createAuthUri"],[7033,25,7109,23,"auth"],[7033,29,7109,27],[7033,31,7109,29,"request"],[7033,38,7109,36],[7033,40,7109,38],[7034,4,7110,4],[7034,11,7110,11,"tslib"],[7034,16,7110,16],[7034,17,7110,17,"__awaiter"],[7034,26,7110,26],[7034,27,7110,27],[7034,31,7110,31],[7034,33,7110,31,"undefined"],[7034,42,7110,31],[7034,44,7110,31,"undefined"],[7034,53,7110,31],[7034,55,7110,49],[7034,67,7110,61],[7035,6,7111,8],[7035,13,7111,15,"tslib"],[7035,18,7111,20],[7035,19,7111,21,"__generator"],[7035,30,7111,32],[7035,31,7111,33],[7035,35,7111,37],[7035,37,7111,39],[7035,47,7111,49,"_a"],[7035,49,7111,51],[7035,51,7111,53],[7036,8,7112,12],[7036,15,7112,19],[7036,16,7112,20],[7036,17,7112,21],[7036,18,7112,22],[7036,30,7112,34,"_performApiRequest"],[7036,48,7112,52],[7036,49,7112,53,"auth"],[7036,53,7112,57],[7036,55,7112,59],[7036,61,7112,65],[7036,62,7112,66],[7036,85,7112,89],[7036,113,7112,117],[7036,114,7112,118],[7036,146,7112,150,"_addTidIfNecessary"],[7036,164,7112,168],[7036,165,7112,169,"auth"],[7036,169,7112,173],[7036,171,7112,175,"request"],[7036,178,7112,182],[7036,179,7112,183],[7036,180,7112,184],[7036,181,7112,185],[7037,6,7113,8],[7037,7,7113,9],[7037,8,7113,10],[7038,4,7114,4],[7038,5,7114,5],[7038,6,7114,6],[7039,2,7115,0],[7041,2,7117,0],[7042,0,7118,0],[7043,0,7119,0],[7044,0,7120,0],[7045,0,7121,0],[7046,0,7122,0],[7047,0,7123,0],[7048,0,7124,0],[7049,0,7125,0],[7050,0,7126,0],[7051,0,7127,0],[7052,0,7128,0],[7053,0,7129,0],[7054,0,7130,0],[7055,0,7131,0],[7056,0,7132,0],[7057,2,7133,0],[7058,0,7134,0],[7059,0,7135,0],[7060,0,7136,0],[7061,0,7137,0],[7062,0,7138,0],[7063,0,7139,0],[7064,0,7140,0],[7065,0,7141,0],[7066,0,7142,0],[7067,0,7143,0],[7068,0,7144,0],[7069,0,7145,0],[7070,0,7146,0],[7071,0,7147,0],[7072,0,7148,0],[7073,0,7149,0],[7074,0,7150,0],[7075,0,7151,0],[7076,0,7152,0],[7077,2,7153,0],[7077,11,7153,9,"fetchSignInMethodsForEmail"],[7077,37,7153,35,"fetchSignInMethodsForEmail"],[7077,38,7153,36,"auth"],[7077,42,7153,40],[7077,44,7153,42,"email"],[7077,49,7153,47],[7077,51,7153,49],[7078,4,7154,4],[7078,11,7154,11,"tslib"],[7078,16,7154,16],[7078,17,7154,17,"__awaiter"],[7078,26,7154,26],[7078,27,7154,27],[7078,31,7154,31],[7078,33,7154,31,"undefined"],[7078,42,7154,31],[7078,44,7154,31,"undefined"],[7078,53,7154,31],[7078,55,7154,49],[7078,67,7154,61],[7079,6,7155,8],[7079,10,7155,12,"continueUri"],[7079,21,7155,23],[7079,23,7155,25,"request"],[7079,30,7155,32],[7079,32,7155,34,"signinMethods"],[7079,45,7155,47],[7080,6,7156,8],[7080,13,7156,15,"tslib"],[7080,18,7156,20],[7080,19,7156,21,"__generator"],[7080,30,7156,32],[7080,31,7156,33],[7080,35,7156,37],[7080,37,7156,39],[7080,47,7156,49,"_a"],[7080,49,7156,51],[7080,51,7156,53],[7081,8,7157,12],[7081,16,7157,20,"_a"],[7081,18,7157,22],[7081,19,7157,23,"label"],[7081,24,7157,28],[7082,10,7158,16],[7082,15,7158,21],[7082,16,7158,22],[7083,12,7159,20,"continueUri"],[7083,23,7159,31],[7083,26,7159,34,"_isHttpOrHttps"],[7083,40,7159,48],[7083,41,7159,49],[7083,42,7159,50],[7083,45,7159,53,"_getCurrentUrl"],[7083,59,7159,67],[7083,60,7159,68],[7083,61,7159,69],[7083,64,7159,72],[7083,82,7159,90],[7084,12,7160,20,"request"],[7084,19,7160,27],[7084,22,7160,30],[7085,14,7161,24,"identifier"],[7085,24,7161,34],[7085,26,7161,36,"email"],[7085,31,7161,41],[7086,14,7162,24,"continueUri"],[7086,25,7162,35],[7086,27,7162,37,"continueUri"],[7087,12,7163,20],[7087,13,7163,21],[7088,12,7164,20],[7088,19,7164,27],[7088,20,7164,28],[7088,21,7164,29],[7088,22,7164,30],[7088,33,7164,41,"createAuthUri"],[7088,46,7164,54],[7088,47,7164,55,"util"],[7088,51,7164,59],[7088,52,7164,60,"getModularInstance"],[7088,70,7164,78],[7088,71,7164,79,"auth"],[7088,75,7164,83],[7088,76,7164,84],[7088,78,7164,86,"request"],[7088,85,7164,93],[7088,86,7164,94],[7088,87,7164,95],[7089,10,7165,16],[7089,15,7165,21],[7089,16,7165,22],[7090,12,7166,20,"signinMethods"],[7090,25,7166,33],[7090,28,7166,37,"_a"],[7090,30,7166,39],[7090,31,7166,40,"sent"],[7090,35,7166,44],[7090,36,7166,45],[7090,37,7166,46],[7090,38,7166,48,"signinMethods"],[7090,51,7166,61],[7091,12,7167,20],[7091,19,7167,27],[7091,20,7167,28],[7091,21,7167,29],[7091,22,7167,30],[7091,34,7167,42,"signinMethods"],[7091,47,7167,55],[7091,51,7167,59],[7091,53,7167,61],[7091,54,7167,62],[7092,8,7168,12],[7093,6,7169,8],[7093,7,7169,9],[7093,8,7169,10],[7094,4,7170,4],[7094,5,7170,5],[7094,6,7170,6],[7095,2,7171,0],[7096,2,7172,0],[7097,0,7173,0],[7098,0,7174,0],[7099,0,7175,0],[7100,0,7176,0],[7101,0,7177,0],[7102,0,7178,0],[7103,0,7179,0],[7104,0,7180,0],[7105,0,7181,0],[7106,0,7182,0],[7107,0,7183,0],[7108,0,7184,0],[7109,0,7185,0],[7110,0,7186,0],[7111,0,7187,0],[7112,0,7188,0],[7113,0,7189,0],[7114,0,7190,0],[7115,0,7191,0],[7116,0,7192,0],[7117,0,7193,0],[7118,0,7194,0],[7119,0,7195,0],[7120,0,7196,0],[7121,0,7197,0],[7122,0,7198,0],[7123,0,7199,0],[7124,0,7200,0],[7125,0,7201,0],[7126,2,7202,0],[7126,11,7202,9,"sendEmailVerification"],[7126,32,7202,30,"sendEmailVerification"],[7126,33,7202,31,"user"],[7126,37,7202,35],[7126,39,7202,37,"actionCodeSettings"],[7126,57,7202,55],[7126,59,7202,57],[7127,4,7203,4],[7127,11,7203,11,"tslib"],[7127,16,7203,16],[7127,17,7203,17,"__awaiter"],[7127,26,7203,26],[7127,27,7203,27],[7127,31,7203,31],[7127,33,7203,31,"undefined"],[7127,42,7203,31],[7127,44,7203,31,"undefined"],[7127,53,7203,31],[7127,55,7203,49],[7127,67,7203,61],[7128,6,7204,8],[7128,10,7204,12,"userInternal"],[7128,22,7204,24],[7128,24,7204,26,"idToken"],[7128,31,7204,33],[7128,33,7204,35,"request"],[7128,40,7204,42],[7128,42,7204,44,"email"],[7128,47,7204,49],[7129,6,7205,8],[7129,13,7205,15,"tslib"],[7129,18,7205,20],[7129,19,7205,21,"__generator"],[7129,30,7205,32],[7129,31,7205,33],[7129,35,7205,37],[7129,37,7205,39],[7129,47,7205,49,"_a"],[7129,49,7205,51],[7129,51,7205,53],[7130,8,7206,12],[7130,16,7206,20,"_a"],[7130,18,7206,22],[7130,19,7206,23,"label"],[7130,24,7206,28],[7131,10,7207,16],[7131,15,7207,21],[7131,16,7207,22],[7132,12,7208,20,"userInternal"],[7132,24,7208,32],[7132,27,7208,35,"util"],[7132,31,7208,39],[7132,32,7208,40,"getModularInstance"],[7132,50,7208,58],[7132,51,7208,59,"user"],[7132,55,7208,63],[7132,56,7208,64],[7133,12,7209,20],[7133,19,7209,27],[7133,20,7209,28],[7133,21,7209,29],[7133,22,7209,30],[7133,33,7209,41,"user"],[7133,37,7209,45],[7133,38,7209,46,"getIdToken"],[7133,48,7209,56],[7133,49,7209,57],[7133,50,7209,58],[7133,51,7209,59],[7134,10,7210,16],[7134,15,7210,21],[7134,16,7210,22],[7135,12,7211,20,"idToken"],[7135,19,7211,27],[7135,22,7211,30,"_a"],[7135,24,7211,32],[7135,25,7211,33,"sent"],[7135,29,7211,37],[7135,30,7211,38],[7135,31,7211,39],[7136,12,7212,20,"request"],[7136,19,7212,27],[7136,22,7212,30],[7137,14,7213,24,"requestType"],[7137,25,7213,35],[7137,27,7213,37],[7137,41,7213,51],[7137,42,7213,52],[7138,14,7214,24,"idToken"],[7138,21,7214,31],[7138,23,7214,33,"idToken"],[7139,12,7215,20],[7139,13,7215,21],[7140,12,7216,20],[7140,16,7216,24,"actionCodeSettings"],[7140,34,7216,42],[7140,36,7216,44],[7141,14,7217,24,"_setActionCodeSettingsOnRequest"],[7141,45,7217,55],[7141,46,7217,56,"userInternal"],[7141,58,7217,68],[7141,59,7217,69,"auth"],[7141,63,7217,73],[7141,65,7217,75,"request"],[7141,72,7217,82],[7141,74,7217,84,"actionCodeSettings"],[7141,92,7217,102],[7141,93,7217,103],[7142,12,7218,20],[7143,12,7219,20],[7143,19,7219,27],[7143,20,7219,28],[7143,21,7219,29],[7143,22,7219,30],[7143,33,7219,41,"sendEmailVerification$1"],[7143,56,7219,64],[7143,57,7219,65,"userInternal"],[7143,69,7219,77],[7143,70,7219,78,"auth"],[7143,74,7219,82],[7143,76,7219,84,"request"],[7143,83,7219,91],[7143,84,7219,92],[7143,85,7219,93],[7144,10,7220,16],[7144,15,7220,21],[7144,16,7220,22],[7145,12,7221,20,"email"],[7145,17,7221,25],[7145,20,7221,29,"_a"],[7145,22,7221,31],[7145,23,7221,32,"sent"],[7145,27,7221,36],[7145,28,7221,37],[7145,29,7221,38],[7145,30,7221,40,"email"],[7145,35,7221,45],[7146,12,7222,20],[7146,16,7222,24],[7146,18,7222,26,"email"],[7146,23,7222,31],[7146,28,7222,36,"user"],[7146,32,7222,40],[7146,33,7222,41,"email"],[7146,38,7222,46],[7146,39,7222,47],[7146,41,7222,49],[7146,48,7222,56],[7146,49,7222,57],[7146,50,7222,58],[7146,51,7222,59],[7146,62,7222,70],[7146,63,7222,71],[7146,64,7222,72],[7147,12,7223,20],[7147,19,7223,27],[7147,20,7223,28],[7147,21,7223,29],[7147,22,7223,30],[7147,33,7223,41,"user"],[7147,37,7223,45],[7147,38,7223,46,"reload"],[7147,44,7223,52],[7147,45,7223,53],[7147,46,7223,54],[7147,47,7223,55],[7148,10,7224,16],[7148,15,7224,21],[7148,16,7224,22],[7149,12,7225,20,"_a"],[7149,14,7225,22],[7149,15,7225,23,"sent"],[7149,19,7225,27],[7149,20,7225,28],[7149,21,7225,29],[7150,12,7226,20,"_a"],[7150,14,7226,22],[7150,15,7226,23,"label"],[7150,20,7226,28],[7150,23,7226,31],[7150,24,7226,32],[7151,10,7227,16],[7151,15,7227,21],[7151,16,7227,22],[7152,12,7227,24],[7152,19,7227,31],[7152,20,7227,32],[7152,21,7227,33],[7152,22,7227,34],[7152,33,7227,45],[7153,8,7228,12],[7154,6,7229,8],[7154,7,7229,9],[7154,8,7229,10],[7155,4,7230,4],[7155,5,7230,5],[7155,6,7230,6],[7156,2,7231,0],[7157,2,7232,0],[7158,0,7233,0],[7159,0,7234,0],[7160,0,7235,0],[7161,0,7236,0],[7162,0,7237,0],[7163,0,7238,0],[7164,0,7239,0],[7165,0,7240,0],[7166,0,7241,0],[7167,0,7242,0],[7168,0,7243,0],[7169,0,7244,0],[7170,0,7245,0],[7171,0,7246,0],[7172,0,7247,0],[7173,0,7248,0],[7174,0,7249,0],[7175,0,7250,0],[7176,0,7251,0],[7177,0,7252,0],[7178,0,7253,0],[7179,0,7254,0],[7180,0,7255,0],[7181,0,7256,0],[7182,0,7257,0],[7183,0,7258,0],[7184,0,7259,0],[7185,0,7260,0],[7186,0,7261,0],[7187,0,7262,0],[7188,0,7263,0],[7189,0,7264,0],[7190,0,7265,0],[7191,2,7266,0],[7191,11,7266,9,"verifyBeforeUpdateEmail"],[7191,34,7266,32,"verifyBeforeUpdateEmail"],[7191,35,7266,33,"user"],[7191,39,7266,37],[7191,41,7266,39,"newEmail"],[7191,49,7266,47],[7191,51,7266,49,"actionCodeSettings"],[7191,69,7266,67],[7191,71,7266,69],[7192,4,7267,4],[7192,11,7267,11,"tslib"],[7192,16,7267,16],[7192,17,7267,17,"__awaiter"],[7192,26,7267,26],[7192,27,7267,27],[7192,31,7267,31],[7192,33,7267,31,"undefined"],[7192,42,7267,31],[7192,44,7267,31,"undefined"],[7192,53,7267,31],[7192,55,7267,49],[7192,67,7267,61],[7193,6,7268,8],[7193,10,7268,12,"userInternal"],[7193,22,7268,24],[7193,24,7268,26,"idToken"],[7193,31,7268,33],[7193,33,7268,35,"request"],[7193,40,7268,42],[7193,42,7268,44,"email"],[7193,47,7268,49],[7194,6,7269,8],[7194,13,7269,15,"tslib"],[7194,18,7269,20],[7194,19,7269,21,"__generator"],[7194,30,7269,32],[7194,31,7269,33],[7194,35,7269,37],[7194,37,7269,39],[7194,47,7269,49,"_a"],[7194,49,7269,51],[7194,51,7269,53],[7195,8,7270,12],[7195,16,7270,20,"_a"],[7195,18,7270,22],[7195,19,7270,23,"label"],[7195,24,7270,28],[7196,10,7271,16],[7196,15,7271,21],[7196,16,7271,22],[7197,12,7272,20,"userInternal"],[7197,24,7272,32],[7197,27,7272,35,"util"],[7197,31,7272,39],[7197,32,7272,40,"getModularInstance"],[7197,50,7272,58],[7197,51,7272,59,"user"],[7197,55,7272,63],[7197,56,7272,64],[7198,12,7273,20],[7198,19,7273,27],[7198,20,7273,28],[7198,21,7273,29],[7198,22,7273,30],[7198,33,7273,41,"user"],[7198,37,7273,45],[7198,38,7273,46,"getIdToken"],[7198,48,7273,56],[7198,49,7273,57],[7198,50,7273,58],[7198,51,7273,59],[7199,10,7274,16],[7199,15,7274,21],[7199,16,7274,22],[7200,12,7275,20,"idToken"],[7200,19,7275,27],[7200,22,7275,30,"_a"],[7200,24,7275,32],[7200,25,7275,33,"sent"],[7200,29,7275,37],[7200,30,7275,38],[7200,31,7275,39],[7201,12,7276,20,"request"],[7201,19,7276,27],[7201,22,7276,30],[7202,14,7277,24,"requestType"],[7202,25,7277,35],[7202,27,7277,37],[7202,52,7277,62],[7202,53,7277,63],[7203,14,7278,24,"idToken"],[7203,21,7278,31],[7203,23,7278,33,"idToken"],[7203,30,7278,40],[7204,14,7279,24,"newEmail"],[7204,22,7279,32],[7204,24,7279,34,"newEmail"],[7205,12,7280,20],[7205,13,7280,21],[7206,12,7281,20],[7206,16,7281,24,"actionCodeSettings"],[7206,34,7281,42],[7206,36,7281,44],[7207,14,7282,24,"_setActionCodeSettingsOnRequest"],[7207,45,7282,55],[7207,46,7282,56,"userInternal"],[7207,58,7282,68],[7207,59,7282,69,"auth"],[7207,63,7282,73],[7207,65,7282,75,"request"],[7207,72,7282,82],[7207,74,7282,84,"actionCodeSettings"],[7207,92,7282,102],[7207,93,7282,103],[7208,12,7283,20],[7209,12,7284,20],[7209,19,7284,27],[7209,20,7284,28],[7209,21,7284,29],[7209,22,7284,30],[7209,33,7284,41,"verifyAndChangeEmail"],[7209,53,7284,61],[7209,54,7284,62,"userInternal"],[7209,66,7284,74],[7209,67,7284,75,"auth"],[7209,71,7284,79],[7209,73,7284,81,"request"],[7209,80,7284,88],[7209,81,7284,89],[7209,82,7284,90],[7210,10,7285,16],[7210,15,7285,21],[7210,16,7285,22],[7211,12,7286,20,"email"],[7211,17,7286,25],[7211,20,7286,29,"_a"],[7211,22,7286,31],[7211,23,7286,32,"sent"],[7211,27,7286,36],[7211,28,7286,37],[7211,29,7286,38],[7211,30,7286,40,"email"],[7211,35,7286,45],[7212,12,7287,20],[7212,16,7287,24],[7212,18,7287,26,"email"],[7212,23,7287,31],[7212,28,7287,36,"user"],[7212,32,7287,40],[7212,33,7287,41,"email"],[7212,38,7287,46],[7212,39,7287,47],[7212,41,7287,49],[7212,48,7287,56],[7212,49,7287,57],[7212,50,7287,58],[7212,51,7287,59],[7212,62,7287,70],[7212,63,7287,71],[7212,64,7287,72],[7213,12,7288,20],[7214,12,7289,20],[7215,12,7290,20],[7215,19,7290,27],[7215,20,7290,28],[7215,21,7290,29],[7215,22,7290,30],[7215,33,7290,41,"user"],[7215,37,7290,45],[7215,38,7290,46,"reload"],[7215,44,7290,52],[7215,45,7290,53],[7215,46,7290,54],[7215,47,7290,55],[7216,10,7291,16],[7216,15,7291,21],[7216,16,7291,22],[7217,12,7292,20],[7218,12,7293,20],[7219,12,7294,20,"_a"],[7219,14,7294,22],[7219,15,7294,23,"sent"],[7219,19,7294,27],[7219,20,7294,28],[7219,21,7294,29],[7220,12,7295,20,"_a"],[7220,14,7295,22],[7220,15,7295,23,"label"],[7220,20,7295,28],[7220,23,7295,31],[7220,24,7295,32],[7221,10,7296,16],[7221,15,7296,21],[7221,16,7296,22],[7222,12,7296,24],[7222,19,7296,31],[7222,20,7296,32],[7222,21,7296,33],[7222,22,7296,34],[7222,33,7296,45],[7223,8,7297,12],[7224,6,7298,8],[7224,7,7298,9],[7224,8,7298,10],[7225,4,7299,4],[7225,5,7299,5],[7225,6,7299,6],[7226,2,7300,0],[7228,2,7302,0],[7229,0,7303,0],[7230,0,7304,0],[7231,0,7305,0],[7232,0,7306,0],[7233,0,7307,0],[7234,0,7308,0],[7235,0,7309,0],[7236,0,7310,0],[7237,0,7311,0],[7238,0,7312,0],[7239,0,7313,0],[7240,0,7314,0],[7241,0,7315,0],[7242,0,7316,0],[7243,0,7317,0],[7244,2,7318,0],[7244,11,7318,9,"updateProfile$1"],[7244,26,7318,24,"updateProfile$1"],[7244,27,7318,25,"auth"],[7244,31,7318,29],[7244,33,7318,31,"request"],[7244,40,7318,38],[7244,42,7318,40],[7245,4,7319,4],[7245,11,7319,11,"tslib"],[7245,16,7319,16],[7245,17,7319,17,"__awaiter"],[7245,26,7319,26],[7245,27,7319,27],[7245,31,7319,31],[7245,33,7319,31,"undefined"],[7245,42,7319,31],[7245,44,7319,31,"undefined"],[7245,53,7319,31],[7245,55,7319,49],[7245,67,7319,61],[7246,6,7320,8],[7246,13,7320,15,"tslib"],[7246,18,7320,20],[7246,19,7320,21,"__generator"],[7246,30,7320,32],[7246,31,7320,33],[7246,35,7320,37],[7246,37,7320,39],[7246,47,7320,49,"_a"],[7246,49,7320,51],[7246,51,7320,53],[7247,8,7321,12],[7247,15,7321,19],[7247,16,7321,20],[7247,17,7321,21],[7247,18,7321,22],[7247,30,7321,34,"_performApiRequest"],[7247,48,7321,52],[7247,49,7321,53,"auth"],[7247,53,7321,57],[7247,55,7321,59],[7247,61,7321,65],[7247,62,7321,66],[7247,85,7321,89],[7247,106,7321,110],[7247,107,7321,111],[7247,140,7321,144,"request"],[7247,147,7321,151],[7247,148,7321,152],[7247,149,7321,153],[7248,6,7322,8],[7248,7,7322,9],[7248,8,7322,10],[7249,4,7323,4],[7249,5,7323,5],[7249,6,7323,6],[7250,2,7324,0],[7252,2,7326,0],[7253,0,7327,0],[7254,0,7328,0],[7255,0,7329,0],[7256,0,7330,0],[7257,0,7331,0],[7258,0,7332,0],[7259,0,7333,0],[7260,0,7334,0],[7261,0,7335,0],[7262,0,7336,0],[7263,0,7337,0],[7264,0,7338,0],[7265,0,7339,0],[7266,0,7340,0],[7267,0,7341,0],[7268,2,7342,0],[7269,0,7343,0],[7270,0,7344,0],[7271,0,7345,0],[7272,0,7346,0],[7273,0,7347,0],[7274,0,7348,0],[7275,0,7349,0],[7276,2,7350,0],[7276,11,7350,9,"updateProfile"],[7276,24,7350,22,"updateProfile"],[7276,25,7350,23,"user"],[7276,29,7350,27],[7276,31,7350,29,"_a"],[7276,33,7350,31],[7276,35,7350,33],[7277,4,7351,4],[7277,8,7351,8,"displayName"],[7277,19,7351,19],[7277,22,7351,22,"_a"],[7277,24,7351,24],[7277,25,7351,25,"displayName"],[7277,36,7351,36],[7278,6,7351,38,"photoUrl"],[7278,14,7351,46],[7278,17,7351,49,"_a"],[7278,19,7351,51],[7278,20,7351,52,"photoURL"],[7278,28,7351,60],[7279,4,7352,4],[7279,11,7352,11,"tslib"],[7279,16,7352,16],[7279,17,7352,17,"__awaiter"],[7279,26,7352,26],[7279,27,7352,27],[7279,31,7352,31],[7279,33,7352,31,"undefined"],[7279,42,7352,31],[7279,44,7352,31,"undefined"],[7279,53,7352,31],[7279,55,7352,49],[7279,67,7352,61],[7280,6,7353,8],[7280,10,7353,12,"userInternal"],[7280,22,7353,24],[7280,24,7353,26,"idToken"],[7280,31,7353,33],[7280,33,7353,35,"profileRequest"],[7280,47,7353,49],[7280,49,7353,51,"response"],[7280,57,7353,59],[7280,59,7353,61,"passwordProvider"],[7280,75,7353,77],[7281,6,7354,8],[7281,13,7354,15,"tslib"],[7281,18,7354,20],[7281,19,7354,21,"__generator"],[7281,30,7354,32],[7281,31,7354,33],[7281,35,7354,37],[7281,37,7354,39],[7281,47,7354,49,"_b"],[7281,49,7354,51],[7281,51,7354,53],[7282,8,7355,12],[7282,16,7355,20,"_b"],[7282,18,7355,22],[7282,19,7355,23,"label"],[7282,24,7355,28],[7283,10,7356,16],[7283,15,7356,21],[7283,16,7356,22],[7284,12,7357,20],[7284,16,7357,24,"displayName"],[7284,27,7357,35],[7284,32,7357,40,"undefined"],[7284,41,7357,49],[7284,45,7357,53,"photoUrl"],[7284,53,7357,61],[7284,58,7357,66,"undefined"],[7284,67,7357,75],[7284,69,7357,77],[7285,14,7358,24],[7285,21,7358,31],[7285,22,7358,32],[7285,23,7358,33],[7285,24,7358,34],[7285,35,7358,45],[7286,12,7359,20],[7287,12,7360,20,"userInternal"],[7287,24,7360,32],[7287,27,7360,35,"util"],[7287,31,7360,39],[7287,32,7360,40,"getModularInstance"],[7287,50,7360,58],[7287,51,7360,59,"user"],[7287,55,7360,63],[7287,56,7360,64],[7288,12,7361,20],[7288,19,7361,27],[7288,20,7361,28],[7288,21,7361,29],[7288,22,7361,30],[7288,33,7361,41,"userInternal"],[7288,45,7361,53],[7288,46,7361,54,"getIdToken"],[7288,56,7361,64],[7288,57,7361,65],[7288,58,7361,66],[7288,59,7361,67],[7289,10,7362,16],[7289,15,7362,21],[7289,16,7362,22],[7290,12,7363,20,"idToken"],[7290,19,7363,27],[7290,22,7363,30,"_b"],[7290,24,7363,32],[7290,25,7363,33,"sent"],[7290,29,7363,37],[7290,30,7363,38],[7290,31,7363,39],[7291,12,7364,20,"profileRequest"],[7291,26,7364,34],[7291,29,7364,37],[7292,14,7365,24,"idToken"],[7292,21,7365,31],[7292,23,7365,33,"idToken"],[7292,30,7365,40],[7293,14,7366,24,"displayName"],[7293,25,7366,35],[7293,27,7366,37,"displayName"],[7293,38,7366,48],[7294,14,7367,24,"photoUrl"],[7294,22,7367,32],[7294,24,7367,34,"photoUrl"],[7294,32,7367,42],[7295,14,7368,24,"returnSecureToken"],[7295,31,7368,41],[7295,33,7368,43],[7296,12,7369,20],[7296,13,7369,21],[7297,12,7370,20],[7297,19,7370,27],[7297,20,7370,28],[7297,21,7370,29],[7297,22,7370,30],[7297,33,7370,41,"_logoutIfInvalidated"],[7297,53,7370,61],[7297,54,7370,62,"userInternal"],[7297,66,7370,74],[7297,68,7370,76,"updateProfile$1"],[7297,83,7370,91],[7297,84,7370,92,"userInternal"],[7297,96,7370,104],[7297,97,7370,105,"auth"],[7297,101,7370,109],[7297,103,7370,111,"profileRequest"],[7297,117,7370,125],[7297,118,7370,126],[7297,119,7370,127],[7297,120,7370,128],[7298,10,7371,16],[7298,15,7371,21],[7298,16,7371,22],[7299,12,7372,20,"response"],[7299,20,7372,28],[7299,23,7372,31,"_b"],[7299,25,7372,33],[7299,26,7372,34,"sent"],[7299,30,7372,38],[7299,31,7372,39],[7299,32,7372,40],[7300,12,7373,20,"userInternal"],[7300,24,7373,32],[7300,25,7373,33,"displayName"],[7300,36,7373,44],[7300,39,7373,47,"response"],[7300,47,7373,55],[7300,48,7373,56,"displayName"],[7300,59,7373,67],[7300,63,7373,71],[7300,67,7373,75],[7301,12,7374,20,"userInternal"],[7301,24,7374,32],[7301,25,7374,33,"photoURL"],[7301,33,7374,41],[7301,36,7374,44,"response"],[7301,44,7374,52],[7301,45,7374,53,"photoUrl"],[7301,53,7374,61],[7301,57,7374,65],[7301,61,7374,69],[7302,12,7375,20,"passwordProvider"],[7302,28,7375,36],[7302,31,7375,39,"userInternal"],[7302,43,7375,51],[7302,44,7375,52,"providerData"],[7302,56,7375,64],[7302,57,7375,65,"find"],[7302,61,7375,69],[7302,62,7375,70],[7302,72,7375,80,"_a"],[7302,74,7375,82],[7302,76,7375,84],[7303,14,7376,24],[7303,18,7376,28,"providerId"],[7303,28,7376,38],[7303,31,7376,41,"_a"],[7303,33,7376,43],[7303,34,7376,44,"providerId"],[7303,44,7376,54],[7304,14,7377,24],[7304,21,7377,31,"providerId"],[7304,31,7377,41],[7304,36,7377,46],[7304,46,7377,56],[7304,47,7377,57],[7305,12,7378,20],[7305,13,7378,21],[7305,14,7378,22],[7306,12,7379,20],[7306,16,7379,24,"passwordProvider"],[7306,32,7379,40],[7306,34,7379,42],[7307,14,7380,24,"passwordProvider"],[7307,30,7380,40],[7307,31,7380,41,"displayName"],[7307,42,7380,52],[7307,45,7380,55,"userInternal"],[7307,57,7380,67],[7307,58,7380,68,"displayName"],[7307,69,7380,79],[7308,14,7381,24,"passwordProvider"],[7308,30,7381,40],[7308,31,7381,41,"photoURL"],[7308,39,7381,49],[7308,42,7381,52,"userInternal"],[7308,54,7381,64],[7308,55,7381,65,"photoURL"],[7308,63,7381,73],[7309,12,7382,20],[7310,12,7383,20],[7310,19,7383,27],[7310,20,7383,28],[7310,21,7383,29],[7310,22,7383,30],[7310,33,7383,41,"userInternal"],[7310,45,7383,53],[7310,46,7383,54,"_updateTokensIfNecessary"],[7310,70,7383,78],[7310,71,7383,79,"response"],[7310,79,7383,87],[7310,80,7383,88],[7310,81,7383,89],[7311,10,7384,16],[7311,15,7384,21],[7311,16,7384,22],[7312,12,7385,20,"_b"],[7312,14,7385,22],[7312,15,7385,23,"sent"],[7312,19,7385,27],[7312,20,7385,28],[7312,21,7385,29],[7313,12,7386,20],[7313,19,7386,27],[7313,20,7386,28],[7313,21,7386,29],[7313,22,7386,30],[7313,33,7386,41],[7314,8,7387,12],[7315,6,7388,8],[7315,7,7388,9],[7315,8,7388,10],[7316,4,7389,4],[7316,5,7389,5],[7316,6,7389,6],[7317,2,7390,0],[7318,2,7391,0],[7319,0,7392,0],[7320,0,7393,0],[7321,0,7394,0],[7322,0,7395,0],[7323,0,7396,0],[7324,0,7397,0],[7325,0,7398,0],[7326,0,7399,0],[7327,0,7400,0],[7328,0,7401,0],[7329,0,7402,0],[7330,0,7403,0],[7331,0,7404,0],[7332,0,7405,0],[7333,0,7406,0],[7334,0,7407,0],[7335,0,7408,0],[7336,0,7409,0],[7337,0,7410,0],[7338,0,7411,0],[7339,0,7412,0],[7340,0,7413,0],[7341,0,7414,0],[7342,2,7415,0],[7342,11,7415,9,"updateEmail"],[7342,22,7415,20,"updateEmail"],[7342,23,7415,21,"user"],[7342,27,7415,25],[7342,29,7415,27,"newEmail"],[7342,37,7415,35],[7342,39,7415,37],[7343,4,7416,4],[7343,8,7416,8,"userInternal"],[7343,20,7416,20],[7343,23,7416,23,"util"],[7343,27,7416,27],[7343,28,7416,28,"getModularInstance"],[7343,46,7416,46],[7343,47,7416,47,"user"],[7343,51,7416,51],[7343,52,7416,52],[7344,4,7417,4],[7344,8,7417,8,"app"],[7344,11,7417,11],[7344,12,7417,12,"_isFirebaseServerApp"],[7344,32,7417,32],[7344,33,7417,33,"userInternal"],[7344,45,7417,45],[7344,46,7417,46,"auth"],[7344,50,7417,50],[7344,51,7417,51,"app"],[7344,54,7417,54],[7344,55,7417,55],[7344,57,7417,57],[7345,6,7418,8],[7345,13,7418,15,"Promise"],[7345,20,7418,22],[7345,21,7418,23,"reject"],[7345,27,7418,29],[7345,28,7418,30,"_serverAppCurrentUserOperationNotSupportedError"],[7345,75,7418,77],[7345,76,7418,78,"userInternal"],[7345,88,7418,90],[7345,89,7418,91,"auth"],[7345,93,7418,95],[7345,94,7418,96],[7345,95,7418,97],[7346,4,7419,4],[7347,4,7420,4],[7347,11,7420,11,"updateEmailOrPassword"],[7347,32,7420,32],[7347,33,7420,33,"userInternal"],[7347,45,7420,45],[7347,47,7420,47,"newEmail"],[7347,55,7420,55],[7347,57,7420,57],[7347,61,7420,61],[7347,62,7420,62],[7348,2,7421,0],[7349,2,7422,0],[7350,0,7423,0],[7351,0,7424,0],[7352,0,7425,0],[7353,0,7426,0],[7354,0,7427,0],[7355,0,7428,0],[7356,0,7429,0],[7357,0,7430,0],[7358,0,7431,0],[7359,0,7432,0],[7360,0,7433,0],[7361,0,7434,0],[7362,2,7435,0],[7362,11,7435,9,"updatePassword"],[7362,25,7435,23,"updatePassword"],[7362,26,7435,24,"user"],[7362,30,7435,28],[7362,32,7435,30,"newPassword"],[7362,43,7435,41],[7362,45,7435,43],[7363,4,7436,4],[7363,11,7436,11,"updateEmailOrPassword"],[7363,32,7436,32],[7363,33,7436,33,"util"],[7363,37,7436,37],[7363,38,7436,38,"getModularInstance"],[7363,56,7436,56],[7363,57,7436,57,"user"],[7363,61,7436,61],[7363,62,7436,62],[7363,64,7436,64],[7363,68,7436,68],[7363,70,7436,70,"newPassword"],[7363,81,7436,81],[7363,82,7436,82],[7364,2,7437,0],[7365,2,7438,0],[7365,11,7438,9,"updateEmailOrPassword"],[7365,32,7438,30,"updateEmailOrPassword"],[7365,33,7438,31,"user"],[7365,37,7438,35],[7365,39,7438,37,"email"],[7365,44,7438,42],[7365,46,7438,44,"password"],[7365,54,7438,52],[7365,56,7438,54],[7366,4,7439,4],[7366,11,7439,11,"tslib"],[7366,16,7439,16],[7366,17,7439,17,"__awaiter"],[7366,26,7439,26],[7366,27,7439,27],[7366,31,7439,31],[7366,33,7439,31,"undefined"],[7366,42,7439,31],[7366,44,7439,31,"undefined"],[7366,53,7439,31],[7366,55,7439,49],[7366,67,7439,61],[7367,6,7440,8],[7367,10,7440,12,"auth"],[7367,14,7440,16],[7367,16,7440,18,"idToken"],[7367,23,7440,25],[7367,25,7440,27,"request"],[7367,32,7440,34],[7367,34,7440,36,"response"],[7367,42,7440,44],[7368,6,7441,8],[7368,13,7441,15,"tslib"],[7368,18,7441,20],[7368,19,7441,21,"__generator"],[7368,30,7441,32],[7368,31,7441,33],[7368,35,7441,37],[7368,37,7441,39],[7368,47,7441,49,"_a"],[7368,49,7441,51],[7368,51,7441,53],[7369,8,7442,12],[7369,16,7442,20,"_a"],[7369,18,7442,22],[7369,19,7442,23,"label"],[7369,24,7442,28],[7370,10,7443,16],[7370,15,7443,21],[7370,16,7443,22],[7371,12,7444,20,"auth"],[7371,16,7444,24],[7371,19,7444,27,"user"],[7371,23,7444,31],[7371,24,7444,32,"auth"],[7371,28,7444,36],[7372,12,7445,20],[7372,19,7445,27],[7372,20,7445,28],[7372,21,7445,29],[7372,22,7445,30],[7372,33,7445,41,"user"],[7372,37,7445,45],[7372,38,7445,46,"getIdToken"],[7372,48,7445,56],[7372,49,7445,57],[7372,50,7445,58],[7372,51,7445,59],[7373,10,7446,16],[7373,15,7446,21],[7373,16,7446,22],[7374,12,7447,20,"idToken"],[7374,19,7447,27],[7374,22,7447,30,"_a"],[7374,24,7447,32],[7374,25,7447,33,"sent"],[7374,29,7447,37],[7374,30,7447,38],[7374,31,7447,39],[7375,12,7448,20,"request"],[7375,19,7448,27],[7375,22,7448,30],[7376,14,7449,24,"idToken"],[7376,21,7449,31],[7376,23,7449,33,"idToken"],[7376,30,7449,40],[7377,14,7450,24,"returnSecureToken"],[7377,31,7450,41],[7377,33,7450,43],[7378,12,7451,20],[7378,13,7451,21],[7379,12,7452,20],[7379,16,7452,24,"email"],[7379,21,7452,29],[7379,23,7452,31],[7380,14,7453,24,"request"],[7380,21,7453,31],[7380,22,7453,32,"email"],[7380,27,7453,37],[7380,30,7453,40,"email"],[7380,35,7453,45],[7381,12,7454,20],[7382,12,7455,20],[7382,16,7455,24,"password"],[7382,24,7455,32],[7382,26,7455,34],[7383,14,7456,24,"request"],[7383,21,7456,31],[7383,22,7456,32,"password"],[7383,30,7456,40],[7383,33,7456,43,"password"],[7383,41,7456,51],[7384,12,7457,20],[7385,12,7458,20],[7385,19,7458,27],[7385,20,7458,28],[7385,21,7458,29],[7385,22,7458,30],[7385,33,7458,41,"_logoutIfInvalidated"],[7385,53,7458,61],[7385,54,7458,62,"user"],[7385,58,7458,66],[7385,60,7458,68,"updateEmailPassword"],[7385,79,7458,87],[7385,80,7458,88,"auth"],[7385,84,7458,92],[7385,86,7458,94,"request"],[7385,93,7458,101],[7385,94,7458,102],[7385,95,7458,103],[7385,96,7458,104],[7386,10,7459,16],[7386,15,7459,21],[7386,16,7459,22],[7387,12,7460,20,"response"],[7387,20,7460,28],[7387,23,7460,31,"_a"],[7387,25,7460,33],[7387,26,7460,34,"sent"],[7387,30,7460,38],[7387,31,7460,39],[7387,32,7460,40],[7388,12,7461,20],[7388,19,7461,27],[7388,20,7461,28],[7388,21,7461,29],[7388,22,7461,30],[7388,33,7461,41,"user"],[7388,37,7461,45],[7388,38,7461,46,"_updateTokensIfNecessary"],[7388,62,7461,70],[7388,63,7461,71,"response"],[7388,71,7461,79],[7388,73,7461,81],[7388,85,7461,94],[7388,89,7461,98],[7388,90,7461,99],[7388,91,7461,100],[7389,10,7462,16],[7389,15,7462,21],[7389,16,7462,22],[7390,12,7463,20,"_a"],[7390,14,7463,22],[7390,15,7463,23,"sent"],[7390,19,7463,27],[7390,20,7463,28],[7390,21,7463,29],[7391,12,7464,20],[7391,19,7464,27],[7391,20,7464,28],[7391,21,7464,29],[7391,22,7464,30],[7391,33,7464,41],[7392,8,7465,12],[7393,6,7466,8],[7393,7,7466,9],[7393,8,7466,10],[7394,4,7467,4],[7394,5,7467,5],[7394,6,7467,6],[7395,2,7468,0],[7397,2,7470,0],[7398,0,7471,0],[7399,0,7472,0],[7400,0,7473,0],[7401,0,7474,0],[7402,0,7475,0],[7403,0,7476,0],[7404,0,7477,0],[7405,0,7478,0],[7406,0,7479,0],[7407,0,7480,0],[7408,0,7481,0],[7409,0,7482,0],[7410,0,7483,0],[7411,0,7484,0],[7412,0,7485,0],[7413,2,7486,0],[7414,0,7487,0],[7415,0,7488,0],[7416,0,7489,0],[7417,2,7490,0],[7417,11,7490,9,"_fromIdTokenResponse"],[7417,31,7490,29,"_fromIdTokenResponse"],[7417,32,7490,30,"idTokenResponse"],[7417,47,7490,45],[7417,49,7490,47],[7418,4,7491,4],[7418,8,7491,8,"_a"],[7418,10,7491,10],[7418,12,7491,12,"_b"],[7418,14,7491,14],[7419,4,7492,4],[7419,8,7492,8],[7419,9,7492,9,"idTokenResponse"],[7419,24,7492,24],[7419,26,7492,26],[7420,6,7493,8],[7420,13,7493,15],[7420,17,7493,19],[7421,4,7494,4],[7422,4,7495,4],[7422,8,7495,8,"providerId"],[7422,18,7495,18],[7422,21,7495,21,"idTokenResponse"],[7422,36,7495,36],[7422,37,7495,37,"providerId"],[7422,47,7495,47],[7423,4,7496,4],[7423,8,7496,8,"profile"],[7423,15,7496,15],[7423,18,7496,18,"idTokenResponse"],[7423,33,7496,33],[7423,34,7496,34,"rawUserInfo"],[7423,45,7496,45],[7423,48,7497,10,"JSON"],[7423,52,7497,14],[7423,53,7497,15,"parse"],[7423,58,7497,20],[7423,59,7497,21,"idTokenResponse"],[7423,74,7497,36],[7423,75,7497,37,"rawUserInfo"],[7423,86,7497,48],[7423,87,7497,49],[7423,90,7498,10],[7423,91,7498,11],[7423,92,7498,12],[7424,4,7499,4],[7424,8,7499,8,"isNewUser"],[7424,17,7499,17],[7424,20,7499,20,"idTokenResponse"],[7424,35,7499,35],[7424,36,7499,36,"isNewUser"],[7424,45,7499,45],[7424,49,7500,8,"idTokenResponse"],[7424,64,7500,23],[7424,65,7500,24,"kind"],[7424,69,7500,28],[7424,74,7500,33],[7424,113,7500,72],[7424,114,7500,73],[7425,4,7501,4],[7425,8,7501,8],[7425,9,7501,9,"providerId"],[7425,19,7501,19],[7425,24,7501,24,"idTokenResponse"],[7425,39,7501,39],[7425,44,7501,44],[7425,48,7501,48],[7425,52,7501,52,"idTokenResponse"],[7425,67,7501,67],[7425,72,7501,67,"undefined"],[7425,81,7501,78],[7425,84,7501,78,"undefined"],[7425,93,7501,78],[7425,96,7501,90,"idTokenResponse"],[7425,111,7501,105],[7425,112,7501,106,"idToken"],[7425,119,7501,113],[7425,120,7501,114],[7425,122,7501,116],[7426,6,7502,8],[7426,10,7502,12,"signInProvider"],[7426,24,7502,26],[7426,27,7502,29],[7426,28,7502,30,"_b"],[7426,30,7502,32],[7426,33,7502,35],[7426,34,7502,36,"_a"],[7426,36,7502,38],[7426,39,7502,41,"_parseToken"],[7426,50,7502,52],[7426,51,7502,53,"idTokenResponse"],[7426,66,7502,68],[7426,67,7502,69,"idToken"],[7426,74,7502,76],[7426,75,7502,77],[7426,81,7502,83],[7426,85,7502,87],[7426,89,7502,91,"_a"],[7426,91,7502,93],[7426,96,7502,93,"undefined"],[7426,105,7502,104],[7426,108,7502,104,"undefined"],[7426,117,7502,104],[7426,120,7502,116,"_a"],[7426,122,7502,118],[7426,123,7502,119,"firebase"],[7426,131,7502,127],[7426,137,7502,133],[7426,141,7502,137],[7426,145,7502,141,"_b"],[7426,147,7502,143],[7426,152,7502,143,"undefined"],[7426,161,7502,154],[7426,164,7502,154,"undefined"],[7426,173,7502,154],[7426,176,7502,166,"_b"],[7426,178,7502,168],[7426,179,7502,169],[7426,197,7502,187],[7426,198,7502,188],[7427,6,7503,8],[7427,10,7503,12,"signInProvider"],[7427,24,7503,26],[7427,26,7503,28],[7428,8,7504,12],[7428,12,7504,16,"filteredProviderId"],[7428,30,7504,34],[7428,33,7504,37,"signInProvider"],[7428,47,7504,51],[7428,52,7504,56],[7428,63,7504,67],[7428,64,7504,68],[7428,94,7505,16,"signInProvider"],[7428,108,7505,30],[7428,113,7505,35],[7428,121,7505,43],[7428,122,7505,44],[7428,148,7506,18,"signInProvider"],[7428,162,7506,32],[7428,165,7507,18],[7428,169,7507,22],[7429,8,7508,12],[7430,8,7509,12],[7430,15,7509,19],[7430,19,7509,23,"GenericAdditionalUserInfo"],[7430,44,7509,48],[7430,45,7509,49,"isNewUser"],[7430,54,7509,58],[7430,56,7509,60,"filteredProviderId"],[7430,74,7509,78],[7430,75,7509,79],[7431,6,7510,8],[7432,4,7511,4],[7433,4,7512,4],[7433,8,7512,8],[7433,9,7512,9,"providerId"],[7433,19,7512,19],[7433,21,7512,21],[7434,6,7513,8],[7434,13,7513,15],[7434,17,7513,19],[7435,4,7514,4],[7436,4,7515,4],[7436,12,7515,12,"providerId"],[7436,22,7515,22],[7437,6,7516,8],[7437,11,7516,13],[7437,25,7516,27],[7437,26,7516,28],[7438,8,7517,12],[7438,15,7517,19],[7438,19,7517,23,"FacebookAdditionalUserInfo"],[7438,45,7517,49],[7438,46,7517,50,"isNewUser"],[7438,55,7517,59],[7438,57,7517,61,"profile"],[7438,64,7517,68],[7438,65,7517,69],[7439,6,7518,8],[7439,11,7518,13],[7439,23,7518,25],[7439,24,7518,26],[7440,8,7519,12],[7440,15,7519,19],[7440,19,7519,23,"GithubAdditionalUserInfo"],[7440,43,7519,47],[7440,44,7519,48,"isNewUser"],[7440,53,7519,57],[7440,55,7519,59,"profile"],[7440,62,7519,66],[7440,63,7519,67],[7441,6,7520,8],[7441,11,7520,13],[7441,23,7520,25],[7441,24,7520,26],[7442,8,7521,12],[7442,15,7521,19],[7442,19,7521,23,"GoogleAdditionalUserInfo"],[7442,43,7521,47],[7442,44,7521,48,"isNewUser"],[7442,53,7521,57],[7442,55,7521,59,"profile"],[7442,62,7521,66],[7442,63,7521,67],[7443,6,7522,8],[7443,11,7522,13],[7443,24,7522,26],[7443,25,7522,27],[7444,8,7523,12],[7444,15,7523,19],[7444,19,7523,23,"TwitterAdditionalUserInfo"],[7444,44,7523,48],[7444,45,7523,49,"isNewUser"],[7444,54,7523,58],[7444,56,7523,60,"profile"],[7444,63,7523,67],[7444,65,7523,69,"idTokenResponse"],[7444,80,7523,84],[7444,81,7523,85,"screenName"],[7444,91,7523,95],[7444,95,7523,99],[7444,99,7523,103],[7444,100,7523,104],[7445,6,7524,8],[7445,11,7524,13],[7445,19,7524,21],[7445,20,7524,22],[7446,6,7525,8],[7446,11,7525,13],[7446,22,7525,24],[7446,23,7525,25],[7447,8,7526,12],[7447,15,7526,19],[7447,19,7526,23,"GenericAdditionalUserInfo"],[7447,44,7526,48],[7447,45,7526,49,"isNewUser"],[7447,54,7526,58],[7447,56,7526,60],[7447,60,7526,64],[7447,61,7526,65],[7448,6,7527,8],[7449,8,7528,12],[7449,15,7528,19],[7449,19,7528,23,"GenericAdditionalUserInfo"],[7449,44,7528,48],[7449,45,7528,49,"isNewUser"],[7449,54,7528,58],[7449,56,7528,60,"providerId"],[7449,66,7528,70],[7449,68,7528,72,"profile"],[7449,75,7528,79],[7449,76,7528,80],[7450,4,7529,4],[7451,2,7530,0],[7452,2,7531,0],[7452,6,7531,4,"GenericAdditionalUserInfo"],[7452,31,7531,29],[7452,34,7531,32],[7452,47,7531,47],[7452,59,7531,59],[7453,4,7532,4],[7453,13,7532,13,"GenericAdditionalUserInfo"],[7453,38,7532,38,"GenericAdditionalUserInfo"],[7453,39,7532,39,"isNewUser"],[7453,48,7532,48],[7453,50,7532,50,"providerId"],[7453,60,7532,60],[7453,62,7532,62,"profile"],[7453,69,7532,69],[7453,71,7532,71],[7454,6,7533,8],[7454,10,7533,12,"profile"],[7454,17,7533,19],[7454,22,7533,19,"undefined"],[7454,31,7533,30],[7454,33,7533,32],[7455,8,7533,34,"profile"],[7455,15,7533,41],[7455,18,7533,44],[7455,19,7533,45],[7455,20,7533,46],[7456,6,7533,48],[7457,6,7534,8],[7457,10,7534,12],[7457,11,7534,13,"isNewUser"],[7457,20,7534,22],[7457,23,7534,25,"isNewUser"],[7457,32,7534,34],[7458,6,7535,8],[7458,10,7535,12],[7458,11,7535,13,"providerId"],[7458,21,7535,23],[7458,24,7535,26,"providerId"],[7458,34,7535,36],[7459,6,7536,8],[7459,10,7536,12],[7459,11,7536,13,"profile"],[7459,18,7536,20],[7459,21,7536,23,"profile"],[7459,28,7536,30],[7460,4,7537,4],[7461,4,7538,4],[7461,11,7538,11,"GenericAdditionalUserInfo"],[7461,36,7538,36],[7462,2,7539,0],[7462,3,7539,1],[7462,4,7539,2],[7462,5,7539,4],[7463,2,7540,0],[7463,6,7540,4,"FederatedAdditionalUserInfoWithUsername"],[7463,45,7540,43],[7463,48,7540,46],[7463,61,7540,61],[7463,71,7540,71,"_super"],[7463,77,7540,77],[7463,79,7540,79],[7464,4,7541,4,"tslib"],[7464,9,7541,9],[7464,10,7541,10,"__extends"],[7464,19,7541,19],[7464,20,7541,20,"FederatedAdditionalUserInfoWithUsername"],[7464,59,7541,59],[7464,61,7541,61,"_super"],[7464,67,7541,67],[7464,68,7541,68],[7465,4,7542,4],[7465,13,7542,13,"FederatedAdditionalUserInfoWithUsername"],[7465,52,7542,52,"FederatedAdditionalUserInfoWithUsername"],[7465,53,7542,53,"isNewUser"],[7465,62,7542,62],[7465,64,7542,64,"providerId"],[7465,74,7542,74],[7465,76,7542,76,"profile"],[7465,83,7542,83],[7465,85,7542,85,"username"],[7465,93,7542,93],[7465,95,7542,95],[7466,6,7543,8],[7466,10,7543,12,"_this"],[7466,15,7543,17],[7466,18,7543,20,"_super"],[7466,24,7543,26],[7466,25,7543,27,"call"],[7466,29,7543,31],[7466,30,7543,32],[7466,34,7543,36],[7466,36,7543,38,"isNewUser"],[7466,45,7543,47],[7466,47,7543,49,"providerId"],[7466,57,7543,59],[7466,59,7543,61,"profile"],[7466,66,7543,68],[7466,67,7543,69],[7466,71,7543,73],[7466,75,7543,77],[7467,6,7544,8,"_this"],[7467,11,7544,13],[7467,12,7544,14,"username"],[7467,20,7544,22],[7467,23,7544,25,"username"],[7467,31,7544,33],[7468,6,7545,8],[7468,13,7545,15,"_this"],[7468,18,7545,20],[7469,4,7546,4],[7470,4,7547,4],[7470,11,7547,11,"FederatedAdditionalUserInfoWithUsername"],[7470,50,7547,50],[7471,2,7548,0],[7471,3,7548,1],[7471,4,7548,2,"GenericAdditionalUserInfo"],[7471,29,7548,27],[7471,30,7548,29],[7472,2,7549,0],[7472,6,7549,4,"FacebookAdditionalUserInfo"],[7472,32,7549,30],[7472,35,7549,33],[7472,48,7549,48],[7472,58,7549,58,"_super"],[7472,64,7549,64],[7472,66,7549,66],[7473,4,7550,4,"tslib"],[7473,9,7550,9],[7473,10,7550,10,"__extends"],[7473,19,7550,19],[7473,20,7550,20,"FacebookAdditionalUserInfo"],[7473,46,7550,46],[7473,48,7550,48,"_super"],[7473,54,7550,54],[7473,55,7550,55],[7474,4,7551,4],[7474,13,7551,13,"FacebookAdditionalUserInfo"],[7474,39,7551,39,"FacebookAdditionalUserInfo"],[7474,40,7551,40,"isNewUser"],[7474,49,7551,49],[7474,51,7551,51,"profile"],[7474,58,7551,58],[7474,60,7551,60],[7475,6,7552,8],[7475,13,7552,15,"_super"],[7475,19,7552,21],[7475,20,7552,22,"call"],[7475,24,7552,26],[7475,25,7552,27],[7475,29,7552,31],[7475,31,7552,33,"isNewUser"],[7475,40,7552,42],[7475,42,7552,44],[7475,56,7552,58],[7475,57,7552,59],[7475,84,7552,86,"profile"],[7475,91,7552,93],[7475,92,7552,94],[7475,96,7552,98],[7475,100,7552,102],[7476,4,7553,4],[7477,4,7554,4],[7477,11,7554,11,"FacebookAdditionalUserInfo"],[7477,37,7554,37],[7478,2,7555,0],[7478,3,7555,1],[7478,4,7555,2,"GenericAdditionalUserInfo"],[7478,29,7555,27],[7478,30,7555,29],[7479,2,7556,0],[7479,6,7556,4,"GithubAdditionalUserInfo"],[7479,30,7556,28],[7479,33,7556,31],[7479,46,7556,46],[7479,56,7556,56,"_super"],[7479,62,7556,62],[7479,64,7556,64],[7480,4,7557,4,"tslib"],[7480,9,7557,9],[7480,10,7557,10,"__extends"],[7480,19,7557,19],[7480,20,7557,20,"GithubAdditionalUserInfo"],[7480,44,7557,44],[7480,46,7557,46,"_super"],[7480,52,7557,52],[7480,53,7557,53],[7481,4,7558,4],[7481,13,7558,13,"GithubAdditionalUserInfo"],[7481,37,7558,37,"GithubAdditionalUserInfo"],[7481,38,7558,38,"isNewUser"],[7481,47,7558,47],[7481,49,7558,49,"profile"],[7481,56,7558,56],[7481,58,7558,58],[7482,6,7559,8],[7482,13,7559,15,"_super"],[7482,19,7559,21],[7482,20,7559,22,"call"],[7482,24,7559,26],[7482,25,7559,27],[7482,29,7559,31],[7482,31,7559,33,"isNewUser"],[7482,40,7559,42],[7482,42,7559,44],[7482,54,7559,56],[7482,55,7559,57],[7482,80,7559,82,"profile"],[7482,87,7559,89],[7482,89,7559,91],[7482,97,7559,99,"profile"],[7482,104,7559,106],[7482,109,7559,111],[7482,113,7559,115],[7482,117,7559,119,"profile"],[7482,124,7559,126],[7482,129,7559,126,"undefined"],[7482,138,7559,137],[7482,141,7559,137,"undefined"],[7482,150,7559,137],[7482,153,7559,149,"profile"],[7482,160,7559,156],[7482,161,7559,157,"login"],[7482,166,7559,162],[7482,167,7559,163],[7482,172,7559,168],[7482,180,7559,176],[7482,183,7559,179,"profile"],[7482,190,7559,186],[7482,195,7559,191],[7482,199,7559,195],[7482,203,7559,199,"profile"],[7482,210,7559,206],[7482,215,7559,206,"undefined"],[7482,224,7559,217],[7482,227,7559,217,"undefined"],[7482,236,7559,217],[7482,239,7559,229,"profile"],[7482,246,7559,236],[7482,247,7559,237,"login"],[7482,252,7559,242],[7482,255,7559,245],[7482,259,7559,249],[7482,260,7559,250],[7482,264,7559,254],[7482,268,7559,258],[7483,4,7560,4],[7484,4,7561,4],[7484,11,7561,11,"GithubAdditionalUserInfo"],[7484,35,7561,35],[7485,2,7562,0],[7485,3,7562,1],[7485,4,7562,2,"FederatedAdditionalUserInfoWithUsername"],[7485,43,7562,41],[7485,44,7562,43],[7486,2,7563,0],[7486,6,7563,4,"GoogleAdditionalUserInfo"],[7486,30,7563,28],[7486,33,7563,31],[7486,46,7563,46],[7486,56,7563,56,"_super"],[7486,62,7563,62],[7486,64,7563,64],[7487,4,7564,4,"tslib"],[7487,9,7564,9],[7487,10,7564,10,"__extends"],[7487,19,7564,19],[7487,20,7564,20,"GoogleAdditionalUserInfo"],[7487,44,7564,44],[7487,46,7564,46,"_super"],[7487,52,7564,52],[7487,53,7564,53],[7488,4,7565,4],[7488,13,7565,13,"GoogleAdditionalUserInfo"],[7488,37,7565,37,"GoogleAdditionalUserInfo"],[7488,38,7565,38,"isNewUser"],[7488,47,7565,47],[7488,49,7565,49,"profile"],[7488,56,7565,56],[7488,58,7565,58],[7489,6,7566,8],[7489,13,7566,15,"_super"],[7489,19,7566,21],[7489,20,7566,22,"call"],[7489,24,7566,26],[7489,25,7566,27],[7489,29,7566,31],[7489,31,7566,33,"isNewUser"],[7489,40,7566,42],[7489,42,7566,44],[7489,54,7566,56],[7489,55,7566,57],[7489,80,7566,82,"profile"],[7489,87,7566,89],[7489,88,7566,90],[7489,92,7566,94],[7489,96,7566,98],[7490,4,7567,4],[7491,4,7568,4],[7491,11,7568,11,"GoogleAdditionalUserInfo"],[7491,35,7568,35],[7492,2,7569,0],[7492,3,7569,1],[7492,4,7569,2,"GenericAdditionalUserInfo"],[7492,29,7569,27],[7492,30,7569,29],[7493,2,7570,0],[7493,6,7570,4,"TwitterAdditionalUserInfo"],[7493,31,7570,29],[7493,34,7570,32],[7493,47,7570,47],[7493,57,7570,57,"_super"],[7493,63,7570,63],[7493,65,7570,65],[7494,4,7571,4,"tslib"],[7494,9,7571,9],[7494,10,7571,10,"__extends"],[7494,19,7571,19],[7494,20,7571,20,"TwitterAdditionalUserInfo"],[7494,45,7571,45],[7494,47,7571,47,"_super"],[7494,53,7571,53],[7494,54,7571,54],[7495,4,7572,4],[7495,13,7572,13,"TwitterAdditionalUserInfo"],[7495,38,7572,38,"TwitterAdditionalUserInfo"],[7495,39,7572,39,"isNewUser"],[7495,48,7572,48],[7495,50,7572,50,"profile"],[7495,57,7572,57],[7495,59,7572,59,"screenName"],[7495,69,7572,69],[7495,71,7572,71],[7496,6,7573,8],[7496,13,7573,15,"_super"],[7496,19,7573,21],[7496,20,7573,22,"call"],[7496,24,7573,26],[7496,25,7573,27],[7496,29,7573,31],[7496,31,7573,33,"isNewUser"],[7496,40,7573,42],[7496,42,7573,44],[7496,55,7573,57],[7496,56,7573,58],[7496,82,7573,84,"profile"],[7496,89,7573,91],[7496,91,7573,93,"screenName"],[7496,101,7573,103],[7496,102,7573,104],[7496,106,7573,108],[7496,110,7573,112],[7497,4,7574,4],[7498,4,7575,4],[7498,11,7575,11,"TwitterAdditionalUserInfo"],[7498,36,7575,36],[7499,2,7576,0],[7499,3,7576,1],[7499,4,7576,2,"FederatedAdditionalUserInfoWithUsername"],[7499,43,7576,41],[7499,44,7576,43],[7500,2,7577,0],[7501,0,7578,0],[7502,0,7579,0],[7503,0,7580,0],[7504,0,7581,0],[7505,0,7582,0],[7506,0,7583,0],[7507,2,7584,0],[7507,11,7584,9,"getAdditionalUserInfo"],[7507,32,7584,30,"getAdditionalUserInfo"],[7507,33,7584,31,"userCredential"],[7507,47,7584,45],[7507,49,7584,47],[7508,4,7585,4],[7508,8,7585,8,"_a"],[7508,10,7585,10],[7508,13,7585,13,"userCredential"],[7508,27,7585,27],[7509,6,7585,29,"user"],[7509,10,7585,33],[7509,13,7585,36,"_a"],[7509,15,7585,38],[7509,16,7585,39,"user"],[7509,20,7585,43],[7510,6,7585,45,"_tokenResponse"],[7510,20,7585,59],[7510,23,7585,62,"_a"],[7510,25,7585,64],[7510,26,7585,65,"_tokenResponse"],[7510,40,7585,79],[7511,4,7586,4],[7511,8,7586,8,"user"],[7511,12,7586,12],[7511,13,7586,13,"isAnonymous"],[7511,24,7586,24],[7511,28,7586,28],[7511,29,7586,29,"_tokenResponse"],[7511,43,7586,43],[7511,45,7586,45],[7512,6,7587,8],[7513,6,7588,8],[7514,6,7589,8],[7514,13,7589,15],[7515,8,7590,12,"providerId"],[7515,18,7590,22],[7515,20,7590,24],[7515,24,7590,28],[7516,8,7591,12,"isNewUser"],[7516,17,7591,21],[7516,19,7591,23],[7516,24,7591,28],[7517,8,7592,12,"profile"],[7517,15,7592,19],[7517,17,7592,21],[7518,6,7593,8],[7518,7,7593,9],[7519,4,7594,4],[7520,4,7595,4],[7520,11,7595,11,"_fromIdTokenResponse"],[7520,31,7595,31],[7520,32,7595,32,"_tokenResponse"],[7520,46,7595,46],[7520,47,7595,47],[7521,2,7596,0],[7523,2,7598,0],[7524,0,7599,0],[7525,0,7600,0],[7526,0,7601,0],[7527,0,7602,0],[7528,0,7603,0],[7529,0,7604,0],[7530,0,7605,0],[7531,0,7606,0],[7532,0,7607,0],[7533,0,7608,0],[7534,0,7609,0],[7535,0,7610,0],[7536,0,7611,0],[7537,0,7612,0],[7538,0,7613,0],[7539,2,7614,0],[7540,2,7615,0],[7541,0,7616,0],[7542,0,7617,0],[7543,0,7618,0],[7544,0,7619,0],[7545,0,7620,0],[7546,0,7621,0],[7547,0,7622,0],[7548,0,7623,0],[7549,0,7624,0],[7550,0,7625,0],[7551,0,7626,0],[7552,0,7627,0],[7553,0,7628,0],[7554,0,7629,0],[7555,0,7630,0],[7556,0,7631,0],[7557,0,7632,0],[7558,0,7633,0],[7559,0,7634,0],[7560,0,7635,0],[7561,0,7636,0],[7562,0,7637,0],[7563,0,7638,0],[7564,2,7639,0],[7564,11,7639,9,"setPersistence"],[7564,25,7639,23,"setPersistence"],[7564,26,7639,24,"auth"],[7564,30,7639,28],[7564,32,7639,30,"persistence"],[7564,43,7639,41],[7564,45,7639,43],[7565,4,7640,4],[7565,11,7640,11,"util"],[7565,15,7640,15],[7565,16,7640,16,"getModularInstance"],[7565,34,7640,34],[7565,35,7640,35,"auth"],[7565,39,7640,39],[7565,40,7640,40],[7565,41,7640,41,"setPersistence"],[7565,55,7640,55],[7565,56,7640,56,"persistence"],[7565,67,7640,67],[7565,68,7640,68],[7566,2,7641,0],[7567,2,7642,0],[7568,0,7643,0],[7569,0,7644,0],[7570,0,7645,0],[7571,0,7646,0],[7572,0,7647,0],[7573,0,7648,0],[7574,0,7649,0],[7575,0,7650,0],[7576,0,7651,0],[7577,0,7652,0],[7578,0,7653,0],[7579,0,7654,0],[7580,0,7655,0],[7581,0,7656,0],[7582,0,7657,0],[7583,0,7658,0],[7584,0,7659,0],[7585,0,7660,0],[7586,0,7661,0],[7587,0,7662,0],[7588,0,7663,0],[7589,0,7664,0],[7590,0,7665,0],[7591,0,7666,0],[7592,0,7667,0],[7593,0,7668,0],[7594,2,7669,0],[7594,11,7669,9,"initializeRecaptchaConfig"],[7594,36,7669,34,"initializeRecaptchaConfig"],[7594,37,7669,35,"auth"],[7594,41,7669,39],[7594,43,7669,41],[7595,4,7670,4],[7595,11,7670,11,"_initializeRecaptchaConfig"],[7595,37,7670,37],[7595,38,7670,38,"auth"],[7595,42,7670,42],[7595,43,7670,43],[7596,2,7671,0],[7597,2,7672,0],[7598,0,7673,0],[7599,0,7674,0],[7600,0,7675,0],[7601,0,7676,0],[7602,0,7677,0],[7603,0,7678,0],[7604,0,7679,0],[7605,0,7680,0],[7606,0,7681,0],[7607,0,7682,0],[7608,0,7683,0],[7609,0,7684,0],[7610,0,7685,0],[7611,0,7686,0],[7612,0,7687,0],[7613,0,7688,0],[7614,0,7689,0],[7615,0,7690,0],[7616,0,7691,0],[7617,0,7692,0],[7618,0,7693,0],[7619,0,7694,0],[7620,2,7695,0],[7620,11,7695,9,"validatePassword"],[7620,27,7695,25,"validatePassword"],[7620,28,7695,26,"auth"],[7620,32,7695,30],[7620,34,7695,32,"password"],[7620,42,7695,40],[7620,44,7695,42],[7621,4,7696,4],[7621,11,7696,11,"tslib"],[7621,16,7696,16],[7621,17,7696,17,"__awaiter"],[7621,26,7696,26],[7621,27,7696,27],[7621,31,7696,31],[7621,33,7696,31,"undefined"],[7621,42,7696,31],[7621,44,7696,31,"undefined"],[7621,53,7696,31],[7621,55,7696,49],[7621,67,7696,61],[7622,6,7697,8],[7622,10,7697,12,"authInternal"],[7622,22,7697,24],[7623,6,7698,8],[7623,13,7698,15,"tslib"],[7623,18,7698,20],[7623,19,7698,21,"__generator"],[7623,30,7698,32],[7623,31,7698,33],[7623,35,7698,37],[7623,37,7698,39],[7623,47,7698,49,"_a"],[7623,49,7698,51],[7623,51,7698,53],[7624,8,7699,12,"authInternal"],[7624,20,7699,24],[7624,23,7699,27,"_castAuth"],[7624,32,7699,36],[7624,33,7699,37,"auth"],[7624,37,7699,41],[7624,38,7699,42],[7625,8,7700,12],[7625,15,7700,19],[7625,16,7700,20],[7625,17,7700,21],[7625,18,7700,22],[7625,30,7700,34,"authInternal"],[7625,42,7700,46],[7625,43,7700,47,"validatePassword"],[7625,59,7700,63],[7625,60,7700,64,"password"],[7625,68,7700,72],[7625,69,7700,73],[7625,70,7700,74],[7626,6,7701,8],[7626,7,7701,9],[7626,8,7701,10],[7627,4,7702,4],[7627,5,7702,5],[7627,6,7702,6],[7628,2,7703,0],[7629,2,7704,0],[7630,0,7705,0],[7631,0,7706,0],[7632,0,7707,0],[7633,0,7708,0],[7634,0,7709,0],[7635,0,7710,0],[7636,0,7711,0],[7637,0,7712,0],[7638,0,7713,0],[7639,0,7714,0],[7640,0,7715,0],[7641,0,7716,0],[7642,0,7717,0],[7643,0,7718,0],[7644,0,7719,0],[7645,2,7720,0],[7645,11,7720,9,"onIdTokenChanged"],[7645,27,7720,25,"onIdTokenChanged"],[7645,28,7720,26,"auth"],[7645,32,7720,30],[7645,34,7720,32,"nextOrObserver"],[7645,48,7720,46],[7645,50,7720,48,"error"],[7645,55,7720,53],[7645,57,7720,55,"completed"],[7645,66,7720,64],[7645,68,7720,66],[7646,4,7721,4],[7646,11,7721,11,"util"],[7646,15,7721,15],[7646,16,7721,16,"getModularInstance"],[7646,34,7721,34],[7646,35,7721,35,"auth"],[7646,39,7721,39],[7646,40,7721,40],[7646,41,7721,41,"onIdTokenChanged"],[7646,57,7721,57],[7646,58,7721,58,"nextOrObserver"],[7646,72,7721,72],[7646,74,7721,74,"error"],[7646,79,7721,79],[7646,81,7721,81,"completed"],[7646,90,7721,90],[7646,91,7721,91],[7647,2,7722,0],[7648,2,7723,0],[7649,0,7724,0],[7650,0,7725,0],[7651,0,7726,0],[7652,0,7727,0],[7653,0,7728,0],[7654,0,7729,0],[7655,0,7730,0],[7656,0,7731,0],[7657,0,7732,0],[7658,2,7733,0],[7658,11,7733,9,"beforeAuthStateChanged"],[7658,33,7733,31,"beforeAuthStateChanged"],[7658,34,7733,32,"auth"],[7658,38,7733,36],[7658,40,7733,38,"callback"],[7658,48,7733,46],[7658,50,7733,48,"onAbort"],[7658,57,7733,55],[7658,59,7733,57],[7659,4,7734,4],[7659,11,7734,11,"util"],[7659,15,7734,15],[7659,16,7734,16,"getModularInstance"],[7659,34,7734,34],[7659,35,7734,35,"auth"],[7659,39,7734,39],[7659,40,7734,40],[7659,41,7734,41,"beforeAuthStateChanged"],[7659,63,7734,63],[7659,64,7734,64,"callback"],[7659,72,7734,72],[7659,74,7734,74,"onAbort"],[7659,81,7734,81],[7659,82,7734,82],[7660,2,7735,0],[7661,2,7736,0],[7662,0,7737,0],[7663,0,7738,0],[7664,0,7739,0],[7665,0,7740,0],[7666,0,7741,0],[7667,0,7742,0],[7668,0,7743,0],[7669,0,7744,0],[7670,0,7745,0],[7671,0,7746,0],[7672,0,7747,0],[7673,0,7748,0],[7674,0,7749,0],[7675,0,7750,0],[7676,2,7751,0],[7676,11,7751,9,"onAuthStateChanged"],[7676,29,7751,27,"onAuthStateChanged"],[7676,30,7751,28,"auth"],[7676,34,7751,32],[7676,36,7751,34,"nextOrObserver"],[7676,50,7751,48],[7676,52,7751,50,"error"],[7676,57,7751,55],[7676,59,7751,57,"completed"],[7676,68,7751,66],[7676,70,7751,68],[7677,4,7752,4],[7677,11,7752,11,"util"],[7677,15,7752,15],[7677,16,7752,16,"getModularInstance"],[7677,34,7752,34],[7677,35,7752,35,"auth"],[7677,39,7752,39],[7677,40,7752,40],[7677,41,7752,41,"onAuthStateChanged"],[7677,59,7752,59],[7677,60,7752,60,"nextOrObserver"],[7677,74,7752,74],[7677,76,7752,76,"error"],[7677,81,7752,81],[7677,83,7752,83,"completed"],[7677,92,7752,92],[7677,93,7752,93],[7678,2,7753,0],[7679,2,7754,0],[7680,0,7755,0],[7681,0,7756,0],[7682,0,7757,0],[7683,0,7758,0],[7684,0,7759,0],[7685,0,7760,0],[7686,2,7761,0],[7686,11,7761,9,"useDeviceLanguage"],[7686,28,7761,26,"useDeviceLanguage"],[7686,29,7761,27,"auth"],[7686,33,7761,31],[7686,35,7761,33],[7687,4,7762,4,"util"],[7687,8,7762,8],[7687,9,7762,9,"getModularInstance"],[7687,27,7762,27],[7687,28,7762,28,"auth"],[7687,32,7762,32],[7687,33,7762,33],[7687,34,7762,34,"useDeviceLanguage"],[7687,51,7762,51],[7687,52,7762,52],[7687,53,7762,53],[7688,2,7763,0],[7689,2,7764,0],[7690,0,7765,0],[7691,0,7766,0],[7692,0,7767,0],[7693,0,7768,0],[7694,0,7769,0],[7695,0,7770,0],[7696,0,7771,0],[7697,0,7772,0],[7698,0,7773,0],[7699,0,7774,0],[7700,0,7775,0],[7701,0,7776,0],[7702,0,7777,0],[7703,0,7778,0],[7704,0,7779,0],[7705,0,7780,0],[7706,0,7781,0],[7707,0,7782,0],[7708,0,7783,0],[7709,0,7784,0],[7710,2,7785,0],[7710,11,7785,9,"updateCurrentUser"],[7710,28,7785,26,"updateCurrentUser"],[7710,29,7785,27,"auth"],[7710,33,7785,31],[7710,35,7785,33,"user"],[7710,39,7785,37],[7710,41,7785,39],[7711,4,7786,4],[7711,11,7786,11,"util"],[7711,15,7786,15],[7711,16,7786,16,"getModularInstance"],[7711,34,7786,34],[7711,35,7786,35,"auth"],[7711,39,7786,39],[7711,40,7786,40],[7711,41,7786,41,"updateCurrentUser"],[7711,58,7786,58],[7711,59,7786,59,"user"],[7711,63,7786,63],[7711,64,7786,64],[7712,2,7787,0],[7713,2,7788,0],[7714,0,7789,0],[7715,0,7790,0],[7716,0,7791,0],[7717,0,7792,0],[7718,0,7793,0],[7719,0,7794,0],[7720,0,7795,0],[7721,0,7796,0],[7722,0,7797,0],[7723,0,7798,0],[7724,2,7799,0],[7724,11,7799,9,"signOut"],[7724,18,7799,16,"signOut"],[7724,19,7799,17,"auth"],[7724,23,7799,21],[7724,25,7799,23],[7725,4,7800,4],[7725,11,7800,11,"util"],[7725,15,7800,15],[7725,16,7800,16,"getModularInstance"],[7725,34,7800,34],[7725,35,7800,35,"auth"],[7725,39,7800,39],[7725,40,7800,40],[7725,41,7800,41,"signOut"],[7725,48,7800,48],[7725,49,7800,49],[7725,50,7800,50],[7726,2,7801,0],[7727,2,7802,0],[7728,0,7803,0],[7729,0,7804,0],[7730,0,7805,0],[7731,0,7806,0],[7732,0,7807,0],[7733,0,7808,0],[7734,0,7809,0],[7735,2,7810,0],[7735,11,7810,9,"revokeAccessToken"],[7735,28,7810,26,"revokeAccessToken"],[7735,29,7810,27,"auth"],[7735,33,7810,31],[7735,35,7810,33,"token"],[7735,40,7810,38],[7735,42,7810,40],[7736,4,7811,4],[7736,8,7811,8,"authInternal"],[7736,20,7811,20],[7736,23,7811,23,"_castAuth"],[7736,32,7811,32],[7736,33,7811,33,"auth"],[7736,37,7811,37],[7736,38,7811,38],[7737,4,7812,4],[7737,11,7812,11,"authInternal"],[7737,23,7812,23],[7737,24,7812,24,"revokeAccessToken"],[7737,41,7812,41],[7737,42,7812,42,"token"],[7737,47,7812,47],[7737,48,7812,48],[7738,2,7813,0],[7739,2,7814,0],[7740,0,7815,0],[7741,0,7816,0],[7742,0,7817,0],[7743,0,7818,0],[7744,0,7819,0],[7745,0,7820,0],[7746,0,7821,0],[7747,0,7822,0],[7748,0,7823,0],[7749,0,7824,0],[7750,0,7825,0],[7751,2,7826,0],[7751,11,7826,9,"deleteUser"],[7751,21,7826,19,"deleteUser"],[7751,22,7826,20,"user"],[7751,26,7826,24],[7751,28,7826,26],[7752,4,7827,4],[7752,11,7827,11,"tslib"],[7752,16,7827,16],[7752,17,7827,17,"__awaiter"],[7752,26,7827,26],[7752,27,7827,27],[7752,31,7827,31],[7752,33,7827,31,"undefined"],[7752,42,7827,31],[7752,44,7827,31,"undefined"],[7752,53,7827,31],[7752,55,7827,49],[7752,67,7827,61],[7753,6,7828,8],[7753,13,7828,15,"tslib"],[7753,18,7828,20],[7753,19,7828,21,"__generator"],[7753,30,7828,32],[7753,31,7828,33],[7753,35,7828,37],[7753,37,7828,39],[7753,47,7828,49,"_a"],[7753,49,7828,51],[7753,51,7828,53],[7754,8,7829,12],[7754,15,7829,19],[7754,16,7829,20],[7754,17,7829,21],[7754,18,7829,22],[7754,30,7829,34,"util"],[7754,34,7829,38],[7754,35,7829,39,"getModularInstance"],[7754,53,7829,57],[7754,54,7829,58,"user"],[7754,58,7829,62],[7754,59,7829,63],[7754,60,7829,64,"delete"],[7754,66,7829,70],[7754,67,7829,71],[7754,68,7829,72],[7754,69,7829,73],[7755,6,7830,8],[7755,7,7830,9],[7755,8,7830,10],[7756,4,7831,4],[7756,5,7831,5],[7756,6,7831,6],[7757,2,7832,0],[7759,2,7834,0],[7760,0,7835,0],[7761,0,7836,0],[7762,0,7837,0],[7763,0,7838,0],[7764,0,7839,0],[7765,0,7840,0],[7766,0,7841,0],[7767,0,7842,0],[7768,0,7843,0],[7769,0,7844,0],[7770,0,7845,0],[7771,0,7846,0],[7772,0,7847,0],[7773,0,7848,0],[7774,0,7849,0],[7775,2,7850,0],[7775,6,7850,4,"MultiFactorSessionImpl"],[7775,28,7850,26],[7775,31,7850,29],[7775,44,7850,44],[7775,56,7850,56],[7776,4,7851,4],[7776,13,7851,13,"MultiFactorSessionImpl"],[7776,35,7851,35,"MultiFactorSessionImpl"],[7776,36,7851,36,"type"],[7776,40,7851,40],[7776,42,7851,42,"credential"],[7776,52,7851,52],[7776,54,7851,54,"user"],[7776,58,7851,58],[7776,60,7851,60],[7777,6,7852,8],[7777,10,7852,12],[7777,11,7852,13,"type"],[7777,15,7852,17],[7777,18,7852,20,"type"],[7777,22,7852,24],[7778,6,7853,8],[7778,10,7853,12],[7778,11,7853,13,"credential"],[7778,21,7853,23],[7778,24,7853,26,"credential"],[7778,34,7853,36],[7779,6,7854,8],[7779,10,7854,12],[7779,11,7854,13,"user"],[7779,15,7854,17],[7779,18,7854,20,"user"],[7779,22,7854,24],[7780,4,7855,4],[7781,4,7856,4,"MultiFactorSessionImpl"],[7781,26,7856,26],[7781,27,7856,27,"_fromIdtoken"],[7781,39,7856,39],[7781,42,7856,42],[7781,52,7856,52,"idToken"],[7781,59,7856,59],[7781,61,7856,61,"user"],[7781,65,7856,65],[7781,67,7856,67],[7782,6,7857,8],[7782,13,7857,15],[7782,17,7857,19,"MultiFactorSessionImpl"],[7782,39,7857,41],[7782,40,7857,42],[7782,48,7857,50],[7782,49,7857,51],[7782,86,7857,88,"idToken"],[7782,93,7857,95],[7782,95,7857,97,"user"],[7782,99,7857,101],[7782,100,7857,102],[7783,4,7858,4],[7783,5,7858,5],[7784,4,7859,4,"MultiFactorSessionImpl"],[7784,26,7859,26],[7784,27,7859,27,"_fromMfaPendingCredential"],[7784,52,7859,52],[7784,55,7859,55],[7784,65,7859,65,"mfaPendingCredential"],[7784,85,7859,85],[7784,87,7859,87],[7785,6,7860,8],[7785,13,7860,15],[7785,17,7860,19,"MultiFactorSessionImpl"],[7785,39,7860,41],[7785,40,7860,42],[7785,48,7860,50],[7785,49,7860,51],[7785,87,7860,89,"mfaPendingCredential"],[7785,107,7860,109],[7785,108,7860,110],[7786,4,7861,4],[7786,5,7861,5],[7787,4,7862,4,"MultiFactorSessionImpl"],[7787,26,7862,26],[7787,27,7862,27,"prototype"],[7787,36,7862,36],[7787,37,7862,37,"toJSON"],[7787,43,7862,43],[7787,46,7862,46],[7787,58,7862,58],[7788,6,7863,8],[7788,10,7863,12,"_a"],[7788,12,7863,14],[7789,6,7864,8],[7789,10,7864,12,"key"],[7789,13,7864,15],[7789,16,7864,18],[7789,20,7864,22],[7789,21,7864,23,"type"],[7789,25,7864,27],[7789,30,7864,32],[7789,38,7864,40],[7789,39,7864,41],[7789,77,7865,14],[7789,86,7865,23],[7789,89,7866,14],[7789,108,7866,33],[7790,6,7867,8],[7790,13,7867,15],[7791,8,7868,12,"multiFactorSession"],[7791,26,7868,30],[7791,29,7868,33,"_a"],[7791,31,7868,35],[7791,34,7868,38],[7791,35,7868,39],[7791,36,7868,40],[7791,38,7869,16,"_a"],[7791,40,7869,18],[7791,41,7869,19,"key"],[7791,44,7869,22],[7791,45,7869,23],[7791,48,7869,26],[7791,52,7869,30],[7791,53,7869,31,"credential"],[7791,63,7869,41],[7791,65,7870,16,"_a"],[7791,67,7870,18],[7792,6,7871,8],[7792,7,7871,9],[7793,4,7872,4],[7793,5,7872,5],[7794,4,7873,4,"MultiFactorSessionImpl"],[7794,26,7873,26],[7794,27,7873,27,"fromJSON"],[7794,35,7873,35],[7794,38,7873,38],[7794,48,7873,48,"obj"],[7794,51,7873,51],[7794,53,7873,53],[7795,6,7874,8],[7795,10,7874,12,"_a"],[7795,12,7874,14],[7795,14,7874,16,"_b"],[7795,16,7874,18],[7796,6,7875,8],[7796,10,7875,12,"obj"],[7796,13,7875,15],[7796,18,7875,20],[7796,22,7875,24],[7796,26,7875,28,"obj"],[7796,29,7875,31],[7796,34,7875,31,"undefined"],[7796,43,7875,42],[7796,46,7875,42,"undefined"],[7796,55,7875,42],[7796,58,7875,54,"obj"],[7796,61,7875,57],[7796,62,7875,58,"multiFactorSession"],[7796,80,7875,76],[7796,82,7875,78],[7797,8,7876,12],[7797,12,7876,16],[7797,13,7876,17,"_a"],[7797,15,7876,19],[7797,18,7876,22,"obj"],[7797,21,7876,25],[7797,22,7876,26,"multiFactorSession"],[7797,40,7876,44],[7797,46,7876,50],[7797,50,7876,54],[7797,54,7876,58,"_a"],[7797,56,7876,60],[7797,61,7876,60,"undefined"],[7797,70,7876,71],[7797,73,7876,71,"undefined"],[7797,82,7876,71],[7797,85,7876,83,"_a"],[7797,87,7876,85],[7797,88,7876,86,"pendingCredential"],[7797,105,7876,103],[7797,107,7876,105],[7798,10,7877,16],[7798,17,7877,23,"MultiFactorSessionImpl"],[7798,39,7877,45],[7798,40,7877,46,"_fromMfaPendingCredential"],[7798,65,7877,71],[7798,66,7877,72,"obj"],[7798,69,7877,75],[7798,70,7877,76,"multiFactorSession"],[7798,88,7877,94],[7798,89,7877,95,"pendingCredential"],[7798,106,7877,112],[7798,107,7877,113],[7799,8,7878,12],[7799,9,7878,13],[7799,15,7879,17],[7799,19,7879,21],[7799,20,7879,22,"_b"],[7799,22,7879,24],[7799,25,7879,27,"obj"],[7799,28,7879,30],[7799,29,7879,31,"multiFactorSession"],[7799,47,7879,49],[7799,53,7879,55],[7799,57,7879,59],[7799,61,7879,63,"_b"],[7799,63,7879,65],[7799,68,7879,65,"undefined"],[7799,77,7879,76],[7799,80,7879,76,"undefined"],[7799,89,7879,76],[7799,92,7879,88,"_b"],[7799,94,7879,90],[7799,95,7879,91,"idToken"],[7799,102,7879,98],[7799,104,7879,100],[7800,10,7880,16],[7800,17,7880,23,"MultiFactorSessionImpl"],[7800,39,7880,45],[7800,40,7880,46,"_fromIdtoken"],[7800,52,7880,58],[7800,53,7880,59,"obj"],[7800,56,7880,62],[7800,57,7880,63,"multiFactorSession"],[7800,75,7880,81],[7800,76,7880,82,"idToken"],[7800,83,7880,89],[7800,84,7880,90],[7801,8,7881,12],[7802,6,7882,8],[7803,6,7883,8],[7803,13,7883,15],[7803,17,7883,19],[7804,4,7884,4],[7804,5,7884,5],[7805,4,7885,4],[7805,11,7885,11,"MultiFactorSessionImpl"],[7805,33,7885,33],[7806,2,7886,0],[7806,3,7886,1],[7806,4,7886,2],[7806,5,7886,4],[7808,2,7888,0],[7809,0,7889,0],[7810,0,7890,0],[7811,0,7891,0],[7812,0,7892,0],[7813,0,7893,0],[7814,0,7894,0],[7815,0,7895,0],[7816,0,7896,0],[7817,0,7897,0],[7818,0,7898,0],[7819,0,7899,0],[7820,0,7900,0],[7821,0,7901,0],[7822,0,7902,0],[7823,0,7903,0],[7824,2,7904,0],[7824,6,7904,4,"MultiFactorResolverImpl"],[7824,29,7904,27],[7824,32,7904,30],[7824,45,7904,45],[7824,57,7904,57],[7825,4,7905,4],[7825,13,7905,13,"MultiFactorResolverImpl"],[7825,36,7905,36,"MultiFactorResolverImpl"],[7825,37,7905,37,"session"],[7825,44,7905,44],[7825,46,7905,46,"hints"],[7825,51,7905,51],[7825,53,7905,53,"signInResolver"],[7825,67,7905,67],[7825,69,7905,69],[7826,6,7906,8],[7826,10,7906,12],[7826,11,7906,13,"session"],[7826,18,7906,20],[7826,21,7906,23,"session"],[7826,28,7906,30],[7827,6,7907,8],[7827,10,7907,12],[7827,11,7907,13,"hints"],[7827,16,7907,18],[7827,19,7907,21,"hints"],[7827,24,7907,26],[7828,6,7908,8],[7828,10,7908,12],[7828,11,7908,13,"signInResolver"],[7828,25,7908,27],[7828,28,7908,30,"signInResolver"],[7828,42,7908,44],[7829,4,7909,4],[7830,4,7910,4],[7831,4,7911,4,"MultiFactorResolverImpl"],[7831,27,7911,27],[7831,28,7911,28,"_fromError"],[7831,38,7911,38],[7831,41,7911,41],[7831,51,7911,51,"authExtern"],[7831,61,7911,61],[7831,63,7911,63,"error"],[7831,68,7911,68],[7831,70,7911,70],[7832,6,7912,8],[7832,10,7912,12,"_this"],[7832,15,7912,17],[7832,18,7912,20],[7832,22,7912,24],[7833,6,7913,8],[7833,10,7913,12,"auth"],[7833,14,7913,16],[7833,17,7913,19,"_castAuth"],[7833,26,7913,28],[7833,27,7913,29,"authExtern"],[7833,37,7913,39],[7833,38,7913,40],[7834,6,7914,8],[7834,10,7914,12,"serverResponse"],[7834,24,7914,26],[7834,27,7914,29,"error"],[7834,32,7914,34],[7834,33,7914,35,"customData"],[7834,43,7914,45],[7834,44,7914,46,"_serverResponse"],[7834,59,7914,61],[7835,6,7915,8],[7835,10,7915,12,"hints"],[7835,15,7915,17],[7835,18,7915,20],[7835,19,7915,21,"serverResponse"],[7835,33,7915,35],[7835,34,7915,36,"mfaInfo"],[7835,41,7915,43],[7835,45,7915,47],[7835,47,7915,49],[7835,49,7915,51,"map"],[7835,52,7915,54],[7835,53,7915,55],[7835,63,7915,65,"enrollment"],[7835,73,7915,75],[7835,75,7915,77],[7836,8,7916,12],[7836,15,7916,19,"MultiFactorInfoImpl"],[7836,34,7916,38],[7836,35,7916,39,"_fromServerResponse"],[7836,54,7916,58],[7836,55,7916,59,"auth"],[7836,59,7916,63],[7836,61,7916,65,"enrollment"],[7836,71,7916,75],[7836,72,7916,76],[7837,6,7917,8],[7837,7,7917,9],[7837,8,7917,10],[7838,6,7918,8,"_assert"],[7838,13,7918,15],[7838,14,7918,16,"serverResponse"],[7838,28,7918,30],[7838,29,7918,31,"mfaPendingCredential"],[7838,49,7918,51],[7838,51,7918,53,"auth"],[7838,55,7918,57],[7838,57,7918,59],[7838,73,7918,75],[7838,74,7918,76],[7838,108,7918,110],[7838,109,7918,111],[7839,6,7919,8],[7839,10,7919,12,"session"],[7839,17,7919,19],[7839,20,7919,22,"MultiFactorSessionImpl"],[7839,42,7919,44],[7839,43,7919,45,"_fromMfaPendingCredential"],[7839,68,7919,70],[7839,69,7919,71,"serverResponse"],[7839,83,7919,85],[7839,84,7919,86,"mfaPendingCredential"],[7839,104,7919,106],[7839,105,7919,107],[7840,6,7920,8],[7840,13,7920,15],[7840,17,7920,19,"MultiFactorResolverImpl"],[7840,40,7920,42],[7840,41,7920,43,"session"],[7840,48,7920,50],[7840,50,7920,52,"hints"],[7840,55,7920,57],[7840,57,7920,59],[7840,67,7920,69,"assertion"],[7840,76,7920,78],[7840,78,7920,80],[7841,8,7920,82],[7841,15,7920,89,"tslib"],[7841,20,7920,94],[7841,21,7920,95,"__awaiter"],[7841,30,7920,104],[7841,31,7920,105,"_this"],[7841,36,7920,110],[7841,38,7920,110,"undefined"],[7841,47,7920,110],[7841,49,7920,110,"undefined"],[7841,58,7920,110],[7841,60,7920,128],[7841,72,7920,140],[7842,10,7921,12],[7842,14,7921,16,"mfaResponse"],[7842,25,7921,27],[7842,27,7921,29,"idTokenResponse"],[7842,42,7921,44],[7842,44,7921,46,"_a"],[7842,46,7921,48],[7842,48,7921,50,"userCredential"],[7842,62,7921,64],[7843,10,7922,12],[7843,17,7922,19,"tslib"],[7843,22,7922,24],[7843,23,7922,25,"__generator"],[7843,34,7922,36],[7843,35,7922,37],[7843,39,7922,41],[7843,41,7922,43],[7843,51,7922,53,"_b"],[7843,53,7922,55],[7843,55,7922,57],[7844,12,7923,16],[7844,20,7923,24,"_b"],[7844,22,7923,26],[7844,23,7923,27,"label"],[7844,28,7923,32],[7845,14,7924,20],[7845,19,7924,25],[7845,20,7924,26],[7846,16,7924,28],[7846,23,7924,35],[7846,24,7924,36],[7846,25,7924,37],[7846,26,7924,38],[7846,37,7924,49,"assertion"],[7846,46,7924,58],[7846,47,7924,59,"_process"],[7846,55,7924,67],[7846,56,7924,68,"auth"],[7846,60,7924,72],[7846,62,7924,74,"session"],[7846,69,7924,81],[7846,70,7924,82],[7846,71,7924,83],[7847,14,7925,20],[7847,19,7925,25],[7847,20,7925,26],[7848,16,7926,24,"mfaResponse"],[7848,27,7926,35],[7848,30,7926,38,"_b"],[7848,32,7926,40],[7848,33,7926,41,"sent"],[7848,37,7926,45],[7848,38,7926,46],[7848,39,7926,47],[7849,16,7927,24],[7850,16,7928,24],[7850,23,7928,31,"serverResponse"],[7850,37,7928,45],[7850,38,7928,46,"mfaInfo"],[7850,45,7928,53],[7851,16,7929,24],[7851,23,7929,31,"serverResponse"],[7851,37,7929,45],[7851,38,7929,46,"mfaPendingCredential"],[7851,58,7929,66],[7852,16,7930,24,"idTokenResponse"],[7852,31,7930,39],[7852,34,7930,42,"tslib"],[7852,39,7930,47],[7852,40,7930,48,"__assign"],[7852,48,7930,56],[7852,49,7930,57,"tslib"],[7852,54,7930,62],[7852,55,7930,63,"__assign"],[7852,63,7930,71],[7852,64,7930,72],[7852,65,7930,73],[7852,66,7930,74],[7852,68,7930,76,"serverResponse"],[7852,82,7930,90],[7852,83,7930,91],[7852,85,7930,93],[7853,18,7930,95,"idToken"],[7853,25,7930,102],[7853,27,7930,104,"mfaResponse"],[7853,38,7930,115],[7853,39,7930,116,"idToken"],[7853,46,7930,123],[7854,18,7930,125,"refreshToken"],[7854,30,7930,137],[7854,32,7930,139,"mfaResponse"],[7854,43,7930,150],[7854,44,7930,151,"refreshToken"],[7855,16,7930,164],[7855,17,7930,165],[7855,18,7930,166],[7856,16,7931,24,"_a"],[7856,18,7931,26],[7856,21,7931,29,"error"],[7856,26,7931,34],[7856,27,7931,35,"operationType"],[7856,40,7931,48],[7857,16,7932,24],[7857,24,7932,32,"_a"],[7857,26,7932,34],[7858,18,7933,28],[7858,23,7933,33],[7858,31,7933,41],[7858,32,7933,42],[7859,20,7933,71],[7859,27,7933,78],[7859,28,7933,79],[7859,29,7933,80],[7859,30,7933,81],[7859,41,7933,92],[7859,42,7933,93],[7859,43,7933,94],[7860,18,7934,28],[7860,23,7934,33],[7860,39,7934,49],[7860,40,7934,50],[7861,20,7934,86],[7861,27,7934,93],[7861,28,7934,94],[7861,29,7934,95],[7861,30,7934,96],[7861,41,7934,107],[7861,42,7934,108],[7861,43,7934,109],[7862,16,7935,24],[7863,16,7936,24],[7863,23,7936,31],[7863,24,7936,32],[7863,25,7936,33],[7863,26,7936,34],[7863,37,7936,45],[7863,38,7936,46],[7863,39,7936,47],[7864,14,7937,20],[7864,19,7937,25],[7864,20,7937,26],[7865,16,7937,28],[7865,23,7937,35],[7865,24,7937,36],[7865,25,7937,37],[7865,26,7937,38],[7865,37,7937,49,"UserCredentialImpl"],[7865,55,7937,67],[7865,56,7937,68,"_fromIdTokenResponse"],[7865,76,7937,88],[7865,77,7937,89,"auth"],[7865,81,7937,93],[7865,83,7937,95,"error"],[7865,88,7937,100],[7865,89,7937,101,"operationType"],[7865,102,7937,114],[7865,104,7937,116,"idTokenResponse"],[7865,119,7937,131],[7865,120,7937,132],[7865,121,7937,133],[7866,14,7938,20],[7866,19,7938,25],[7866,20,7938,26],[7867,16,7939,24,"userCredential"],[7867,30,7939,38],[7867,33,7939,41,"_b"],[7867,35,7939,43],[7867,36,7939,44,"sent"],[7867,40,7939,48],[7867,41,7939,49],[7867,42,7939,50],[7868,16,7940,24],[7868,23,7940,31],[7868,24,7940,32],[7868,25,7940,33],[7868,26,7940,34],[7868,37,7940,45,"auth"],[7868,41,7940,49],[7868,42,7940,50,"_updateCurrentUser"],[7868,60,7940,68],[7868,61,7940,69,"userCredential"],[7868,75,7940,83],[7868,76,7940,84,"user"],[7868,80,7940,88],[7868,81,7940,89],[7868,82,7940,90],[7869,14,7941,20],[7869,19,7941,25],[7869,20,7941,26],[7870,16,7942,24,"_b"],[7870,18,7942,26],[7870,19,7942,27,"sent"],[7870,23,7942,31],[7870,24,7942,32],[7870,25,7942,33],[7871,16,7943,24],[7871,23,7943,31],[7871,24,7943,32],[7871,25,7943,33],[7871,26,7943,34],[7871,38,7943,46,"userCredential"],[7871,52,7943,60],[7871,53,7943,61],[7872,14,7944,20],[7872,19,7944,25],[7872,20,7944,26],[7873,16,7945,24,"_assert"],[7873,23,7945,31],[7873,24,7945,32,"error"],[7873,29,7945,37],[7873,30,7945,38,"user"],[7873,34,7945,42],[7873,36,7945,44,"auth"],[7873,40,7945,48],[7873,42,7945,50],[7873,58,7945,66],[7873,59,7945,67],[7873,93,7945,101],[7873,94,7945,102],[7874,16,7946,24],[7874,23,7946,31],[7874,24,7946,32],[7874,25,7946,33],[7874,26,7946,34],[7874,38,7946,46,"UserCredentialImpl"],[7874,56,7946,64],[7874,57,7946,65,"_forOperation"],[7874,70,7946,78],[7874,71,7946,79,"error"],[7874,76,7946,84],[7874,77,7946,85,"user"],[7874,81,7946,89],[7874,83,7946,91,"error"],[7874,88,7946,96],[7874,89,7946,97,"operationType"],[7874,102,7946,110],[7874,104,7946,112,"idTokenResponse"],[7874,119,7946,127],[7874,120,7946,128],[7874,121,7946,129],[7875,14,7947,20],[7875,19,7947,25],[7875,20,7947,26],[7876,16,7948,24,"_fail"],[7876,21,7948,29],[7876,22,7948,30,"auth"],[7876,26,7948,34],[7876,28,7948,36],[7876,44,7948,52],[7876,45,7948,53],[7876,79,7948,87],[7876,80,7948,88],[7877,16,7949,24,"_b"],[7877,18,7949,26],[7877,19,7949,27,"label"],[7877,24,7949,32],[7877,27,7949,35],[7877,28,7949,36],[7878,14,7950,20],[7878,19,7950,25],[7878,20,7950,26],[7879,16,7950,28],[7879,23,7950,35],[7879,24,7950,36],[7879,25,7950,37],[7879,26,7950,38],[7879,37,7950,49],[7880,12,7951,16],[7881,10,7952,12],[7881,11,7952,13],[7881,12,7952,14],[7882,8,7953,8],[7882,9,7953,9],[7882,10,7953,10],[7883,6,7953,12],[7883,7,7953,13],[7883,8,7953,14],[7884,4,7954,4],[7884,5,7954,5],[7885,4,7955,4,"MultiFactorResolverImpl"],[7885,27,7955,27],[7885,28,7955,28,"prototype"],[7885,37,7955,37],[7885,38,7955,38,"resolveSignIn"],[7885,51,7955,51],[7885,54,7955,54],[7885,64,7955,64,"assertionExtern"],[7885,79,7955,79],[7885,81,7955,81],[7886,6,7956,8],[7886,13,7956,15,"tslib"],[7886,18,7956,20],[7886,19,7956,21,"__awaiter"],[7886,28,7956,30],[7886,29,7956,31],[7886,33,7956,35],[7886,35,7956,35,"undefined"],[7886,44,7956,35],[7886,46,7956,35,"undefined"],[7886,55,7956,35],[7886,57,7956,53],[7886,69,7956,65],[7887,8,7957,12],[7887,12,7957,16,"assertion"],[7887,21,7957,25],[7888,8,7958,12],[7888,15,7958,19,"tslib"],[7888,20,7958,24],[7888,21,7958,25,"__generator"],[7888,32,7958,36],[7888,33,7958,37],[7888,37,7958,41],[7888,39,7958,43],[7888,49,7958,53,"_a"],[7888,51,7958,55],[7888,53,7958,57],[7889,10,7959,16,"assertion"],[7889,19,7959,25],[7889,22,7959,28,"assertionExtern"],[7889,37,7959,43],[7890,10,7960,16],[7890,17,7960,23],[7890,18,7960,24],[7890,19,7960,25],[7890,20,7960,26],[7890,32,7960,38],[7890,36,7960,42],[7890,37,7960,43,"signInResolver"],[7890,51,7960,57],[7890,52,7960,58,"assertion"],[7890,61,7960,67],[7890,62,7960,68],[7890,63,7960,69],[7891,8,7961,12],[7891,9,7961,13],[7891,10,7961,14],[7892,6,7962,8],[7892,7,7962,9],[7892,8,7962,10],[7893,4,7963,4],[7893,5,7963,5],[7894,4,7964,4],[7894,11,7964,11,"MultiFactorResolverImpl"],[7894,34,7964,34],[7895,2,7965,0],[7895,3,7965,1],[7895,4,7965,2],[7895,5,7965,4],[7896,2,7966,0],[7897,0,7967,0],[7898,0,7968,0],[7899,0,7969,0],[7900,0,7970,0],[7901,0,7971,0],[7902,0,7972,0],[7903,0,7973,0],[7904,0,7974,0],[7905,0,7975,0],[7906,2,7976,0],[7906,11,7976,9,"getMultiFactorResolver"],[7906,33,7976,31,"getMultiFactorResolver"],[7906,34,7976,32,"auth"],[7906,38,7976,36],[7906,40,7976,38,"error"],[7906,45,7976,43],[7906,47,7976,45],[7907,4,7977,4],[7907,8,7977,8,"_a"],[7907,10,7977,10],[7908,4,7978,4],[7908,8,7978,8,"authModular"],[7908,19,7978,19],[7908,22,7978,22,"util"],[7908,26,7978,26],[7908,27,7978,27,"getModularInstance"],[7908,45,7978,45],[7908,46,7978,46,"auth"],[7908,50,7978,50],[7908,51,7978,51],[7909,4,7979,4],[7909,8,7979,8,"errorInternal"],[7909,21,7979,21],[7909,24,7979,24,"error"],[7909,29,7979,29],[7910,4,7980,4,"_assert"],[7910,11,7980,11],[7910,12,7980,12,"error"],[7910,17,7980,17],[7910,18,7980,18,"customData"],[7910,28,7980,28],[7910,29,7980,29,"operationType"],[7910,42,7980,42],[7910,44,7980,44,"authModular"],[7910,55,7980,55],[7910,57,7980,57],[7910,73,7980,73],[7910,74,7980,74],[7910,108,7980,108],[7910,109,7980,109],[7911,4,7981,4,"_assert"],[7911,11,7981,11],[7911,12,7981,12],[7911,13,7981,13,"_a"],[7911,15,7981,15],[7911,18,7981,18,"errorInternal"],[7911,31,7981,31],[7911,32,7981,32,"customData"],[7911,42,7981,42],[7911,43,7981,43,"_serverResponse"],[7911,58,7981,58],[7911,64,7981,64],[7911,68,7981,68],[7911,72,7981,72,"_a"],[7911,74,7981,74],[7911,79,7981,74,"undefined"],[7911,88,7981,85],[7911,91,7981,85,"undefined"],[7911,100,7981,85],[7911,103,7981,97,"_a"],[7911,105,7981,99],[7911,106,7981,100,"mfaPendingCredential"],[7911,126,7981,120],[7911,128,7981,122,"authModular"],[7911,139,7981,133],[7911,141,7981,135],[7911,157,7981,151],[7911,158,7981,152],[7911,192,7981,186],[7911,193,7981,187],[7912,4,7982,4],[7912,11,7982,11,"MultiFactorResolverImpl"],[7912,34,7982,34],[7912,35,7982,35,"_fromError"],[7912,45,7982,45],[7912,46,7982,46,"authModular"],[7912,57,7982,57],[7912,59,7982,59,"errorInternal"],[7912,72,7982,72],[7912,73,7982,73],[7913,2,7983,0],[7915,2,7985,0],[7916,0,7986,0],[7917,0,7987,0],[7918,0,7988,0],[7919,0,7989,0],[7920,0,7990,0],[7921,0,7991,0],[7922,0,7992,0],[7923,0,7993,0],[7924,0,7994,0],[7925,0,7995,0],[7926,0,7996,0],[7927,0,7997,0],[7928,0,7998,0],[7929,0,7999,0],[7930,0,8000,0],[7931,2,8001,0],[7931,11,8001,9,"startEnrollPhoneMfa"],[7931,30,8001,28,"startEnrollPhoneMfa"],[7931,31,8001,29,"auth"],[7931,35,8001,33],[7931,37,8001,35,"request"],[7931,44,8001,42],[7931,46,8001,44],[7932,4,8002,4],[7932,11,8002,11,"_performApiRequest"],[7932,29,8002,29],[7932,30,8002,30,"auth"],[7932,34,8002,34],[7932,36,8002,36],[7932,42,8002,42],[7932,43,8002,43],[7932,66,8002,66],[7932,100,8002,100],[7932,101,8002,101],[7932,138,8002,138,"_addTidIfNecessary"],[7932,156,8002,156],[7932,157,8002,157,"auth"],[7932,161,8002,161],[7932,163,8002,163,"request"],[7932,170,8002,170],[7932,171,8002,171],[7932,172,8002,172],[7933,2,8003,0],[7934,2,8004,0],[7934,11,8004,9,"finalizeEnrollPhoneMfa"],[7934,33,8004,31,"finalizeEnrollPhoneMfa"],[7934,34,8004,32,"auth"],[7934,38,8004,36],[7934,40,8004,38,"request"],[7934,47,8004,45],[7934,49,8004,47],[7935,4,8005,4],[7935,11,8005,11,"_performApiRequest"],[7935,29,8005,29],[7935,30,8005,30,"auth"],[7935,34,8005,34],[7935,36,8005,36],[7935,42,8005,42],[7935,43,8005,43],[7935,66,8005,66],[7935,103,8005,103],[7935,104,8005,104],[7935,144,8005,144,"_addTidIfNecessary"],[7935,162,8005,162],[7935,163,8005,163,"auth"],[7935,167,8005,167],[7935,169,8005,169,"request"],[7935,176,8005,176],[7935,177,8005,177],[7935,178,8005,178],[7936,2,8006,0],[7937,2,8007,0],[7937,11,8007,9,"startEnrollTotpMfa"],[7937,29,8007,27,"startEnrollTotpMfa"],[7937,30,8007,28,"auth"],[7937,34,8007,32],[7937,36,8007,34,"request"],[7937,43,8007,41],[7937,45,8007,43],[7938,4,8008,4],[7938,11,8008,11,"_performApiRequest"],[7938,29,8008,29],[7938,30,8008,30,"auth"],[7938,34,8008,34],[7938,36,8008,36],[7938,42,8008,42],[7938,43,8008,43],[7938,66,8008,66],[7938,100,8008,100],[7938,101,8008,101],[7938,138,8008,138,"_addTidIfNecessary"],[7938,156,8008,156],[7938,157,8008,157,"auth"],[7938,161,8008,161],[7938,163,8008,163,"request"],[7938,170,8008,170],[7938,171,8008,171],[7938,172,8008,172],[7939,2,8009,0],[7940,2,8010,0],[7940,11,8010,9,"finalizeEnrollTotpMfa"],[7940,32,8010,30,"finalizeEnrollTotpMfa"],[7940,33,8010,31,"auth"],[7940,37,8010,35],[7940,39,8010,37,"request"],[7940,46,8010,44],[7940,48,8010,46],[7941,4,8011,4],[7941,11,8011,11,"_performApiRequest"],[7941,29,8011,29],[7941,30,8011,30,"auth"],[7941,34,8011,34],[7941,36,8011,36],[7941,42,8011,42],[7941,43,8011,43],[7941,66,8011,66],[7941,103,8011,103],[7941,104,8011,104],[7941,144,8011,144,"_addTidIfNecessary"],[7941,162,8011,162],[7941,163,8011,163,"auth"],[7941,167,8011,167],[7941,169,8011,169,"request"],[7941,176,8011,176],[7941,177,8011,177],[7941,178,8011,178],[7942,2,8012,0],[7943,2,8013,0],[7943,11,8013,9,"withdrawMfa"],[7943,22,8013,20,"withdrawMfa"],[7943,23,8013,21,"auth"],[7943,27,8013,25],[7943,29,8013,27,"request"],[7943,36,8013,34],[7943,38,8013,36],[7944,4,8014,4],[7944,11,8014,11,"_performApiRequest"],[7944,29,8014,29],[7944,30,8014,30,"auth"],[7944,34,8014,34],[7944,36,8014,36],[7944,42,8014,42],[7944,43,8014,43],[7944,66,8014,66],[7944,103,8014,103],[7944,104,8014,104],[7944,133,8014,133,"_addTidIfNecessary"],[7944,151,8014,151],[7944,152,8014,152,"auth"],[7944,156,8014,156],[7944,158,8014,158,"request"],[7944,165,8014,165],[7944,166,8014,166],[7944,167,8014,167],[7945,2,8015,0],[7946,2,8017,0],[7946,6,8017,4,"MultiFactorUserImpl"],[7946,25,8017,23],[7946,28,8017,26],[7946,41,8017,41],[7946,53,8017,53],[7947,4,8018,4],[7947,13,8018,13,"MultiFactorUserImpl"],[7947,32,8018,32,"MultiFactorUserImpl"],[7947,33,8018,33,"user"],[7947,37,8018,37],[7947,39,8018,39],[7948,6,8019,8],[7948,10,8019,12,"_this"],[7948,15,8019,17],[7948,18,8019,20],[7948,22,8019,24],[7949,6,8020,8],[7949,10,8020,12],[7949,11,8020,13,"user"],[7949,15,8020,17],[7949,18,8020,20,"user"],[7949,22,8020,24],[7950,6,8021,8],[7950,10,8021,12],[7950,11,8021,13,"enrolledFactors"],[7950,26,8021,28],[7950,29,8021,31],[7950,31,8021,33],[7951,6,8022,8,"user"],[7951,10,8022,12],[7951,11,8022,13,"_onReload"],[7951,20,8022,22],[7951,21,8022,23],[7951,31,8022,33,"userInfo"],[7951,39,8022,41],[7951,41,8022,43],[7952,8,8023,12],[7952,12,8023,16,"userInfo"],[7952,20,8023,24],[7952,21,8023,25,"mfaInfo"],[7952,28,8023,32],[7952,30,8023,34],[7953,10,8024,16,"_this"],[7953,15,8024,21],[7953,16,8024,22,"enrolledFactors"],[7953,31,8024,37],[7953,34,8024,40,"userInfo"],[7953,42,8024,48],[7953,43,8024,49,"mfaInfo"],[7953,50,8024,56],[7953,51,8024,57,"map"],[7953,54,8024,60],[7953,55,8024,61],[7953,65,8024,71,"enrollment"],[7953,75,8024,81],[7953,77,8024,83],[7954,12,8025,20],[7954,19,8025,27,"MultiFactorInfoImpl"],[7954,38,8025,46],[7954,39,8025,47,"_fromServerResponse"],[7954,58,8025,66],[7954,59,8025,67,"user"],[7954,63,8025,71],[7954,64,8025,72,"auth"],[7954,68,8025,76],[7954,70,8025,78,"enrollment"],[7954,80,8025,88],[7954,81,8025,89],[7955,10,8026,16],[7955,11,8026,17],[7955,12,8026,18],[7956,8,8027,12],[7957,6,8028,8],[7957,7,8028,9],[7957,8,8028,10],[7958,4,8029,4],[7959,4,8030,4,"MultiFactorUserImpl"],[7959,23,8030,23],[7959,24,8030,24,"_fromUser"],[7959,33,8030,33],[7959,36,8030,36],[7959,46,8030,46,"user"],[7959,50,8030,50],[7959,52,8030,52],[7960,6,8031,8],[7960,13,8031,15],[7960,17,8031,19,"MultiFactorUserImpl"],[7960,36,8031,38],[7960,37,8031,39,"user"],[7960,41,8031,43],[7960,42,8031,44],[7961,4,8032,4],[7961,5,8032,5],[7962,4,8033,4,"MultiFactorUserImpl"],[7962,23,8033,23],[7962,24,8033,24,"prototype"],[7962,33,8033,33],[7962,34,8033,34,"getSession"],[7962,44,8033,44],[7962,47,8033,47],[7962,59,8033,59],[7963,6,8034,8],[7963,13,8034,15,"tslib"],[7963,18,8034,20],[7963,19,8034,21,"__awaiter"],[7963,28,8034,30],[7963,29,8034,31],[7963,33,8034,35],[7963,35,8034,35,"undefined"],[7963,44,8034,35],[7963,46,8034,35,"undefined"],[7963,55,8034,35],[7963,57,8034,53],[7963,69,8034,65],[7964,8,8035,12],[7964,12,8035,16,"_a"],[7964,14,8035,18],[7964,16,8035,20,"_b"],[7964,18,8035,22],[7965,8,8036,12],[7965,15,8036,19,"tslib"],[7965,20,8036,24],[7965,21,8036,25,"__generator"],[7965,32,8036,36],[7965,33,8036,37],[7965,37,8036,41],[7965,39,8036,43],[7965,49,8036,53,"_c"],[7965,51,8036,55],[7965,53,8036,57],[7966,10,8037,16],[7966,18,8037,24,"_c"],[7966,20,8037,26],[7966,21,8037,27,"label"],[7966,26,8037,32],[7967,12,8038,20],[7967,17,8038,25],[7967,18,8038,26],[7968,14,8039,24,"_b"],[7968,16,8039,26],[7968,19,8039,29],[7968,20,8039,30,"_a"],[7968,22,8039,32],[7968,25,8039,35,"MultiFactorSessionImpl"],[7968,47,8039,57],[7968,49,8039,59,"_fromIdtoken"],[7968,61,8039,71],[7969,14,8040,24],[7969,21,8040,31],[7969,22,8040,32],[7969,23,8040,33],[7969,24,8040,34],[7969,35,8040,45],[7969,39,8040,49],[7969,40,8040,50,"user"],[7969,44,8040,54],[7969,45,8040,55,"getIdToken"],[7969,55,8040,65],[7969,56,8040,66],[7969,57,8040,67],[7969,58,8040,68],[7970,12,8041,20],[7970,17,8041,25],[7970,18,8041,26],[7971,14,8041,28],[7971,21,8041,35],[7971,22,8041,36],[7971,23,8041,37],[7971,24,8041,38],[7971,36,8041,50,"_b"],[7971,38,8041,52],[7971,39,8041,53,"apply"],[7971,44,8041,58],[7971,45,8041,59,"_a"],[7971,47,8041,61],[7971,49,8041,63],[7971,50,8041,64,"_c"],[7971,52,8041,66],[7971,53,8041,67,"sent"],[7971,57,8041,71],[7971,58,8041,72],[7971,59,8041,73],[7971,61,8041,75],[7971,65,8041,79],[7971,66,8041,80,"user"],[7971,70,8041,84],[7971,71,8041,85],[7971,72,8041,86],[7971,73,8041,87],[7972,10,8042,16],[7973,8,8043,12],[7973,9,8043,13],[7973,10,8043,14],[7974,6,8044,8],[7974,7,8044,9],[7974,8,8044,10],[7975,4,8045,4],[7975,5,8045,5],[7976,4,8046,4,"MultiFactorUserImpl"],[7976,23,8046,23],[7976,24,8046,24,"prototype"],[7976,33,8046,33],[7976,34,8046,34,"enroll"],[7976,40,8046,40],[7976,43,8046,43],[7976,53,8046,53,"assertionExtern"],[7976,68,8046,68],[7976,70,8046,70,"displayName"],[7976,81,8046,81],[7976,83,8046,83],[7977,6,8047,8],[7977,13,8047,15,"tslib"],[7977,18,8047,20],[7977,19,8047,21,"__awaiter"],[7977,28,8047,30],[7977,29,8047,31],[7977,33,8047,35],[7977,35,8047,35,"undefined"],[7977,44,8047,35],[7977,46,8047,35,"undefined"],[7977,55,8047,35],[7977,57,8047,53],[7977,69,8047,65],[7978,8,8048,12],[7978,12,8048,16,"assertion"],[7978,21,8048,25],[7978,23,8048,27,"session"],[7978,30,8048,34],[7978,32,8048,36,"finalizeMfaResponse"],[7978,51,8048,55],[7979,8,8049,12],[7979,15,8049,19,"tslib"],[7979,20,8049,24],[7979,21,8049,25,"__generator"],[7979,32,8049,36],[7979,33,8049,37],[7979,37,8049,41],[7979,39,8049,43],[7979,49,8049,53,"_a"],[7979,51,8049,55],[7979,53,8049,57],[7980,10,8050,16],[7980,18,8050,24,"_a"],[7980,20,8050,26],[7980,21,8050,27,"label"],[7980,26,8050,32],[7981,12,8051,20],[7981,17,8051,25],[7981,18,8051,26],[7982,14,8052,24,"assertion"],[7982,23,8052,33],[7982,26,8052,36,"assertionExtern"],[7982,41,8052,51],[7983,14,8053,24],[7983,21,8053,31],[7983,22,8053,32],[7983,23,8053,33],[7983,24,8053,34],[7983,35,8053,45],[7983,39,8053,49],[7983,40,8053,50,"getSession"],[7983,50,8053,60],[7983,51,8053,61],[7983,52,8053,62],[7983,53,8053,63],[7984,12,8054,20],[7984,17,8054,25],[7984,18,8054,26],[7985,14,8055,24,"session"],[7985,21,8055,31],[7985,24,8055,35,"_a"],[7985,26,8055,37],[7985,27,8055,38,"sent"],[7985,31,8055,42],[7985,32,8055,43],[7985,33,8055,45],[7986,14,8056,24],[7986,21,8056,31],[7986,22,8056,32],[7986,23,8056,33],[7986,24,8056,34],[7986,35,8056,45,"_logoutIfInvalidated"],[7986,55,8056,65],[7986,56,8056,66],[7986,60,8056,70],[7986,61,8056,71,"user"],[7986,65,8056,75],[7986,67,8056,77,"assertion"],[7986,76,8056,86],[7986,77,8056,87,"_process"],[7986,85,8056,95],[7986,86,8056,96],[7986,90,8056,100],[7986,91,8056,101,"user"],[7986,95,8056,105],[7986,96,8056,106,"auth"],[7986,100,8056,110],[7986,102,8056,112,"session"],[7986,109,8056,119],[7986,111,8056,121,"displayName"],[7986,122,8056,132],[7986,123,8056,133],[7986,124,8056,134],[7986,125,8056,135],[7987,12,8057,20],[7987,17,8057,25],[7987,18,8057,26],[7988,14,8058,24,"finalizeMfaResponse"],[7988,33,8058,43],[7988,36,8058,46,"_a"],[7988,38,8058,48],[7988,39,8058,49,"sent"],[7988,43,8058,53],[7988,44,8058,54],[7988,45,8058,55],[7989,14,8059,24],[7990,14,8060,24],[7991,14,8061,24],[7991,21,8061,31],[7991,22,8061,32],[7991,23,8061,33],[7991,24,8061,34],[7991,35,8061,45],[7991,39,8061,49],[7991,40,8061,50,"user"],[7991,44,8061,54],[7991,45,8061,55,"_updateTokensIfNecessary"],[7991,69,8061,79],[7991,70,8061,80,"finalizeMfaResponse"],[7991,89,8061,99],[7991,90,8061,100],[7991,91,8061,101],[7992,12,8062,20],[7992,17,8062,25],[7992,18,8062,26],[7993,14,8063,24],[7994,14,8064,24],[7995,14,8065,24,"_a"],[7995,16,8065,26],[7995,17,8065,27,"sent"],[7995,21,8065,31],[7995,22,8065,32],[7995,23,8065,33],[7996,14,8066,24],[7997,14,8067,24],[7998,14,8068,24],[7999,14,8069,24],[7999,21,8069,31],[7999,22,8069,32],[7999,23,8069,33],[7999,24,8069,34],[7999,36,8069,46],[7999,40,8069,50],[7999,41,8069,51,"user"],[7999,45,8069,55],[7999,46,8069,56,"reload"],[7999,52,8069,62],[7999,53,8069,63],[7999,54,8069,64],[7999,55,8069,65],[8000,10,8070,16],[8001,8,8071,12],[8001,9,8071,13],[8001,10,8071,14],[8002,6,8072,8],[8002,7,8072,9],[8002,8,8072,10],[8003,4,8073,4],[8003,5,8073,5],[8004,4,8074,4,"MultiFactorUserImpl"],[8004,23,8074,23],[8004,24,8074,24,"prototype"],[8004,33,8074,33],[8004,34,8074,34,"unenroll"],[8004,42,8074,42],[8004,45,8074,45],[8004,55,8074,55,"infoOrUid"],[8004,64,8074,64],[8004,66,8074,66],[8005,6,8075,8],[8005,13,8075,15,"tslib"],[8005,18,8075,20],[8005,19,8075,21,"__awaiter"],[8005,28,8075,30],[8005,29,8075,31],[8005,33,8075,35],[8005,35,8075,35,"undefined"],[8005,44,8075,35],[8005,46,8075,35,"undefined"],[8005,55,8075,35],[8005,57,8075,53],[8005,69,8075,65],[8006,8,8076,12],[8006,12,8076,16,"mfaEnrollmentId"],[8006,27,8076,31],[8006,29,8076,33,"idToken"],[8006,36,8076,40],[8006,38,8076,42,"idTokenResponse"],[8006,53,8076,57],[8006,55,8076,59,"e_1"],[8006,58,8076,62],[8007,8,8077,12],[8007,15,8077,19,"tslib"],[8007,20,8077,24],[8007,21,8077,25,"__generator"],[8007,32,8077,36],[8007,33,8077,37],[8007,37,8077,41],[8007,39,8077,43],[8007,49,8077,53,"_a"],[8007,51,8077,55],[8007,53,8077,57],[8008,10,8078,16],[8008,18,8078,24,"_a"],[8008,20,8078,26],[8008,21,8078,27,"label"],[8008,26,8078,32],[8009,12,8079,20],[8009,17,8079,25],[8009,18,8079,26],[8010,14,8080,24,"mfaEnrollmentId"],[8010,29,8080,39],[8010,32,8080,42],[8010,39,8080,49,"infoOrUid"],[8010,48,8080,58],[8010,53,8080,63],[8010,61,8080,71],[8010,64,8080,74,"infoOrUid"],[8010,73,8080,83],[8010,76,8080,86,"infoOrUid"],[8010,85,8080,95],[8010,86,8080,96,"uid"],[8010,89,8080,99],[8011,14,8081,24],[8011,21,8081,31],[8011,22,8081,32],[8011,23,8081,33],[8011,24,8081,34],[8011,35,8081,45],[8011,39,8081,49],[8011,40,8081,50,"user"],[8011,44,8081,54],[8011,45,8081,55,"getIdToken"],[8011,55,8081,65],[8011,56,8081,66],[8011,57,8081,67],[8011,58,8081,68],[8012,12,8082,20],[8012,17,8082,25],[8012,18,8082,26],[8013,14,8083,24,"idToken"],[8013,21,8083,31],[8013,24,8083,34,"_a"],[8013,26,8083,36],[8013,27,8083,37,"sent"],[8013,31,8083,41],[8013,32,8083,42],[8013,33,8083,43],[8014,14,8084,24,"_a"],[8014,16,8084,26],[8014,17,8084,27,"label"],[8014,22,8084,32],[8014,25,8084,35],[8014,26,8084,36],[8015,12,8085,20],[8015,17,8085,25],[8015,18,8085,26],[8016,14,8086,24,"_a"],[8016,16,8086,26],[8016,17,8086,27,"trys"],[8016,21,8086,31],[8016,22,8086,32,"push"],[8016,26,8086,36],[8016,27,8086,37],[8016,28,8086,38],[8016,29,8086,39],[8016,31,8086,41],[8016,32,8086,42],[8016,35,8086,46],[8016,36,8086,47],[8016,37,8086,48],[8016,38,8086,49],[8017,14,8087,24],[8017,21,8087,31],[8017,22,8087,32],[8017,23,8087,33],[8017,24,8087,34],[8017,35,8087,45,"_logoutIfInvalidated"],[8017,55,8087,65],[8017,56,8087,66],[8017,60,8087,70],[8017,61,8087,71,"user"],[8017,65,8087,75],[8017,67,8087,77,"withdrawMfa"],[8017,78,8087,88],[8017,79,8087,89],[8017,83,8087,93],[8017,84,8087,94,"user"],[8017,88,8087,98],[8017,89,8087,99,"auth"],[8017,93,8087,103],[8017,95,8087,105],[8018,16,8088,32,"idToken"],[8018,23,8088,39],[8018,25,8088,41,"idToken"],[8018,32,8088,48],[8019,16,8089,32,"mfaEnrollmentId"],[8019,31,8089,47],[8019,33,8089,49,"mfaEnrollmentId"],[8020,14,8090,28],[8020,15,8090,29],[8020,16,8090,30],[8020,17,8090,31],[8020,18,8090,32],[8021,12,8091,20],[8021,17,8091,25],[8021,18,8091,26],[8022,14,8092,24,"idTokenResponse"],[8022,29,8092,39],[8022,32,8092,42,"_a"],[8022,34,8092,44],[8022,35,8092,45,"sent"],[8022,39,8092,49],[8022,40,8092,50],[8022,41,8092,51],[8023,14,8093,24],[8024,14,8094,24],[8024,18,8094,28],[8024,19,8094,29,"enrolledFactors"],[8024,34,8094,44],[8024,37,8094,47],[8024,41,8094,51],[8024,42,8094,52,"enrolledFactors"],[8024,57,8094,67],[8024,58,8094,68,"filter"],[8024,64,8094,74],[8024,65,8094,75],[8024,75,8094,85,"_a"],[8024,77,8094,87],[8024,79,8094,89],[8025,16,8095,28],[8025,20,8095,32,"uid"],[8025,23,8095,35],[8025,26,8095,38,"_a"],[8025,28,8095,40],[8025,29,8095,41,"uid"],[8025,32,8095,44],[8026,16,8096,28],[8026,23,8096,35,"uid"],[8026,26,8096,38],[8026,31,8096,43,"mfaEnrollmentId"],[8026,46,8096,58],[8027,14,8097,24],[8027,15,8097,25],[8027,16,8097,26],[8028,14,8098,24],[8029,14,8099,24],[8030,14,8100,24],[8031,14,8101,24],[8032,14,8102,24],[8032,21,8102,31],[8032,22,8102,32],[8032,23,8102,33],[8032,24,8102,34],[8032,35,8102,45],[8032,39,8102,49],[8032,40,8102,50,"user"],[8032,44,8102,54],[8032,45,8102,55,"_updateTokensIfNecessary"],[8032,69,8102,79],[8032,70,8102,80,"idTokenResponse"],[8032,85,8102,95],[8032,86,8102,96],[8032,87,8102,97],[8033,12,8103,20],[8033,17,8103,25],[8033,18,8103,26],[8034,14,8104,24],[8035,14,8105,24],[8036,14,8106,24],[8037,14,8107,24],[8038,14,8108,24,"_a"],[8038,16,8108,26],[8038,17,8108,27,"sent"],[8038,21,8108,31],[8038,22,8108,32],[8038,23,8108,33],[8039,14,8109,24],[8039,21,8109,31],[8039,22,8109,32],[8039,23,8109,33],[8039,24,8109,34],[8039,35,8109,45],[8039,39,8109,49],[8039,40,8109,50,"user"],[8039,44,8109,54],[8039,45,8109,55,"reload"],[8039,51,8109,61],[8039,52,8109,62],[8039,53,8109,63],[8039,54,8109,64],[8040,12,8110,20],[8040,17,8110,25],[8040,18,8110,26],[8041,14,8111,24,"_a"],[8041,16,8111,26],[8041,17,8111,27,"sent"],[8041,21,8111,31],[8041,22,8111,32],[8041,23,8111,33],[8042,14,8112,24],[8042,21,8112,31],[8042,22,8112,32],[8042,23,8112,33],[8042,24,8112,34],[8042,35,8112,45],[8042,36,8112,46],[8042,37,8112,47],[8043,12,8113,20],[8043,17,8113,25],[8043,18,8113,26],[8044,14,8114,24,"e_1"],[8044,17,8114,27],[8044,20,8114,30,"_a"],[8044,22,8114,32],[8044,23,8114,33,"sent"],[8044,27,8114,37],[8044,28,8114,38],[8044,29,8114,39],[8045,14,8115,24],[8045,20,8115,30,"e_1"],[8045,23,8115,33],[8046,12,8116,20],[8046,17,8116,25],[8046,18,8116,26],[8047,14,8116,28],[8047,21,8116,35],[8047,22,8116,36],[8047,23,8116,37],[8047,24,8116,38],[8047,35,8116,49],[8048,10,8117,16],[8049,8,8118,12],[8049,9,8118,13],[8049,10,8118,14],[8050,6,8119,8],[8050,7,8119,9],[8050,8,8119,10],[8051,4,8120,4],[8051,5,8120,5],[8052,4,8121,4],[8052,11,8121,11,"MultiFactorUserImpl"],[8052,30,8121,30],[8053,2,8122,0],[8053,3,8122,1],[8053,4,8122,2],[8053,5,8122,4],[8054,2,8123,0],[8054,6,8123,4,"multiFactorUserCache"],[8054,26,8123,24],[8054,29,8123,27],[8054,33,8123,31,"WeakMap"],[8054,40,8123,38],[8054,41,8123,39],[8054,42,8123,40],[8055,2,8124,0],[8056,0,8125,0],[8057,0,8126,0],[8058,0,8127,0],[8059,0,8128,0],[8060,0,8129,0],[8061,0,8130,0],[8062,0,8131,0],[8063,0,8132,0],[8064,0,8133,0],[8065,2,8134,0],[8065,11,8134,9,"multiFactor"],[8065,22,8134,20,"multiFactor"],[8065,23,8134,21,"user"],[8065,27,8134,25],[8065,29,8134,27],[8066,4,8135,4],[8066,8,8135,8,"userModular"],[8066,19,8135,19],[8066,22,8135,22,"util"],[8066,26,8135,26],[8066,27,8135,27,"getModularInstance"],[8066,45,8135,45],[8066,46,8135,46,"user"],[8066,50,8135,50],[8066,51,8135,51],[8067,4,8136,4],[8067,8,8136,8],[8067,9,8136,9,"multiFactorUserCache"],[8067,29,8136,29],[8067,30,8136,30,"has"],[8067,33,8136,33],[8067,34,8136,34,"userModular"],[8067,45,8136,45],[8067,46,8136,46],[8067,48,8136,48],[8068,6,8137,8,"multiFactorUserCache"],[8068,26,8137,28],[8068,27,8137,29,"set"],[8068,30,8137,32],[8068,31,8137,33,"userModular"],[8068,42,8137,44],[8068,44,8137,46,"MultiFactorUserImpl"],[8068,63,8137,65],[8068,64,8137,66,"_fromUser"],[8068,73,8137,75],[8068,74,8137,76,"userModular"],[8068,85,8137,87],[8068,86,8137,88],[8068,87,8137,89],[8069,4,8138,4],[8070,4,8139,4],[8070,11,8139,11,"multiFactorUserCache"],[8070,31,8139,31],[8070,32,8139,32,"get"],[8070,35,8139,35],[8070,36,8139,36,"userModular"],[8070,47,8139,47],[8070,48,8139,48],[8071,2,8140,0],[8072,2,8142,0],[8072,6,8142,4,"name"],[8072,10,8142,8],[8072,13,8142,11],[8072,29,8142,27],[8073,2,8143,0],[8073,6,8143,4,"version"],[8073,13,8143,11],[8073,16,8143,14],[8073,23,8143,21],[8075,2,8145,0],[8076,0,8146,0],[8077,0,8147,0],[8078,0,8148,0],[8079,0,8149,0],[8080,0,8150,0],[8081,0,8151,0],[8082,0,8152,0],[8083,0,8153,0],[8084,0,8154,0],[8085,0,8155,0],[8086,0,8156,0],[8087,0,8157,0],[8088,0,8158,0],[8089,0,8159,0],[8090,0,8160,0],[8091,2,8161,0],[8091,6,8161,4,"AuthInterop"],[8091,17,8161,15],[8091,20,8161,18],[8091,33,8161,33],[8091,45,8161,45],[8092,4,8162,4],[8092,13,8162,13,"AuthInterop"],[8092,24,8162,24,"AuthInterop"],[8092,25,8162,25,"auth"],[8092,29,8162,29],[8092,31,8162,31],[8093,6,8163,8],[8093,10,8163,12],[8093,11,8163,13,"auth"],[8093,15,8163,17],[8093,18,8163,20,"auth"],[8093,22,8163,24],[8094,6,8164,8],[8094,10,8164,12],[8094,11,8164,13,"internalListeners"],[8094,28,8164,30],[8094,31,8164,33],[8094,35,8164,37,"Map"],[8094,38,8164,40],[8094,39,8164,41],[8094,40,8164,42],[8095,4,8165,4],[8096,4,8166,4,"AuthInterop"],[8096,15,8166,15],[8096,16,8166,16,"prototype"],[8096,25,8166,25],[8096,26,8166,26,"getUid"],[8096,32,8166,32],[8096,35,8166,35],[8096,47,8166,47],[8097,6,8167,8],[8097,10,8167,12,"_a"],[8097,12,8167,14],[8098,6,8168,8],[8098,10,8168,12],[8098,11,8168,13,"assertAuthConfigured"],[8098,31,8168,33],[8098,32,8168,34],[8098,33,8168,35],[8099,6,8169,8],[8099,13,8169,15],[8099,14,8169,16],[8099,15,8169,17,"_a"],[8099,17,8169,19],[8099,20,8169,22],[8099,24,8169,26],[8099,25,8169,27,"auth"],[8099,29,8169,31],[8099,30,8169,32,"currentUser"],[8099,41,8169,43],[8099,47,8169,49],[8099,51,8169,53],[8099,55,8169,57,"_a"],[8099,57,8169,59],[8099,62,8169,59,"undefined"],[8099,71,8169,70],[8099,74,8169,70,"undefined"],[8099,83,8169,70],[8099,86,8169,82,"_a"],[8099,88,8169,84],[8099,89,8169,85,"uid"],[8099,92,8169,88],[8099,97,8169,93],[8099,101,8169,97],[8100,4,8170,4],[8100,5,8170,5],[8101,4,8171,4,"AuthInterop"],[8101,15,8171,15],[8101,16,8171,16,"prototype"],[8101,25,8171,25],[8101,26,8171,26,"getToken"],[8101,34,8171,34],[8101,37,8171,37],[8101,47,8171,47,"forceRefresh"],[8101,59,8171,59],[8101,61,8171,61],[8102,6,8172,8],[8102,13,8172,15,"tslib"],[8102,18,8172,20],[8102,19,8172,21,"__awaiter"],[8102,28,8172,30],[8102,29,8172,31],[8102,33,8172,35],[8102,35,8172,35,"undefined"],[8102,44,8172,35],[8102,46,8172,35,"undefined"],[8102,55,8172,35],[8102,57,8172,53],[8102,69,8172,65],[8103,8,8173,12],[8103,12,8173,16,"accessToken"],[8103,23,8173,27],[8104,8,8174,12],[8104,15,8174,19,"tslib"],[8104,20,8174,24],[8104,21,8174,25,"__generator"],[8104,32,8174,36],[8104,33,8174,37],[8104,37,8174,41],[8104,39,8174,43],[8104,49,8174,53,"_a"],[8104,51,8174,55],[8104,53,8174,57],[8105,10,8175,16],[8105,18,8175,24,"_a"],[8105,20,8175,26],[8105,21,8175,27,"label"],[8105,26,8175,32],[8106,12,8176,20],[8106,17,8176,25],[8106,18,8176,26],[8107,14,8177,24],[8107,18,8177,28],[8107,19,8177,29,"assertAuthConfigured"],[8107,39,8177,49],[8107,40,8177,50],[8107,41,8177,51],[8108,14,8178,24],[8108,21,8178,31],[8108,22,8178,32],[8108,23,8178,33],[8108,24,8178,34],[8108,35,8178,45],[8108,39,8178,49],[8108,40,8178,50,"auth"],[8108,44,8178,54],[8108,45,8178,55,"_initializationPromise"],[8108,67,8178,77],[8108,68,8178,78],[8109,12,8179,20],[8109,17,8179,25],[8109,18,8179,26],[8110,14,8180,24,"_a"],[8110,16,8180,26],[8110,17,8180,27,"sent"],[8110,21,8180,31],[8110,22,8180,32],[8110,23,8180,33],[8111,14,8181,24],[8111,18,8181,28],[8111,19,8181,29],[8111,23,8181,33],[8111,24,8181,34,"auth"],[8111,28,8181,38],[8111,29,8181,39,"currentUser"],[8111,40,8181,50],[8111,42,8181,52],[8112,16,8182,28],[8112,23,8182,35],[8112,24,8182,36],[8112,25,8182,37],[8112,26,8182,38],[8112,38,8182,50],[8112,42,8182,54],[8112,43,8182,55],[8113,14,8183,24],[8114,14,8184,24],[8114,21,8184,31],[8114,22,8184,32],[8114,23,8184,33],[8114,24,8184,34],[8114,35,8184,45],[8114,39,8184,49],[8114,40,8184,50,"auth"],[8114,44,8184,54],[8114,45,8184,55,"currentUser"],[8114,56,8184,66],[8114,57,8184,67,"getIdToken"],[8114,67,8184,77],[8114,68,8184,78,"forceRefresh"],[8114,80,8184,90],[8114,81,8184,91],[8114,82,8184,92],[8115,12,8185,20],[8115,17,8185,25],[8115,18,8185,26],[8116,14,8186,24,"accessToken"],[8116,25,8186,35],[8116,28,8186,38,"_a"],[8116,30,8186,40],[8116,31,8186,41,"sent"],[8116,35,8186,45],[8116,36,8186,46],[8116,37,8186,47],[8117,14,8187,24],[8117,21,8187,31],[8117,22,8187,32],[8117,23,8187,33],[8117,24,8187,34],[8117,36,8187,46],[8118,16,8187,48,"accessToken"],[8118,27,8187,59],[8118,29,8187,61,"accessToken"],[8119,14,8187,73],[8119,15,8187,74],[8119,16,8187,75],[8120,10,8188,16],[8121,8,8189,12],[8121,9,8189,13],[8121,10,8189,14],[8122,6,8190,8],[8122,7,8190,9],[8122,8,8190,10],[8123,4,8191,4],[8123,5,8191,5],[8124,4,8192,4,"AuthInterop"],[8124,15,8192,15],[8124,16,8192,16,"prototype"],[8124,25,8192,25],[8124,26,8192,26,"addAuthTokenListener"],[8124,46,8192,46],[8124,49,8192,49],[8124,59,8192,59,"listener"],[8124,67,8192,67],[8124,69,8192,69],[8125,6,8193,8],[8125,10,8193,12],[8125,11,8193,13,"assertAuthConfigured"],[8125,31,8193,33],[8125,32,8193,34],[8125,33,8193,35],[8126,6,8194,8],[8126,10,8194,12],[8126,14,8194,16],[8126,15,8194,17,"internalListeners"],[8126,32,8194,34],[8126,33,8194,35,"has"],[8126,36,8194,38],[8126,37,8194,39,"listener"],[8126,45,8194,47],[8126,46,8194,48],[8126,48,8194,50],[8127,8,8195,12],[8128,6,8196,8],[8129,6,8197,8],[8129,10,8197,12,"unsubscribe"],[8129,21,8197,23],[8129,24,8197,26],[8129,28,8197,30],[8129,29,8197,31,"auth"],[8129,33,8197,35],[8129,34,8197,36,"onIdTokenChanged"],[8129,50,8197,52],[8129,51,8197,53],[8129,61,8197,63,"user"],[8129,65,8197,67],[8129,67,8197,69],[8130,8,8198,12,"listener"],[8130,16,8198,20],[8130,17,8198,21],[8130,18,8198,22,"user"],[8130,22,8198,26],[8130,27,8198,31],[8130,31,8198,35],[8130,35,8198,39,"user"],[8130,39,8198,43],[8130,44,8198,43,"undefined"],[8130,53,8198,54],[8130,56,8198,54,"undefined"],[8130,65,8198,54],[8130,68,8198,66,"user"],[8130,72,8198,70],[8130,73,8198,71,"stsTokenManager"],[8130,88,8198,86],[8130,89,8198,87,"accessToken"],[8130,100,8198,98],[8130,105,8198,103],[8130,109,8198,107],[8130,110,8198,108],[8131,6,8199,8],[8131,7,8199,9],[8131,8,8199,10],[8132,6,8200,8],[8132,10,8200,12],[8132,11,8200,13,"internalListeners"],[8132,28,8200,30],[8132,29,8200,31,"set"],[8132,32,8200,34],[8132,33,8200,35,"listener"],[8132,41,8200,43],[8132,43,8200,45,"unsubscribe"],[8132,54,8200,56],[8132,55,8200,57],[8133,6,8201,8],[8133,10,8201,12],[8133,11,8201,13,"updateProactiveRefresh"],[8133,33,8201,35],[8133,34,8201,36],[8133,35,8201,37],[8134,4,8202,4],[8134,5,8202,5],[8135,4,8203,4,"AuthInterop"],[8135,15,8203,15],[8135,16,8203,16,"prototype"],[8135,25,8203,25],[8135,26,8203,26,"removeAuthTokenListener"],[8135,49,8203,49],[8135,52,8203,52],[8135,62,8203,62,"listener"],[8135,70,8203,70],[8135,72,8203,72],[8136,6,8204,8],[8136,10,8204,12],[8136,11,8204,13,"assertAuthConfigured"],[8136,31,8204,33],[8136,32,8204,34],[8136,33,8204,35],[8137,6,8205,8],[8137,10,8205,12,"unsubscribe"],[8137,21,8205,23],[8137,24,8205,26],[8137,28,8205,30],[8137,29,8205,31,"internalListeners"],[8137,46,8205,48],[8137,47,8205,49,"get"],[8137,50,8205,52],[8137,51,8205,53,"listener"],[8137,59,8205,61],[8137,60,8205,62],[8138,6,8206,8],[8138,10,8206,12],[8138,11,8206,13,"unsubscribe"],[8138,22,8206,24],[8138,24,8206,26],[8139,8,8207,12],[8140,6,8208,8],[8141,6,8209,8],[8141,10,8209,12],[8141,11,8209,13,"internalListeners"],[8141,28,8209,30],[8141,29,8209,31,"delete"],[8141,35,8209,37],[8141,36,8209,38,"listener"],[8141,44,8209,46],[8141,45,8209,47],[8142,6,8210,8,"unsubscribe"],[8142,17,8210,19],[8142,18,8210,20],[8142,19,8210,21],[8143,6,8211,8],[8143,10,8211,12],[8143,11,8211,13,"updateProactiveRefresh"],[8143,33,8211,35],[8143,34,8211,36],[8143,35,8211,37],[8144,4,8212,4],[8144,5,8212,5],[8145,4,8213,4,"AuthInterop"],[8145,15,8213,15],[8145,16,8213,16,"prototype"],[8145,25,8213,25],[8145,26,8213,26,"assertAuthConfigured"],[8145,46,8213,46],[8145,49,8213,49],[8145,61,8213,61],[8146,6,8214,8,"_assert"],[8146,13,8214,15],[8146,14,8214,16],[8146,18,8214,20],[8146,19,8214,21,"auth"],[8146,23,8214,25],[8146,24,8214,26,"_initializationPromise"],[8146,46,8214,48],[8146,48,8214,50],[8146,87,8214,89],[8146,88,8214,90],[8146,138,8214,140],[8146,139,8214,141],[8147,4,8215,4],[8147,5,8215,5],[8148,4,8216,4,"AuthInterop"],[8148,15,8216,15],[8148,16,8216,16,"prototype"],[8148,25,8216,25],[8148,26,8216,26,"updateProactiveRefresh"],[8148,48,8216,48],[8148,51,8216,51],[8148,63,8216,63],[8149,6,8217,8],[8149,10,8217,12],[8149,14,8217,16],[8149,15,8217,17,"internalListeners"],[8149,32,8217,34],[8149,33,8217,35,"size"],[8149,37,8217,39],[8149,40,8217,42],[8149,41,8217,43],[8149,43,8217,45],[8150,8,8218,12],[8150,12,8218,16],[8150,13,8218,17,"auth"],[8150,17,8218,21],[8150,18,8218,22,"_startProactiveRefresh"],[8150,40,8218,44],[8150,41,8218,45],[8150,42,8218,46],[8151,6,8219,8],[8151,7,8219,9],[8151,13,8220,13],[8152,8,8221,12],[8152,12,8221,16],[8152,13,8221,17,"auth"],[8152,17,8221,21],[8152,18,8221,22,"_stopProactiveRefresh"],[8152,39,8221,43],[8152,40,8221,44],[8152,41,8221,45],[8153,6,8222,8],[8154,4,8223,4],[8154,5,8223,5],[8155,4,8224,4],[8155,11,8224,11,"AuthInterop"],[8155,22,8224,22],[8156,2,8225,0],[8156,3,8225,1],[8156,4,8225,2],[8156,5,8225,4],[8158,2,8227,0],[8159,0,8228,0],[8160,0,8229,0],[8161,0,8230,0],[8162,0,8231,0],[8163,0,8232,0],[8164,0,8233,0],[8165,0,8234,0],[8166,0,8235,0],[8167,0,8236,0],[8168,0,8237,0],[8169,0,8238,0],[8170,0,8239,0],[8171,0,8240,0],[8172,0,8241,0],[8173,0,8242,0],[8174,2,8243,0],[8174,11,8243,9,"getVersionForPlatform"],[8174,32,8243,30,"getVersionForPlatform"],[8174,33,8243,31,"clientPlatform"],[8174,47,8243,45],[8174,49,8243,47],[8175,4,8244,4],[8175,12,8244,12,"clientPlatform"],[8175,26,8244,26],[8176,6,8245,8],[8176,11,8245,13],[8176,17,8245,19],[8176,18,8245,20],[8177,8,8246,12],[8177,15,8246,19],[8177,21,8246,25],[8178,6,8247,8],[8178,11,8247,13],[8178,24,8247,26],[8178,25,8247,27],[8179,8,8248,12],[8179,15,8248,19],[8179,19,8248,23],[8180,6,8249,8],[8180,11,8249,13],[8180,19,8249,21],[8180,20,8249,22],[8181,8,8250,12],[8181,15,8250,19],[8181,26,8250,30],[8182,6,8251,8],[8182,11,8251,13],[8182,20,8251,22],[8182,21,8251,23],[8183,8,8252,12],[8183,15,8252,19],[8183,24,8252,28],[8184,6,8253,8],[8184,11,8253,13],[8184,25,8253,27],[8184,26,8253,28],[8185,8,8254,12],[8185,15,8254,19],[8185,30,8254,34],[8186,6,8255,8],[8187,8,8256,12],[8187,15,8256,19,"undefined"],[8187,24,8256,28],[8188,4,8257,4],[8189,2,8258,0],[8190,2,8259,0],[8191,2,8260,0],[8191,11,8260,9,"registerAuth"],[8191,23,8260,21,"registerAuth"],[8191,24,8260,22,"clientPlatform"],[8191,38,8260,36],[8191,40,8260,38],[8192,4,8261,4,"app"],[8192,7,8261,7],[8192,8,8261,8,"_registerComponent"],[8192,26,8261,26],[8192,27,8261,27],[8192,31,8261,31,"component"],[8192,40,8261,40],[8192,41,8261,41,"Component"],[8192,50,8261,50],[8192,51,8261,51],[8192,57,8261,57],[8192,58,8261,58],[8192,85,8261,85],[8192,95,8261,95,"container"],[8192,104,8261,104],[8192,106,8261,106,"_a"],[8192,108,8261,108],[8192,110,8261,110],[8193,6,8262,8],[8193,10,8262,12,"deps"],[8193,14,8262,16],[8193,17,8262,19,"_a"],[8193,19,8262,21],[8193,20,8262,22,"options"],[8193,27,8262,29],[8194,6,8263,8],[8194,10,8263,12,"app"],[8194,13,8263,15],[8194,16,8263,18,"container"],[8194,25,8263,27],[8194,26,8263,28,"getProvider"],[8194,37,8263,39],[8194,38,8263,40],[8194,43,8263,45],[8194,44,8263,46],[8194,45,8263,47,"getImmediate"],[8194,57,8263,59],[8194,58,8263,60],[8194,59,8263,61],[8195,6,8264,8],[8195,10,8264,12,"heartbeatServiceProvider"],[8195,34,8264,36],[8195,37,8264,39,"container"],[8195,46,8264,48],[8195,47,8264,49,"getProvider"],[8195,58,8264,60],[8195,59,8264,61],[8195,70,8264,72],[8195,71,8264,73],[8196,6,8265,8],[8196,10,8265,12,"appCheckServiceProvider"],[8196,33,8265,35],[8196,36,8265,38,"container"],[8196,45,8265,47],[8196,46,8265,48,"getProvider"],[8196,57,8265,59],[8196,58,8265,60],[8196,78,8265,80],[8196,79,8265,81],[8197,6,8266,8],[8197,10,8266,12,"_b"],[8197,12,8266,14],[8197,15,8266,17,"app"],[8197,18,8266,20],[8197,19,8266,21,"options"],[8197,26,8266,28],[8198,8,8266,30,"apiKey"],[8198,14,8266,36],[8198,17,8266,39,"_b"],[8198,19,8266,41],[8198,20,8266,42,"apiKey"],[8198,26,8266,48],[8199,8,8266,50,"authDomain"],[8199,18,8266,60],[8199,21,8266,63,"_b"],[8199,23,8266,65],[8199,24,8266,66,"authDomain"],[8199,34,8266,76],[8200,6,8267,8,"_assert"],[8200,13,8267,15],[8200,14,8267,16,"apiKey"],[8200,20,8267,22],[8200,24,8267,26],[8200,25,8267,27,"apiKey"],[8200,31,8267,33],[8200,32,8267,34,"includes"],[8200,40,8267,42],[8200,41,8267,43],[8200,44,8267,46],[8200,45,8267,47],[8200,47,8267,49],[8200,64,8267,66],[8200,65,8267,67],[8200,102,8267,104],[8201,8,8267,106,"appName"],[8201,15,8267,113],[8201,17,8267,115,"app"],[8201,20,8267,118],[8201,21,8267,119,"name"],[8202,6,8267,124],[8202,7,8267,125],[8202,8,8267,126],[8203,6,8268,8],[8203,10,8268,12,"config"],[8203,16,8268,18],[8203,19,8268,21],[8204,8,8269,12,"apiKey"],[8204,14,8269,18],[8204,16,8269,20,"apiKey"],[8204,22,8269,26],[8205,8,8270,12,"authDomain"],[8205,18,8270,22],[8205,20,8270,24,"authDomain"],[8205,30,8270,34],[8206,8,8271,12,"clientPlatform"],[8206,22,8271,26],[8206,24,8271,28,"clientPlatform"],[8206,38,8271,42],[8207,8,8272,12,"apiHost"],[8207,15,8272,19],[8207,17,8272,21],[8207,49,8272,53],[8207,50,8272,54],[8208,8,8273,12,"tokenApiHost"],[8208,20,8273,24],[8208,22,8273,26],[8208,50,8273,54],[8208,51,8273,55],[8209,8,8274,12,"apiScheme"],[8209,17,8274,21],[8209,19,8274,23],[8209,26,8274,30],[8209,27,8274,31],[8210,8,8275,12,"sdkClientVersion"],[8210,24,8275,28],[8210,26,8275,30,"_getClientVersion"],[8210,43,8275,47],[8210,44,8275,48,"clientPlatform"],[8210,58,8275,62],[8211,6,8276,8],[8211,7,8276,9],[8212,6,8277,8],[8212,10,8277,12,"authInstance"],[8212,22,8277,24],[8212,25,8277,27],[8212,29,8277,31,"AuthImpl"],[8212,37,8277,39],[8212,38,8277,40,"app"],[8212,41,8277,43],[8212,43,8277,45,"heartbeatServiceProvider"],[8212,67,8277,69],[8212,69,8277,71,"appCheckServiceProvider"],[8212,92,8277,94],[8212,94,8277,96,"config"],[8212,100,8277,102],[8212,101,8277,103],[8213,6,8278,8,"_initializeAuthInstance"],[8213,29,8278,31],[8213,30,8278,32,"authInstance"],[8213,42,8278,44],[8213,44,8278,46,"deps"],[8213,48,8278,50],[8213,49,8278,51],[8214,6,8279,8],[8214,13,8279,15,"authInstance"],[8214,25,8279,27],[8215,4,8280,4],[8215,5,8280,5],[8215,7,8280,7],[8215,15,8280,15],[8215,16,8280,16],[8215,42,8280,42],[8216,4,8281,8],[8217,0,8282,0],[8218,0,8283,0],[8219,0,8284,0],[8219,7,8281,8],[8219,8,8285,9,"setInstantiationMode"],[8219,28,8285,29],[8219,29,8285,30],[8219,39,8285,40],[8219,40,8285,41],[8219,72,8285,73],[8220,4,8286,8],[8221,0,8287,0],[8222,0,8288,0],[8223,0,8289,0],[8223,7,8286,8],[8223,8,8290,9,"setInstanceCreatedCallback"],[8223,34,8290,35],[8223,35,8290,36],[8223,45,8290,46,"container"],[8223,54,8290,55],[8223,56,8290,57,"_instanceIdentifier"],[8223,75,8290,76],[8223,77,8290,78,"_instance"],[8223,86,8290,87],[8223,88,8290,89],[8224,6,8291,8],[8224,10,8291,12,"authInternalProvider"],[8224,30,8291,32],[8224,33,8291,35,"container"],[8224,42,8291,44],[8224,43,8291,45,"getProvider"],[8224,54,8291,56],[8224,55,8291,57],[8224,70,8291,72],[8224,71,8291,73],[8224,105,8291,107],[8224,106,8291,108],[8225,6,8292,8,"authInternalProvider"],[8225,26,8292,28],[8225,27,8292,29,"initialize"],[8225,37,8292,39],[8225,38,8292,40],[8225,39,8292,41],[8226,4,8293,4],[8226,5,8293,5],[8226,6,8293,6],[8226,7,8293,7],[8227,4,8294,4,"app"],[8227,7,8294,7],[8227,8,8294,8,"_registerComponent"],[8227,26,8294,26],[8227,27,8294,27],[8227,31,8294,31,"component"],[8227,40,8294,40],[8227,41,8294,41,"Component"],[8227,50,8294,50],[8227,51,8294,51],[8227,66,8294,66],[8227,67,8294,67],[8227,103,8294,103],[8227,113,8294,113,"container"],[8227,122,8294,122],[8227,124,8294,124],[8228,6,8295,8],[8228,10,8295,12,"auth"],[8228,14,8295,16],[8228,17,8295,19,"_castAuth"],[8228,26,8295,28],[8228,27,8295,29,"container"],[8228,36,8295,38],[8228,37,8295,39,"getProvider"],[8228,48,8295,50],[8228,49,8295,51],[8228,55,8295,57],[8228,56,8295,58],[8228,81,8295,83],[8228,82,8295,84],[8228,83,8295,85,"getImmediate"],[8228,95,8295,97],[8228,96,8295,98],[8228,97,8295,99],[8228,98,8295,100],[8229,6,8296,8],[8229,13,8296,16],[8229,23,8296,26,"auth"],[8229,27,8296,30],[8229,29,8296,32],[8230,8,8296,34],[8230,15,8296,41],[8230,19,8296,45,"AuthInterop"],[8230,30,8296,56],[8230,31,8296,57,"auth"],[8230,35,8296,61],[8230,36,8296,62],[8231,6,8296,64],[8231,7,8296,65],[8231,8,8296,67,"auth"],[8231,12,8296,71],[8231,13,8296,72],[8232,4,8297,4],[8232,5,8297,5],[8232,7,8297,7],[8232,16,8297,16],[8232,17,8297,17],[8232,44,8297,44],[8232,45,8297,45],[8232,46,8297,46,"setInstantiationMode"],[8232,66,8297,66],[8232,67,8297,67],[8232,77,8297,77],[8232,78,8297,78],[8232,110,8297,110],[8232,111,8297,111],[8232,112,8297,112],[8233,4,8298,4,"app"],[8233,7,8298,7],[8233,8,8298,8,"registerVersion"],[8233,23,8298,23],[8233,24,8298,24,"name"],[8233,28,8298,28],[8233,30,8298,30,"version"],[8233,37,8298,37],[8233,39,8298,39,"getVersionForPlatform"],[8233,60,8298,60],[8233,61,8298,61,"clientPlatform"],[8233,75,8298,75],[8233,76,8298,76],[8233,77,8298,77],[8234,4,8299,4],[8235,4,8300,4,"app"],[8235,7,8300,7],[8235,8,8300,8,"registerVersion"],[8235,23,8300,23],[8235,24,8300,24,"name"],[8235,28,8300,28],[8235,30,8300,30,"version"],[8235,37,8300,37],[8235,39,8300,39],[8235,45,8300,45],[8235,46,8300,46],[8236,2,8301,0],[8238,2,8303,0],[8239,0,8304,0],[8240,0,8305,0],[8241,0,8306,0],[8242,0,8307,0],[8243,0,8308,0],[8244,0,8309,0],[8245,0,8310,0],[8246,0,8311,0],[8247,0,8312,0],[8248,0,8313,0],[8249,0,8314,0],[8250,0,8315,0],[8251,0,8316,0],[8252,0,8317,0],[8253,0,8318,0],[8254,2,8319,0],[8255,0,8320,0],[8256,0,8321,0],[8257,0,8322,0],[8258,0,8323,0],[8259,2,8324,0],[8259,6,8324,4,"FactorId"],[8259,14,8324,12],[8259,17,8324,15],[8260,4,8325,4],[8261,4,8326,4,"PHONE"],[8261,9,8326,9],[8261,11,8326,11],[8261,18,8326,18],[8262,4,8327,4,"TOTP"],[8262,8,8327,8],[8262,10,8327,10],[8263,2,8328,0],[8263,3,8328,1],[8264,2,8329,0],[8265,0,8330,0],[8266,0,8331,0],[8267,0,8332,0],[8268,0,8333,0],[8269,2,8334,0],[8269,6,8334,4,"ProviderId"],[8269,16,8334,14],[8269,19,8334,17],[8270,4,8335,4],[8271,4,8336,4,"FACEBOOK"],[8271,12,8336,12],[8271,14,8336,14],[8271,28,8336,28],[8272,4,8337,4],[8273,4,8338,4,"GITHUB"],[8273,10,8338,10],[8273,12,8338,12],[8273,24,8338,24],[8274,4,8339,4],[8275,4,8340,4,"GOOGLE"],[8275,10,8340,10],[8275,12,8340,12],[8275,24,8340,24],[8276,4,8341,4],[8277,4,8342,4,"PASSWORD"],[8277,12,8342,12],[8277,14,8342,14],[8277,24,8342,24],[8278,4,8343,4],[8279,4,8344,4,"PHONE"],[8279,9,8344,9],[8279,11,8344,11],[8279,18,8344,18],[8280,4,8345,4],[8281,4,8346,4,"TWITTER"],[8281,11,8346,11],[8281,13,8346,13],[8282,2,8347,0],[8282,3,8347,1],[8283,2,8348,0],[8284,0,8349,0],[8285,0,8350,0],[8286,0,8351,0],[8287,0,8352,0],[8288,2,8353,0],[8288,6,8353,4,"SignInMethod"],[8288,18,8353,16],[8288,21,8353,19],[8289,4,8354,4],[8290,4,8355,4,"EMAIL_LINK"],[8290,14,8355,14],[8290,16,8355,16],[8290,27,8355,27],[8291,4,8356,4],[8292,4,8357,4,"EMAIL_PASSWORD"],[8292,18,8357,18],[8292,20,8357,20],[8292,30,8357,30],[8293,4,8358,4],[8294,4,8359,4,"FACEBOOK"],[8294,12,8359,12],[8294,14,8359,14],[8294,28,8359,28],[8295,4,8360,4],[8296,4,8361,4,"GITHUB"],[8296,10,8361,10],[8296,12,8361,12],[8296,24,8361,24],[8297,4,8362,4],[8298,4,8363,4,"GOOGLE"],[8298,10,8363,10],[8298,12,8363,12],[8298,24,8363,24],[8299,4,8364,4],[8300,4,8365,4,"PHONE"],[8300,9,8365,9],[8300,11,8365,11],[8300,18,8365,18],[8301,4,8366,4],[8302,4,8367,4,"TWITTER"],[8302,11,8367,11],[8302,13,8367,13],[8303,2,8368,0],[8303,3,8368,1],[8304,2,8369,0],[8305,0,8370,0],[8306,0,8371,0],[8307,0,8372,0],[8308,0,8373,0],[8309,2,8374,0],[8309,6,8374,4,"OperationType"],[8309,19,8374,17],[8309,22,8374,20],[8310,4,8375,4],[8311,4,8376,4,"LINK"],[8311,8,8376,8],[8311,10,8376,10],[8311,16,8376,16],[8312,4,8377,4],[8313,4,8378,4,"REAUTHENTICATE"],[8313,18,8378,18],[8313,20,8378,20],[8313,36,8378,36],[8314,4,8379,4],[8315,4,8380,4,"SIGN_IN"],[8315,11,8380,11],[8315,13,8380,13],[8316,2,8381,0],[8316,3,8381,1],[8317,2,8382,0],[8318,0,8383,0],[8319,0,8384,0],[8320,0,8385,0],[8321,0,8386,0],[8322,2,8387,0],[8322,6,8387,4,"ActionCodeOperation"],[8322,25,8387,23],[8322,28,8387,26],[8323,4,8388,4],[8324,4,8389,4,"EMAIL_SIGNIN"],[8324,16,8389,16],[8324,18,8389,18],[8324,32,8389,32],[8325,4,8390,4],[8326,4,8391,4,"PASSWORD_RESET"],[8326,18,8391,18],[8326,20,8391,20],[8326,36,8391,36],[8327,4,8392,4],[8328,4,8393,4,"RECOVER_EMAIL"],[8328,17,8393,17],[8328,19,8393,19],[8328,34,8393,34],[8329,4,8394,4],[8330,4,8395,4,"REVERT_SECOND_FACTOR_ADDITION"],[8330,33,8395,33],[8330,35,8395,35],[8330,66,8395,66],[8331,4,8396,4],[8332,4,8397,4,"VERIFY_AND_CHANGE_EMAIL"],[8332,27,8397,27],[8332,29,8397,29],[8332,54,8397,54],[8333,4,8398,4],[8334,4,8399,4,"VERIFY_EMAIL"],[8334,16,8399,16],[8334,18,8399,18],[8335,2,8400,0],[8335,3,8400,1],[8337,2,8402,0],[8338,0,8403,0],[8339,0,8404,0],[8340,0,8405,0],[8341,0,8406,0],[8342,0,8407,0],[8343,0,8408,0],[8344,0,8409,0],[8345,0,8410,0],[8346,0,8411,0],[8347,0,8412,0],[8348,0,8413,0],[8349,0,8414,0],[8350,0,8415,0],[8351,0,8416,0],[8352,0,8417,0],[8353,2,8418,0],[8353,11,8418,9,"startSignInPhoneMfa"],[8353,30,8418,28,"startSignInPhoneMfa"],[8353,31,8418,29,"auth"],[8353,35,8418,33],[8353,37,8418,35,"request"],[8353,44,8418,42],[8353,46,8418,44],[8354,4,8419,4],[8354,11,8419,11,"_performApiRequest"],[8354,29,8419,29],[8354,30,8419,30,"auth"],[8354,34,8419,34],[8354,36,8419,36],[8354,42,8419,42],[8354,43,8419,43],[8354,66,8419,66],[8354,96,8419,96],[8354,97,8419,97],[8354,131,8419,131,"_addTidIfNecessary"],[8354,149,8419,149],[8354,150,8419,150,"auth"],[8354,154,8419,154],[8354,156,8419,156,"request"],[8354,163,8419,163],[8354,164,8419,164],[8354,165,8419,165],[8355,2,8420,0],[8356,2,8421,0],[8356,11,8421,9,"finalizeSignInPhoneMfa"],[8356,33,8421,31,"finalizeSignInPhoneMfa"],[8356,34,8421,32,"auth"],[8356,38,8421,36],[8356,40,8421,38,"request"],[8356,47,8421,45],[8356,49,8421,47],[8357,4,8422,4],[8357,11,8422,11,"_performApiRequest"],[8357,29,8422,29],[8357,30,8422,30,"auth"],[8357,34,8422,34],[8357,36,8422,36],[8357,42,8422,42],[8357,43,8422,43],[8357,66,8422,66],[8357,99,8422,99],[8357,100,8422,100],[8357,137,8422,137,"_addTidIfNecessary"],[8357,155,8422,155],[8357,156,8422,156,"auth"],[8357,160,8422,160],[8357,162,8422,162,"request"],[8357,169,8422,169],[8357,170,8422,170],[8357,171,8422,171],[8358,2,8423,0],[8359,2,8424,0],[8359,11,8424,9,"finalizeSignInTotpMfa"],[8359,32,8424,30,"finalizeSignInTotpMfa"],[8359,33,8424,31,"auth"],[8359,37,8424,35],[8359,39,8424,37,"request"],[8359,46,8424,44],[8359,48,8424,46],[8360,4,8425,4],[8360,11,8425,11,"_performApiRequest"],[8360,29,8425,29],[8360,30,8425,30,"auth"],[8360,34,8425,34],[8360,36,8425,36],[8360,42,8425,42],[8360,43,8425,43],[8360,66,8425,66],[8360,99,8425,99],[8360,100,8425,100],[8360,137,8425,137,"_addTidIfNecessary"],[8360,155,8425,155],[8360,156,8425,156,"auth"],[8360,160,8425,160],[8360,162,8425,162,"request"],[8360,169,8425,169],[8360,170,8425,170],[8360,171,8425,171],[8361,2,8426,0],[8363,2,8428,0],[8364,0,8429,0],[8365,0,8430,0],[8366,0,8431,0],[8367,0,8432,0],[8368,0,8433,0],[8369,0,8434,0],[8370,0,8435,0],[8371,0,8436,0],[8372,0,8437,0],[8373,0,8438,0],[8374,0,8439,0],[8375,0,8440,0],[8376,0,8441,0],[8377,0,8442,0],[8378,0,8443,0],[8379,2,8444,0],[8380,0,8445,0],[8381,0,8446,0],[8382,0,8447,0],[8383,2,8448,0],[8383,11,8448,9,"_window"],[8383,18,8448,16,"_window"],[8383,19,8448,16],[8383,21,8448,19],[8384,4,8449,4],[8384,11,8449,11,"window"],[8384,17,8449,17],[8385,2,8450,0],[8386,2,8451,0],[8386,11,8451,9,"_setWindowLocation"],[8386,29,8451,27,"_setWindowLocation"],[8386,30,8451,28,"url"],[8386,33,8451,31],[8386,35,8451,33],[8387,4,8452,4,"_window"],[8387,11,8452,11],[8387,12,8452,12],[8387,13,8452,13],[8387,14,8452,14,"location"],[8387,22,8452,22],[8387,23,8452,23,"href"],[8387,27,8452,27],[8387,30,8452,30,"url"],[8387,33,8452,33],[8388,2,8453,0],[8390,2,8455,0],[8391,0,8456,0],[8392,0,8457,0],[8393,0,8458,0],[8394,0,8459,0],[8395,0,8460,0],[8396,0,8461,0],[8397,0,8462,0],[8398,0,8463,0],[8399,0,8464,0],[8400,0,8465,0],[8401,0,8466,0],[8402,0,8467,0],[8403,0,8468,0],[8404,0,8469,0],[8405,0,8470,0],[8406,2,8471,0],[8406,11,8471,9,"_isWorker"],[8406,20,8471,18,"_isWorker"],[8406,21,8471,18],[8406,23,8471,21],[8407,4,8472,4],[8407,11,8472,12],[8407,18,8472,19,"_window"],[8407,25,8472,26],[8407,26,8472,27],[8407,27,8472,28],[8407,28,8472,29],[8407,47,8472,48],[8407,48,8472,49],[8407,53,8472,54],[8407,64,8472,65],[8407,68,8473,8],[8407,75,8473,15,"_window"],[8407,82,8473,22],[8407,83,8473,23],[8407,84,8473,24],[8407,85,8473,25],[8407,100,8473,40],[8407,101,8473,41],[8407,106,8473,46],[8407,116,8473,56],[8408,2,8474,0],[8409,2,8475,0],[8409,11,8475,9,"_getActiveServiceWorker"],[8409,34,8475,32,"_getActiveServiceWorker"],[8409,35,8475,32],[8409,37,8475,35],[8410,4,8476,4],[8410,11,8476,11,"tslib"],[8410,16,8476,16],[8410,17,8476,17,"__awaiter"],[8410,26,8476,26],[8410,27,8476,27],[8410,31,8476,31],[8410,33,8476,31,"undefined"],[8410,42,8476,31],[8410,44,8476,31,"undefined"],[8410,53,8476,31],[8410,55,8476,49],[8410,67,8476,61],[8411,6,8477,8],[8411,10,8477,12,"registration"],[8411,22,8477,24],[8412,6,8478,8],[8412,13,8478,15,"tslib"],[8412,18,8478,20],[8412,19,8478,21,"__generator"],[8412,30,8478,32],[8412,31,8478,33],[8412,35,8478,37],[8412,37,8478,39],[8412,47,8478,49,"_b"],[8412,49,8478,51],[8412,51,8478,53],[8413,8,8479,12],[8413,16,8479,20,"_b"],[8413,18,8479,22],[8413,19,8479,23,"label"],[8413,24,8479,28],[8414,10,8480,16],[8414,15,8480,21],[8414,16,8480,22],[8415,12,8481,20],[8415,16,8481,24],[8415,18,8481,26,"navigator"],[8415,27,8481,35],[8415,32,8481,40],[8415,36,8481,44],[8415,40,8481,48,"navigator"],[8415,49,8481,57],[8415,54,8481,57,"undefined"],[8415,63,8481,68],[8415,66,8481,68,"undefined"],[8415,75,8481,68],[8415,78,8481,80,"navigator"],[8415,87,8481,89],[8415,88,8481,90,"serviceWorker"],[8415,101,8481,103],[8415,102,8481,104],[8415,104,8481,106],[8416,14,8482,24],[8416,21,8482,31],[8416,22,8482,32],[8416,23,8482,33],[8416,24,8482,34],[8416,36,8482,46],[8416,40,8482,50],[8416,41,8482,51],[8417,12,8483,20],[8418,12,8484,20,"_b"],[8418,14,8484,22],[8418,15,8484,23,"label"],[8418,20,8484,28],[8418,23,8484,31],[8418,24,8484,32],[8419,10,8485,16],[8419,15,8485,21],[8419,16,8485,22],[8420,12,8486,20,"_b"],[8420,14,8486,22],[8420,15,8486,23,"trys"],[8420,19,8486,27],[8420,20,8486,28,"push"],[8420,24,8486,32],[8420,25,8486,33],[8420,26,8486,34],[8420,27,8486,35],[8420,29,8486,37],[8420,30,8486,38],[8420,33,8486,42],[8420,34,8486,43],[8420,35,8486,44],[8420,36,8486,45],[8421,12,8487,20],[8421,19,8487,27],[8421,20,8487,28],[8421,21,8487,29],[8421,22,8487,30],[8421,33,8487,41,"navigator"],[8421,42,8487,50],[8421,43,8487,51,"serviceWorker"],[8421,56,8487,64],[8421,57,8487,65,"ready"],[8421,62,8487,70],[8421,63,8487,71],[8422,10,8488,16],[8422,15,8488,21],[8422,16,8488,22],[8423,12,8489,20,"registration"],[8423,24,8489,32],[8423,27,8489,35,"_b"],[8423,29,8489,37],[8423,30,8489,38,"sent"],[8423,34,8489,42],[8423,35,8489,43],[8423,36,8489,44],[8424,12,8490,20],[8424,19,8490,27],[8424,20,8490,28],[8424,21,8490,29],[8424,22,8490,30],[8424,34,8490,42,"registration"],[8424,46,8490,54],[8424,47,8490,55,"active"],[8424,53,8490,61],[8424,54,8490,62],[8425,10,8491,16],[8425,15,8491,21],[8425,16,8491,22],[8426,12,8492,20,"_b"],[8426,14,8492,22],[8426,15,8492,23,"sent"],[8426,19,8492,27],[8426,20,8492,28],[8426,21,8492,29],[8427,12,8493,20],[8427,19,8493,27],[8427,20,8493,28],[8427,21,8493,29],[8427,22,8493,30],[8427,34,8493,42],[8427,38,8493,46],[8427,39,8493,47],[8428,10,8494,16],[8428,15,8494,21],[8428,16,8494,22],[8429,12,8494,24],[8429,19,8494,31],[8429,20,8494,32],[8429,21,8494,33],[8429,22,8494,34],[8429,33,8494,45],[8430,8,8495,12],[8431,6,8496,8],[8431,7,8496,9],[8431,8,8496,10],[8432,4,8497,4],[8432,5,8497,5],[8432,6,8497,6],[8433,2,8498,0],[8434,2,8499,0],[8434,11,8499,9,"_getServiceWorkerController"],[8434,38,8499,36,"_getServiceWorkerController"],[8434,39,8499,36],[8434,41,8499,39],[8435,4,8500,4],[8435,8,8500,8,"_a"],[8435,10,8500,10],[8436,4,8501,4],[8436,11,8501,11],[8436,12,8501,12],[8436,13,8501,13,"_a"],[8436,15,8501,15],[8436,18,8501,18,"navigator"],[8436,27,8501,27],[8436,32,8501,32],[8436,36,8501,36],[8436,40,8501,40,"navigator"],[8436,49,8501,49],[8436,54,8501,49,"undefined"],[8436,63,8501,60],[8436,66,8501,60,"undefined"],[8436,75,8501,60],[8436,78,8501,72,"navigator"],[8436,87,8501,81],[8436,88,8501,82,"serviceWorker"],[8436,101,8501,95],[8436,107,8501,101],[8436,111,8501,105],[8436,115,8501,109,"_a"],[8436,117,8501,111],[8436,122,8501,111,"undefined"],[8436,131,8501,122],[8436,134,8501,122,"undefined"],[8436,143,8501,122],[8436,146,8501,134,"_a"],[8436,148,8501,136],[8436,149,8501,137,"controller"],[8436,159,8501,147],[8436,164,8501,152],[8436,168,8501,156],[8437,2,8502,0],[8438,2,8503,0],[8438,11,8503,9,"_getWorkerGlobalScope"],[8438,32,8503,30,"_getWorkerGlobalScope"],[8438,33,8503,30],[8438,35,8503,33],[8439,4,8504,4],[8439,11,8504,11,"_isWorker"],[8439,20,8504,20],[8439,21,8504,21],[8439,22,8504,22],[8439,25,8504,25,"self"],[8439,29,8504,29],[8439,32,8504,32],[8439,36,8504,36],[8440,2,8505,0],[8442,2,8507,0],[8443,0,8508,0],[8444,0,8509,0],[8445,0,8510,0],[8446,0,8511,0],[8447,0,8512,0],[8448,0,8513,0],[8449,0,8514,0],[8450,0,8515,0],[8451,0,8516,0],[8452,0,8517,0],[8453,0,8518,0],[8454,0,8519,0],[8455,0,8520,0],[8456,0,8521,0],[8457,0,8522,0],[8458,2,8523,0],[8458,6,8523,4,"_SOLVE_TIME_MS"],[8458,20,8523,18],[8458,23,8523,21],[8458,26,8523,24],[8459,2,8524,0],[8459,6,8524,4,"_EXPIRATION_TIME_MS"],[8459,25,8524,23],[8459,28,8524,26],[8459,33,8524,31],[8460,2,8525,0],[8460,6,8525,4,"_WIDGET_ID_START"],[8460,22,8525,20],[8460,25,8525,23],[8460,38,8525,36],[8461,2,8526,0],[8461,6,8526,4,"MockReCaptcha"],[8461,19,8526,17],[8461,22,8526,20],[8461,35,8526,35],[8461,47,8526,47],[8462,4,8527,4],[8462,13,8527,13,"MockReCaptcha"],[8462,26,8527,26,"MockReCaptcha"],[8462,27,8527,27,"auth"],[8462,31,8527,31],[8462,33,8527,33],[8463,6,8528,8],[8463,10,8528,12],[8463,11,8528,13,"auth"],[8463,15,8528,17],[8463,18,8528,20,"auth"],[8463,22,8528,24],[8464,6,8529,8],[8464,10,8529,12],[8464,11,8529,13,"counter"],[8464,18,8529,20],[8464,21,8529,23,"_WIDGET_ID_START"],[8464,37,8529,39],[8465,6,8530,8],[8465,10,8530,12],[8465,11,8530,13,"_widgets"],[8465,19,8530,21],[8465,22,8530,24],[8465,26,8530,28,"Map"],[8465,29,8530,31],[8465,30,8530,32],[8465,31,8530,33],[8466,4,8531,4],[8467,4,8532,4,"MockReCaptcha"],[8467,17,8532,17],[8467,18,8532,18,"prototype"],[8467,27,8532,27],[8467,28,8532,28,"render"],[8467,34,8532,34],[8467,37,8532,37],[8467,47,8532,47,"container"],[8467,56,8532,56],[8467,58,8532,58,"parameters"],[8467,68,8532,68],[8467,70,8532,70],[8468,6,8533,8],[8468,10,8533,12,"id"],[8468,12,8533,14],[8468,15,8533,17],[8468,19,8533,21],[8468,20,8533,22,"counter"],[8468,27,8533,29],[8469,6,8534,8],[8469,10,8534,12],[8469,11,8534,13,"_widgets"],[8469,19,8534,21],[8469,20,8534,22,"set"],[8469,23,8534,25],[8469,24,8534,26,"id"],[8469,26,8534,28],[8469,28,8534,30],[8469,32,8534,34,"MockWidget"],[8469,42,8534,44],[8469,43,8534,45,"container"],[8469,52,8534,54],[8469,54,8534,56],[8469,58,8534,60],[8469,59,8534,61,"auth"],[8469,63,8534,65],[8469,64,8534,66,"name"],[8469,68,8534,70],[8469,70,8534,72,"parameters"],[8469,80,8534,82],[8469,84,8534,86],[8469,85,8534,87],[8469,86,8534,88],[8469,87,8534,89],[8469,88,8534,90],[8470,6,8535,8],[8470,10,8535,12],[8470,11,8535,13,"counter"],[8470,18,8535,20],[8470,20,8535,22],[8471,6,8536,8],[8471,13,8536,15,"id"],[8471,15,8536,17],[8472,4,8537,4],[8472,5,8537,5],[8473,4,8538,4,"MockReCaptcha"],[8473,17,8538,17],[8473,18,8538,18,"prototype"],[8473,27,8538,27],[8473,28,8538,28,"reset"],[8473,33,8538,33],[8473,36,8538,36],[8473,46,8538,46,"optWidgetId"],[8473,57,8538,57],[8473,59,8538,59],[8474,6,8539,8],[8474,10,8539,12,"_a"],[8474,12,8539,14],[8475,6,8540,8],[8475,10,8540,12,"id"],[8475,12,8540,14],[8475,15,8540,17,"optWidgetId"],[8475,26,8540,28],[8475,30,8540,32,"_WIDGET_ID_START"],[8475,46,8540,48],[8476,6,8541,8],[8476,12,8541,14],[8476,13,8541,15,"_a"],[8476,15,8541,17],[8476,18,8541,20],[8476,22,8541,24],[8476,23,8541,25,"_widgets"],[8476,31,8541,33],[8476,32,8541,34,"get"],[8476,35,8541,37],[8476,36,8541,38,"id"],[8476,38,8541,40],[8476,39,8541,41],[8476,45,8541,47],[8476,49,8541,51],[8476,53,8541,55,"_a"],[8476,55,8541,57],[8476,60,8541,57,"undefined"],[8476,69,8541,68],[8476,72,8541,68,"undefined"],[8476,81,8541,68],[8476,84,8541,80,"_a"],[8476,86,8541,82],[8476,87,8541,83,"delete"],[8476,93,8541,89],[8476,94,8541,90],[8476,95,8541,91],[8476,96,8541,92],[8477,6,8542,8],[8477,10,8542,12],[8477,11,8542,13,"_widgets"],[8477,19,8542,21],[8477,20,8542,22,"delete"],[8477,26,8542,28],[8477,27,8542,29,"id"],[8477,29,8542,31],[8477,30,8542,32],[8478,4,8543,4],[8478,5,8543,5],[8479,4,8544,4,"MockReCaptcha"],[8479,17,8544,17],[8479,18,8544,18,"prototype"],[8479,27,8544,27],[8479,28,8544,28,"getResponse"],[8479,39,8544,39],[8479,42,8544,42],[8479,52,8544,52,"optWidgetId"],[8479,63,8544,63],[8479,65,8544,65],[8480,6,8545,8],[8480,10,8545,12,"_a"],[8480,12,8545,14],[8481,6,8546,8],[8481,10,8546,12,"id"],[8481,12,8546,14],[8481,15,8546,17,"optWidgetId"],[8481,26,8546,28],[8481,30,8546,32,"_WIDGET_ID_START"],[8481,46,8546,48],[8482,6,8547,8],[8482,13,8547,15],[8482,14,8547,16],[8482,15,8547,17,"_a"],[8482,17,8547,19],[8482,20,8547,22],[8482,24,8547,26],[8482,25,8547,27,"_widgets"],[8482,33,8547,35],[8482,34,8547,36,"get"],[8482,37,8547,39],[8482,38,8547,40,"id"],[8482,40,8547,42],[8482,41,8547,43],[8482,47,8547,49],[8482,51,8547,53],[8482,55,8547,57,"_a"],[8482,57,8547,59],[8482,62,8547,59,"undefined"],[8482,71,8547,70],[8482,74,8547,70,"undefined"],[8482,83,8547,70],[8482,86,8547,82,"_a"],[8482,88,8547,84],[8482,89,8547,85,"getResponse"],[8482,100,8547,96],[8482,101,8547,97],[8482,102,8547,98],[8482,107,8547,103],[8482,109,8547,105],[8483,4,8548,4],[8483,5,8548,5],[8484,4,8549,4,"MockReCaptcha"],[8484,17,8549,17],[8484,18,8549,18,"prototype"],[8484,27,8549,27],[8484,28,8549,28,"execute"],[8484,35,8549,35],[8484,38,8549,38],[8484,48,8549,48,"optWidgetId"],[8484,59,8549,59],[8484,61,8549,61],[8485,6,8550,8],[8485,10,8550,12,"_a"],[8485,12,8550,14],[8486,6,8551,8],[8486,13,8551,15,"tslib"],[8486,18,8551,20],[8486,19,8551,21,"__awaiter"],[8486,28,8551,30],[8486,29,8551,31],[8486,33,8551,35],[8486,35,8551,35,"undefined"],[8486,44,8551,35],[8486,46,8551,35,"undefined"],[8486,55,8551,35],[8486,57,8551,53],[8486,69,8551,65],[8487,8,8552,12],[8487,12,8552,16,"id"],[8487,14,8552,18],[8488,8,8553,12],[8488,15,8553,19,"tslib"],[8488,20,8553,24],[8488,21,8553,25,"__generator"],[8488,32,8553,36],[8488,33,8553,37],[8488,37,8553,41],[8488,39,8553,43],[8488,49,8553,53,"_b"],[8488,51,8553,55],[8488,53,8553,57],[8489,10,8554,16,"id"],[8489,12,8554,18],[8489,15,8554,21,"optWidgetId"],[8489,26,8554,32],[8489,30,8554,36,"_WIDGET_ID_START"],[8489,46,8554,52],[8490,10,8555,16],[8490,16,8555,22],[8490,17,8555,23,"_a"],[8490,19,8555,25],[8490,22,8555,28],[8490,26,8555,32],[8490,27,8555,33,"_widgets"],[8490,35,8555,41],[8490,36,8555,42,"get"],[8490,39,8555,45],[8490,40,8555,46,"id"],[8490,42,8555,48],[8490,43,8555,49],[8490,49,8555,55],[8490,53,8555,59],[8490,57,8555,63,"_a"],[8490,59,8555,65],[8490,64,8555,65,"undefined"],[8490,73,8555,76],[8490,76,8555,76,"undefined"],[8490,85,8555,76],[8490,88,8555,88,"_a"],[8490,90,8555,90],[8490,91,8555,91,"execute"],[8490,98,8555,98],[8490,99,8555,99],[8490,100,8555,100],[8490,101,8555,101],[8491,10,8556,16],[8491,17,8556,23],[8491,18,8556,24],[8491,19,8556,25],[8491,20,8556,26],[8491,32,8556,38],[8491,34,8556,40],[8491,35,8556,41],[8492,8,8557,12],[8492,9,8557,13],[8492,10,8557,14],[8493,6,8558,8],[8493,7,8558,9],[8493,8,8558,10],[8494,4,8559,4],[8494,5,8559,5],[8495,4,8560,4],[8495,11,8560,11,"MockReCaptcha"],[8495,24,8560,24],[8496,2,8561,0],[8496,3,8561,1],[8496,4,8561,2],[8496,5,8561,4],[8497,2,8562,0],[8497,6,8562,4,"MockWidget"],[8497,16,8562,14],[8497,19,8562,17],[8497,32,8562,32],[8497,44,8562,44],[8498,4,8563,4],[8498,13,8563,13,"MockWidget"],[8498,23,8563,23,"MockWidget"],[8498,24,8563,24,"containerOrId"],[8498,37,8563,37],[8498,39,8563,39,"appName"],[8498,46,8563,46],[8498,48,8563,48,"params"],[8498,54,8563,54],[8498,56,8563,56],[8499,6,8564,8],[8499,10,8564,12,"_this"],[8499,15,8564,17],[8499,18,8564,20],[8499,22,8564,24],[8500,6,8565,8],[8500,10,8565,12],[8500,11,8565,13,"params"],[8500,17,8565,19],[8500,20,8565,22,"params"],[8500,26,8565,28],[8501,6,8566,8],[8501,10,8566,12],[8501,11,8566,13,"timerId"],[8501,18,8566,20],[8501,21,8566,23],[8501,25,8566,27],[8502,6,8567,8],[8502,10,8567,12],[8502,11,8567,13,"deleted"],[8502,18,8567,20],[8502,21,8567,23],[8502,26,8567,28],[8503,6,8568,8],[8503,10,8568,12],[8503,11,8568,13,"responseToken"],[8503,24,8568,26],[8503,27,8568,29],[8503,31,8568,33],[8504,6,8569,8],[8504,10,8569,12],[8504,11,8569,13,"clickHandler"],[8504,23,8569,25],[8504,26,8569,28],[8504,38,8569,40],[8505,8,8570,12,"_this"],[8505,13,8570,17],[8505,14,8570,18,"execute"],[8505,21,8570,25],[8505,22,8570,26],[8505,23,8570,27],[8506,6,8571,8],[8506,7,8571,9],[8507,6,8572,8],[8507,10,8572,12,"container"],[8507,19,8572,21],[8507,22,8572,24],[8507,29,8572,31,"containerOrId"],[8507,42,8572,44],[8507,47,8572,49],[8507,55,8572,57],[8507,58,8573,14,"document"],[8507,66,8573,22],[8507,67,8573,23,"getElementById"],[8507,81,8573,37],[8507,82,8573,38,"containerOrId"],[8507,95,8573,51],[8507,96,8573,52],[8507,99,8574,14,"containerOrId"],[8507,112,8574,27],[8508,6,8575,8,"_assert"],[8508,13,8575,15],[8508,14,8575,16,"container"],[8508,23,8575,25],[8508,25,8575,27],[8508,41,8575,43],[8508,42,8575,44],[8508,78,8575,80],[8509,8,8575,82,"appName"],[8509,15,8575,89],[8509,17,8575,91,"appName"],[8510,6,8575,99],[8510,7,8575,100],[8510,8,8575,101],[8511,6,8576,8],[8511,10,8576,12],[8511,11,8576,13,"container"],[8511,20,8576,22],[8511,23,8576,25,"container"],[8511,32,8576,34],[8512,6,8577,8],[8512,10,8577,12],[8512,11,8577,13,"isVisible"],[8512,20,8577,22],[8512,23,8577,25],[8512,27,8577,29],[8512,28,8577,30,"params"],[8512,34,8577,36],[8512,35,8577,37,"size"],[8512,39,8577,41],[8512,44,8577,46],[8512,55,8577,57],[8513,6,8578,8],[8513,10,8578,12],[8513,14,8578,16],[8513,15,8578,17,"isVisible"],[8513,24,8578,26],[8513,26,8578,28],[8514,8,8579,12],[8514,12,8579,16],[8514,13,8579,17,"execute"],[8514,20,8579,24],[8514,21,8579,25],[8514,22,8579,26],[8515,6,8580,8],[8515,7,8580,9],[8515,13,8581,13],[8516,8,8582,12],[8516,12,8582,16],[8516,13,8582,17,"container"],[8516,22,8582,26],[8516,23,8582,27,"addEventListener"],[8516,39,8582,43],[8516,40,8582,44],[8516,47,8582,51],[8516,49,8582,53],[8516,53,8582,57],[8516,54,8582,58,"clickHandler"],[8516,66,8582,70],[8516,67,8582,71],[8517,6,8583,8],[8518,4,8584,4],[8519,4,8585,4,"MockWidget"],[8519,14,8585,14],[8519,15,8585,15,"prototype"],[8519,24,8585,24],[8519,25,8585,25,"getResponse"],[8519,36,8585,36],[8519,39,8585,39],[8519,51,8585,51],[8520,6,8586,8],[8520,10,8586,12],[8520,11,8586,13,"checkIfDeleted"],[8520,25,8586,27],[8520,26,8586,28],[8520,27,8586,29],[8521,6,8587,8],[8521,13,8587,15],[8521,17,8587,19],[8521,18,8587,20,"responseToken"],[8521,31,8587,33],[8522,4,8588,4],[8522,5,8588,5],[8523,4,8589,4,"MockWidget"],[8523,14,8589,14],[8523,15,8589,15,"prototype"],[8523,24,8589,24],[8523,25,8589,25,"delete"],[8523,31,8589,31],[8523,34,8589,34],[8523,46,8589,46],[8524,6,8590,8],[8524,10,8590,12],[8524,11,8590,13,"checkIfDeleted"],[8524,25,8590,27],[8524,26,8590,28],[8524,27,8590,29],[8525,6,8591,8],[8525,10,8591,12],[8525,11,8591,13,"deleted"],[8525,18,8591,20],[8525,21,8591,23],[8525,25,8591,27],[8526,6,8592,8],[8526,10,8592,12],[8526,14,8592,16],[8526,15,8592,17,"timerId"],[8526,22,8592,24],[8526,24,8592,26],[8527,8,8593,12,"clearTimeout"],[8527,20,8593,24],[8527,21,8593,25],[8527,25,8593,29],[8527,26,8593,30,"timerId"],[8527,33,8593,37],[8527,34,8593,38],[8528,8,8594,12],[8528,12,8594,16],[8528,13,8594,17,"timerId"],[8528,20,8594,24],[8528,23,8594,27],[8528,27,8594,31],[8529,6,8595,8],[8530,6,8596,8],[8530,10,8596,12],[8530,11,8596,13,"container"],[8530,20,8596,22],[8530,21,8596,23,"removeEventListener"],[8530,40,8596,42],[8530,41,8596,43],[8530,48,8596,50],[8530,50,8596,52],[8530,54,8596,56],[8530,55,8596,57,"clickHandler"],[8530,67,8596,69],[8530,68,8596,70],[8531,4,8597,4],[8531,5,8597,5],[8532,4,8598,4,"MockWidget"],[8532,14,8598,14],[8532,15,8598,15,"prototype"],[8532,24,8598,24],[8532,25,8598,25,"execute"],[8532,32,8598,32],[8532,35,8598,35],[8532,47,8598,47],[8533,6,8599,8],[8533,10,8599,12,"_this"],[8533,15,8599,17],[8533,18,8599,20],[8533,22,8599,24],[8534,6,8600,8],[8534,10,8600,12],[8534,11,8600,13,"checkIfDeleted"],[8534,25,8600,27],[8534,26,8600,28],[8534,27,8600,29],[8535,6,8601,8],[8535,10,8601,12],[8535,14,8601,16],[8535,15,8601,17,"timerId"],[8535,22,8601,24],[8535,24,8601,26],[8536,8,8602,12],[8537,6,8603,8],[8538,6,8604,8],[8538,10,8604,12],[8538,11,8604,13,"timerId"],[8538,18,8604,20],[8538,21,8604,23,"window"],[8538,27,8604,29],[8538,28,8604,30,"setTimeout"],[8538,38,8604,40],[8538,39,8604,41],[8538,51,8604,53],[8539,8,8605,12,"_this"],[8539,13,8605,17],[8539,14,8605,18,"responseToken"],[8539,27,8605,31],[8539,30,8605,34,"generateRandomAlphaNumericString"],[8539,62,8605,66],[8539,63,8605,67],[8539,65,8605,69],[8539,66,8605,70],[8540,8,8606,12],[8540,12,8606,16,"_a"],[8540,14,8606,18],[8540,17,8606,21,"_this"],[8540,22,8606,26],[8540,23,8606,27,"params"],[8540,29,8606,33],[8541,10,8606,35,"callback"],[8541,18,8606,43],[8541,21,8606,46,"_a"],[8541,23,8606,48],[8541,24,8606,49,"callback"],[8541,32,8606,57],[8542,10,8606,59,"expiredCallback"],[8542,25,8606,74],[8542,28,8606,77,"_a"],[8542,30,8606,79],[8542,31,8606,80],[8542,49,8606,98],[8542,50,8606,99],[8543,8,8607,12],[8543,12,8607,16,"callback"],[8543,20,8607,24],[8543,22,8607,26],[8544,10,8608,16],[8544,14,8608,20],[8545,12,8609,20,"callback"],[8545,20,8609,28],[8545,21,8609,29,"_this"],[8545,26,8609,34],[8545,27,8609,35,"responseToken"],[8545,40,8609,48],[8545,41,8609,49],[8546,10,8610,16],[8546,11,8610,17],[8546,12,8611,16],[8546,19,8611,23,"e"],[8546,20,8611,24],[8546,22,8611,26],[8546,23,8611,28],[8547,8,8612,12],[8548,8,8613,12,"_this"],[8548,13,8613,17],[8548,14,8613,18,"timerId"],[8548,21,8613,25],[8548,24,8613,28,"window"],[8548,30,8613,34],[8548,31,8613,35,"setTimeout"],[8548,41,8613,45],[8548,42,8613,46],[8548,54,8613,58],[8549,10,8614,16,"_this"],[8549,15,8614,21],[8549,16,8614,22,"timerId"],[8549,23,8614,29],[8549,26,8614,32],[8549,30,8614,36],[8550,10,8615,16,"_this"],[8550,15,8615,21],[8550,16,8615,22,"responseToken"],[8550,29,8615,35],[8550,32,8615,38],[8550,36,8615,42],[8551,10,8616,16],[8551,14,8616,20,"expiredCallback"],[8551,29,8616,35],[8551,31,8616,37],[8552,12,8617,20],[8552,16,8617,24],[8553,14,8618,24,"expiredCallback"],[8553,29,8618,39],[8553,30,8618,40],[8553,31,8618,41],[8554,12,8619,20],[8554,13,8619,21],[8554,14,8620,20],[8554,21,8620,27,"e"],[8554,22,8620,28],[8554,24,8620,30],[8554,25,8620,32],[8555,10,8621,16],[8556,10,8622,16],[8556,14,8622,20,"_this"],[8556,19,8622,25],[8556,20,8622,26,"isVisible"],[8556,29,8622,35],[8556,31,8622,37],[8557,12,8623,20,"_this"],[8557,17,8623,25],[8557,18,8623,26,"execute"],[8557,25,8623,33],[8557,26,8623,34],[8557,27,8623,35],[8558,10,8624,16],[8559,8,8625,12],[8559,9,8625,13],[8559,11,8625,15,"_EXPIRATION_TIME_MS"],[8559,30,8625,34],[8559,31,8625,35],[8560,6,8626,8],[8560,7,8626,9],[8560,9,8626,11,"_SOLVE_TIME_MS"],[8560,23,8626,25],[8560,24,8626,26],[8561,4,8627,4],[8561,5,8627,5],[8562,4,8628,4,"MockWidget"],[8562,14,8628,14],[8562,15,8628,15,"prototype"],[8562,24,8628,24],[8562,25,8628,25,"checkIfDeleted"],[8562,39,8628,39],[8562,42,8628,42],[8562,54,8628,54],[8563,6,8629,8],[8563,10,8629,12],[8563,14,8629,16],[8563,15,8629,17,"deleted"],[8563,22,8629,24],[8563,24,8629,26],[8564,8,8630,12],[8564,14,8630,18],[8564,18,8630,22,"Error"],[8564,23,8630,27],[8564,24,8630,28],[8564,61,8630,65],[8564,62,8630,66],[8565,6,8631,8],[8566,4,8632,4],[8566,5,8632,5],[8567,4,8633,4],[8567,11,8633,11,"MockWidget"],[8567,21,8633,21],[8568,2,8634,0],[8568,3,8634,1],[8568,4,8634,2],[8568,5,8634,4],[8569,2,8635,0],[8569,11,8635,9,"generateRandomAlphaNumericString"],[8569,43,8635,41,"generateRandomAlphaNumericString"],[8569,44,8635,42,"len"],[8569,47,8635,45],[8569,49,8635,47],[8570,4,8636,4],[8570,8,8636,8,"chars"],[8570,13,8636,13],[8570,16,8636,16],[8570,18,8636,18],[8571,4,8637,4],[8571,8,8637,8,"allowedChars"],[8571,20,8637,20],[8571,23,8637,23],[8571,87,8637,87],[8572,4,8638,4],[8572,9,8638,9],[8572,13,8638,13,"i"],[8572,14,8638,14],[8572,17,8638,17],[8572,18,8638,18],[8572,20,8638,20,"i"],[8572,21,8638,21],[8572,24,8638,24,"len"],[8572,27,8638,27],[8572,29,8638,29,"i"],[8572,30,8638,30],[8572,32,8638,32],[8572,34,8638,34],[8573,6,8639,8,"chars"],[8573,11,8639,13],[8573,12,8639,14,"push"],[8573,16,8639,18],[8573,17,8639,19,"allowedChars"],[8573,29,8639,31],[8573,30,8639,32,"charAt"],[8573,36,8639,38],[8573,37,8639,39,"Math"],[8573,41,8639,43],[8573,42,8639,44,"floor"],[8573,47,8639,49],[8573,48,8639,50,"Math"],[8573,52,8639,54],[8573,53,8639,55,"random"],[8573,59,8639,61],[8573,60,8639,62],[8573,61,8639,63],[8573,64,8639,66,"allowedChars"],[8573,76,8639,78],[8573,77,8639,79,"length"],[8573,83,8639,85],[8573,84,8639,86],[8573,85,8639,87],[8573,86,8639,88],[8574,4,8640,4],[8575,4,8641,4],[8575,11,8641,11,"chars"],[8575,16,8641,16],[8575,17,8641,17,"join"],[8575,21,8641,21],[8575,22,8641,22],[8575,24,8641,24],[8575,25,8641,25],[8576,2,8642,0],[8578,2,8644,0],[8579,0,8645,0],[8580,0,8646,0],[8581,0,8647,0],[8582,0,8648,0],[8583,0,8649,0],[8584,0,8650,0],[8585,0,8651,0],[8586,0,8652,0],[8587,0,8653,0],[8588,0,8654,0],[8589,0,8655,0],[8590,0,8656,0],[8591,0,8657,0],[8592,0,8658,0],[8593,0,8659,0],[8594,2,8660,0],[8595,2,8661,0],[8596,2,8662,0],[8596,6,8662,4,"_JSLOAD_CALLBACK"],[8596,22,8662,20],[8596,25,8662,23,"_generateCallbackName"],[8596,46,8662,44],[8596,47,8662,45],[8596,52,8662,50],[8596,53,8662,51],[8597,2,8663,0],[8597,6,8663,4,"NETWORK_TIMEOUT_DELAY"],[8597,27,8663,25],[8597,30,8663,28],[8597,34,8663,32,"Delay"],[8597,39,8663,37],[8597,40,8663,38],[8597,45,8663,43],[8597,47,8663,45],[8597,52,8663,50],[8597,53,8663,51],[8598,2,8664,0],[8599,0,8665,0],[8600,0,8666,0],[8601,2,8667,0],[8601,6,8667,4,"ReCaptchaLoaderImpl"],[8601,25,8667,23],[8601,28,8667,26],[8601,41,8667,41],[8601,53,8667,53],[8602,4,8668,4],[8602,13,8668,13,"ReCaptchaLoaderImpl"],[8602,32,8668,32,"ReCaptchaLoaderImpl"],[8602,33,8668,32],[8602,35,8668,35],[8603,6,8669,8],[8603,10,8669,12,"_a"],[8603,12,8669,14],[8604,6,8670,8],[8604,10,8670,12],[8604,11,8670,13,"hostLanguage"],[8604,23,8670,25],[8604,26,8670,28],[8604,28,8670,30],[8605,6,8671,8],[8605,10,8671,12],[8605,11,8671,13,"counter"],[8605,18,8671,20],[8605,21,8671,23],[8605,22,8671,24],[8606,6,8672,8],[8607,0,8673,0],[8608,0,8674,0],[8609,0,8675,0],[8610,0,8676,0],[8611,6,8677,8],[8611,10,8677,12],[8611,11,8677,13,"librarySeparatelyLoaded"],[8611,34,8677,36],[8611,37,8677,39],[8611,38,8677,40],[8611,40,8677,42],[8611,41,8677,43,"_a"],[8611,43,8677,45],[8611,46,8677,48,"_window"],[8611,53,8677,55],[8611,54,8677,56],[8611,55,8677,57],[8611,56,8677,58,"grecaptcha"],[8611,66,8677,68],[8611,72,8677,74],[8611,76,8677,78],[8611,80,8677,82,"_a"],[8611,82,8677,84],[8611,87,8677,84,"undefined"],[8611,96,8677,95],[8611,99,8677,95,"undefined"],[8611,108,8677,95],[8611,111,8677,107,"_a"],[8611,113,8677,109],[8611,114,8677,110,"render"],[8611,120,8677,116],[8611,121,8677,117],[8612,4,8678,4],[8613,4,8679,4,"ReCaptchaLoaderImpl"],[8613,23,8679,23],[8613,24,8679,24,"prototype"],[8613,33,8679,33],[8613,34,8679,34,"load"],[8613,38,8679,38],[8613,41,8679,41],[8613,51,8679,51,"auth"],[8613,55,8679,55],[8613,57,8679,57,"hl"],[8613,59,8679,59],[8613,61,8679,61],[8614,6,8680,8],[8614,10,8680,12,"_this"],[8614,15,8680,17],[8614,18,8680,20],[8614,22,8680,24],[8615,6,8681,8],[8615,10,8681,12,"hl"],[8615,12,8681,14],[8615,17,8681,14,"undefined"],[8615,26,8681,25],[8615,28,8681,27],[8616,8,8681,29,"hl"],[8616,10,8681,31],[8616,13,8681,34],[8616,15,8681,36],[8617,6,8681,38],[8618,6,8682,8,"_assert"],[8618,13,8682,15],[8618,14,8682,16,"isHostLanguageValid"],[8618,33,8682,35],[8618,34,8682,36,"hl"],[8618,36,8682,38],[8618,37,8682,39],[8618,39,8682,41,"auth"],[8618,43,8682,45],[8618,45,8682,47],[8618,61,8682,63],[8618,62,8682,64],[8618,96,8682,98],[8618,97,8682,99],[8619,6,8683,8],[8619,10,8683,12],[8619,14,8683,16],[8619,15,8683,17,"shouldResolveImmediately"],[8619,39,8683,41],[8619,40,8683,42,"hl"],[8619,42,8683,44],[8619,43,8683,45],[8619,47,8683,49,"isV2"],[8619,51,8683,53],[8619,52,8683,54,"_window"],[8619,59,8683,61],[8619,60,8683,62],[8619,61,8683,63],[8619,62,8683,64,"grecaptcha"],[8619,72,8683,74],[8619,73,8683,75],[8619,75,8683,77],[8620,8,8684,12],[8620,15,8684,19,"Promise"],[8620,22,8684,26],[8620,23,8684,27,"resolve"],[8620,30,8684,34],[8620,31,8684,35,"_window"],[8620,38,8684,42],[8620,39,8684,43],[8620,40,8684,44],[8620,41,8684,45,"grecaptcha"],[8620,51,8684,55],[8620,52,8684,56],[8621,6,8685,8],[8622,6,8686,8],[8622,13,8686,15],[8622,17,8686,19,"Promise"],[8622,24,8686,26],[8622,25,8686,27],[8622,35,8686,37,"resolve"],[8622,42,8686,44],[8622,44,8686,46,"reject"],[8622,50,8686,52],[8622,52,8686,54],[8623,8,8687,12],[8623,12,8687,16,"networkTimeout"],[8623,26,8687,30],[8623,29,8687,33,"_window"],[8623,36,8687,40],[8623,37,8687,41],[8623,38,8687,42],[8623,39,8687,43,"setTimeout"],[8623,49,8687,53],[8623,50,8687,54],[8623,62,8687,66],[8624,10,8688,16,"reject"],[8624,16,8688,22],[8624,17,8688,23,"_createError"],[8624,29,8688,35],[8624,30,8688,36,"auth"],[8624,34,8688,40],[8624,36,8688,42],[8624,60,8688,66],[8624,61,8688,67],[8624,103,8688,109],[8624,104,8688,110],[8624,105,8688,111],[8625,8,8689,12],[8625,9,8689,13],[8625,11,8689,15,"NETWORK_TIMEOUT_DELAY"],[8625,32,8689,36],[8625,33,8689,37,"get"],[8625,36,8689,40],[8625,37,8689,41],[8625,38,8689,42],[8625,39,8689,43],[8626,8,8690,12,"_window"],[8626,15,8690,19],[8626,16,8690,20],[8626,17,8690,21],[8626,18,8690,22,"_JSLOAD_CALLBACK"],[8626,34,8690,38],[8626,35,8690,39],[8626,38,8690,42],[8626,50,8690,54],[8627,10,8691,16,"_window"],[8627,17,8691,23],[8627,18,8691,24],[8627,19,8691,25],[8627,20,8691,26,"clearTimeout"],[8627,32,8691,38],[8627,33,8691,39,"networkTimeout"],[8627,47,8691,53],[8627,48,8691,54],[8628,10,8692,16],[8628,17,8692,23,"_window"],[8628,24,8692,30],[8628,25,8692,31],[8628,26,8692,32],[8628,27,8692,33,"_JSLOAD_CALLBACK"],[8628,43,8692,49],[8628,44,8692,50],[8629,10,8693,16],[8629,14,8693,20,"recaptcha"],[8629,23,8693,29],[8629,26,8693,32,"_window"],[8629,33,8693,39],[8629,34,8693,40],[8629,35,8693,41],[8629,36,8693,42,"grecaptcha"],[8629,46,8693,52],[8630,10,8694,16],[8630,14,8694,20],[8630,15,8694,21,"recaptcha"],[8630,24,8694,30],[8630,28,8694,34],[8630,29,8694,35,"isV2"],[8630,33,8694,39],[8630,34,8694,40,"recaptcha"],[8630,43,8694,49],[8630,44,8694,50],[8630,46,8694,52],[8631,12,8695,20,"reject"],[8631,18,8695,26],[8631,19,8695,27,"_createError"],[8631,31,8695,39],[8631,32,8695,40,"auth"],[8631,36,8695,44],[8631,38,8695,46],[8631,54,8695,62],[8631,55,8695,63],[8631,89,8695,97],[8631,90,8695,98],[8631,91,8695,99],[8632,12,8696,20],[8633,10,8697,16],[8634,10,8698,16],[8635,10,8699,16],[8636,10,8700,16],[8636,14,8700,20,"render"],[8636,20,8700,26],[8636,23,8700,29,"recaptcha"],[8636,32,8700,38],[8636,33,8700,39,"render"],[8636,39,8700,45],[8637,10,8701,16,"recaptcha"],[8637,19,8701,25],[8637,20,8701,26,"render"],[8637,26,8701,32],[8637,29,8701,35],[8637,39,8701,45,"container"],[8637,48,8701,54],[8637,50,8701,56,"params"],[8637,56,8701,62],[8637,58,8701,64],[8638,12,8702,20],[8638,16,8702,24,"widgetId"],[8638,24,8702,32],[8638,27,8702,35,"render"],[8638,33,8702,41],[8638,34,8702,42,"container"],[8638,43,8702,51],[8638,45,8702,53,"params"],[8638,51,8702,59],[8638,52,8702,60],[8639,12,8703,20,"_this"],[8639,17,8703,25],[8639,18,8703,26,"counter"],[8639,25,8703,33],[8639,27,8703,35],[8640,12,8704,20],[8640,19,8704,27,"widgetId"],[8640,27,8704,35],[8641,10,8705,16],[8641,11,8705,17],[8642,10,8706,16,"_this"],[8642,15,8706,21],[8642,16,8706,22,"hostLanguage"],[8642,28,8706,34],[8642,31,8706,37,"hl"],[8642,33,8706,39],[8643,10,8707,16,"resolve"],[8643,17,8707,23],[8643,18,8707,24,"recaptcha"],[8643,27,8707,33],[8643,28,8707,34],[8644,8,8708,12],[8644,9,8708,13],[8645,8,8709,12],[8645,12,8709,16,"url"],[8645,15,8709,19],[8645,18,8709,22],[8645,20,8709,24],[8645,21,8709,25,"concat"],[8645,27,8709,31],[8645,28,8709,32,"_recaptchaV2ScriptUrl"],[8645,49,8709,53],[8645,50,8709,54],[8645,51,8709,55],[8645,53,8709,57],[8645,56,8709,60],[8645,57,8709,61],[8645,58,8709,62,"concat"],[8645,64,8709,68],[8645,65,8709,69,"util"],[8645,69,8709,73],[8645,70,8709,74,"querystring"],[8645,81,8709,85],[8645,82,8709,86],[8646,10,8710,16,"onload"],[8646,16,8710,22],[8646,18,8710,24,"_JSLOAD_CALLBACK"],[8646,34,8710,40],[8647,10,8711,16,"render"],[8647,16,8711,22],[8647,18,8711,24],[8647,28,8711,34],[8648,10,8712,16,"hl"],[8648,12,8712,18],[8648,14,8712,20,"hl"],[8649,8,8713,12],[8649,9,8713,13],[8649,10,8713,14],[8649,11,8713,15],[8650,8,8714,12,"_loadJS"],[8650,15,8714,19],[8650,16,8714,20,"url"],[8650,19,8714,23],[8650,20,8714,24],[8650,21,8714,25,"catch"],[8650,26,8714,30],[8650,27,8714,31],[8650,39,8714,43],[8651,10,8715,16,"clearTimeout"],[8651,22,8715,28],[8651,23,8715,29,"networkTimeout"],[8651,37,8715,43],[8651,38,8715,44],[8652,10,8716,16,"reject"],[8652,16,8716,22],[8652,17,8716,23,"_createError"],[8652,29,8716,35],[8652,30,8716,36,"auth"],[8652,34,8716,40],[8652,36,8716,42],[8652,52,8716,58],[8652,53,8716,59],[8652,87,8716,93],[8652,88,8716,94],[8652,89,8716,95],[8653,8,8717,12],[8653,9,8717,13],[8653,10,8717,14],[8654,6,8718,8],[8654,7,8718,9],[8654,8,8718,10],[8655,4,8719,4],[8655,5,8719,5],[8656,4,8720,4,"ReCaptchaLoaderImpl"],[8656,23,8720,23],[8656,24,8720,24,"prototype"],[8656,33,8720,33],[8656,34,8720,34,"clearedOneInstance"],[8656,52,8720,52],[8656,55,8720,55],[8656,67,8720,67],[8657,6,8721,8],[8657,10,8721,12],[8657,11,8721,13,"counter"],[8657,18,8721,20],[8657,20,8721,22],[8658,4,8722,4],[8658,5,8722,5],[8659,4,8723,4,"ReCaptchaLoaderImpl"],[8659,23,8723,23],[8659,24,8723,24,"prototype"],[8659,33,8723,33],[8659,34,8723,34,"shouldResolveImmediately"],[8659,58,8723,58],[8659,61,8723,61],[8659,71,8723,71,"hl"],[8659,73,8723,73],[8659,75,8723,75],[8660,6,8724,8],[8660,10,8724,12,"_a"],[8660,12,8724,14],[8661,6,8725,8],[8662,6,8726,8],[8663,6,8727,8],[8664,6,8728,8],[8665,6,8729,8],[8666,6,8730,8],[8667,6,8731,8],[8668,6,8732,8],[8668,13,8732,16],[8668,14,8732,17],[8668,16,8732,19],[8668,17,8732,20,"_a"],[8668,19,8732,22],[8668,22,8732,25,"_window"],[8668,29,8732,32],[8668,30,8732,33],[8668,31,8732,34],[8668,32,8732,35,"grecaptcha"],[8668,42,8732,45],[8668,48,8732,51],[8668,52,8732,55],[8668,56,8732,59,"_a"],[8668,58,8732,61],[8668,63,8732,61,"undefined"],[8668,72,8732,72],[8668,75,8732,72,"undefined"],[8668,84,8732,72],[8668,87,8732,84,"_a"],[8668,89,8732,86],[8668,90,8732,87,"render"],[8668,96,8732,93],[8668,97,8732,94],[8668,102,8733,13,"hl"],[8668,104,8733,15],[8668,109,8733,20],[8668,113,8733,24],[8668,114,8733,25,"hostLanguage"],[8668,126,8733,37],[8668,130,8734,16],[8668,134,8734,20],[8668,135,8734,21,"counter"],[8668,142,8734,28],[8668,145,8734,31],[8668,146,8734,32],[8668,150,8735,16],[8668,154,8735,20],[8668,155,8735,21,"librarySeparatelyLoaded"],[8668,178,8735,44],[8668,179,8735,45],[8669,4,8736,4],[8669,5,8736,5],[8670,4,8737,4],[8670,11,8737,11,"ReCaptchaLoaderImpl"],[8670,30,8737,30],[8671,2,8738,0],[8671,3,8738,1],[8671,4,8738,2],[8671,5,8738,4],[8672,2,8739,0],[8672,11,8739,9,"isHostLanguageValid"],[8672,30,8739,28,"isHostLanguageValid"],[8672,31,8739,29,"hl"],[8672,33,8739,31],[8672,35,8739,33],[8673,4,8740,4],[8673,11,8740,11,"hl"],[8673,13,8740,13],[8673,14,8740,14,"length"],[8673,20,8740,20],[8673,24,8740,24],[8673,25,8740,25],[8673,29,8740,29],[8673,53,8740,53],[8673,54,8740,54,"test"],[8673,58,8740,58],[8673,59,8740,59,"hl"],[8673,61,8740,61],[8673,62,8740,62],[8674,2,8741,0],[8675,2,8742,0],[8675,6,8742,4,"MockReCaptchaLoaderImpl"],[8675,29,8742,27],[8675,32,8742,30],[8675,45,8742,45],[8675,57,8742,57],[8676,4,8743,4],[8676,13,8743,13,"MockReCaptchaLoaderImpl"],[8676,36,8743,36,"MockReCaptchaLoaderImpl"],[8676,37,8743,36],[8676,39,8743,39],[8676,40,8744,4],[8677,4,8745,4,"MockReCaptchaLoaderImpl"],[8677,27,8745,27],[8677,28,8745,28,"prototype"],[8677,37,8745,37],[8677,38,8745,38,"load"],[8677,42,8745,42],[8677,45,8745,45],[8677,55,8745,55,"auth"],[8677,59,8745,59],[8677,61,8745,61],[8678,6,8746,8],[8678,13,8746,15,"tslib"],[8678,18,8746,20],[8678,19,8746,21,"__awaiter"],[8678,28,8746,30],[8678,29,8746,31],[8678,33,8746,35],[8678,35,8746,35,"undefined"],[8678,44,8746,35],[8678,46,8746,35,"undefined"],[8678,55,8746,35],[8678,57,8746,53],[8678,69,8746,65],[8679,8,8747,12],[8679,15,8747,19,"tslib"],[8679,20,8747,24],[8679,21,8747,25,"__generator"],[8679,32,8747,36],[8679,33,8747,37],[8679,37,8747,41],[8679,39,8747,43],[8679,49,8747,53,"_a"],[8679,51,8747,55],[8679,53,8747,57],[8680,10,8748,16],[8680,17,8748,23],[8680,18,8748,24],[8680,19,8748,25],[8680,20,8748,26],[8680,32,8748,38],[8680,36,8748,42,"MockReCaptcha"],[8680,49,8748,55],[8680,50,8748,56,"auth"],[8680,54,8748,60],[8680,55,8748,61],[8680,56,8748,62],[8681,8,8749,12],[8681,9,8749,13],[8681,10,8749,14],[8682,6,8750,8],[8682,7,8750,9],[8682,8,8750,10],[8683,4,8751,4],[8683,5,8751,5],[8684,4,8752,4,"MockReCaptchaLoaderImpl"],[8684,27,8752,27],[8684,28,8752,28,"prototype"],[8684,37,8752,37],[8684,38,8752,38,"clearedOneInstance"],[8684,56,8752,56],[8684,59,8752,59],[8684,71,8752,71],[8684,72,8752,73],[8684,73,8752,74],[8685,4,8753,4],[8685,11,8753,11,"MockReCaptchaLoaderImpl"],[8685,34,8753,34],[8686,2,8754,0],[8686,3,8754,1],[8686,4,8754,2],[8686,5,8754,4],[8688,2,8756,0],[8689,0,8757,0],[8690,0,8758,0],[8691,0,8759,0],[8692,0,8760,0],[8693,0,8761,0],[8694,0,8762,0],[8695,0,8763,0],[8696,0,8764,0],[8697,0,8765,0],[8698,0,8766,0],[8699,0,8767,0],[8700,0,8768,0],[8701,0,8769,0],[8702,0,8770,0],[8703,0,8771,0],[8704,2,8772,0],[8704,6,8772,4,"RECAPTCHA_VERIFIER_TYPE"],[8704,29,8772,27],[8704,32,8772,30],[8704,43,8772,41],[8705,2,8773,0],[8705,6,8773,4,"DEFAULT_PARAMS"],[8705,20,8773,18],[8705,23,8773,21],[8706,4,8774,4,"theme"],[8706,9,8774,9],[8706,11,8774,11],[8706,18,8774,18],[8707,4,8775,4,"type"],[8707,8,8775,8],[8707,10,8775,10],[8708,2,8776,0],[8708,3,8776,1],[8709,2,8777,0],[8710,0,8778,0],[8711,0,8779,0],[8712,0,8780,0],[8713,0,8781,0],[8714,0,8782,0],[8715,0,8783,0],[8716,0,8784,0],[8717,2,8785,0],[8717,6,8785,4,"RecaptchaVerifier"],[8717,23,8785,21],[8717,26,8785,24],[8717,39,8785,39],[8717,51,8785,51],[8718,4,8786,4],[8719,0,8787,0],[8720,0,8788,0],[8721,0,8789,0],[8722,0,8790,0],[8723,0,8791,0],[8724,0,8792,0],[8725,0,8793,0],[8726,0,8794,0],[8727,0,8795,0],[8728,0,8796,0],[8729,0,8797,0],[8730,0,8798,0],[8731,0,8799,0],[8732,0,8800,0],[8733,0,8801,0],[8734,0,8802,0],[8735,0,8803,0],[8736,0,8804,0],[8737,4,8805,4],[8737,13,8805,13,"RecaptchaVerifier"],[8737,30,8805,30,"RecaptchaVerifier"],[8737,31,8805,31,"authExtern"],[8737,41,8805,41],[8737,43,8805,43,"containerOrId"],[8737,56,8805,56],[8737,58,8805,58,"parameters"],[8737,68,8805,68],[8737,70,8805,70],[8738,6,8806,8],[8738,10,8806,12,"parameters"],[8738,20,8806,22],[8738,25,8806,22,"undefined"],[8738,34,8806,33],[8738,36,8806,35],[8739,8,8806,37,"parameters"],[8739,18,8806,47],[8739,21,8806,50,"tslib"],[8739,26,8806,55],[8739,27,8806,56,"__assign"],[8739,35,8806,64],[8739,36,8806,65],[8739,37,8806,66],[8739,38,8806,67],[8739,40,8806,69,"DEFAULT_PARAMS"],[8739,54,8806,83],[8739,55,8806,84],[8740,6,8806,86],[8741,6,8807,8],[8741,10,8807,12],[8741,11,8807,13,"parameters"],[8741,21,8807,23],[8741,24,8807,26,"parameters"],[8741,34,8807,36],[8742,6,8808,8],[8743,0,8809,0],[8744,0,8810,0],[8745,0,8811,0],[8746,0,8812,0],[8747,0,8813,0],[8748,6,8814,8],[8748,10,8814,12],[8748,11,8814,13,"type"],[8748,15,8814,17],[8748,18,8814,20,"RECAPTCHA_VERIFIER_TYPE"],[8748,41,8814,43],[8749,6,8815,8],[8749,10,8815,12],[8749,11,8815,13,"destroyed"],[8749,20,8815,22],[8749,23,8815,25],[8749,28,8815,30],[8750,6,8816,8],[8750,10,8816,12],[8750,11,8816,13,"widgetId"],[8750,19,8816,21],[8750,22,8816,24],[8750,26,8816,28],[8751,6,8817,8],[8751,10,8817,12],[8751,11,8817,13,"tokenChangeListeners"],[8751,31,8817,33],[8751,34,8817,36],[8751,38,8817,40,"Set"],[8751,41,8817,43],[8751,42,8817,44],[8751,43,8817,45],[8752,6,8818,8],[8752,10,8818,12],[8752,11,8818,13,"renderPromise"],[8752,24,8818,26],[8752,27,8818,29],[8752,31,8818,33],[8753,6,8819,8],[8753,10,8819,12],[8753,11,8819,13,"recaptcha"],[8753,20,8819,22],[8753,23,8819,25],[8753,27,8819,29],[8754,6,8820,8],[8754,10,8820,12],[8754,11,8820,13,"auth"],[8754,15,8820,17],[8754,18,8820,20,"_castAuth"],[8754,27,8820,29],[8754,28,8820,30,"authExtern"],[8754,38,8820,40],[8754,39,8820,41],[8755,6,8821,8],[8755,10,8821,12],[8755,11,8821,13,"isInvisible"],[8755,22,8821,24],[8755,25,8821,27],[8755,29,8821,31],[8755,30,8821,32,"parameters"],[8755,40,8821,42],[8755,41,8821,43,"size"],[8755,45,8821,47],[8755,50,8821,52],[8755,61,8821,63],[8756,6,8822,8,"_assert"],[8756,13,8822,15],[8756,14,8822,16],[8756,21,8822,23,"document"],[8756,29,8822,31],[8756,34,8822,36],[8756,45,8822,47],[8756,47,8822,49],[8756,51,8822,53],[8756,52,8822,54,"auth"],[8756,56,8822,58],[8756,58,8822,60],[8756,103,8822,105],[8756,104,8822,106],[8756,147,8822,149],[8756,148,8822,150],[8757,6,8823,8],[8757,10,8823,12,"container"],[8757,19,8823,21],[8757,22,8823,24],[8757,29,8823,31,"containerOrId"],[8757,42,8823,44],[8757,47,8823,49],[8757,55,8823,57],[8757,58,8824,14,"document"],[8757,66,8824,22],[8757,67,8824,23,"getElementById"],[8757,81,8824,37],[8757,82,8824,38,"containerOrId"],[8757,95,8824,51],[8757,96,8824,52],[8757,99,8825,14,"containerOrId"],[8757,112,8825,27],[8758,6,8826,8,"_assert"],[8758,13,8826,15],[8758,14,8826,16,"container"],[8758,23,8826,25],[8758,25,8826,27],[8758,29,8826,31],[8758,30,8826,32,"auth"],[8758,34,8826,36],[8758,36,8826,38],[8758,52,8826,54],[8758,53,8826,55],[8758,87,8826,89],[8758,88,8826,90],[8759,6,8827,8],[8759,10,8827,12],[8759,11,8827,13,"container"],[8759,20,8827,22],[8759,23,8827,25,"container"],[8759,32,8827,34],[8760,6,8828,8],[8760,10,8828,12],[8760,11,8828,13,"parameters"],[8760,21,8828,23],[8760,22,8828,24,"callback"],[8760,30,8828,32],[8760,33,8828,35],[8760,37,8828,39],[8760,38,8828,40,"makeTokenCallback"],[8760,55,8828,57],[8760,56,8828,58],[8760,60,8828,62],[8760,61,8828,63,"parameters"],[8760,71,8828,73],[8760,72,8828,74,"callback"],[8760,80,8828,82],[8760,81,8828,83],[8761,6,8829,8],[8761,10,8829,12],[8761,11,8829,13,"_recaptchaLoader"],[8761,27,8829,29],[8761,30,8829,32],[8761,34,8829,36],[8761,35,8829,37,"auth"],[8761,39,8829,41],[8761,40,8829,42,"settings"],[8761,48,8829,50],[8761,49,8829,51,"appVerificationDisabledForTesting"],[8761,82,8829,84],[8761,85,8830,14],[8761,89,8830,18,"MockReCaptchaLoaderImpl"],[8761,112,8830,41],[8761,113,8830,42],[8761,114,8830,43],[8761,117,8831,14],[8761,121,8831,18,"ReCaptchaLoaderImpl"],[8761,140,8831,37],[8761,141,8831,38],[8761,142,8831,39],[8762,6,8832,8],[8762,10,8832,12],[8762,11,8832,13,"validateStartingState"],[8762,32,8832,34],[8762,33,8832,35],[8762,34,8832,36],[8763,6,8833,8],[8764,4,8834,4],[8765,4,8835,4],[8766,0,8836,0],[8767,0,8837,0],[8768,0,8838,0],[8769,0,8839,0],[8770,4,8840,4,"RecaptchaVerifier"],[8770,21,8840,21],[8770,22,8840,22,"prototype"],[8770,31,8840,31],[8770,32,8840,32,"verify"],[8770,38,8840,38],[8770,41,8840,41],[8770,53,8840,53],[8771,6,8841,8],[8771,13,8841,15,"tslib"],[8771,18,8841,20],[8771,19,8841,21,"__awaiter"],[8771,28,8841,30],[8771,29,8841,31],[8771,33,8841,35],[8771,35,8841,35,"undefined"],[8771,44,8841,35],[8771,46,8841,35,"undefined"],[8771,55,8841,35],[8771,57,8841,53],[8771,69,8841,65],[8772,8,8842,12],[8772,12,8842,16,"id"],[8772,14,8842,18],[8772,16,8842,20,"recaptcha"],[8772,25,8842,29],[8772,27,8842,31,"response"],[8772,35,8842,39],[8773,8,8843,12],[8773,12,8843,16,"_this"],[8773,17,8843,21],[8773,20,8843,24],[8773,24,8843,28],[8774,8,8844,12],[8774,15,8844,19,"tslib"],[8774,20,8844,24],[8774,21,8844,25,"__generator"],[8774,32,8844,36],[8774,33,8844,37],[8774,37,8844,41],[8774,39,8844,43],[8774,49,8844,53,"_a"],[8774,51,8844,55],[8774,53,8844,57],[8775,10,8845,16],[8775,18,8845,24,"_a"],[8775,20,8845,26],[8775,21,8845,27,"label"],[8775,26,8845,32],[8776,12,8846,20],[8776,17,8846,25],[8776,18,8846,26],[8777,14,8847,24],[8777,18,8847,28],[8777,19,8847,29,"assertNotDestroyed"],[8777,37,8847,47],[8777,38,8847,48],[8777,39,8847,49],[8778,14,8848,24],[8778,21,8848,31],[8778,22,8848,32],[8778,23,8848,33],[8778,24,8848,34],[8778,35,8848,45],[8778,39,8848,49],[8778,40,8848,50,"render"],[8778,46,8848,56],[8778,47,8848,57],[8778,48,8848,58],[8778,49,8848,59],[8779,12,8849,20],[8779,17,8849,25],[8779,18,8849,26],[8780,14,8850,24,"id"],[8780,16,8850,26],[8780,19,8850,29,"_a"],[8780,21,8850,31],[8780,22,8850,32,"sent"],[8780,26,8850,36],[8780,27,8850,37],[8780,28,8850,38],[8781,14,8851,24,"recaptcha"],[8781,23,8851,33],[8781,26,8851,36],[8781,30,8851,40],[8781,31,8851,41,"getAssertedRecaptcha"],[8781,51,8851,61],[8781,52,8851,62],[8781,53,8851,63],[8782,14,8852,24,"response"],[8782,22,8852,32],[8782,25,8852,35,"recaptcha"],[8782,34,8852,44],[8782,35,8852,45,"getResponse"],[8782,46,8852,56],[8782,47,8852,57,"id"],[8782,49,8852,59],[8782,50,8852,60],[8783,14,8853,24],[8783,18,8853,28,"response"],[8783,26,8853,36],[8783,28,8853,38],[8784,16,8854,28],[8784,23,8854,35],[8784,24,8854,36],[8784,25,8854,37],[8784,26,8854,38],[8784,38,8854,50,"response"],[8784,46,8854,58],[8784,47,8854,59],[8785,14,8855,24],[8786,14,8856,24],[8786,21,8856,31],[8786,22,8856,32],[8786,23,8856,33],[8786,24,8856,34],[8786,36,8856,46],[8786,40,8856,50,"Promise"],[8786,47,8856,57],[8786,48,8856,58],[8786,58,8856,68,"resolve"],[8786,65,8856,75],[8786,67,8856,77],[8787,16,8857,32],[8787,20,8857,36,"tokenChange"],[8787,31,8857,47],[8787,34,8857,50],[8787,43,8857,50,"tokenChange"],[8787,44,8857,60,"token"],[8787,49,8857,65],[8787,51,8857,67],[8788,18,8858,36],[8788,22,8858,40],[8788,23,8858,41,"token"],[8788,28,8858,46],[8788,30,8858,48],[8789,20,8859,40],[8789,27,8859,47],[8789,28,8859,48],[8790,18,8860,36],[8791,18,8861,36,"_this"],[8791,23,8861,41],[8791,24,8861,42,"tokenChangeListeners"],[8791,44,8861,62],[8791,45,8861,63,"delete"],[8791,51,8861,69],[8791,52,8861,70,"tokenChange"],[8791,63,8861,81],[8791,64,8861,82],[8792,18,8862,36,"resolve"],[8792,25,8862,43],[8792,26,8862,44,"token"],[8792,31,8862,49],[8792,32,8862,50],[8793,16,8863,32],[8793,17,8863,33],[8794,16,8864,32,"_this"],[8794,21,8864,37],[8794,22,8864,38,"tokenChangeListeners"],[8794,42,8864,58],[8794,43,8864,59,"add"],[8794,46,8864,62],[8794,47,8864,63,"tokenChange"],[8794,58,8864,74],[8794,59,8864,75],[8795,16,8865,32],[8795,20,8865,36,"_this"],[8795,25,8865,41],[8795,26,8865,42,"isInvisible"],[8795,37,8865,53],[8795,39,8865,55],[8796,18,8866,36,"recaptcha"],[8796,27,8866,45],[8796,28,8866,46,"execute"],[8796,35,8866,53],[8796,36,8866,54,"id"],[8796,38,8866,56],[8796,39,8866,57],[8797,16,8867,32],[8798,14,8868,28],[8798,15,8868,29],[8798,16,8868,30],[8798,17,8868,31],[8799,10,8869,16],[8800,8,8870,12],[8800,9,8870,13],[8800,10,8870,14],[8801,6,8871,8],[8801,7,8871,9],[8801,8,8871,10],[8802,4,8872,4],[8802,5,8872,5],[8803,4,8873,4],[8804,0,8874,0],[8805,0,8875,0],[8806,0,8876,0],[8807,0,8877,0],[8808,4,8878,4,"RecaptchaVerifier"],[8808,21,8878,21],[8808,22,8878,22,"prototype"],[8808,31,8878,31],[8808,32,8878,32,"render"],[8808,38,8878,38],[8808,41,8878,41],[8808,53,8878,53],[8809,6,8879,8],[8809,10,8879,12,"_this"],[8809,15,8879,17],[8809,18,8879,20],[8809,22,8879,24],[8810,6,8880,8],[8810,10,8880,12],[8811,8,8881,12],[8811,12,8881,16],[8811,13,8881,17,"assertNotDestroyed"],[8811,31,8881,35],[8811,32,8881,36],[8811,33,8881,37],[8812,6,8882,8],[8812,7,8882,9],[8812,8,8883,8],[8812,15,8883,15,"e"],[8812,16,8883,16],[8812,18,8883,18],[8813,8,8884,12],[8814,8,8885,12],[8815,8,8886,12],[8816,8,8887,12],[8816,15,8887,19,"Promise"],[8816,22,8887,26],[8816,23,8887,27,"reject"],[8816,29,8887,33],[8816,30,8887,34,"e"],[8816,31,8887,35],[8816,32,8887,36],[8817,6,8888,8],[8818,6,8889,8],[8818,10,8889,12],[8818,14,8889,16],[8818,15,8889,17,"renderPromise"],[8818,28,8889,30],[8818,30,8889,32],[8819,8,8890,12],[8819,15,8890,19],[8819,19,8890,23],[8819,20,8890,24,"renderPromise"],[8819,33,8890,37],[8820,6,8891,8],[8821,6,8892,8],[8821,10,8892,12],[8821,11,8892,13,"renderPromise"],[8821,24,8892,26],[8821,27,8892,29],[8821,31,8892,33],[8821,32,8892,34,"makeRenderPromise"],[8821,49,8892,51],[8821,50,8892,52],[8821,51,8892,53],[8821,52,8892,54,"catch"],[8821,57,8892,59],[8821,58,8892,60],[8821,68,8892,70,"e"],[8821,69,8892,71],[8821,71,8892,73],[8822,8,8893,12,"_this"],[8822,13,8893,17],[8822,14,8893,18,"renderPromise"],[8822,27,8893,31],[8822,30,8893,34],[8822,34,8893,38],[8823,8,8894,12],[8823,14,8894,18,"e"],[8823,15,8894,19],[8824,6,8895,8],[8824,7,8895,9],[8824,8,8895,10],[8825,6,8896,8],[8825,13,8896,15],[8825,17,8896,19],[8825,18,8896,20,"renderPromise"],[8825,31,8896,33],[8826,4,8897,4],[8826,5,8897,5],[8827,4,8898,4],[8828,4,8899,4,"RecaptchaVerifier"],[8828,21,8899,21],[8828,22,8899,22,"prototype"],[8828,31,8899,31],[8828,32,8899,32,"_reset"],[8828,38,8899,38],[8828,41,8899,41],[8828,53,8899,53],[8829,6,8900,8],[8829,10,8900,12],[8829,11,8900,13,"assertNotDestroyed"],[8829,29,8900,31],[8829,30,8900,32],[8829,31,8900,33],[8830,6,8901,8],[8830,10,8901,12],[8830,14,8901,16],[8830,15,8901,17,"widgetId"],[8830,23,8901,25],[8830,28,8901,30],[8830,32,8901,34],[8830,34,8901,36],[8831,8,8902,12],[8831,12,8902,16],[8831,13,8902,17,"getAssertedRecaptcha"],[8831,33,8902,37],[8831,34,8902,38],[8831,35,8902,39],[8831,36,8902,40,"reset"],[8831,41,8902,45],[8831,42,8902,46],[8831,46,8902,50],[8831,47,8902,51,"widgetId"],[8831,55,8902,59],[8831,56,8902,60],[8832,6,8903,8],[8833,4,8904,4],[8833,5,8904,5],[8834,4,8905,4],[8835,0,8906,0],[8836,0,8907,0],[8837,4,8908,4,"RecaptchaVerifier"],[8837,21,8908,21],[8837,22,8908,22,"prototype"],[8837,31,8908,31],[8837,32,8908,32,"clear"],[8837,37,8908,37],[8837,40,8908,40],[8837,52,8908,52],[8838,6,8909,8],[8838,10,8909,12,"_this"],[8838,15,8909,17],[8838,18,8909,20],[8838,22,8909,24],[8839,6,8910,8],[8839,10,8910,12],[8839,11,8910,13,"assertNotDestroyed"],[8839,29,8910,31],[8839,30,8910,32],[8839,31,8910,33],[8840,6,8911,8],[8840,10,8911,12],[8840,11,8911,13,"destroyed"],[8840,20,8911,22],[8840,23,8911,25],[8840,27,8911,29],[8841,6,8912,8],[8841,10,8912,12],[8841,11,8912,13,"_recaptchaLoader"],[8841,27,8912,29],[8841,28,8912,30,"clearedOneInstance"],[8841,46,8912,48],[8841,47,8912,49],[8841,48,8912,50],[8842,6,8913,8],[8842,10,8913,12],[8842,11,8913,13],[8842,15,8913,17],[8842,16,8913,18,"isInvisible"],[8842,27,8913,29],[8842,29,8913,31],[8843,8,8914,12],[8843,12,8914,16],[8843,13,8914,17,"container"],[8843,22,8914,26],[8843,23,8914,27,"childNodes"],[8843,33,8914,37],[8843,34,8914,38,"forEach"],[8843,41,8914,45],[8843,42,8914,46],[8843,52,8914,56,"node"],[8843,56,8914,60],[8843,58,8914,62],[8844,10,8915,16,"_this"],[8844,15,8915,21],[8844,16,8915,22,"container"],[8844,25,8915,31],[8844,26,8915,32,"removeChild"],[8844,37,8915,43],[8844,38,8915,44,"node"],[8844,42,8915,48],[8844,43,8915,49],[8845,8,8916,12],[8845,9,8916,13],[8845,10,8916,14],[8846,6,8917,8],[8847,4,8918,4],[8847,5,8918,5],[8848,4,8919,4,"RecaptchaVerifier"],[8848,21,8919,21],[8848,22,8919,22,"prototype"],[8848,31,8919,31],[8848,32,8919,32,"validateStartingState"],[8848,53,8919,53],[8848,56,8919,56],[8848,68,8919,68],[8849,6,8920,8,"_assert"],[8849,13,8920,15],[8849,14,8920,16],[8849,15,8920,17],[8849,19,8920,21],[8849,20,8920,22,"parameters"],[8849,30,8920,32],[8849,31,8920,33,"sitekey"],[8849,38,8920,40],[8849,40,8920,42],[8849,44,8920,46],[8849,45,8920,47,"auth"],[8849,49,8920,51],[8849,51,8920,53],[8849,67,8920,69],[8849,68,8920,70],[8849,102,8920,104],[8849,103,8920,105],[8850,6,8921,8,"_assert"],[8850,13,8921,15],[8850,14,8921,16],[8850,18,8921,20],[8850,19,8921,21,"isInvisible"],[8850,30,8921,32],[8850,34,8921,36],[8850,35,8921,37],[8850,39,8921,41],[8850,40,8921,42,"container"],[8850,49,8921,51],[8850,50,8921,52,"hasChildNodes"],[8850,63,8921,65],[8850,64,8921,66],[8850,65,8921,67],[8850,67,8921,69],[8850,71,8921,73],[8850,72,8921,74,"auth"],[8850,76,8921,78],[8850,78,8921,80],[8850,94,8921,96],[8850,95,8921,97],[8850,129,8921,131],[8850,130,8921,132],[8851,6,8922,8,"_assert"],[8851,13,8922,15],[8851,14,8922,16],[8851,21,8922,23,"document"],[8851,29,8922,31],[8851,34,8922,36],[8851,45,8922,47],[8851,47,8922,49],[8851,51,8922,53],[8851,52,8922,54,"auth"],[8851,56,8922,58],[8851,58,8922,60],[8851,103,8922,105],[8851,104,8922,106],[8851,147,8922,149],[8851,148,8922,150],[8852,4,8923,4],[8852,5,8923,5],[8853,4,8924,4,"RecaptchaVerifier"],[8853,21,8924,21],[8853,22,8924,22,"prototype"],[8853,31,8924,31],[8853,32,8924,32,"makeTokenCallback"],[8853,49,8924,49],[8853,52,8924,52],[8853,62,8924,62,"existing"],[8853,70,8924,70],[8853,72,8924,72],[8854,6,8925,8],[8854,10,8925,12,"_this"],[8854,15,8925,17],[8854,18,8925,20],[8854,22,8925,24],[8855,6,8926,8],[8855,13,8926,15],[8855,23,8926,25,"token"],[8855,28,8926,30],[8855,30,8926,32],[8856,8,8927,12,"_this"],[8856,13,8927,17],[8856,14,8927,18,"tokenChangeListeners"],[8856,34,8927,38],[8856,35,8927,39,"forEach"],[8856,42,8927,46],[8856,43,8927,47],[8856,53,8927,57,"listener"],[8856,61,8927,65],[8856,63,8927,67],[8857,10,8927,69],[8857,17,8927,76,"listener"],[8857,25,8927,84],[8857,26,8927,85,"token"],[8857,31,8927,90],[8857,32,8927,91],[8858,8,8927,93],[8858,9,8927,94],[8858,10,8927,95],[8859,8,8928,12],[8859,12,8928,16],[8859,19,8928,23,"existing"],[8859,27,8928,31],[8859,32,8928,36],[8859,42,8928,46],[8859,44,8928,48],[8860,10,8929,16,"existing"],[8860,18,8929,24],[8860,19,8929,25,"token"],[8860,24,8929,30],[8860,25,8929,31],[8861,8,8930,12],[8861,9,8930,13],[8861,15,8931,17],[8861,19,8931,21],[8861,26,8931,28,"existing"],[8861,34,8931,36],[8861,39,8931,41],[8861,47,8931,49],[8861,49,8931,51],[8862,10,8932,16],[8862,14,8932,20,"globalFunc"],[8862,24,8932,30],[8862,27,8932,33,"_window"],[8862,34,8932,40],[8862,35,8932,41],[8862,36,8932,42],[8862,37,8932,43,"existing"],[8862,45,8932,51],[8862,46,8932,52],[8863,10,8933,16],[8863,14,8933,20],[8863,21,8933,27,"globalFunc"],[8863,31,8933,37],[8863,36,8933,42],[8863,46,8933,52],[8863,48,8933,54],[8864,12,8934,20,"globalFunc"],[8864,22,8934,30],[8864,23,8934,31,"token"],[8864,28,8934,36],[8864,29,8934,37],[8865,10,8935,16],[8866,8,8936,12],[8867,6,8937,8],[8867,7,8937,9],[8868,4,8938,4],[8868,5,8938,5],[8869,4,8939,4,"RecaptchaVerifier"],[8869,21,8939,21],[8869,22,8939,22,"prototype"],[8869,31,8939,31],[8869,32,8939,32,"assertNotDestroyed"],[8869,50,8939,50],[8869,53,8939,53],[8869,65,8939,65],[8870,6,8940,8,"_assert"],[8870,13,8940,15],[8870,14,8940,16],[8870,15,8940,17],[8870,19,8940,21],[8870,20,8940,22,"destroyed"],[8870,29,8940,31],[8870,31,8940,33],[8870,35,8940,37],[8870,36,8940,38,"auth"],[8870,40,8940,42],[8870,42,8940,44],[8870,58,8940,60],[8870,59,8940,61],[8870,93,8940,95],[8870,94,8940,96],[8871,4,8941,4],[8871,5,8941,5],[8872,4,8942,4,"RecaptchaVerifier"],[8872,21,8942,21],[8872,22,8942,22,"prototype"],[8872,31,8942,31],[8872,32,8942,32,"makeRenderPromise"],[8872,49,8942,49],[8872,52,8942,52],[8872,64,8942,64],[8873,6,8943,8],[8873,13,8943,15,"tslib"],[8873,18,8943,20],[8873,19,8943,21,"__awaiter"],[8873,28,8943,30],[8873,29,8943,31],[8873,33,8943,35],[8873,35,8943,35,"undefined"],[8873,44,8943,35],[8873,46,8943,35,"undefined"],[8873,55,8943,35],[8873,57,8943,53],[8873,69,8943,65],[8874,8,8944,12],[8874,12,8944,16,"container"],[8874,21,8944,25],[8874,23,8944,27,"guaranteedEmpty"],[8874,38,8944,42],[8875,8,8945,12],[8875,15,8945,19,"tslib"],[8875,20,8945,24],[8875,21,8945,25,"__generator"],[8875,32,8945,36],[8875,33,8945,37],[8875,37,8945,41],[8875,39,8945,43],[8875,49,8945,53,"_a"],[8875,51,8945,55],[8875,53,8945,57],[8876,10,8946,16],[8876,18,8946,24,"_a"],[8876,20,8946,26],[8876,21,8946,27,"label"],[8876,26,8946,32],[8877,12,8947,20],[8877,17,8947,25],[8877,18,8947,26],[8878,14,8947,28],[8878,21,8947,35],[8878,22,8947,36],[8878,23,8947,37],[8878,24,8947,38],[8878,35,8947,49],[8878,39,8947,53],[8878,40,8947,54,"init"],[8878,44,8947,58],[8878,45,8947,59],[8878,46,8947,60],[8878,47,8947,61],[8879,12,8948,20],[8879,17,8948,25],[8879,18,8948,26],[8880,14,8949,24,"_a"],[8880,16,8949,26],[8880,17,8949,27,"sent"],[8880,21,8949,31],[8880,22,8949,32],[8880,23,8949,33],[8881,14,8950,24],[8881,18,8950,28],[8881,19,8950,29],[8881,23,8950,33],[8881,24,8950,34,"widgetId"],[8881,32,8950,42],[8881,34,8950,44],[8882,16,8951,28,"container"],[8882,25,8951,37],[8882,28,8951,40],[8882,32,8951,44],[8882,33,8951,45,"container"],[8882,42,8951,54],[8883,16,8952,28],[8883,20,8952,32],[8883,21,8952,33],[8883,25,8952,37],[8883,26,8952,38,"isInvisible"],[8883,37,8952,49],[8883,39,8952,51],[8884,18,8953,32,"guaranteedEmpty"],[8884,33,8953,47],[8884,36,8953,50,"document"],[8884,44,8953,58],[8884,45,8953,59,"createElement"],[8884,58,8953,72],[8884,59,8953,73],[8884,64,8953,78],[8884,65,8953,79],[8885,18,8954,32,"container"],[8885,27,8954,41],[8885,28,8954,42,"appendChild"],[8885,39,8954,53],[8885,40,8954,54,"guaranteedEmpty"],[8885,55,8954,69],[8885,56,8954,70],[8886,18,8955,32,"container"],[8886,27,8955,41],[8886,30,8955,44,"guaranteedEmpty"],[8886,45,8955,59],[8887,16,8956,28],[8888,16,8957,28],[8888,20,8957,32],[8888,21,8957,33,"widgetId"],[8888,29,8957,41],[8888,32,8957,44],[8888,36,8957,48],[8888,37,8957,49,"getAssertedRecaptcha"],[8888,57,8957,69],[8888,58,8957,70],[8888,59,8957,71],[8888,60,8957,72,"render"],[8888,66,8957,78],[8888,67,8957,79,"container"],[8888,76,8957,88],[8888,78,8957,90],[8888,82,8957,94],[8888,83,8957,95,"parameters"],[8888,93,8957,105],[8888,94,8957,106],[8889,14,8958,24],[8890,14,8959,24],[8890,21,8959,31],[8890,22,8959,32],[8890,23,8959,33],[8890,24,8959,34],[8890,36,8959,46],[8890,40,8959,50],[8890,41,8959,51,"widgetId"],[8890,49,8959,59],[8890,50,8959,60],[8891,10,8960,16],[8892,8,8961,12],[8892,9,8961,13],[8892,10,8961,14],[8893,6,8962,8],[8893,7,8962,9],[8893,8,8962,10],[8894,4,8963,4],[8894,5,8963,5],[8895,4,8964,4,"RecaptchaVerifier"],[8895,21,8964,21],[8895,22,8964,22,"prototype"],[8895,31,8964,31],[8895,32,8964,32,"init"],[8895,36,8964,36],[8895,39,8964,39],[8895,51,8964,51],[8896,6,8965,8],[8896,13,8965,15,"tslib"],[8896,18,8965,20],[8896,19,8965,21,"__awaiter"],[8896,28,8965,30],[8896,29,8965,31],[8896,33,8965,35],[8896,35,8965,35,"undefined"],[8896,44,8965,35],[8896,46,8965,35,"undefined"],[8896,55,8965,35],[8896,57,8965,53],[8896,69,8965,65],[8897,8,8966,12],[8897,12,8966,16,"_a"],[8897,14,8966,18],[8897,16,8966,20,"siteKey"],[8897,23,8966,27],[8898,8,8967,12],[8898,15,8967,19,"tslib"],[8898,20,8967,24],[8898,21,8967,25,"__generator"],[8898,32,8967,36],[8898,33,8967,37],[8898,37,8967,41],[8898,39,8967,43],[8898,49,8967,53,"_b"],[8898,51,8967,55],[8898,53,8967,57],[8899,10,8968,16],[8899,18,8968,24,"_b"],[8899,20,8968,26],[8899,21,8968,27,"label"],[8899,26,8968,32],[8900,12,8969,20],[8900,17,8969,25],[8900,18,8969,26],[8901,14,8970,24,"_assert"],[8901,21,8970,31],[8901,22,8970,32,"_isHttpOrHttps"],[8901,36,8970,46],[8901,37,8970,47],[8901,38,8970,48],[8901,42,8970,52],[8901,43,8970,53,"_isWorker"],[8901,52,8970,62],[8901,53,8970,63],[8901,54,8970,64],[8901,56,8970,66],[8901,60,8970,70],[8901,61,8970,71,"auth"],[8901,65,8970,75],[8901,67,8970,77],[8901,83,8970,93],[8901,84,8970,94],[8901,118,8970,128],[8901,119,8970,129],[8902,14,8971,24],[8902,21,8971,31],[8902,22,8971,32],[8902,23,8971,33],[8902,24,8971,34],[8902,35,8971,45,"domReady"],[8902,43,8971,53],[8902,44,8971,54],[8902,45,8971,55],[8902,46,8971,56],[8903,12,8972,20],[8903,17,8972,25],[8903,18,8972,26],[8904,14,8973,24,"_b"],[8904,16,8973,26],[8904,17,8973,27,"sent"],[8904,21,8973,31],[8904,22,8973,32],[8904,23,8973,33],[8905,14,8974,24,"_a"],[8905,16,8974,26],[8905,19,8974,29],[8905,23,8974,33],[8906,14,8975,24],[8906,21,8975,31],[8906,22,8975,32],[8906,23,8975,33],[8906,24,8975,34],[8906,35,8975,45],[8906,39,8975,49],[8906,40,8975,50,"_recaptchaLoader"],[8906,56,8975,66],[8906,57,8975,67,"load"],[8906,61,8975,71],[8906,62,8975,72],[8906,66,8975,76],[8906,67,8975,77,"auth"],[8906,71,8975,81],[8906,73,8975,83],[8906,77,8975,87],[8906,78,8975,88,"auth"],[8906,82,8975,92],[8906,83,8975,93,"languageCode"],[8906,95,8975,105],[8906,99,8975,109,"undefined"],[8906,108,8975,118],[8906,109,8975,119],[8906,110,8975,120],[8907,12,8976,20],[8907,17,8976,25],[8907,18,8976,26],[8908,14,8977,24,"_a"],[8908,16,8977,26],[8908,17,8977,27,"recaptcha"],[8908,26,8977,36],[8908,29,8977,39,"_b"],[8908,31,8977,41],[8908,32,8977,42,"sent"],[8908,36,8977,46],[8908,37,8977,47],[8908,38,8977,48],[8909,14,8978,24],[8909,21,8978,31],[8909,22,8978,32],[8909,23,8978,33],[8909,24,8978,34],[8909,35,8978,45,"getRecaptchaParams"],[8909,53,8978,63],[8909,54,8978,64],[8909,58,8978,68],[8909,59,8978,69,"auth"],[8909,63,8978,73],[8909,64,8978,74],[8909,65,8978,75],[8910,12,8979,20],[8910,17,8979,25],[8910,18,8979,26],[8911,14,8980,24,"siteKey"],[8911,21,8980,31],[8911,24,8980,34,"_b"],[8911,26,8980,36],[8911,27,8980,37,"sent"],[8911,31,8980,41],[8911,32,8980,42],[8911,33,8980,43],[8912,14,8981,24,"_assert"],[8912,21,8981,31],[8912,22,8981,32,"siteKey"],[8912,29,8981,39],[8912,31,8981,41],[8912,35,8981,45],[8912,36,8981,46,"auth"],[8912,40,8981,50],[8912,42,8981,52],[8912,58,8981,68],[8912,59,8981,69],[8912,93,8981,103],[8912,94,8981,104],[8913,14,8982,24],[8913,18,8982,28],[8913,19,8982,29,"parameters"],[8913,29,8982,39],[8913,30,8982,40,"sitekey"],[8913,37,8982,47],[8913,40,8982,50,"siteKey"],[8913,47,8982,57],[8914,14,8983,24],[8914,21,8983,31],[8914,22,8983,32],[8914,23,8983,33],[8914,24,8983,34],[8914,35,8983,45],[8915,10,8984,16],[8916,8,8985,12],[8916,9,8985,13],[8916,10,8985,14],[8917,6,8986,8],[8917,7,8986,9],[8917,8,8986,10],[8918,4,8987,4],[8918,5,8987,5],[8919,4,8988,4,"RecaptchaVerifier"],[8919,21,8988,21],[8919,22,8988,22,"prototype"],[8919,31,8988,31],[8919,32,8988,32,"getAssertedRecaptcha"],[8919,52,8988,52],[8919,55,8988,55],[8919,67,8988,67],[8920,6,8989,8,"_assert"],[8920,13,8989,15],[8920,14,8989,16],[8920,18,8989,20],[8920,19,8989,21,"recaptcha"],[8920,28,8989,30],[8920,30,8989,32],[8920,34,8989,36],[8920,35,8989,37,"auth"],[8920,39,8989,41],[8920,41,8989,43],[8920,57,8989,59],[8920,58,8989,60],[8920,92,8989,94],[8920,93,8989,95],[8921,6,8990,8],[8921,13,8990,15],[8921,17,8990,19],[8921,18,8990,20,"recaptcha"],[8921,27,8990,29],[8922,4,8991,4],[8922,5,8991,5],[8923,4,8992,4],[8923,11,8992,11,"RecaptchaVerifier"],[8923,28,8992,28],[8924,2,8993,0],[8924,3,8993,1],[8924,4,8993,2],[8924,5,8993,4],[8925,2,8994,0],[8925,11,8994,9,"domReady"],[8925,19,8994,17,"domReady"],[8925,20,8994,17],[8925,22,8994,20],[8926,4,8995,4],[8926,8,8995,8,"resolver"],[8926,16,8995,16],[8926,19,8995,19],[8926,23,8995,23],[8927,4,8996,4],[8927,11,8996,11],[8927,15,8996,15,"Promise"],[8927,22,8996,22],[8927,23,8996,23],[8927,33,8996,33,"resolve"],[8927,40,8996,40],[8927,42,8996,42],[8928,6,8997,8],[8928,10,8997,12,"document"],[8928,18,8997,20],[8928,19,8997,21,"readyState"],[8928,29,8997,31],[8928,34,8997,36],[8928,44,8997,46],[8928,46,8997,48],[8929,8,8998,12,"resolve"],[8929,15,8998,19],[8929,16,8998,20],[8929,17,8998,21],[8930,8,8999,12],[8931,6,9000,8],[8932,6,9001,8],[8933,6,9002,8],[8934,6,9003,8],[8935,6,9004,8,"resolver"],[8935,14,9004,16],[8935,17,9004,19],[8935,26,9004,19,"resolver"],[8935,27,9004,19],[8935,29,9004,31],[8936,8,9004,33],[8936,15,9004,40,"resolve"],[8936,22,9004,47],[8936,23,9004,48],[8936,24,9004,49],[8937,6,9004,51],[8937,7,9004,52],[8938,6,9005,8,"window"],[8938,12,9005,14],[8938,13,9005,15,"addEventListener"],[8938,29,9005,31],[8938,30,9005,32],[8938,36,9005,38],[8938,38,9005,40,"resolver"],[8938,46,9005,48],[8938,47,9005,49],[8939,4,9006,4],[8939,5,9006,5],[8939,6,9006,6],[8939,7,9006,7,"catch"],[8939,12,9006,12],[8939,13,9006,13],[8939,23,9006,23,"e"],[8939,24,9006,24],[8939,26,9006,26],[8940,6,9007,8],[8940,10,9007,12,"resolver"],[8940,18,9007,20],[8940,20,9007,22],[8941,8,9008,12,"window"],[8941,14,9008,18],[8941,15,9008,19,"removeEventListener"],[8941,34,9008,38],[8941,35,9008,39],[8941,41,9008,45],[8941,43,9008,47,"resolver"],[8941,51,9008,55],[8941,52,9008,56],[8942,6,9009,8],[8943,6,9010,8],[8943,12,9010,14,"e"],[8943,13,9010,15],[8944,4,9011,4],[8944,5,9011,5],[8944,6,9011,6],[8945,2,9012,0],[8947,2,9014,0],[8948,0,9015,0],[8949,0,9016,0],[8950,0,9017,0],[8951,0,9018,0],[8952,0,9019,0],[8953,0,9020,0],[8954,0,9021,0],[8955,0,9022,0],[8956,0,9023,0],[8957,0,9024,0],[8958,0,9025,0],[8959,0,9026,0],[8960,0,9027,0],[8961,0,9028,0],[8962,0,9029,0],[8963,2,9030,0],[8963,6,9030,4,"ConfirmationResultImpl"],[8963,28,9030,26],[8963,31,9030,29],[8963,44,9030,44],[8963,56,9030,56],[8964,4,9031,4],[8964,13,9031,13,"ConfirmationResultImpl"],[8964,35,9031,35,"ConfirmationResultImpl"],[8964,36,9031,36,"verificationId"],[8964,50,9031,50],[8964,52,9031,52,"onConfirmation"],[8964,66,9031,66],[8964,68,9031,68],[8965,6,9032,8],[8965,10,9032,12],[8965,11,9032,13,"verificationId"],[8965,25,9032,27],[8965,28,9032,30,"verificationId"],[8965,42,9032,44],[8966,6,9033,8],[8966,10,9033,12],[8966,11,9033,13,"onConfirmation"],[8966,25,9033,27],[8966,28,9033,30,"onConfirmation"],[8966,42,9033,44],[8967,4,9034,4],[8968,4,9035,4,"ConfirmationResultImpl"],[8968,26,9035,26],[8968,27,9035,27,"prototype"],[8968,36,9035,36],[8968,37,9035,37,"confirm"],[8968,44,9035,44],[8968,47,9035,47],[8968,57,9035,57,"verificationCode"],[8968,73,9035,73],[8968,75,9035,75],[8969,6,9036,8],[8969,10,9036,12,"authCredential"],[8969,24,9036,26],[8969,27,9036,29,"PhoneAuthCredential"],[8969,46,9036,48],[8969,47,9036,49,"_fromVerification"],[8969,64,9036,66],[8969,65,9036,67],[8969,69,9036,71],[8969,70,9036,72,"verificationId"],[8969,84,9036,86],[8969,86,9036,88,"verificationCode"],[8969,102,9036,104],[8969,103,9036,105],[8970,6,9037,8],[8970,13,9037,15],[8970,17,9037,19],[8970,18,9037,20,"onConfirmation"],[8970,32,9037,34],[8970,33,9037,35,"authCredential"],[8970,47,9037,49],[8970,48,9037,50],[8971,4,9038,4],[8971,5,9038,5],[8972,4,9039,4],[8972,11,9039,11,"ConfirmationResultImpl"],[8972,33,9039,33],[8973,2,9040,0],[8973,3,9040,1],[8973,4,9040,2],[8973,5,9040,4],[8974,2,9041,0],[8975,0,9042,0],[8976,0,9043,0],[8977,0,9044,0],[8978,0,9045,0],[8979,0,9046,0],[8980,0,9047,0],[8981,0,9048,0],[8982,0,9049,0],[8983,0,9050,0],[8984,0,9051,0],[8985,0,9052,0],[8986,0,9053,0],[8987,0,9054,0],[8988,0,9055,0],[8989,0,9056,0],[8990,0,9057,0],[8991,0,9058,0],[8992,0,9059,0],[8993,0,9060,0],[8994,0,9061,0],[8995,0,9062,0],[8996,0,9063,0],[8997,0,9064,0],[8998,0,9065,0],[8999,0,9066,0],[9000,0,9067,0],[9001,0,9068,0],[9002,0,9069,0],[9003,0,9070,0],[9004,0,9071,0],[9005,0,9072,0],[9006,0,9073,0],[9007,2,9074,0],[9007,11,9074,9,"signInWithPhoneNumber"],[9007,32,9074,30,"signInWithPhoneNumber"],[9007,33,9074,31,"auth"],[9007,37,9074,35],[9007,39,9074,37,"phoneNumber"],[9007,50,9074,48],[9007,52,9074,50,"appVerifier"],[9007,63,9074,61],[9007,65,9074,63],[9008,4,9075,4],[9008,11,9075,11,"tslib"],[9008,16,9075,16],[9008,17,9075,17,"__awaiter"],[9008,26,9075,26],[9008,27,9075,27],[9008,31,9075,31],[9008,33,9075,31,"undefined"],[9008,42,9075,31],[9008,44,9075,31,"undefined"],[9008,53,9075,31],[9008,55,9075,49],[9008,67,9075,61],[9009,6,9076,8],[9009,10,9076,12,"authInternal"],[9009,22,9076,24],[9009,24,9076,26,"verificationId"],[9009,38,9076,40],[9010,6,9077,8],[9010,13,9077,15,"tslib"],[9010,18,9077,20],[9010,19,9077,21,"__generator"],[9010,30,9077,32],[9010,31,9077,33],[9010,35,9077,37],[9010,37,9077,39],[9010,47,9077,49,"_a"],[9010,49,9077,51],[9010,51,9077,53],[9011,8,9078,12],[9011,16,9078,20,"_a"],[9011,18,9078,22],[9011,19,9078,23,"label"],[9011,24,9078,28],[9012,10,9079,16],[9012,15,9079,21],[9012,16,9079,22],[9013,12,9080,20],[9013,16,9080,24,"app"],[9013,19,9080,27],[9013,20,9080,28,"_isFirebaseServerApp"],[9013,40,9080,48],[9013,41,9080,49,"auth"],[9013,45,9080,53],[9013,46,9080,54,"app"],[9013,49,9080,57],[9013,50,9080,58],[9013,52,9080,60],[9014,14,9081,24],[9014,21,9081,31],[9014,22,9081,32],[9014,23,9081,33],[9014,24,9081,34],[9014,36,9081,46,"Promise"],[9014,43,9081,53],[9014,44,9081,54,"reject"],[9014,50,9081,60],[9014,51,9081,61,"_serverAppCurrentUserOperationNotSupportedError"],[9014,98,9081,108],[9014,99,9081,109,"auth"],[9014,103,9081,113],[9014,104,9081,114],[9014,105,9081,115],[9014,106,9081,116],[9015,12,9082,20],[9016,12,9083,20,"authInternal"],[9016,24,9083,32],[9016,27,9083,35,"_castAuth"],[9016,36,9083,44],[9016,37,9083,45,"auth"],[9016,41,9083,49],[9016,42,9083,50],[9017,12,9084,20],[9017,19,9084,27],[9017,20,9084,28],[9017,21,9084,29],[9017,22,9084,30],[9017,33,9084,41,"_verifyPhoneNumber"],[9017,51,9084,59],[9017,52,9084,60,"authInternal"],[9017,64,9084,72],[9017,66,9084,74,"phoneNumber"],[9017,77,9084,85],[9017,79,9084,87,"util"],[9017,83,9084,91],[9017,84,9084,92,"getModularInstance"],[9017,102,9084,110],[9017,103,9084,111,"appVerifier"],[9017,114,9084,122],[9017,115,9084,123],[9017,116,9084,124],[9017,117,9084,125],[9018,10,9085,16],[9018,15,9085,21],[9018,16,9085,22],[9019,12,9086,20,"verificationId"],[9019,26,9086,34],[9019,29,9086,37,"_a"],[9019,31,9086,39],[9019,32,9086,40,"sent"],[9019,36,9086,44],[9019,37,9086,45],[9019,38,9086,46],[9020,12,9087,20],[9020,19,9087,27],[9020,20,9087,28],[9020,21,9087,29],[9020,22,9087,30],[9020,34,9087,42],[9020,38,9087,46,"ConfirmationResultImpl"],[9020,60,9087,68],[9020,61,9087,69,"verificationId"],[9020,75,9087,83],[9020,77,9087,85],[9020,87,9087,95,"cred"],[9020,91,9087,99],[9020,93,9087,101],[9021,14,9088,28],[9021,21,9088,35,"signInWithCredential"],[9021,41,9088,55],[9021,42,9088,56,"authInternal"],[9021,54,9088,68],[9021,56,9088,70,"cred"],[9021,60,9088,74],[9021,61,9088,75],[9022,12,9089,24],[9022,13,9089,25],[9022,14,9089,26],[9022,15,9089,27],[9023,8,9090,12],[9024,6,9091,8],[9024,7,9091,9],[9024,8,9091,10],[9025,4,9092,4],[9025,5,9092,5],[9025,6,9092,6],[9026,2,9093,0],[9027,2,9094,0],[9028,0,9095,0],[9029,0,9096,0],[9030,0,9097,0],[9031,0,9098,0],[9032,0,9099,0],[9033,0,9100,0],[9034,0,9101,0],[9035,0,9102,0],[9036,0,9103,0],[9037,0,9104,0],[9038,0,9105,0],[9039,2,9106,0],[9039,11,9106,9,"linkWithPhoneNumber"],[9039,30,9106,28,"linkWithPhoneNumber"],[9039,31,9106,29,"user"],[9039,35,9106,33],[9039,37,9106,35,"phoneNumber"],[9039,48,9106,46],[9039,50,9106,48,"appVerifier"],[9039,61,9106,59],[9039,63,9106,61],[9040,4,9107,4],[9040,11,9107,11,"tslib"],[9040,16,9107,16],[9040,17,9107,17,"__awaiter"],[9040,26,9107,26],[9040,27,9107,27],[9040,31,9107,31],[9040,33,9107,31,"undefined"],[9040,42,9107,31],[9040,44,9107,31,"undefined"],[9040,53,9107,31],[9040,55,9107,49],[9040,67,9107,61],[9041,6,9108,8],[9041,10,9108,12,"userInternal"],[9041,22,9108,24],[9041,24,9108,26,"verificationId"],[9041,38,9108,40],[9042,6,9109,8],[9042,13,9109,15,"tslib"],[9042,18,9109,20],[9042,19,9109,21,"__generator"],[9042,30,9109,32],[9042,31,9109,33],[9042,35,9109,37],[9042,37,9109,39],[9042,47,9109,49,"_a"],[9042,49,9109,51],[9042,51,9109,53],[9043,8,9110,12],[9043,16,9110,20,"_a"],[9043,18,9110,22],[9043,19,9110,23,"label"],[9043,24,9110,28],[9044,10,9111,16],[9044,15,9111,21],[9044,16,9111,22],[9045,12,9112,20,"userInternal"],[9045,24,9112,32],[9045,27,9112,35,"util"],[9045,31,9112,39],[9045,32,9112,40,"getModularInstance"],[9045,50,9112,58],[9045,51,9112,59,"user"],[9045,55,9112,63],[9045,56,9112,64],[9046,12,9113,20],[9046,19,9113,27],[9046,20,9113,28],[9046,21,9113,29],[9046,22,9113,30],[9046,33,9113,41,"_assertLinkedStatus"],[9046,52,9113,60],[9046,53,9113,61],[9046,58,9113,66],[9046,60,9113,68,"userInternal"],[9046,72,9113,80],[9046,74,9113,82],[9046,81,9113,89],[9046,82,9113,90],[9046,104,9113,112],[9046,105,9113,113],[9046,106,9113,114],[9047,10,9114,16],[9047,15,9114,21],[9047,16,9114,22],[9048,12,9115,20,"_a"],[9048,14,9115,22],[9048,15,9115,23,"sent"],[9048,19,9115,27],[9048,20,9115,28],[9048,21,9115,29],[9049,12,9116,20],[9049,19,9116,27],[9049,20,9116,28],[9049,21,9116,29],[9049,22,9116,30],[9049,33,9116,41,"_verifyPhoneNumber"],[9049,51,9116,59],[9049,52,9116,60,"userInternal"],[9049,64,9116,72],[9049,65,9116,73,"auth"],[9049,69,9116,77],[9049,71,9116,79,"phoneNumber"],[9049,82,9116,90],[9049,84,9116,92,"util"],[9049,88,9116,96],[9049,89,9116,97,"getModularInstance"],[9049,107,9116,115],[9049,108,9116,116,"appVerifier"],[9049,119,9116,127],[9049,120,9116,128],[9049,121,9116,129],[9049,122,9116,130],[9050,10,9117,16],[9050,15,9117,21],[9050,16,9117,22],[9051,12,9118,20,"verificationId"],[9051,26,9118,34],[9051,29,9118,37,"_a"],[9051,31,9118,39],[9051,32,9118,40,"sent"],[9051,36,9118,44],[9051,37,9118,45],[9051,38,9118,46],[9052,12,9119,20],[9052,19,9119,27],[9052,20,9119,28],[9052,21,9119,29],[9052,22,9119,30],[9052,34,9119,42],[9052,38,9119,46,"ConfirmationResultImpl"],[9052,60,9119,68],[9052,61,9119,69,"verificationId"],[9052,75,9119,83],[9052,77,9119,85],[9052,87,9119,95,"cred"],[9052,91,9119,99],[9052,93,9119,101],[9053,14,9120,28],[9053,21,9120,35,"linkWithCredential"],[9053,39,9120,53],[9053,40,9120,54,"userInternal"],[9053,52,9120,66],[9053,54,9120,68,"cred"],[9053,58,9120,72],[9053,59,9120,73],[9054,12,9121,24],[9054,13,9121,25],[9054,14,9121,26],[9054,15,9121,27],[9055,8,9122,12],[9056,6,9123,8],[9056,7,9123,9],[9056,8,9123,10],[9057,4,9124,4],[9057,5,9124,5],[9057,6,9124,6],[9058,2,9125,0],[9059,2,9126,0],[9060,0,9127,0],[9061,0,9128,0],[9062,0,9129,0],[9063,0,9130,0],[9064,0,9131,0],[9065,0,9132,0],[9066,0,9133,0],[9067,0,9134,0],[9068,0,9135,0],[9069,0,9136,0],[9070,0,9137,0],[9071,0,9138,0],[9072,0,9139,0],[9073,0,9140,0],[9074,2,9141,0],[9074,11,9141,9,"reauthenticateWithPhoneNumber"],[9074,40,9141,38,"reauthenticateWithPhoneNumber"],[9074,41,9141,39,"user"],[9074,45,9141,43],[9074,47,9141,45,"phoneNumber"],[9074,58,9141,56],[9074,60,9141,58,"appVerifier"],[9074,71,9141,69],[9074,73,9141,71],[9075,4,9142,4],[9075,11,9142,11,"tslib"],[9075,16,9142,16],[9075,17,9142,17,"__awaiter"],[9075,26,9142,26],[9075,27,9142,27],[9075,31,9142,31],[9075,33,9142,31,"undefined"],[9075,42,9142,31],[9075,44,9142,31,"undefined"],[9075,53,9142,31],[9075,55,9142,49],[9075,67,9142,61],[9076,6,9143,8],[9076,10,9143,12,"userInternal"],[9076,22,9143,24],[9076,24,9143,26,"verificationId"],[9076,38,9143,40],[9077,6,9144,8],[9077,13,9144,15,"tslib"],[9077,18,9144,20],[9077,19,9144,21,"__generator"],[9077,30,9144,32],[9077,31,9144,33],[9077,35,9144,37],[9077,37,9144,39],[9077,47,9144,49,"_a"],[9077,49,9144,51],[9077,51,9144,53],[9078,8,9145,12],[9078,16,9145,20,"_a"],[9078,18,9145,22],[9078,19,9145,23,"label"],[9078,24,9145,28],[9079,10,9146,16],[9079,15,9146,21],[9079,16,9146,22],[9080,12,9147,20,"userInternal"],[9080,24,9147,32],[9080,27,9147,35,"util"],[9080,31,9147,39],[9080,32,9147,40,"getModularInstance"],[9080,50,9147,58],[9080,51,9147,59,"user"],[9080,55,9147,63],[9080,56,9147,64],[9081,12,9148,20],[9081,16,9148,24,"app"],[9081,19,9148,27],[9081,20,9148,28,"_isFirebaseServerApp"],[9081,40,9148,48],[9081,41,9148,49,"userInternal"],[9081,53,9148,61],[9081,54,9148,62,"auth"],[9081,58,9148,66],[9081,59,9148,67,"app"],[9081,62,9148,70],[9081,63,9148,71],[9081,65,9148,73],[9082,14,9149,24],[9082,21,9149,31],[9082,22,9149,32],[9082,23,9149,33],[9082,24,9149,34],[9082,36,9149,46,"Promise"],[9082,43,9149,53],[9082,44,9149,54,"reject"],[9082,50,9149,60],[9082,51,9149,61,"_serverAppCurrentUserOperationNotSupportedError"],[9082,98,9149,108],[9082,99,9149,109,"userInternal"],[9082,111,9149,121],[9082,112,9149,122,"auth"],[9082,116,9149,126],[9082,117,9149,127],[9082,118,9149,128],[9082,119,9149,129],[9083,12,9150,20],[9084,12,9151,20],[9084,19,9151,27],[9084,20,9151,28],[9084,21,9151,29],[9084,22,9151,30],[9084,33,9151,41,"_verifyPhoneNumber"],[9084,51,9151,59],[9084,52,9151,60,"userInternal"],[9084,64,9151,72],[9084,65,9151,73,"auth"],[9084,69,9151,77],[9084,71,9151,79,"phoneNumber"],[9084,82,9151,90],[9084,84,9151,92,"util"],[9084,88,9151,96],[9084,89,9151,97,"getModularInstance"],[9084,107,9151,115],[9084,108,9151,116,"appVerifier"],[9084,119,9151,127],[9084,120,9151,128],[9084,121,9151,129],[9084,122,9151,130],[9085,10,9152,16],[9085,15,9152,21],[9085,16,9152,22],[9086,12,9153,20,"verificationId"],[9086,26,9153,34],[9086,29,9153,37,"_a"],[9086,31,9153,39],[9086,32,9153,40,"sent"],[9086,36,9153,44],[9086,37,9153,45],[9086,38,9153,46],[9087,12,9154,20],[9087,19,9154,27],[9087,20,9154,28],[9087,21,9154,29],[9087,22,9154,30],[9087,34,9154,42],[9087,38,9154,46,"ConfirmationResultImpl"],[9087,60,9154,68],[9087,61,9154,69,"verificationId"],[9087,75,9154,83],[9087,77,9154,85],[9087,87,9154,95,"cred"],[9087,91,9154,99],[9087,93,9154,101],[9088,14,9155,28],[9088,21,9155,35,"reauthenticateWithCredential"],[9088,49,9155,63],[9088,50,9155,64,"userInternal"],[9088,62,9155,76],[9088,64,9155,78,"cred"],[9088,68,9155,82],[9088,69,9155,83],[9089,12,9156,24],[9089,13,9156,25],[9089,14,9156,26],[9089,15,9156,27],[9090,8,9157,12],[9091,6,9158,8],[9091,7,9158,9],[9091,8,9158,10],[9092,4,9159,4],[9092,5,9159,5],[9092,6,9159,6],[9093,2,9160,0],[9094,2,9161,0],[9095,0,9162,0],[9096,0,9163,0],[9097,0,9164,0],[9098,2,9165,0],[9098,11,9165,9,"_verifyPhoneNumber"],[9098,29,9165,27,"_verifyPhoneNumber"],[9098,30,9165,28,"auth"],[9098,34,9165,32],[9098,36,9165,34,"options"],[9098,43,9165,41],[9098,45,9165,43,"verifier"],[9098,53,9165,51],[9098,55,9165,53],[9099,4,9166,4],[9099,8,9166,8,"_a"],[9099,10,9166,10],[9100,4,9167,4],[9100,11,9167,11,"tslib"],[9100,16,9167,16],[9100,17,9167,17,"__awaiter"],[9100,26,9167,26],[9100,27,9167,27],[9100,31,9167,31],[9100,33,9167,31,"undefined"],[9100,42,9167,31],[9100,44,9167,31,"undefined"],[9100,53,9167,31],[9100,55,9167,49],[9100,67,9167,61],[9101,6,9168,8],[9101,10,9168,12,"recaptchaToken"],[9101,24,9168,26],[9101,26,9168,28,"phoneInfoOptions"],[9101,42,9168,44],[9101,44,9168,46,"session"],[9101,51,9168,53],[9101,53,9168,55,"response"],[9101,61,9168,63],[9101,63,9168,65,"mfaEnrollmentId"],[9101,78,9168,80],[9101,80,9168,82,"response"],[9101,88,9168,90],[9101,90,9168,92,"sessionInfo"],[9101,101,9168,103],[9102,6,9169,8],[9102,13,9169,15,"tslib"],[9102,18,9169,20],[9102,19,9169,21,"__generator"],[9102,30,9169,32],[9102,31,9169,33],[9102,35,9169,37],[9102,37,9169,39],[9102,47,9169,49,"_b"],[9102,49,9169,51],[9102,51,9169,53],[9103,8,9170,12],[9103,16,9170,20,"_b"],[9103,18,9170,22],[9103,19,9170,23,"label"],[9103,24,9170,28],[9104,10,9171,16],[9104,15,9171,21],[9104,16,9171,22],[9105,12,9171,24],[9105,19,9171,31],[9105,20,9171,32],[9105,21,9171,33],[9105,22,9171,34],[9105,33,9171,45,"verifier"],[9105,41,9171,53],[9105,42,9171,54,"verify"],[9105,48,9171,60],[9105,49,9171,61],[9105,50,9171,62],[9105,51,9171,63],[9106,10,9172,16],[9106,15,9172,21],[9106,16,9172,22],[9107,12,9173,20,"recaptchaToken"],[9107,26,9173,34],[9107,29,9173,37,"_b"],[9107,31,9173,39],[9107,32,9173,40,"sent"],[9107,36,9173,44],[9107,37,9173,45],[9107,38,9173,46],[9108,12,9174,20,"_b"],[9108,14,9174,22],[9108,15,9174,23,"label"],[9108,20,9174,28],[9108,23,9174,31],[9108,24,9174,32],[9109,10,9175,16],[9109,15,9175,21],[9109,16,9175,22],[9110,12,9176,20,"_b"],[9110,14,9176,22],[9110,15,9176,23,"trys"],[9110,19,9176,27],[9110,20,9176,28,"push"],[9110,24,9176,32],[9110,25,9176,33],[9110,26,9176,34],[9110,27,9176,35],[9110,30,9176,39],[9110,32,9176,41],[9110,34,9176,43],[9110,36,9176,45],[9110,37,9176,46],[9110,38,9176,47],[9111,12,9177,20,"_assert"],[9111,19,9177,27],[9111,20,9177,28],[9111,27,9177,35,"recaptchaToken"],[9111,41,9177,49],[9111,46,9177,54],[9111,54,9177,62],[9111,56,9177,64,"auth"],[9111,60,9177,68],[9111,62,9177,70],[9111,78,9177,86],[9111,79,9177,87],[9111,113,9177,121],[9111,114,9177,122],[9112,12,9178,20,"_assert"],[9112,19,9178,27],[9112,20,9178,28,"verifier"],[9112,28,9178,36],[9112,29,9178,37,"type"],[9112,33,9178,41],[9112,38,9178,46,"RECAPTCHA_VERIFIER_TYPE"],[9112,61,9178,69],[9112,63,9178,71,"auth"],[9112,67,9178,75],[9112,69,9178,77],[9112,85,9178,93],[9112,86,9178,94],[9112,120,9178,128],[9112,121,9178,129],[9113,12,9179,20,"phoneInfoOptions"],[9113,28,9179,36],[9113,31,9179,36,"undefined"],[9113,40,9179,45],[9114,12,9180,20],[9114,16,9180,24],[9114,23,9180,31,"options"],[9114,30,9180,38],[9114,35,9180,43],[9114,43,9180,51],[9114,45,9180,53],[9115,14,9181,24,"phoneInfoOptions"],[9115,30,9181,40],[9115,33,9181,43],[9116,16,9182,28,"phoneNumber"],[9116,27,9182,39],[9116,29,9182,41,"options"],[9117,14,9183,24],[9117,15,9183,25],[9118,12,9184,20],[9118,13,9184,21],[9118,19,9185,25],[9119,14,9186,24,"phoneInfoOptions"],[9119,30,9186,40],[9119,33,9186,43,"options"],[9119,40,9186,50],[9120,12,9187,20],[9121,12,9188,20],[9121,16,9188,24],[9121,18,9188,26],[9121,27,9188,35],[9121,31,9188,39,"phoneInfoOptions"],[9121,47,9188,55],[9121,48,9188,56],[9121,50,9188,58],[9121,57,9188,65],[9121,58,9188,66],[9121,59,9188,67],[9121,60,9188,68],[9121,71,9188,79],[9121,72,9188,80],[9121,73,9188,81],[9122,12,9189,20,"session"],[9122,19,9189,27],[9122,22,9189,30,"phoneInfoOptions"],[9122,38,9189,46],[9122,39,9189,47,"session"],[9122,46,9189,54],[9123,12,9190,20],[9123,16,9190,24],[9123,18,9190,26],[9123,31,9190,39],[9123,35,9190,43,"phoneInfoOptions"],[9123,51,9190,59],[9123,52,9190,60],[9123,54,9190,62],[9123,61,9190,69],[9123,62,9190,70],[9123,63,9190,71],[9123,64,9190,72],[9123,75,9190,83],[9123,76,9190,84],[9123,77,9190,85],[9124,12,9191,20,"_assert"],[9124,19,9191,27],[9124,20,9191,28,"session"],[9124,27,9191,35],[9124,28,9191,36,"type"],[9124,32,9191,40],[9124,37,9191,45],[9124,45,9191,53],[9124,46,9191,54],[9124,83,9191,91,"auth"],[9124,87,9191,95],[9124,89,9191,97],[9124,105,9191,113],[9124,106,9191,114],[9124,140,9191,148],[9124,141,9191,149],[9125,12,9192,20],[9125,19,9192,27],[9125,20,9192,28],[9125,21,9192,29],[9125,22,9192,30],[9125,33,9192,41,"startEnrollPhoneMfa"],[9125,52,9192,60],[9125,53,9192,61,"auth"],[9125,57,9192,65],[9125,59,9192,67],[9126,14,9193,28,"idToken"],[9126,21,9193,35],[9126,23,9193,37,"session"],[9126,30,9193,44],[9126,31,9193,45,"credential"],[9126,41,9193,55],[9127,14,9194,28,"phoneEnrollmentInfo"],[9127,33,9194,47],[9127,35,9194,49],[9128,16,9195,32,"phoneNumber"],[9128,27,9195,43],[9128,29,9195,45,"phoneInfoOptions"],[9128,45,9195,61],[9128,46,9195,62,"phoneNumber"],[9128,57,9195,73],[9129,16,9196,32,"recaptchaToken"],[9129,30,9196,46],[9129,32,9196,48,"recaptchaToken"],[9130,14,9197,28],[9131,12,9198,24],[9131,13,9198,25],[9131,14,9198,26],[9131,15,9198,27],[9132,10,9199,16],[9132,15,9199,21],[9132,16,9199,22],[9133,12,9200,20,"response"],[9133,20,9200,28],[9133,23,9200,31,"_b"],[9133,25,9200,33],[9133,26,9200,34,"sent"],[9133,30,9200,38],[9133,31,9200,39],[9133,32,9200,40],[9134,12,9201,20],[9134,19,9201,27],[9134,20,9201,28],[9134,21,9201,29],[9134,22,9201,30],[9134,34,9201,42,"response"],[9134,42,9201,50],[9134,43,9201,51,"phoneSessionInfo"],[9134,59,9201,67],[9134,60,9201,68,"sessionInfo"],[9134,71,9201,79],[9134,72,9201,80],[9135,10,9202,16],[9135,15,9202,21],[9135,16,9202,22],[9136,12,9203,20,"_assert"],[9136,19,9203,27],[9136,20,9203,28,"session"],[9136,27,9203,35],[9136,28,9203,36,"type"],[9136,32,9203,40],[9136,37,9203,45],[9136,45,9203,53],[9136,46,9203,54],[9136,84,9203,92,"auth"],[9136,88,9203,96],[9136,90,9203,98],[9136,106,9203,114],[9136,107,9203,115],[9136,141,9203,149],[9136,142,9203,150],[9137,12,9204,20,"mfaEnrollmentId"],[9137,27,9204,35],[9137,30,9204,38],[9137,31,9204,39],[9137,32,9204,40,"_a"],[9137,34,9204,42],[9137,37,9204,45,"phoneInfoOptions"],[9137,53,9204,61],[9137,54,9204,62,"multiFactorHint"],[9137,69,9204,77],[9137,75,9204,83],[9137,79,9204,87],[9137,83,9204,91,"_a"],[9137,85,9204,93],[9137,90,9204,93,"undefined"],[9137,99,9204,104],[9137,102,9204,104,"undefined"],[9137,111,9204,104],[9137,114,9204,116,"_a"],[9137,116,9204,118],[9137,117,9204,119,"uid"],[9137,120,9204,122],[9137,125,9205,24,"phoneInfoOptions"],[9137,141,9205,40],[9137,142,9205,41,"multiFactorUid"],[9137,156,9205,55],[9138,12,9206,20,"_assert"],[9138,19,9206,27],[9138,20,9206,28,"mfaEnrollmentId"],[9138,35,9206,43],[9138,37,9206,45,"auth"],[9138,41,9206,49],[9138,43,9206,51],[9138,70,9206,78],[9138,71,9206,79],[9138,107,9206,115],[9138,108,9206,116],[9139,12,9207,20],[9139,19,9207,27],[9139,20,9207,28],[9139,21,9207,29],[9139,22,9207,30],[9139,33,9207,41,"startSignInPhoneMfa"],[9139,52,9207,60],[9139,53,9207,61,"auth"],[9139,57,9207,65],[9139,59,9207,67],[9140,14,9208,28,"mfaPendingCredential"],[9140,34,9208,48],[9140,36,9208,50,"session"],[9140,43,9208,57],[9140,44,9208,58,"credential"],[9140,54,9208,68],[9141,14,9209,28,"mfaEnrollmentId"],[9141,29,9209,43],[9141,31,9209,45,"mfaEnrollmentId"],[9141,46,9209,60],[9142,14,9210,28,"phoneSignInInfo"],[9142,29,9210,43],[9142,31,9210,45],[9143,16,9211,32,"recaptchaToken"],[9143,30,9211,46],[9143,32,9211,48,"recaptchaToken"],[9144,14,9212,28],[9145,12,9213,24],[9145,13,9213,25],[9145,14,9213,26],[9145,15,9213,27],[9146,10,9214,16],[9146,15,9214,21],[9146,16,9214,22],[9147,12,9215,20,"response"],[9147,20,9215,28],[9147,23,9215,31,"_b"],[9147,25,9215,33],[9147,26,9215,34,"sent"],[9147,30,9215,38],[9147,31,9215,39],[9147,32,9215,40],[9148,12,9216,20],[9148,19,9216,27],[9148,20,9216,28],[9148,21,9216,29],[9148,22,9216,30],[9148,34,9216,42,"response"],[9148,42,9216,50],[9148,43,9216,51,"phoneResponseInfo"],[9148,60,9216,68],[9148,61,9216,69,"sessionInfo"],[9148,72,9216,80],[9148,73,9216,81],[9149,10,9217,16],[9149,15,9217,21],[9149,16,9217,22],[9150,12,9217,24],[9150,19,9217,31],[9150,20,9217,32],[9150,21,9217,33],[9150,22,9217,34],[9150,33,9217,45],[9150,34,9217,46],[9150,35,9217,47],[9151,10,9218,16],[9151,15,9218,21],[9151,16,9218,22],[9152,12,9218,24],[9152,19,9218,31],[9152,20,9218,32],[9152,21,9218,33],[9152,22,9218,34],[9152,33,9218,45,"sendPhoneVerificationCode"],[9152,58,9218,70],[9152,59,9218,71,"auth"],[9152,63,9218,75],[9152,65,9218,77],[9153,14,9219,24,"phoneNumber"],[9153,25,9219,35],[9153,27,9219,37,"phoneInfoOptions"],[9153,43,9219,53],[9153,44,9219,54,"phoneNumber"],[9153,55,9219,65],[9154,14,9220,24,"recaptchaToken"],[9154,28,9220,38],[9154,30,9220,40,"recaptchaToken"],[9155,12,9221,20],[9155,13,9221,21],[9155,14,9221,22],[9155,15,9221,23],[9156,10,9222,16],[9156,15,9222,21],[9156,16,9222,22],[9157,12,9223,20,"sessionInfo"],[9157,23,9223,31],[9157,26,9223,35,"_b"],[9157,28,9223,37],[9157,29,9223,38,"sent"],[9157,33,9223,42],[9157,34,9223,43],[9157,35,9223,44],[9157,36,9223,46,"sessionInfo"],[9157,47,9223,57],[9158,12,9224,20],[9158,19,9224,27],[9158,20,9224,28],[9158,21,9224,29],[9158,22,9224,30],[9158,34,9224,42,"sessionInfo"],[9158,45,9224,53],[9158,46,9224,54],[9159,10,9225,16],[9159,15,9225,21],[9159,16,9225,22],[9160,12,9225,24],[9160,19,9225,31],[9160,20,9225,32],[9160,21,9225,33],[9160,22,9225,34],[9160,33,9225,45],[9160,35,9225,47],[9160,36,9225,48],[9161,10,9226,16],[9161,15,9226,21],[9161,17,9226,23],[9162,12,9227,20,"verifier"],[9162,20,9227,28],[9162,21,9227,29,"_reset"],[9162,27,9227,35],[9162,28,9227,36],[9162,29,9227,37],[9163,12,9228,20],[9163,19,9228,27],[9163,20,9228,28],[9163,21,9228,29],[9163,22,9228,30],[9163,37,9228,45],[9164,10,9229,16],[9164,15,9229,21],[9164,17,9229,23],[9165,12,9229,25],[9165,19,9229,32],[9165,20,9229,33],[9165,21,9229,34],[9165,22,9229,35],[9165,33,9229,46],[9166,8,9230,12],[9167,6,9231,8],[9167,7,9231,9],[9167,8,9231,10],[9168,4,9232,4],[9168,5,9232,5],[9168,6,9232,6],[9169,2,9233,0],[9170,2,9234,0],[9171,0,9235,0],[9172,0,9236,0],[9173,0,9237,0],[9174,0,9238,0],[9175,0,9239,0],[9176,0,9240,0],[9177,0,9241,0],[9178,0,9242,0],[9179,0,9243,0],[9180,0,9244,0],[9181,0,9245,0],[9182,0,9246,0],[9183,0,9247,0],[9184,0,9248,0],[9185,0,9249,0],[9186,0,9250,0],[9187,0,9251,0],[9188,0,9252,0],[9189,0,9253,0],[9190,0,9254,0],[9191,0,9255,0],[9192,0,9256,0],[9193,2,9257,0],[9193,11,9257,9,"updatePhoneNumber"],[9193,28,9257,26,"updatePhoneNumber"],[9193,29,9257,27,"user"],[9193,33,9257,31],[9193,35,9257,33,"credential"],[9193,45,9257,43],[9193,47,9257,45],[9194,4,9258,4],[9194,11,9258,11,"tslib"],[9194,16,9258,16],[9194,17,9258,17,"__awaiter"],[9194,26,9258,26],[9194,27,9258,27],[9194,31,9258,31],[9194,33,9258,31,"undefined"],[9194,42,9258,31],[9194,44,9258,31,"undefined"],[9194,53,9258,31],[9194,55,9258,49],[9194,67,9258,61],[9195,6,9259,8],[9195,10,9259,12,"userInternal"],[9195,22,9259,24],[9196,6,9260,8],[9196,13,9260,15,"tslib"],[9196,18,9260,20],[9196,19,9260,21,"__generator"],[9196,30,9260,32],[9196,31,9260,33],[9196,35,9260,37],[9196,37,9260,39],[9196,47,9260,49,"_a"],[9196,49,9260,51],[9196,51,9260,53],[9197,8,9261,12],[9197,16,9261,20,"_a"],[9197,18,9261,22],[9197,19,9261,23,"label"],[9197,24,9261,28],[9198,10,9262,16],[9198,15,9262,21],[9198,16,9262,22],[9199,12,9263,20,"userInternal"],[9199,24,9263,32],[9199,27,9263,35,"util"],[9199,31,9263,39],[9199,32,9263,40,"getModularInstance"],[9199,50,9263,58],[9199,51,9263,59,"user"],[9199,55,9263,63],[9199,56,9263,64],[9200,12,9264,20],[9200,16,9264,24,"app"],[9200,19,9264,27],[9200,20,9264,28,"_isFirebaseServerApp"],[9200,40,9264,48],[9200,41,9264,49,"userInternal"],[9200,53,9264,61],[9200,54,9264,62,"auth"],[9200,58,9264,66],[9200,59,9264,67,"app"],[9200,62,9264,70],[9200,63,9264,71],[9200,65,9264,73],[9201,14,9265,24],[9201,21,9265,31],[9201,22,9265,32],[9201,23,9265,33],[9201,24,9265,34],[9201,36,9265,46,"Promise"],[9201,43,9265,53],[9201,44,9265,54,"reject"],[9201,50,9265,60],[9201,51,9265,61,"_serverAppCurrentUserOperationNotSupportedError"],[9201,98,9265,108],[9201,99,9265,109,"userInternal"],[9201,111,9265,121],[9201,112,9265,122,"auth"],[9201,116,9265,126],[9201,117,9265,127],[9201,118,9265,128],[9201,119,9265,129],[9202,12,9266,20],[9203,12,9267,20],[9203,19,9267,27],[9203,20,9267,28],[9203,21,9267,29],[9203,22,9267,30],[9203,33,9267,41,"_link"],[9203,38,9267,46],[9203,39,9267,47,"userInternal"],[9203,51,9267,59],[9203,53,9267,61,"credential"],[9203,63,9267,71],[9203,64,9267,72],[9203,65,9267,73],[9204,10,9268,16],[9204,15,9268,21],[9204,16,9268,22],[9205,12,9269,20,"_a"],[9205,14,9269,22],[9205,15,9269,23,"sent"],[9205,19,9269,27],[9205,20,9269,28],[9205,21,9269,29],[9206,12,9270,20],[9206,19,9270,27],[9206,20,9270,28],[9206,21,9270,29],[9206,22,9270,30],[9206,33,9270,41],[9207,8,9271,12],[9208,6,9272,8],[9208,7,9272,9],[9208,8,9272,10],[9209,4,9273,4],[9209,5,9273,5],[9209,6,9273,6],[9210,2,9274,0],[9212,2,9276,0],[9213,0,9277,0],[9214,0,9278,0],[9215,0,9279,0],[9216,0,9280,0],[9217,0,9281,0],[9218,0,9282,0],[9219,0,9283,0],[9220,0,9284,0],[9221,0,9285,0],[9222,0,9286,0],[9223,0,9287,0],[9224,0,9288,0],[9225,0,9289,0],[9226,0,9290,0],[9227,0,9291,0],[9228,2,9292,0],[9229,0,9293,0],[9230,0,9294,0],[9231,0,9295,0],[9232,0,9296,0],[9233,0,9297,0],[9234,0,9298,0],[9235,0,9299,0],[9236,0,9300,0],[9237,0,9301,0],[9238,0,9302,0],[9239,0,9303,0],[9240,0,9304,0],[9241,0,9305,0],[9242,0,9306,0],[9243,0,9307,0],[9244,0,9308,0],[9245,0,9309,0],[9246,0,9310,0],[9247,2,9311,0],[9247,6,9311,4,"PhoneAuthProvider"],[9247,23,9311,21],[9247,26,9311,24],[9247,39,9311,39],[9247,51,9311,51],[9248,4,9312,4],[9249,0,9313,0],[9250,0,9314,0],[9251,0,9315,0],[9252,4,9316,4],[9252,13,9316,13,"PhoneAuthProvider"],[9252,30,9316,30,"PhoneAuthProvider"],[9252,31,9316,31,"auth"],[9252,35,9316,35],[9252,37,9316,37],[9253,6,9317,8],[9254,6,9318,8],[9254,10,9318,12],[9254,11,9318,13,"providerId"],[9254,21,9318,23],[9254,24,9318,26,"PhoneAuthProvider"],[9254,41,9318,43],[9254,42,9318,44,"PROVIDER_ID"],[9254,53,9318,55],[9255,6,9319,8],[9255,10,9319,12],[9255,11,9319,13,"auth"],[9255,15,9319,17],[9255,18,9319,20,"_castAuth"],[9255,27,9319,29],[9255,28,9319,30,"auth"],[9255,32,9319,34],[9255,33,9319,35],[9256,4,9320,4],[9257,4,9321,4],[9258,0,9322,0],[9259,0,9323,0],[9260,0,9324,0],[9261,0,9325,0],[9262,0,9326,0],[9263,0,9327,0],[9264,0,9328,0],[9265,0,9329,0],[9266,0,9330,0],[9267,0,9331,0],[9268,0,9332,0],[9269,0,9333,0],[9270,0,9334,0],[9271,0,9335,0],[9272,0,9336,0],[9273,0,9337,0],[9274,0,9338,0],[9275,0,9339,0],[9276,0,9340,0],[9277,0,9341,0],[9278,0,9342,0],[9279,0,9343,0],[9280,0,9344,0],[9281,0,9345,0],[9282,0,9346,0],[9283,0,9347,0],[9284,0,9348,0],[9285,0,9349,0],[9286,0,9350,0],[9287,0,9351,0],[9288,4,9352,4,"PhoneAuthProvider"],[9288,21,9352,21],[9288,22,9352,22,"prototype"],[9288,31,9352,31],[9288,32,9352,32,"verifyPhoneNumber"],[9288,49,9352,49],[9288,52,9352,52],[9288,62,9352,62,"phoneOptions"],[9288,74,9352,74],[9288,76,9352,76,"applicationVerifier"],[9288,95,9352,95],[9288,97,9352,97],[9289,6,9353,8],[9289,13,9353,15,"_verifyPhoneNumber"],[9289,31,9353,33],[9289,32,9353,34],[9289,36,9353,38],[9289,37,9353,39,"auth"],[9289,41,9353,43],[9289,43,9353,45,"phoneOptions"],[9289,55,9353,57],[9289,57,9353,59,"util"],[9289,61,9353,63],[9289,62,9353,64,"getModularInstance"],[9289,80,9353,82],[9289,81,9353,83,"applicationVerifier"],[9289,100,9353,102],[9289,101,9353,103],[9289,102,9353,104],[9290,4,9354,4],[9290,5,9354,5],[9291,4,9355,4],[9292,0,9356,0],[9293,0,9357,0],[9294,0,9358,0],[9295,0,9359,0],[9296,0,9360,0],[9297,0,9361,0],[9298,0,9362,0],[9299,0,9363,0],[9300,0,9364,0],[9301,0,9365,0],[9302,0,9366,0],[9303,0,9367,0],[9304,0,9368,0],[9305,0,9369,0],[9306,0,9370,0],[9307,0,9371,0],[9308,0,9372,0],[9309,0,9373,0],[9310,0,9374,0],[9311,0,9375,0],[9312,0,9376,0],[9313,0,9377,0],[9314,0,9378,0],[9315,0,9379,0],[9316,0,9380,0],[9317,0,9381,0],[9318,4,9382,4,"PhoneAuthProvider"],[9318,21,9382,21],[9318,22,9382,22,"credential"],[9318,32,9382,32],[9318,35,9382,35],[9318,45,9382,45,"verificationId"],[9318,59,9382,59],[9318,61,9382,61,"verificationCode"],[9318,77,9382,77],[9318,79,9382,79],[9319,6,9383,8],[9319,13,9383,15,"PhoneAuthCredential"],[9319,32,9383,34],[9319,33,9383,35,"_fromVerification"],[9319,50,9383,52],[9319,51,9383,53,"verificationId"],[9319,65,9383,67],[9319,67,9383,69,"verificationCode"],[9319,83,9383,85],[9319,84,9383,86],[9320,4,9384,4],[9320,5,9384,5],[9321,4,9385,4],[9322,0,9386,0],[9323,0,9387,0],[9324,0,9388,0],[9325,4,9389,4,"PhoneAuthProvider"],[9325,21,9389,21],[9325,22,9389,22,"credentialFromResult"],[9325,42,9389,42],[9325,45,9389,45],[9325,55,9389,55,"userCredential"],[9325,69,9389,69],[9325,71,9389,71],[9326,6,9390,8],[9326,10,9390,12,"credential"],[9326,20,9390,22],[9326,23,9390,25,"userCredential"],[9326,37,9390,39],[9327,6,9391,8],[9327,13,9391,15,"PhoneAuthProvider"],[9327,30,9391,32],[9327,31,9391,33,"credentialFromTaggedObject"],[9327,57,9391,59],[9327,58,9391,60,"credential"],[9327,68,9391,70],[9327,69,9391,71],[9328,4,9392,4],[9328,5,9392,5],[9329,4,9393,4],[9330,0,9394,0],[9331,0,9395,0],[9332,0,9396,0],[9333,0,9397,0],[9334,0,9398,0],[9335,0,9399,0],[9336,0,9400,0],[9337,0,9401,0],[9338,0,9402,0],[9339,0,9403,0],[9340,0,9404,0],[9341,0,9405,0],[9342,0,9406,0],[9343,0,9407,0],[9344,0,9408,0],[9345,0,9409,0],[9346,0,9410,0],[9347,0,9411,0],[9348,0,9412,0],[9349,0,9413,0],[9350,0,9414,0],[9351,0,9415,0],[9352,0,9416,0],[9353,0,9417,0],[9354,0,9418,0],[9355,0,9419,0],[9356,0,9420,0],[9357,0,9421,0],[9358,0,9422,0],[9359,0,9423,0],[9360,0,9424,0],[9361,4,9425,4,"PhoneAuthProvider"],[9361,21,9425,21],[9361,22,9425,22,"credentialFromError"],[9361,41,9425,41],[9361,44,9425,44],[9361,54,9425,54,"error"],[9361,59,9425,59],[9361,61,9425,61],[9362,6,9426,8],[9362,13,9426,15,"PhoneAuthProvider"],[9362,30,9426,32],[9362,31,9426,33,"credentialFromTaggedObject"],[9362,57,9426,59],[9362,58,9426,61,"error"],[9362,63,9426,66],[9362,64,9426,67,"customData"],[9362,74,9426,77],[9362,78,9426,81],[9362,79,9426,82],[9362,80,9426,84],[9362,81,9426,85],[9363,4,9427,4],[9363,5,9427,5],[9364,4,9428,4,"PhoneAuthProvider"],[9364,21,9428,21],[9364,22,9428,22,"credentialFromTaggedObject"],[9364,48,9428,48],[9364,51,9428,51],[9364,61,9428,61,"_a"],[9364,63,9428,63],[9364,65,9428,65],[9365,6,9429,8],[9365,10,9429,12,"tokenResponse"],[9365,23,9429,25],[9365,26,9429,28,"_a"],[9365,28,9429,30],[9365,29,9429,31,"_tokenResponse"],[9365,43,9429,45],[9366,6,9430,8],[9366,10,9430,12],[9366,11,9430,13,"tokenResponse"],[9366,24,9430,26],[9366,26,9430,28],[9367,8,9431,12],[9367,15,9431,19],[9367,19,9431,23],[9368,6,9432,8],[9369,6,9433,8],[9369,10,9433,12,"_b"],[9369,12,9433,14],[9369,15,9433,17,"tokenResponse"],[9369,28,9433,30],[9370,8,9433,32,"phoneNumber"],[9370,19,9433,43],[9370,22,9433,46,"_b"],[9370,24,9433,48],[9370,25,9433,49,"phoneNumber"],[9370,36,9433,60],[9371,8,9433,62,"temporaryProof"],[9371,22,9433,76],[9371,25,9433,79,"_b"],[9371,27,9433,81],[9371,28,9433,82,"temporaryProof"],[9371,42,9433,96],[9372,6,9434,8],[9372,10,9434,12,"phoneNumber"],[9372,21,9434,23],[9372,25,9434,27,"temporaryProof"],[9372,39,9434,41],[9372,41,9434,43],[9373,8,9435,12],[9373,15,9435,19,"PhoneAuthCredential"],[9373,34,9435,38],[9373,35,9435,39,"_fromTokenResponse"],[9373,53,9435,57],[9373,54,9435,58,"phoneNumber"],[9373,65,9435,69],[9373,67,9435,71,"temporaryProof"],[9373,81,9435,85],[9373,82,9435,86],[9374,6,9436,8],[9375,6,9437,8],[9375,13,9437,15],[9375,17,9437,19],[9376,4,9438,4],[9376,5,9438,5],[9377,4,9439,4],[9378,4,9440,4,"PhoneAuthProvider"],[9378,21,9440,21],[9378,22,9440,22,"PROVIDER_ID"],[9378,33,9440,33],[9378,36,9440,36],[9378,43,9440,43],[9378,44,9440,44],[9379,4,9441,4],[9380,4,9442,4,"PhoneAuthProvider"],[9380,21,9442,21],[9380,22,9442,22,"PHONE_SIGN_IN_METHOD"],[9380,42,9442,42],[9380,45,9442,45],[9380,52,9442,52],[9380,53,9442,53],[9381,4,9443,4],[9381,11,9443,11,"PhoneAuthProvider"],[9381,28,9443,28],[9382,2,9444,0],[9382,3,9444,1],[9382,4,9444,2],[9382,5,9444,4],[9383,2,9446,0],[9383,6,9446,4,"MultiFactorAssertionImpl"],[9383,30,9446,28],[9383,33,9446,31],[9383,46,9446,46],[9383,58,9446,58],[9384,4,9447,4],[9384,13,9447,13,"MultiFactorAssertionImpl"],[9384,37,9447,37,"MultiFactorAssertionImpl"],[9384,38,9447,38,"factorId"],[9384,46,9447,46],[9384,48,9447,48],[9385,6,9448,8],[9385,10,9448,12],[9385,11,9448,13,"factorId"],[9385,19,9448,21],[9385,22,9448,24,"factorId"],[9385,30,9448,32],[9386,4,9449,4],[9387,4,9450,4,"MultiFactorAssertionImpl"],[9387,28,9450,28],[9387,29,9450,29,"prototype"],[9387,38,9450,38],[9387,39,9450,39,"_process"],[9387,47,9450,47],[9387,50,9450,50],[9387,60,9450,60,"auth"],[9387,64,9450,64],[9387,66,9450,66,"session"],[9387,73,9450,73],[9387,75,9450,75,"displayName"],[9387,86,9450,86],[9387,88,9450,88],[9388,6,9451,8],[9388,14,9451,16,"session"],[9388,21,9451,23],[9388,22,9451,24,"type"],[9388,26,9451,28],[9389,8,9452,12],[9389,13,9452,17],[9389,21,9452,25],[9389,22,9452,26],[9390,10,9453,16],[9390,17,9453,23],[9390,21,9453,27],[9390,22,9453,28,"_finalizeEnroll"],[9390,37,9453,43],[9390,38,9453,44,"auth"],[9390,42,9453,48],[9390,44,9453,50,"session"],[9390,51,9453,57],[9390,52,9453,58,"credential"],[9390,62,9453,68],[9390,64,9453,70,"displayName"],[9390,75,9453,81],[9390,76,9453,82],[9391,8,9454,12],[9391,13,9454,17],[9391,21,9454,25],[9391,22,9454,26],[9392,10,9455,16],[9392,17,9455,23],[9392,21,9455,27],[9392,22,9455,28,"_finalizeSignIn"],[9392,37,9455,43],[9392,38,9455,44,"auth"],[9392,42,9455,48],[9392,44,9455,50,"session"],[9392,51,9455,57],[9392,52,9455,58,"credential"],[9392,62,9455,68],[9392,63,9455,69],[9393,8,9456,12],[9394,10,9457,16],[9394,17,9457,23,"debugFail"],[9394,26,9457,32],[9394,27,9457,33],[9394,62,9457,68],[9394,63,9457,69],[9395,6,9458,8],[9396,4,9459,4],[9396,5,9459,5],[9397,4,9460,4],[9397,11,9460,11,"MultiFactorAssertionImpl"],[9397,35,9460,35],[9398,2,9461,0],[9398,3,9461,1],[9398,4,9461,2],[9398,5,9461,4],[9400,2,9463,0],[9401,0,9464,0],[9402,0,9465,0],[9403,0,9466,0],[9404,0,9467,0],[9405,2,9468,0],[9405,6,9468,4,"PhoneMultiFactorAssertionImpl"],[9405,35,9468,33],[9405,38,9468,36],[9405,51,9468,51],[9405,61,9468,61,"_super"],[9405,67,9468,67],[9405,69,9468,69],[9406,4,9469,4,"tslib"],[9406,9,9469,9],[9406,10,9469,10,"__extends"],[9406,19,9469,19],[9406,20,9469,20,"PhoneMultiFactorAssertionImpl"],[9406,49,9469,49],[9406,51,9469,51,"_super"],[9406,57,9469,57],[9406,58,9469,58],[9407,4,9470,4],[9407,13,9470,13,"PhoneMultiFactorAssertionImpl"],[9407,42,9470,42,"PhoneMultiFactorAssertionImpl"],[9407,43,9470,43,"credential"],[9407,53,9470,53],[9407,55,9470,55],[9408,6,9471,8],[9408,10,9471,12,"_this"],[9408,15,9471,17],[9408,18,9471,20,"_super"],[9408,24,9471,26],[9408,25,9471,27,"call"],[9408,29,9471,31],[9408,30,9471,32],[9408,34,9471,36],[9408,36,9471,38],[9408,43,9471,45],[9408,44,9471,46],[9408,64,9471,66],[9408,65,9471,67],[9408,69,9471,71],[9408,73,9471,75],[9409,6,9472,8,"_this"],[9409,11,9472,13],[9409,12,9472,14,"credential"],[9409,22,9472,24],[9409,25,9472,27,"credential"],[9409,35,9472,37],[9410,6,9473,8],[9410,13,9473,15,"_this"],[9410,18,9473,20],[9411,4,9474,4],[9412,4,9475,4],[9413,4,9476,4,"PhoneMultiFactorAssertionImpl"],[9413,33,9476,33],[9413,34,9476,34,"_fromCredential"],[9413,49,9476,49],[9413,52,9476,52],[9413,62,9476,62,"credential"],[9413,72,9476,72],[9413,74,9476,74],[9414,6,9477,8],[9414,13,9477,15],[9414,17,9477,19,"PhoneMultiFactorAssertionImpl"],[9414,46,9477,48],[9414,47,9477,49,"credential"],[9414,57,9477,59],[9414,58,9477,60],[9415,4,9478,4],[9415,5,9478,5],[9416,4,9479,4],[9417,4,9480,4,"PhoneMultiFactorAssertionImpl"],[9417,33,9480,33],[9417,34,9480,34,"prototype"],[9417,43,9480,43],[9417,44,9480,44,"_finalizeEnroll"],[9417,59,9480,59],[9417,62,9480,62],[9417,72,9480,72,"auth"],[9417,76,9480,76],[9417,78,9480,78,"idToken"],[9417,85,9480,85],[9417,87,9480,87,"displayName"],[9417,98,9480,98],[9417,100,9480,100],[9418,6,9481,8],[9418,13,9481,15,"finalizeEnrollPhoneMfa"],[9418,35,9481,37],[9418,36,9481,38,"auth"],[9418,40,9481,42],[9418,42,9481,44],[9419,8,9482,12,"idToken"],[9419,15,9482,19],[9419,17,9482,21,"idToken"],[9419,24,9482,28],[9420,8,9483,12,"displayName"],[9420,19,9483,23],[9420,21,9483,25,"displayName"],[9420,32,9483,36],[9421,8,9484,12,"phoneVerificationInfo"],[9421,29,9484,33],[9421,31,9484,35],[9421,35,9484,39],[9421,36,9484,40,"credential"],[9421,46,9484,50],[9421,47,9484,51,"_makeVerificationRequest"],[9421,71,9484,75],[9421,72,9484,76],[9422,6,9485,8],[9422,7,9485,9],[9422,8,9485,10],[9423,4,9486,4],[9423,5,9486,5],[9424,4,9487,4],[9425,4,9488,4,"PhoneMultiFactorAssertionImpl"],[9425,33,9488,33],[9425,34,9488,34,"prototype"],[9425,43,9488,43],[9425,44,9488,44,"_finalizeSignIn"],[9425,59,9488,59],[9425,62,9488,62],[9425,72,9488,72,"auth"],[9425,76,9488,76],[9425,78,9488,78,"mfaPendingCredential"],[9425,98,9488,98],[9425,100,9488,100],[9426,6,9489,8],[9426,13,9489,15,"finalizeSignInPhoneMfa"],[9426,35,9489,37],[9426,36,9489,38,"auth"],[9426,40,9489,42],[9426,42,9489,44],[9427,8,9490,12,"mfaPendingCredential"],[9427,28,9490,32],[9427,30,9490,34,"mfaPendingCredential"],[9427,50,9490,54],[9428,8,9491,12,"phoneVerificationInfo"],[9428,29,9491,33],[9428,31,9491,35],[9428,35,9491,39],[9428,36,9491,40,"credential"],[9428,46,9491,50],[9428,47,9491,51,"_makeVerificationRequest"],[9428,71,9491,75],[9428,72,9491,76],[9429,6,9492,8],[9429,7,9492,9],[9429,8,9492,10],[9430,4,9493,4],[9430,5,9493,5],[9431,4,9494,4],[9431,11,9494,11,"PhoneMultiFactorAssertionImpl"],[9431,40,9494,40],[9432,2,9495,0],[9432,3,9495,1],[9432,4,9495,2,"MultiFactorAssertionImpl"],[9432,28,9495,26],[9432,29,9495,28],[9433,2,9496,0],[9434,0,9497,0],[9435,0,9498,0],[9436,0,9499,0],[9437,0,9500,0],[9438,2,9501,0],[9438,6,9501,4,"PhoneMultiFactorGenerator"],[9438,31,9501,29],[9438,34,9501,32],[9438,47,9501,47],[9438,59,9501,59],[9439,4,9502,4],[9439,13,9502,13,"PhoneMultiFactorGenerator"],[9439,38,9502,38,"PhoneMultiFactorGenerator"],[9439,39,9502,38],[9439,41,9502,41],[9439,42,9503,4],[9440,4,9504,4],[9441,0,9505,0],[9442,0,9506,0],[9443,0,9507,0],[9444,0,9508,0],[9445,0,9509,0],[9446,0,9510,0],[9447,0,9511,0],[9448,0,9512,0],[9449,0,9513,0],[9450,4,9514,4,"PhoneMultiFactorGenerator"],[9450,29,9514,29],[9450,30,9514,30,"assertion"],[9450,39,9514,39],[9450,42,9514,42],[9450,52,9514,52,"credential"],[9450,62,9514,62],[9450,64,9514,64],[9451,6,9515,8],[9451,13,9515,15,"PhoneMultiFactorAssertionImpl"],[9451,42,9515,44],[9451,43,9515,45,"_fromCredential"],[9451,58,9515,60],[9451,59,9515,61,"credential"],[9451,69,9515,71],[9451,70,9515,72],[9452,4,9516,4],[9452,5,9516,5],[9453,4,9517,4],[9454,0,9518,0],[9455,0,9519,0],[9456,4,9520,4,"PhoneMultiFactorGenerator"],[9456,29,9520,29],[9456,30,9520,30,"FACTOR_ID"],[9456,39,9520,39],[9456,42,9520,42],[9456,49,9520,49],[9457,4,9521,4],[9457,11,9521,11,"PhoneMultiFactorGenerator"],[9457,36,9521,36],[9458,2,9522,0],[9458,3,9522,1],[9458,4,9522,2],[9458,5,9522,4],[9460,2,9524,0],[9461,0,9525,0],[9462,0,9526,0],[9463,0,9527,0],[9464,0,9528,0],[9465,2,9529,0],[9465,6,9529,4,"TotpMultiFactorGenerator"],[9465,30,9529,28],[9465,33,9529,31],[9465,46,9529,46],[9465,58,9529,58],[9466,4,9530,4],[9466,13,9530,13,"TotpMultiFactorGenerator"],[9466,37,9530,37,"TotpMultiFactorGenerator"],[9466,38,9530,37],[9466,40,9530,40],[9466,41,9531,4],[9467,4,9532,4],[9468,0,9533,0],[9469,0,9534,0],[9470,0,9535,0],[9471,0,9536,0],[9472,0,9537,0],[9473,0,9538,0],[9474,0,9539,0],[9475,0,9540,0],[9476,0,9541,0],[9477,4,9542,4,"TotpMultiFactorGenerator"],[9477,28,9542,28],[9477,29,9542,29,"assertionForEnrollment"],[9477,51,9542,51],[9477,54,9542,54],[9477,64,9542,64,"secret"],[9477,70,9542,70],[9477,72,9542,72,"oneTimePassword"],[9477,87,9542,87],[9477,89,9542,89],[9478,6,9543,8],[9478,13,9543,15,"TotpMultiFactorAssertionImpl"],[9478,41,9543,43],[9478,42,9543,44,"_fromSecret"],[9478,53,9543,55],[9478,54,9543,56,"secret"],[9478,60,9543,62],[9478,62,9543,64,"oneTimePassword"],[9478,77,9543,79],[9478,78,9543,80],[9479,4,9544,4],[9479,5,9544,5],[9480,4,9545,4],[9481,0,9546,0],[9482,0,9547,0],[9483,0,9548,0],[9484,0,9549,0],[9485,0,9550,0],[9486,0,9551,0],[9487,0,9552,0],[9488,0,9553,0],[9489,4,9554,4,"TotpMultiFactorGenerator"],[9489,28,9554,28],[9489,29,9554,29,"assertionForSignIn"],[9489,47,9554,47],[9489,50,9554,50],[9489,60,9554,60,"enrollmentId"],[9489,72,9554,72],[9489,74,9554,74,"oneTimePassword"],[9489,89,9554,89],[9489,91,9554,91],[9490,6,9555,8],[9490,13,9555,15,"TotpMultiFactorAssertionImpl"],[9490,41,9555,43],[9490,42,9555,44,"_fromEnrollmentId"],[9490,59,9555,61],[9490,60,9555,62,"enrollmentId"],[9490,72,9555,74],[9490,74,9555,76,"oneTimePassword"],[9490,89,9555,91],[9490,90,9555,92],[9491,4,9556,4],[9491,5,9556,5],[9492,4,9557,4],[9493,0,9558,0],[9494,0,9559,0],[9495,0,9560,0],[9496,0,9561,0],[9497,0,9562,0],[9498,0,9563,0],[9499,0,9564,0],[9500,0,9565,0],[9501,4,9566,4,"TotpMultiFactorGenerator"],[9501,28,9566,28],[9501,29,9566,29,"generateSecret"],[9501,43,9566,43],[9501,46,9566,46],[9501,56,9566,56,"session"],[9501,63,9566,63],[9501,65,9566,65],[9502,6,9567,8],[9502,10,9567,12,"_a"],[9502,12,9567,14],[9503,6,9568,8],[9503,13,9568,15,"tslib"],[9503,18,9568,20],[9503,19,9568,21,"__awaiter"],[9503,28,9568,30],[9503,29,9568,31],[9503,33,9568,35],[9503,35,9568,35,"undefined"],[9503,44,9568,35],[9503,46,9568,35,"undefined"],[9503,55,9568,35],[9503,57,9568,53],[9503,69,9568,65],[9504,8,9569,12],[9504,12,9569,16,"mfaSession"],[9504,22,9569,26],[9504,24,9569,28,"response"],[9504,32,9569,36],[9505,8,9570,12],[9505,15,9570,19,"tslib"],[9505,20,9570,24],[9505,21,9570,25,"__generator"],[9505,32,9570,36],[9505,33,9570,37],[9505,37,9570,41],[9505,39,9570,43],[9505,49,9570,53,"_b"],[9505,51,9570,55],[9505,53,9570,57],[9506,10,9571,16],[9506,18,9571,24,"_b"],[9506,20,9571,26],[9506,21,9571,27,"label"],[9506,26,9571,32],[9507,12,9572,20],[9507,17,9572,25],[9507,18,9572,26],[9508,14,9573,24,"mfaSession"],[9508,24,9573,34],[9508,27,9573,37,"session"],[9508,34,9573,44],[9509,14,9574,24,"_assert"],[9509,21,9574,31],[9509,22,9574,32],[9509,30,9574,40],[9509,31,9574,41,"_a"],[9509,33,9574,43],[9509,36,9574,46,"mfaSession"],[9509,46,9574,56],[9509,47,9574,57,"user"],[9509,51,9574,61],[9509,57,9574,67],[9509,61,9574,71],[9509,65,9574,75,"_a"],[9509,67,9574,77],[9509,72,9574,77,"undefined"],[9509,81,9574,88],[9509,84,9574,88,"undefined"],[9509,93,9574,88],[9509,96,9574,100,"_a"],[9509,98,9574,102],[9509,99,9574,103,"auth"],[9509,103,9574,107],[9509,104,9574,108],[9509,109,9574,113],[9509,120,9574,124],[9509,122,9574,126],[9509,138,9574,142],[9509,139,9574,143],[9509,173,9574,177],[9509,174,9574,178],[9510,14,9575,24],[9510,21,9575,31],[9510,22,9575,32],[9510,23,9575,33],[9510,24,9575,34],[9510,35,9575,45,"startEnrollTotpMfa"],[9510,53,9575,63],[9510,54,9575,64,"mfaSession"],[9510,64,9575,74],[9510,65,9575,75,"user"],[9510,69,9575,79],[9510,70,9575,80,"auth"],[9510,74,9575,84],[9510,76,9575,86],[9511,16,9576,32,"idToken"],[9511,23,9576,39],[9511,25,9576,41,"mfaSession"],[9511,35,9576,51],[9511,36,9576,52,"credential"],[9511,46,9576,62],[9512,16,9577,32,"totpEnrollmentInfo"],[9512,34,9577,50],[9512,36,9577,52],[9512,37,9577,53],[9513,14,9578,28],[9513,15,9578,29],[9513,16,9578,30],[9513,17,9578,31],[9514,12,9579,20],[9514,17,9579,25],[9514,18,9579,26],[9515,14,9580,24,"response"],[9515,22,9580,32],[9515,25,9580,35,"_b"],[9515,27,9580,37],[9515,28,9580,38,"sent"],[9515,32,9580,42],[9515,33,9580,43],[9515,34,9580,44],[9516,14,9581,24],[9516,21,9581,31],[9516,22,9581,32],[9516,23,9581,33],[9516,24,9581,34],[9516,36,9581,46,"TotpSecret"],[9516,46,9581,56],[9516,47,9581,57,"_fromStartTotpMfaEnrollmentResponse"],[9516,82,9581,92],[9516,83,9581,93,"response"],[9516,91,9581,101],[9516,93,9581,103,"mfaSession"],[9516,103,9581,113],[9516,104,9581,114,"user"],[9516,108,9581,118],[9516,109,9581,119,"auth"],[9516,113,9581,123],[9516,114,9581,124],[9516,115,9581,125],[9517,10,9582,16],[9518,8,9583,12],[9518,9,9583,13],[9518,10,9583,14],[9519,6,9584,8],[9519,7,9584,9],[9519,8,9584,10],[9520,4,9585,4],[9520,5,9585,5],[9521,4,9586,4],[9522,0,9587,0],[9523,0,9588,0],[9524,4,9589,4,"TotpMultiFactorGenerator"],[9524,28,9589,28],[9524,29,9589,29,"FACTOR_ID"],[9524,38,9589,38],[9524,41,9589,41],[9524,47,9589,47],[9524,48,9589,48],[9525,4,9590,4],[9525,11,9590,11,"TotpMultiFactorGenerator"],[9525,35,9590,35],[9526,2,9591,0],[9526,3,9591,1],[9526,4,9591,2],[9526,5,9591,4],[9527,2,9592,0],[9527,6,9592,4,"TotpMultiFactorAssertionImpl"],[9527,34,9592,32],[9527,37,9592,35],[9527,50,9592,50],[9527,60,9592,60,"_super"],[9527,66,9592,66],[9527,68,9592,68],[9528,4,9593,4,"tslib"],[9528,9,9593,9],[9528,10,9593,10,"__extends"],[9528,19,9593,19],[9528,20,9593,20,"TotpMultiFactorAssertionImpl"],[9528,48,9593,48],[9528,50,9593,50,"_super"],[9528,56,9593,56],[9528,57,9593,57],[9529,4,9594,4],[9529,13,9594,13,"TotpMultiFactorAssertionImpl"],[9529,41,9594,41,"TotpMultiFactorAssertionImpl"],[9529,42,9594,42,"otp"],[9529,45,9594,45],[9529,47,9594,47,"enrollmentId"],[9529,59,9594,59],[9529,61,9594,61,"secret"],[9529,67,9594,67],[9529,69,9594,69],[9530,6,9595,8],[9530,10,9595,12,"_this"],[9530,15,9595,17],[9530,18,9595,20,"_super"],[9530,24,9595,26],[9530,25,9595,27,"call"],[9530,29,9595,31],[9530,30,9595,32],[9530,34,9595,36],[9530,36,9595,38],[9530,42,9595,44],[9530,43,9595,45],[9530,62,9595,64],[9530,63,9595,65],[9530,67,9595,69],[9530,71,9595,73],[9531,6,9596,8,"_this"],[9531,11,9596,13],[9531,12,9596,14,"otp"],[9531,15,9596,17],[9531,18,9596,20,"otp"],[9531,21,9596,23],[9532,6,9597,8,"_this"],[9532,11,9597,13],[9532,12,9597,14,"enrollmentId"],[9532,24,9597,26],[9532,27,9597,29,"enrollmentId"],[9532,39,9597,41],[9533,6,9598,8,"_this"],[9533,11,9598,13],[9533,12,9598,14,"secret"],[9533,18,9598,20],[9533,21,9598,23,"secret"],[9533,27,9598,29],[9534,6,9599,8],[9534,13,9599,15,"_this"],[9534,18,9599,20],[9535,4,9600,4],[9536,4,9601,4],[9537,4,9602,4,"TotpMultiFactorAssertionImpl"],[9537,32,9602,32],[9537,33,9602,33,"_fromSecret"],[9537,44,9602,44],[9537,47,9602,47],[9537,57,9602,57,"secret"],[9537,63,9602,63],[9537,65,9602,65,"otp"],[9537,68,9602,68],[9537,70,9602,70],[9538,6,9603,8],[9538,13,9603,15],[9538,17,9603,19,"TotpMultiFactorAssertionImpl"],[9538,45,9603,47],[9538,46,9603,48,"otp"],[9538,49,9603,51],[9538,51,9603,53,"undefined"],[9538,60,9603,62],[9538,62,9603,64,"secret"],[9538,68,9603,70],[9538,69,9603,71],[9539,4,9604,4],[9539,5,9604,5],[9540,4,9605,4],[9541,4,9606,4,"TotpMultiFactorAssertionImpl"],[9541,32,9606,32],[9541,33,9606,33,"_fromEnrollmentId"],[9541,50,9606,50],[9541,53,9606,53],[9541,63,9606,63,"enrollmentId"],[9541,75,9606,75],[9541,77,9606,77,"otp"],[9541,80,9606,80],[9541,82,9606,82],[9542,6,9607,8],[9542,13,9607,15],[9542,17,9607,19,"TotpMultiFactorAssertionImpl"],[9542,45,9607,47],[9542,46,9607,48,"otp"],[9542,49,9607,51],[9542,51,9607,53,"enrollmentId"],[9542,63,9607,65],[9542,64,9607,66],[9543,4,9608,4],[9543,5,9608,5],[9544,4,9609,4],[9545,4,9610,4,"TotpMultiFactorAssertionImpl"],[9545,32,9610,32],[9545,33,9610,33,"prototype"],[9545,42,9610,42],[9545,43,9610,43,"_finalizeEnroll"],[9545,58,9610,58],[9545,61,9610,61],[9545,71,9610,71,"auth"],[9545,75,9610,75],[9545,77,9610,77,"idToken"],[9545,84,9610,84],[9545,86,9610,86,"displayName"],[9545,97,9610,97],[9545,99,9610,99],[9546,6,9611,8],[9546,13,9611,15,"tslib"],[9546,18,9611,20],[9546,19,9611,21,"__awaiter"],[9546,28,9611,30],[9546,29,9611,31],[9546,33,9611,35],[9546,35,9611,35,"undefined"],[9546,44,9611,35],[9546,46,9611,35,"undefined"],[9546,55,9611,35],[9546,57,9611,53],[9546,69,9611,65],[9547,8,9612,12],[9547,15,9612,19,"tslib"],[9547,20,9612,24],[9547,21,9612,25,"__generator"],[9547,32,9612,36],[9547,33,9612,37],[9547,37,9612,41],[9547,39,9612,43],[9547,49,9612,53,"_a"],[9547,51,9612,55],[9547,53,9612,57],[9548,10,9613,16,"_assert"],[9548,17,9613,23],[9548,18,9613,24],[9548,25,9613,31],[9548,29,9613,35],[9548,30,9613,36,"secret"],[9548,36,9613,42],[9548,41,9613,47],[9548,52,9613,58],[9548,54,9613,60,"auth"],[9548,58,9613,64],[9548,60,9613,66],[9548,76,9613,82],[9548,77,9613,83],[9548,111,9613,117],[9548,112,9613,118],[9549,10,9614,16],[9549,17,9614,23],[9549,18,9614,24],[9549,19,9614,25],[9549,20,9614,26],[9549,32,9614,38,"finalizeEnrollTotpMfa"],[9549,53,9614,59],[9549,54,9614,60,"auth"],[9549,58,9614,64],[9549,60,9614,66],[9550,12,9615,24,"idToken"],[9550,19,9615,31],[9550,21,9615,33,"idToken"],[9550,28,9615,40],[9551,12,9616,24,"displayName"],[9551,23,9616,35],[9551,25,9616,37,"displayName"],[9551,36,9616,48],[9552,12,9617,24,"totpVerificationInfo"],[9552,32,9617,44],[9552,34,9617,46],[9552,38,9617,50],[9552,39,9617,51,"secret"],[9552,45,9617,57],[9552,46,9617,58,"_makeTotpVerificationInfo"],[9552,71,9617,83],[9552,72,9617,84],[9552,76,9617,88],[9552,77,9617,89,"otp"],[9552,80,9617,92],[9553,10,9618,20],[9553,11,9618,21],[9553,12,9618,22],[9553,13,9618,23],[9554,8,9619,12],[9554,9,9619,13],[9554,10,9619,14],[9555,6,9620,8],[9555,7,9620,9],[9555,8,9620,10],[9556,4,9621,4],[9556,5,9621,5],[9557,4,9622,4],[9558,4,9623,4,"TotpMultiFactorAssertionImpl"],[9558,32,9623,32],[9558,33,9623,33,"prototype"],[9558,42,9623,42],[9558,43,9623,43,"_finalizeSignIn"],[9558,58,9623,58],[9558,61,9623,61],[9558,71,9623,71,"auth"],[9558,75,9623,75],[9558,77,9623,77,"mfaPendingCredential"],[9558,97,9623,97],[9558,99,9623,99],[9559,6,9624,8],[9559,13,9624,15,"tslib"],[9559,18,9624,20],[9559,19,9624,21,"__awaiter"],[9559,28,9624,30],[9559,29,9624,31],[9559,33,9624,35],[9559,35,9624,35,"undefined"],[9559,44,9624,35],[9559,46,9624,35,"undefined"],[9559,55,9624,35],[9559,57,9624,53],[9559,69,9624,65],[9560,8,9625,12],[9560,12,9625,16,"totpVerificationInfo"],[9560,32,9625,36],[9561,8,9626,12],[9561,15,9626,19,"tslib"],[9561,20,9626,24],[9561,21,9626,25,"__generator"],[9561,32,9626,36],[9561,33,9626,37],[9561,37,9626,41],[9561,39,9626,43],[9561,49,9626,53,"_a"],[9561,51,9626,55],[9561,53,9626,57],[9562,10,9627,16,"_assert"],[9562,17,9627,23],[9562,18,9627,24],[9562,22,9627,28],[9562,23,9627,29,"enrollmentId"],[9562,35,9627,41],[9562,40,9627,46,"undefined"],[9562,49,9627,55],[9562,53,9627,59],[9562,57,9627,63],[9562,58,9627,64,"otp"],[9562,61,9627,67],[9562,66,9627,72,"undefined"],[9562,75,9627,81],[9562,77,9627,83,"auth"],[9562,81,9627,87],[9562,83,9627,89],[9562,99,9627,105],[9562,100,9627,106],[9562,134,9627,140],[9562,135,9627,141],[9563,10,9628,16,"totpVerificationInfo"],[9563,30,9628,36],[9563,33,9628,39],[9564,12,9628,41,"verificationCode"],[9564,28,9628,57],[9564,30,9628,59],[9564,34,9628,63],[9564,35,9628,64,"otp"],[9565,10,9628,68],[9565,11,9628,69],[9566,10,9629,16],[9566,17,9629,23],[9566,18,9629,24],[9566,19,9629,25],[9566,20,9629,26],[9566,32,9629,38,"finalizeSignInTotpMfa"],[9566,53,9629,59],[9566,54,9629,60,"auth"],[9566,58,9629,64],[9566,60,9629,66],[9567,12,9630,24,"mfaPendingCredential"],[9567,32,9630,44],[9567,34,9630,46,"mfaPendingCredential"],[9567,54,9630,66],[9568,12,9631,24,"mfaEnrollmentId"],[9568,27,9631,39],[9568,29,9631,41],[9568,33,9631,45],[9568,34,9631,46,"enrollmentId"],[9568,46,9631,58],[9569,12,9632,24,"totpVerificationInfo"],[9569,32,9632,44],[9569,34,9632,46,"totpVerificationInfo"],[9570,10,9633,20],[9570,11,9633,21],[9570,12,9633,22],[9570,13,9633,23],[9571,8,9634,12],[9571,9,9634,13],[9571,10,9634,14],[9572,6,9635,8],[9572,7,9635,9],[9572,8,9635,10],[9573,4,9636,4],[9573,5,9636,5],[9574,4,9637,4],[9574,11,9637,11,"TotpMultiFactorAssertionImpl"],[9574,39,9637,39],[9575,2,9638,0],[9575,3,9638,1],[9575,4,9638,2,"MultiFactorAssertionImpl"],[9575,28,9638,26],[9575,29,9638,28],[9576,2,9639,0],[9577,0,9640,0],[9578,0,9641,0],[9579,0,9642,0],[9580,0,9643,0],[9581,0,9644,0],[9582,0,9645,0],[9583,2,9646,0],[9583,6,9646,4,"TotpSecret"],[9583,16,9646,14],[9583,19,9646,17],[9583,32,9646,32],[9583,44,9646,44],[9584,4,9647,4],[9585,4,9648,4],[9585,13,9648,13,"TotpSecret"],[9585,23,9648,23,"TotpSecret"],[9585,24,9648,24,"secretKey"],[9585,33,9648,33],[9585,35,9648,35,"hashingAlgorithm"],[9585,51,9648,51],[9585,53,9648,53,"codeLength"],[9585,63,9648,63],[9585,65,9648,65,"codeIntervalSeconds"],[9585,84,9648,84],[9585,86,9648,86,"enrollmentCompletionDeadline"],[9585,114,9648,114],[9585,116,9648,116,"sessionInfo"],[9585,127,9648,127],[9585,129,9648,129,"auth"],[9585,133,9648,133],[9585,135,9648,135],[9586,6,9649,8],[9586,10,9649,12],[9586,11,9649,13,"sessionInfo"],[9586,22,9649,24],[9586,25,9649,27,"sessionInfo"],[9586,36,9649,38],[9587,6,9650,8],[9587,10,9650,12],[9587,11,9650,13,"auth"],[9587,15,9650,17],[9587,18,9650,20,"auth"],[9587,22,9650,24],[9588,6,9651,8],[9588,10,9651,12],[9588,11,9651,13,"secretKey"],[9588,20,9651,22],[9588,23,9651,25,"secretKey"],[9588,32,9651,34],[9589,6,9652,8],[9589,10,9652,12],[9589,11,9652,13,"hashingAlgorithm"],[9589,27,9652,29],[9589,30,9652,32,"hashingAlgorithm"],[9589,46,9652,48],[9590,6,9653,8],[9590,10,9653,12],[9590,11,9653,13,"codeLength"],[9590,21,9653,23],[9590,24,9653,26,"codeLength"],[9590,34,9653,36],[9591,6,9654,8],[9591,10,9654,12],[9591,11,9654,13,"codeIntervalSeconds"],[9591,30,9654,32],[9591,33,9654,35,"codeIntervalSeconds"],[9591,52,9654,54],[9592,6,9655,8],[9592,10,9655,12],[9592,11,9655,13,"enrollmentCompletionDeadline"],[9592,39,9655,41],[9592,42,9655,44,"enrollmentCompletionDeadline"],[9592,70,9655,72],[9593,4,9656,4],[9594,4,9657,4],[9595,4,9658,4,"TotpSecret"],[9595,14,9658,14],[9595,15,9658,15,"_fromStartTotpMfaEnrollmentResponse"],[9595,50,9658,50],[9595,53,9658,53],[9595,63,9658,63,"response"],[9595,71,9658,71],[9595,73,9658,73,"auth"],[9595,77,9658,77],[9595,79,9658,79],[9596,6,9659,8],[9596,13,9659,15],[9596,17,9659,19,"TotpSecret"],[9596,27,9659,29],[9596,28,9659,30,"response"],[9596,36,9659,38],[9596,37,9659,39,"totpSessionInfo"],[9596,52,9659,54],[9596,53,9659,55,"sharedSecretKey"],[9596,68,9659,70],[9596,70,9659,72,"response"],[9596,78,9659,80],[9596,79,9659,81,"totpSessionInfo"],[9596,94,9659,96],[9596,95,9659,97,"hashingAlgorithm"],[9596,111,9659,113],[9596,113,9659,115,"response"],[9596,121,9659,123],[9596,122,9659,124,"totpSessionInfo"],[9596,137,9659,139],[9596,138,9659,140,"verificationCodeLength"],[9596,160,9659,162],[9596,162,9659,164,"response"],[9596,170,9659,172],[9596,171,9659,173,"totpSessionInfo"],[9596,186,9659,188],[9596,187,9659,189,"periodSec"],[9596,196,9659,198],[9596,198,9659,200],[9596,202,9659,204,"Date"],[9596,206,9659,208],[9596,207,9659,209,"response"],[9596,215,9659,217],[9596,216,9659,218,"totpSessionInfo"],[9596,231,9659,233],[9596,232,9659,234,"finalizeEnrollmentTime"],[9596,254,9659,256],[9596,255,9659,257],[9596,256,9659,258,"toUTCString"],[9596,267,9659,269],[9596,268,9659,270],[9596,269,9659,271],[9596,271,9659,273,"response"],[9596,279,9659,281],[9596,280,9659,282,"totpSessionInfo"],[9596,295,9659,297],[9596,296,9659,298,"sessionInfo"],[9596,307,9659,309],[9596,309,9659,311,"auth"],[9596,313,9659,315],[9596,314,9659,316],[9597,4,9660,4],[9597,5,9660,5],[9598,4,9661,4],[9599,4,9662,4,"TotpSecret"],[9599,14,9662,14],[9599,15,9662,15,"prototype"],[9599,24,9662,24],[9599,25,9662,25,"_makeTotpVerificationInfo"],[9599,50,9662,50],[9599,53,9662,53],[9599,63,9662,63,"otp"],[9599,66,9662,66],[9599,68,9662,68],[9600,6,9663,8],[9600,13,9663,15],[9601,8,9663,17,"sessionInfo"],[9601,19,9663,28],[9601,21,9663,30],[9601,25,9663,34],[9601,26,9663,35,"sessionInfo"],[9601,37,9663,46],[9602,8,9663,48,"verificationCode"],[9602,24,9663,64],[9602,26,9663,66,"otp"],[9603,6,9663,70],[9603,7,9663,71],[9604,4,9664,4],[9604,5,9664,5],[9605,4,9665,4],[9606,0,9666,0],[9607,0,9667,0],[9608,0,9668,0],[9609,0,9669,0],[9610,0,9670,0],[9611,0,9671,0],[9612,0,9672,0],[9613,0,9673,0],[9614,0,9674,0],[9615,4,9675,4,"TotpSecret"],[9615,14,9675,14],[9615,15,9675,15,"prototype"],[9615,24,9675,24],[9615,25,9675,25,"generateQrCodeUrl"],[9615,42,9675,42],[9615,45,9675,45],[9615,55,9675,55,"accountName"],[9615,66,9675,66],[9615,68,9675,68,"issuer"],[9615,74,9675,74],[9615,76,9675,76],[9616,6,9676,8],[9616,10,9676,12,"_a"],[9616,12,9676,14],[9617,6,9677,8],[9617,10,9677,12,"useDefaults"],[9617,21,9677,23],[9617,24,9677,26],[9617,29,9677,31],[9618,6,9678,8],[9618,10,9678,12,"_isEmptyString"],[9618,24,9678,26],[9618,25,9678,27,"accountName"],[9618,36,9678,38],[9618,37,9678,39],[9618,41,9678,43,"_isEmptyString"],[9618,55,9678,57],[9618,56,9678,58,"issuer"],[9618,62,9678,64],[9618,63,9678,65],[9618,65,9678,67],[9619,8,9679,12,"useDefaults"],[9619,19,9679,23],[9619,22,9679,26],[9619,26,9679,30],[9620,6,9680,8],[9621,6,9681,8],[9621,10,9681,12,"useDefaults"],[9621,21,9681,23],[9621,23,9681,25],[9622,8,9682,12],[9622,12,9682,16,"_isEmptyString"],[9622,26,9682,30],[9622,27,9682,31,"accountName"],[9622,38,9682,42],[9622,39,9682,43],[9622,41,9682,45],[9623,10,9683,16,"accountName"],[9623,21,9683,27],[9623,24,9683,30],[9623,25,9683,31],[9623,26,9683,32,"_a"],[9623,28,9683,34],[9623,31,9683,37],[9623,35,9683,41],[9623,36,9683,42,"auth"],[9623,40,9683,46],[9623,41,9683,47,"currentUser"],[9623,52,9683,58],[9623,58,9683,64],[9623,62,9683,68],[9623,66,9683,72,"_a"],[9623,68,9683,74],[9623,73,9683,74,"undefined"],[9623,82,9683,85],[9623,85,9683,85,"undefined"],[9623,94,9683,85],[9623,97,9683,97,"_a"],[9623,99,9683,99],[9623,100,9683,100,"email"],[9623,105,9683,105],[9623,110,9683,110],[9623,123,9683,123],[9624,8,9684,12],[9625,8,9685,12],[9625,12,9685,16,"_isEmptyString"],[9625,26,9685,30],[9625,27,9685,31,"issuer"],[9625,33,9685,37],[9625,34,9685,38],[9625,36,9685,40],[9626,10,9686,16,"issuer"],[9626,16,9686,22],[9626,19,9686,25],[9626,23,9686,29],[9626,24,9686,30,"auth"],[9626,28,9686,34],[9626,29,9686,35,"name"],[9626,33,9686,39],[9627,8,9687,12],[9628,6,9688,8],[9629,6,9689,8],[9629,13,9689,15],[9629,30,9689,32],[9629,31,9689,33,"concat"],[9629,37,9689,39],[9629,38,9689,40,"issuer"],[9629,44,9689,46],[9629,46,9689,48],[9629,49,9689,51],[9629,50,9689,52],[9629,51,9689,53,"concat"],[9629,57,9689,59],[9629,58,9689,60,"accountName"],[9629,69,9689,71],[9629,71,9689,73],[9629,81,9689,83],[9629,82,9689,84],[9629,83,9689,85,"concat"],[9629,89,9689,91],[9629,90,9689,92],[9629,94,9689,96],[9629,95,9689,97,"secretKey"],[9629,104,9689,106],[9629,106,9689,108],[9629,116,9689,118],[9629,117,9689,119],[9629,118,9689,120,"concat"],[9629,124,9689,126],[9629,125,9689,127,"issuer"],[9629,131,9689,133],[9629,133,9689,135],[9629,146,9689,148],[9629,147,9689,149],[9629,148,9689,150,"concat"],[9629,154,9689,156],[9629,155,9689,157],[9629,159,9689,161],[9629,160,9689,162,"hashingAlgorithm"],[9629,176,9689,178],[9629,178,9689,180],[9629,188,9689,190],[9629,189,9689,191],[9629,190,9689,192,"concat"],[9629,196,9689,198],[9629,197,9689,199],[9629,201,9689,203],[9629,202,9689,204,"codeLength"],[9629,212,9689,214],[9629,213,9689,215],[9630,4,9690,4],[9630,5,9690,5],[9631,4,9691,4],[9631,11,9691,11,"TotpSecret"],[9631,21,9691,21],[9632,2,9692,0],[9632,3,9692,1],[9632,4,9692,2],[9632,5,9692,4],[9633,2,9693,0],[9634,2,9694,0],[9634,11,9694,9,"_isEmptyString"],[9634,25,9694,23,"_isEmptyString"],[9634,26,9694,24,"input"],[9634,31,9694,29],[9634,33,9694,31],[9635,4,9695,4],[9635,11,9695,11],[9635,18,9695,18,"input"],[9635,23,9695,23],[9635,28,9695,28],[9635,39,9695,39],[9635,43,9695,43],[9635,44,9695,44,"input"],[9635,49,9695,49],[9635,54,9695,54],[9635,58,9695,58],[9635,62,9695,62,"input"],[9635,67,9695,67],[9635,72,9695,67,"undefined"],[9635,81,9695,78],[9635,84,9695,78,"undefined"],[9635,93,9695,78],[9635,96,9695,90,"input"],[9635,101,9695,95],[9635,102,9695,96,"length"],[9635,108,9695,102],[9635,114,9695,108],[9635,115,9695,109],[9636,2,9696,0],[9637,2,9698,0],[9637,6,9698,4,"STORAGE_AVAILABLE_KEY"],[9637,27,9698,25],[9637,30,9698,28],[9637,37,9698,35],[9638,2,9700,0,"exports"],[9638,9,9700,7],[9638,10,9700,8,"AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY"],[9638,52,9700,50],[9638,55,9700,53,"AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY"],[9638,97,9700,95],[9639,2,9701,0,"exports"],[9639,9,9701,7],[9639,10,9701,8,"ActionCodeOperation"],[9639,29,9701,27],[9639,32,9701,30,"ActionCodeOperation"],[9639,51,9701,49],[9640,2,9702,0,"exports"],[9640,9,9702,7],[9640,10,9702,8,"ActionCodeURL"],[9640,23,9702,21],[9640,26,9702,24,"ActionCodeURL"],[9640,39,9702,37],[9641,2,9703,0,"exports"],[9641,9,9703,7],[9641,10,9703,8,"AuthCredential"],[9641,24,9703,22],[9641,27,9703,25,"AuthCredential"],[9641,41,9703,39],[9642,2,9704,0,"exports"],[9642,9,9704,7],[9642,10,9704,8,"AuthImpl"],[9642,18,9704,16],[9642,21,9704,19,"AuthImpl"],[9642,29,9704,27],[9643,2,9705,0,"exports"],[9643,9,9705,7],[9643,10,9705,8,"BaseOAuthProvider"],[9643,27,9705,25],[9643,30,9705,28,"BaseOAuthProvider"],[9643,47,9705,45],[9644,2,9706,0,"exports"],[9644,9,9706,7],[9644,10,9706,8,"Delay"],[9644,15,9706,13],[9644,18,9706,16,"Delay"],[9644,23,9706,21],[9645,2,9707,0,"exports"],[9645,9,9707,7],[9645,10,9707,8,"EmailAuthCredential"],[9645,29,9707,27],[9645,32,9707,30,"EmailAuthCredential"],[9645,51,9707,49],[9646,2,9708,0,"exports"],[9646,9,9708,7],[9646,10,9708,8,"EmailAuthProvider"],[9646,27,9708,25],[9646,30,9708,28,"EmailAuthProvider"],[9646,47,9708,45],[9647,2,9709,0,"exports"],[9647,9,9709,7],[9647,10,9709,8,"FacebookAuthProvider"],[9647,30,9709,28],[9647,33,9709,31,"FacebookAuthProvider"],[9647,53,9709,51],[9648,2,9710,0,"exports"],[9648,9,9710,7],[9648,10,9710,8,"FactorId"],[9648,18,9710,16],[9648,21,9710,19,"FactorId"],[9648,29,9710,27],[9649,2,9711,0,"exports"],[9649,9,9711,7],[9649,10,9711,8,"FederatedAuthProvider"],[9649,31,9711,29],[9649,34,9711,32,"FederatedAuthProvider"],[9649,55,9711,53],[9650,2,9712,0,"exports"],[9650,9,9712,7],[9650,10,9712,8,"FetchProvider"],[9650,23,9712,21],[9650,26,9712,24,"FetchProvider"],[9650,39,9712,37],[9651,2,9713,0,"exports"],[9651,9,9713,7],[9651,10,9713,8,"GithubAuthProvider"],[9651,28,9713,26],[9651,31,9713,29,"GithubAuthProvider"],[9651,49,9713,47],[9652,2,9714,0,"exports"],[9652,9,9714,7],[9652,10,9714,8,"GoogleAuthProvider"],[9652,28,9714,26],[9652,31,9714,29,"GoogleAuthProvider"],[9652,49,9714,47],[9653,2,9715,0,"exports"],[9653,9,9715,7],[9653,10,9715,8,"OAuthCredential"],[9653,25,9715,23],[9653,28,9715,26,"OAuthCredential"],[9653,43,9715,41],[9654,2,9716,0,"exports"],[9654,9,9716,7],[9654,10,9716,8,"OAuthProvider"],[9654,23,9716,21],[9654,26,9716,24,"OAuthProvider"],[9654,39,9716,37],[9655,2,9717,0,"exports"],[9655,9,9717,7],[9655,10,9717,8,"OperationType"],[9655,23,9717,21],[9655,26,9717,24,"OperationType"],[9655,39,9717,37],[9656,2,9718,0,"exports"],[9656,9,9718,7],[9656,10,9718,8,"PhoneAuthCredential"],[9656,29,9718,27],[9656,32,9718,30,"PhoneAuthCredential"],[9656,51,9718,49],[9657,2,9719,0,"exports"],[9657,9,9719,7],[9657,10,9719,8,"PhoneAuthProvider"],[9657,27,9719,25],[9657,30,9719,28,"PhoneAuthProvider"],[9657,47,9719,45],[9658,2,9720,0,"exports"],[9658,9,9720,7],[9658,10,9720,8,"PhoneMultiFactorGenerator"],[9658,35,9720,33],[9658,38,9720,36,"PhoneMultiFactorGenerator"],[9658,63,9720,61],[9659,2,9721,0,"exports"],[9659,9,9721,7],[9659,10,9721,8,"ProviderId"],[9659,20,9721,18],[9659,23,9721,21,"ProviderId"],[9659,33,9721,31],[9660,2,9722,0,"exports"],[9660,9,9722,7],[9660,10,9722,8,"RecaptchaVerifier"],[9660,27,9722,25],[9660,30,9722,28,"RecaptchaVerifier"],[9660,47,9722,45],[9661,2,9723,0,"exports"],[9661,9,9723,7],[9661,10,9723,8,"SAMLAuthCredential"],[9661,28,9723,26],[9661,31,9723,29,"SAMLAuthCredential"],[9661,49,9723,47],[9662,2,9724,0,"exports"],[9662,9,9724,7],[9662,10,9724,8,"SAMLAuthProvider"],[9662,26,9724,24],[9662,29,9724,27,"SAMLAuthProvider"],[9662,45,9724,43],[9663,2,9725,0,"exports"],[9663,9,9725,7],[9663,10,9725,8,"STORAGE_AVAILABLE_KEY"],[9663,31,9725,29],[9663,34,9725,32,"STORAGE_AVAILABLE_KEY"],[9663,55,9725,53],[9664,2,9726,0,"exports"],[9664,9,9726,7],[9664,10,9726,8,"SignInMethod"],[9664,22,9726,20],[9664,25,9726,23,"SignInMethod"],[9664,37,9726,35],[9665,2,9727,0,"exports"],[9665,9,9727,7],[9665,10,9727,8,"TotpMultiFactorGenerator"],[9665,34,9727,32],[9665,37,9727,35,"TotpMultiFactorGenerator"],[9665,61,9727,59],[9666,2,9728,0,"exports"],[9666,9,9728,7],[9666,10,9728,8,"TotpSecret"],[9666,20,9728,18],[9666,23,9728,21,"TotpSecret"],[9666,33,9728,31],[9667,2,9729,0,"exports"],[9667,9,9729,7],[9667,10,9729,8,"TwitterAuthProvider"],[9667,29,9729,27],[9667,32,9729,30,"TwitterAuthProvider"],[9667,51,9729,49],[9668,2,9730,0,"exports"],[9668,9,9730,7],[9668,10,9730,8,"UserImpl"],[9668,18,9730,16],[9668,21,9730,19,"UserImpl"],[9668,29,9730,27],[9669,2,9731,0,"exports"],[9669,9,9731,7],[9669,10,9731,8,"_assert"],[9669,17,9731,15],[9669,20,9731,18,"_assert"],[9669,27,9731,25],[9670,2,9732,0,"exports"],[9670,9,9732,7],[9670,10,9732,8,"_assertInstanceOf"],[9670,27,9732,25],[9670,30,9732,28,"_assertInstanceOf"],[9670,47,9732,45],[9671,2,9733,0,"exports"],[9671,9,9733,7],[9671,10,9733,8,"_assertLinkedStatus"],[9671,29,9733,27],[9671,32,9733,30,"_assertLinkedStatus"],[9671,51,9733,49],[9672,2,9734,0,"exports"],[9672,9,9734,7],[9672,10,9734,8,"_castAuth"],[9672,19,9734,17],[9672,22,9734,20,"_castAuth"],[9672,31,9734,29],[9673,2,9735,0,"exports"],[9673,9,9735,7],[9673,10,9735,8,"_createError"],[9673,22,9735,20],[9673,25,9735,23,"_createError"],[9673,37,9735,35],[9674,2,9736,0,"exports"],[9674,9,9736,7],[9674,10,9736,8,"_emulatorUrl"],[9674,22,9736,20],[9674,25,9736,23,"_emulatorUrl"],[9674,37,9736,35],[9675,2,9737,0,"exports"],[9675,9,9737,7],[9675,10,9737,8,"_fail"],[9675,15,9737,13],[9675,18,9737,16,"_fail"],[9675,23,9737,21],[9676,2,9738,0,"exports"],[9676,9,9738,7],[9676,10,9738,8,"_gapiScriptUrl"],[9676,24,9738,22],[9676,27,9738,25,"_gapiScriptUrl"],[9676,41,9738,39],[9677,2,9739,0,"exports"],[9677,9,9739,7],[9677,10,9739,8,"_generateCallbackName"],[9677,31,9739,29],[9677,34,9739,32,"_generateCallbackName"],[9677,55,9739,53],[9678,2,9740,0,"exports"],[9678,9,9740,7],[9678,10,9740,8,"_getActiveServiceWorker"],[9678,33,9740,31],[9678,36,9740,34,"_getActiveServiceWorker"],[9678,59,9740,57],[9679,2,9741,0,"exports"],[9679,9,9741,7],[9679,10,9741,8,"_getClientVersion"],[9679,27,9741,25],[9679,30,9741,28,"_getClientVersion"],[9679,47,9741,45],[9680,2,9742,0,"exports"],[9680,9,9742,7],[9680,10,9742,8,"_getCurrentUrl"],[9680,24,9742,22],[9680,27,9742,25,"_getCurrentUrl"],[9680,41,9742,39],[9681,2,9743,0,"exports"],[9681,9,9743,7],[9681,10,9743,8,"_getInstance"],[9681,22,9743,20],[9681,25,9743,23,"_getInstance"],[9681,37,9743,35],[9682,2,9744,0,"exports"],[9682,9,9744,7],[9682,10,9744,8,"_getServiceWorkerController"],[9682,37,9744,35],[9682,40,9744,38,"_getServiceWorkerController"],[9682,67,9744,65],[9683,2,9745,0,"exports"],[9683,9,9745,7],[9683,10,9745,8,"_getWorkerGlobalScope"],[9683,31,9745,29],[9683,34,9745,32,"_getWorkerGlobalScope"],[9683,55,9745,53],[9684,2,9746,0,"exports"],[9684,9,9746,7],[9684,10,9746,8,"_isAndroid"],[9684,20,9746,18],[9684,23,9746,21,"_isAndroid"],[9684,33,9746,31],[9685,2,9747,0,"exports"],[9685,9,9747,7],[9685,10,9747,8,"_isChromeIOS"],[9685,22,9747,20],[9685,25,9747,23,"_isChromeIOS"],[9685,37,9747,35],[9686,2,9748,0,"exports"],[9686,9,9748,7],[9686,10,9748,8,"_isFirefox"],[9686,20,9748,18],[9686,23,9748,21,"_isFirefox"],[9686,33,9748,31],[9687,2,9749,0,"exports"],[9687,9,9749,7],[9687,10,9749,8,"_isIE10"],[9687,17,9749,15],[9687,20,9749,18,"_isIE10"],[9687,27,9749,25],[9688,2,9750,0,"exports"],[9688,9,9750,7],[9688,10,9750,8,"_isIOS"],[9688,16,9750,14],[9688,19,9750,17,"_isIOS"],[9688,25,9750,23],[9689,2,9751,0,"exports"],[9689,9,9751,7],[9689,10,9751,8,"_isIOS7Or8"],[9689,20,9751,18],[9689,23,9751,21,"_isIOS7Or8"],[9689,33,9751,31],[9690,2,9752,0,"exports"],[9690,9,9752,7],[9690,10,9752,8,"_isIOSStandalone"],[9690,26,9752,24],[9690,29,9752,27,"_isIOSStandalone"],[9690,45,9752,43],[9691,2,9753,0,"exports"],[9691,9,9753,7],[9691,10,9753,8,"_isMobileBrowser"],[9691,26,9753,24],[9691,29,9753,27,"_isMobileBrowser"],[9691,45,9753,43],[9692,2,9754,0,"exports"],[9692,9,9754,7],[9692,10,9754,8,"_isSafari"],[9692,19,9754,17],[9692,22,9754,20,"_isSafari"],[9692,31,9754,29],[9693,2,9755,0,"exports"],[9693,9,9755,7],[9693,10,9755,8,"_isWorker"],[9693,19,9755,17],[9693,22,9755,20,"_isWorker"],[9693,31,9755,29],[9694,2,9756,0,"exports"],[9694,9,9756,7],[9694,10,9756,8,"_link"],[9694,15,9756,13],[9694,18,9756,16,"_link"],[9694,23,9756,21],[9695,2,9757,0,"exports"],[9695,9,9757,7],[9695,10,9757,8,"_loadJS"],[9695,17,9757,15],[9695,20,9757,18,"_loadJS"],[9695,27,9757,25],[9696,2,9758,0,"exports"],[9696,9,9758,7],[9696,10,9758,8,"_logWarn"],[9696,18,9758,16],[9696,21,9758,19,"_logWarn"],[9696,29,9758,27],[9697,2,9759,0,"exports"],[9697,9,9759,7],[9697,10,9759,8,"_performApiRequest"],[9697,28,9759,26],[9697,31,9759,29,"_performApiRequest"],[9697,49,9759,47],[9698,2,9760,0,"exports"],[9698,9,9760,7],[9698,10,9760,8,"_persistenceKeyName"],[9698,29,9760,27],[9698,32,9760,30,"_persistenceKeyName"],[9698,51,9760,49],[9699,2,9761,0,"exports"],[9699,9,9761,7],[9699,10,9761,8,"_reauthenticate"],[9699,25,9761,23],[9699,28,9761,26,"_reauthenticate"],[9699,43,9761,41],[9700,2,9762,0,"exports"],[9700,9,9762,7],[9700,10,9762,8,"_serverAppCurrentUserOperationNotSupportedError"],[9700,57,9762,55],[9700,60,9762,58,"_serverAppCurrentUserOperationNotSupportedError"],[9700,107,9762,105],[9701,2,9763,0,"exports"],[9701,9,9763,7],[9701,10,9763,8,"_setExternalJSProvider"],[9701,32,9763,30],[9701,35,9763,33,"_setExternalJSProvider"],[9701,57,9763,55],[9702,2,9764,0,"exports"],[9702,9,9764,7],[9702,10,9764,8,"_setWindowLocation"],[9702,28,9764,26],[9702,31,9764,29,"_setWindowLocation"],[9702,49,9764,47],[9703,2,9765,0,"exports"],[9703,9,9765,7],[9703,10,9765,8,"_signInWithCredential"],[9703,31,9765,29],[9703,34,9765,32,"_signInWithCredential"],[9703,55,9765,53],[9704,2,9766,0,"exports"],[9704,9,9766,7],[9704,10,9766,8,"_window"],[9704,17,9766,15],[9704,20,9766,18,"_window"],[9704,27,9766,25],[9705,2,9767,0,"exports"],[9705,9,9767,7],[9705,10,9767,8,"applyActionCode"],[9705,25,9767,23],[9705,28,9767,26,"applyActionCode"],[9705,43,9767,41],[9706,2,9768,0,"exports"],[9706,9,9768,7],[9706,10,9768,8,"beforeAuthStateChanged"],[9706,32,9768,30],[9706,35,9768,33,"beforeAuthStateChanged"],[9706,57,9768,55],[9707,2,9769,0,"exports"],[9707,9,9769,7],[9707,10,9769,8,"checkActionCode"],[9707,25,9769,23],[9707,28,9769,26,"checkActionCode"],[9707,43,9769,41],[9708,2,9770,0,"exports"],[9708,9,9770,7],[9708,10,9770,8,"confirmPasswordReset"],[9708,30,9770,28],[9708,33,9770,31,"confirmPasswordReset"],[9708,53,9770,51],[9709,2,9771,0,"exports"],[9709,9,9771,7],[9709,10,9771,8,"connectAuthEmulator"],[9709,29,9771,27],[9709,32,9771,30,"connectAuthEmulator"],[9709,51,9771,49],[9710,2,9772,0,"exports"],[9710,9,9772,7],[9710,10,9772,8,"createUserWithEmailAndPassword"],[9710,40,9772,38],[9710,43,9772,41,"createUserWithEmailAndPassword"],[9710,73,9772,71],[9711,2,9773,0,"exports"],[9711,9,9773,7],[9711,10,9773,8,"debugAssert"],[9711,21,9773,19],[9711,24,9773,22,"debugAssert"],[9711,35,9773,33],[9712,2,9774,0,"exports"],[9712,9,9774,7],[9712,10,9774,8,"debugErrorMap"],[9712,23,9774,21],[9712,26,9774,24,"debugErrorMap"],[9712,39,9774,37],[9713,2,9775,0,"exports"],[9713,9,9775,7],[9713,10,9775,8,"deleteUser"],[9713,20,9775,18],[9713,23,9775,21,"deleteUser"],[9713,33,9775,31],[9714,2,9776,0,"exports"],[9714,9,9776,7],[9714,10,9776,8,"fetchSignInMethodsForEmail"],[9714,36,9776,34],[9714,39,9776,37,"fetchSignInMethodsForEmail"],[9714,65,9776,63],[9715,2,9777,0,"exports"],[9715,9,9777,7],[9715,10,9777,8,"getAdditionalUserInfo"],[9715,31,9777,29],[9715,34,9777,32,"getAdditionalUserInfo"],[9715,55,9777,53],[9716,2,9778,0,"exports"],[9716,9,9778,7],[9716,10,9778,8,"getIdToken"],[9716,20,9778,18],[9716,23,9778,21,"getIdToken"],[9716,33,9778,31],[9717,2,9779,0,"exports"],[9717,9,9779,7],[9717,10,9779,8,"getIdTokenResult"],[9717,26,9779,24],[9717,29,9779,27,"getIdTokenResult"],[9717,45,9779,43],[9718,2,9780,0,"exports"],[9718,9,9780,7],[9718,10,9780,8,"getMultiFactorResolver"],[9718,32,9780,30],[9718,35,9780,33,"getMultiFactorResolver"],[9718,57,9780,55],[9719,2,9781,0,"exports"],[9719,9,9781,7],[9719,10,9781,8,"inMemoryPersistence"],[9719,29,9781,27],[9719,32,9781,30,"inMemoryPersistence"],[9719,51,9781,49],[9720,2,9782,0,"exports"],[9720,9,9782,7],[9720,10,9782,8,"initializeAuth"],[9720,24,9782,22],[9720,27,9782,25,"initializeAuth"],[9720,41,9782,39],[9721,2,9783,0,"exports"],[9721,9,9783,7],[9721,10,9783,8,"initializeRecaptchaConfig"],[9721,35,9783,33],[9721,38,9783,36,"initializeRecaptchaConfig"],[9721,63,9783,61],[9722,2,9784,0,"exports"],[9722,9,9784,7],[9722,10,9784,8,"isSignInWithEmailLink"],[9722,31,9784,29],[9722,34,9784,32,"isSignInWithEmailLink"],[9722,55,9784,53],[9723,2,9785,0,"exports"],[9723,9,9785,7],[9723,10,9785,8,"linkWithCredential"],[9723,28,9785,26],[9723,31,9785,29,"linkWithCredential"],[9723,49,9785,47],[9724,2,9786,0,"exports"],[9724,9,9786,7],[9724,10,9786,8,"linkWithPhoneNumber"],[9724,29,9786,27],[9724,32,9786,30,"linkWithPhoneNumber"],[9724,51,9786,49],[9725,2,9787,0,"exports"],[9725,9,9787,7],[9725,10,9787,8,"multiFactor"],[9725,21,9787,19],[9725,24,9787,22,"multiFactor"],[9725,35,9787,33],[9726,2,9788,0,"exports"],[9726,9,9788,7],[9726,10,9788,8,"onAuthStateChanged"],[9726,28,9788,26],[9726,31,9788,29,"onAuthStateChanged"],[9726,49,9788,47],[9727,2,9789,0,"exports"],[9727,9,9789,7],[9727,10,9789,8,"onIdTokenChanged"],[9727,26,9789,24],[9727,29,9789,27,"onIdTokenChanged"],[9727,45,9789,43],[9728,2,9790,0,"exports"],[9728,9,9790,7],[9728,10,9790,8,"parseActionCodeURL"],[9728,28,9790,26],[9728,31,9790,29,"parseActionCodeURL"],[9728,49,9790,47],[9729,2,9791,0,"exports"],[9729,9,9791,7],[9729,10,9791,8,"prodErrorMap"],[9729,22,9791,20],[9729,25,9791,23,"prodErrorMap"],[9729,37,9791,35],[9730,2,9792,0,"exports"],[9730,9,9792,7],[9730,10,9792,8,"reauthenticateWithCredential"],[9730,38,9792,36],[9730,41,9792,39,"reauthenticateWithCredential"],[9730,69,9792,67],[9731,2,9793,0,"exports"],[9731,9,9793,7],[9731,10,9793,8,"reauthenticateWithPhoneNumber"],[9731,39,9793,37],[9731,42,9793,40,"reauthenticateWithPhoneNumber"],[9731,71,9793,69],[9732,2,9794,0,"exports"],[9732,9,9794,7],[9732,10,9794,8,"registerAuth"],[9732,22,9794,20],[9732,25,9794,23,"registerAuth"],[9732,37,9794,35],[9733,2,9795,0,"exports"],[9733,9,9795,7],[9733,10,9795,8,"reload"],[9733,16,9795,14],[9733,19,9795,17,"reload"],[9733,25,9795,23],[9734,2,9796,0,"exports"],[9734,9,9796,7],[9734,10,9796,8,"revokeAccessToken"],[9734,27,9796,25],[9734,30,9796,28,"revokeAccessToken"],[9734,47,9796,45],[9735,2,9797,0,"exports"],[9735,9,9797,7],[9735,10,9797,8,"sendEmailVerification"],[9735,31,9797,29],[9735,34,9797,32,"sendEmailVerification"],[9735,55,9797,53],[9736,2,9798,0,"exports"],[9736,9,9798,7],[9736,10,9798,8,"sendPasswordResetEmail"],[9736,32,9798,30],[9736,35,9798,33,"sendPasswordResetEmail"],[9736,57,9798,55],[9737,2,9799,0,"exports"],[9737,9,9799,7],[9737,10,9799,8,"sendSignInLinkToEmail"],[9737,31,9799,29],[9737,34,9799,32,"sendSignInLinkToEmail"],[9737,55,9799,53],[9738,2,9800,0,"exports"],[9738,9,9800,7],[9738,10,9800,8,"setPersistence"],[9738,24,9800,22],[9738,27,9800,25,"setPersistence"],[9738,41,9800,39],[9739,2,9801,0,"exports"],[9739,9,9801,7],[9739,10,9801,8,"signInAnonymously"],[9739,27,9801,25],[9739,30,9801,28,"signInAnonymously"],[9739,47,9801,45],[9740,2,9802,0,"exports"],[9740,9,9802,7],[9740,10,9802,8,"signInWithCredential"],[9740,30,9802,28],[9740,33,9802,31,"signInWithCredential"],[9740,53,9802,51],[9741,2,9803,0,"exports"],[9741,9,9803,7],[9741,10,9803,8,"signInWithCustomToken"],[9741,31,9803,29],[9741,34,9803,32,"signInWithCustomToken"],[9741,55,9803,53],[9742,2,9804,0,"exports"],[9742,9,9804,7],[9742,10,9804,8,"signInWithEmailAndPassword"],[9742,36,9804,34],[9742,39,9804,37,"signInWithEmailAndPassword"],[9742,65,9804,63],[9743,2,9805,0,"exports"],[9743,9,9805,7],[9743,10,9805,8,"signInWithEmailLink"],[9743,29,9805,27],[9743,32,9805,30,"signInWithEmailLink"],[9743,51,9805,49],[9744,2,9806,0,"exports"],[9744,9,9806,7],[9744,10,9806,8,"signInWithIdp"],[9744,23,9806,21],[9744,26,9806,24,"signInWithIdp"],[9744,39,9806,37],[9745,2,9807,0,"exports"],[9745,9,9807,7],[9745,10,9807,8,"signInWithPhoneNumber"],[9745,31,9807,29],[9745,34,9807,32,"signInWithPhoneNumber"],[9745,55,9807,53],[9746,2,9808,0,"exports"],[9746,9,9808,7],[9746,10,9808,8,"signOut"],[9746,17,9808,15],[9746,20,9808,18,"signOut"],[9746,27,9808,25],[9747,2,9809,0,"exports"],[9747,9,9809,7],[9747,10,9809,8,"unlink"],[9747,16,9809,14],[9747,19,9809,17,"unlink"],[9747,25,9809,23],[9748,2,9810,0,"exports"],[9748,9,9810,7],[9748,10,9810,8,"updateCurrentUser"],[9748,27,9810,25],[9748,30,9810,28,"updateCurrentUser"],[9748,47,9810,45],[9749,2,9811,0,"exports"],[9749,9,9811,7],[9749,10,9811,8,"updateEmail"],[9749,21,9811,19],[9749,24,9811,22,"updateEmail"],[9749,35,9811,33],[9750,2,9812,0,"exports"],[9750,9,9812,7],[9750,10,9812,8,"updatePassword"],[9750,24,9812,22],[9750,27,9812,25,"updatePassword"],[9750,41,9812,39],[9751,2,9813,0,"exports"],[9751,9,9813,7],[9751,10,9813,8,"updatePhoneNumber"],[9751,27,9813,25],[9751,30,9813,28,"updatePhoneNumber"],[9751,47,9813,45],[9752,2,9814,0,"exports"],[9752,9,9814,7],[9752,10,9814,8,"updateProfile"],[9752,23,9814,21],[9752,26,9814,24,"updateProfile"],[9752,39,9814,37],[9753,2,9815,0,"exports"],[9753,9,9815,7],[9753,10,9815,8,"useDeviceLanguage"],[9753,27,9815,25],[9753,30,9815,28,"useDeviceLanguage"],[9753,47,9815,45],[9754,2,9816,0,"exports"],[9754,9,9816,7],[9754,10,9816,8,"validatePassword"],[9754,26,9816,24],[9754,29,9816,27,"validatePassword"],[9754,45,9816,43],[9755,2,9817,0,"exports"],[9755,9,9817,7],[9755,10,9817,8,"verifyBeforeUpdateEmail"],[9755,33,9817,31],[9755,36,9817,34,"verifyBeforeUpdateEmail"],[9755,59,9817,57],[9756,2,9818,0,"exports"],[9756,9,9818,7],[9756,10,9818,8,"verifyPasswordResetCode"],[9756,33,9818,31],[9756,36,9818,34,"verifyPasswordResetCode"],[9756,59,9818,57],[9757,0,9818,58],[9757,3]],"functionMap":{"names":["<global>","_debugErrorMap","_prodErrorMap","_logWarn","_logError","_fail","_createError","_errorWithCustomMessage","_serverAppCurrentUserOperationNotSupportedError","_assertInstanceOf","createErrorInternal","_assert","debugFail","debugAssert","_getCurrentUrl","_isHttpOrHttps","_getCurrentScheme","_isOnline","_getUserLanguage","<anonymous>","Delay","Delay.prototype.get","_emulatorUrl","FetchProvider","FetchProvider.initialize","FetchProvider.fetch","FetchProvider.headers","FetchProvider.response","_addTidIfNecessary","_performApiRequest","tslib.__awaiter$argument_3","tslib.__generator$argument_1","_performFetchWithErrorHandling$argument_2","_performFetchWithErrorHandling","_performSignInRequest","_getFinalTarget","_parseEnforcementState","NetworkTimeout","Promise$argument_0","setTimeout$argument_0","NetworkTimeout.prototype.clearNetworkTimeout","_makeTaggedError","isV2","isEnterprise","RecaptchaConfig","RecaptchaConfig.prototype.getProviderEnforcementState","RecaptchaConfig.prototype.isProviderEnabled","getRecaptchaParams","getRecaptchaConfig","deleteAccount","deleteLinkedAccounts","getAccountInfo","utcTimestampToDateString","getIdToken","getIdTokenResult","secondsStringToMilliseconds","_parseToken","_tokenExpiresIn","_logoutIfInvalidated","isUserInvalidated","ProactiveRefresh","ProactiveRefresh.prototype._start","ProactiveRefresh.prototype._stop","ProactiveRefresh.prototype.getInterval","ProactiveRefresh.prototype.schedule","ProactiveRefresh.prototype.iteration","UserMetadata","UserMetadata.prototype._initializeTime","UserMetadata.prototype._copy","UserMetadata.prototype.toJSON","_reloadWithoutSaving","reload","mergeProviderData","original.filter$argument_0","newData.some$argument_0","extractProviderData","providers.map$argument_0","requestStsToken","revokeToken","StsTokenManager","Object.defineProperty$argument_2.get","StsTokenManager.prototype.updateFromServerResponse","StsTokenManager.prototype.updateFromIdToken","StsTokenManager.prototype.getToken","StsTokenManager.prototype.clearRefreshToken","StsTokenManager.prototype.refresh","StsTokenManager.prototype.updateTokensAndExpiration","StsTokenManager.fromJSON","StsTokenManager.prototype.toJSON","StsTokenManager.prototype._assign","StsTokenManager.prototype._clone","StsTokenManager.prototype._performRefresh","assertStringOrUndefined","UserImpl","UserImpl.prototype.getIdToken","UserImpl.prototype.getIdTokenResult","UserImpl.prototype.reload","UserImpl.prototype._assign","user.providerData.map$argument_0","UserImpl.prototype._clone","UserImpl.prototype._onReload","UserImpl.prototype._notifyReloadListener","UserImpl.prototype._startProactiveRefresh","UserImpl.prototype._stopProactiveRefresh","UserImpl.prototype._updateTokensIfNecessary","UserImpl.prototype._delete","UserImpl.prototype.toJSON","providerData.map$argument_0","UserImpl._fromJSON","UserImpl._fromIdTokenResponse","UserImpl._fromGetAccountInfoResponse","_getInstance","InMemoryPersistence","InMemoryPersistence.prototype._isAvailable","InMemoryPersistence.prototype._set","InMemoryPersistence.prototype._get","InMemoryPersistence.prototype._remove","InMemoryPersistence.prototype._addListener","InMemoryPersistence.prototype._removeListener","_persistenceKeyName","PersistenceUserManager","PersistenceUserManager.prototype.setCurrentUser","PersistenceUserManager.prototype.getCurrentUser","PersistenceUserManager.prototype.removeCurrentUser","PersistenceUserManager.prototype.savePersistenceForRedirect","PersistenceUserManager.prototype.setPersistence","PersistenceUserManager.prototype._delete","PersistenceUserManager.create","persistenceHierarchy.map$argument_0","_b.sent.filter$argument_0","availablePersistences.filter$argument_0","_getBrowserName","_isFirefox","_isSafari","_isChromeIOS","_isIEMobile","_isAndroid","_isBlackBerry","_isWebOS","_isIOS","_isIOS7Or8","_isIOSStandalone","_isIE10","_isMobileBrowser","_getClientVersion","AuthMiddlewareQueue","AuthMiddlewareQueue.prototype.pushCallback","wrappedCallback","_this.queue.index","AuthMiddlewareQueue.prototype.runMiddleware","_getPasswordPolicy","PasswordPolicyImpl","PasswordPolicyImpl.prototype.validatePassword","PasswordPolicyImpl.prototype.validatePasswordLengthOptions","PasswordPolicyImpl.prototype.validatePasswordCharacterOptions","PasswordPolicyImpl.prototype.updatePasswordCharacterOptionsStatuses","AuthImpl","AuthImpl.prototype._initializeWithPersistence","queue$argument_0","AuthImpl.prototype._onStorageEvent","AuthImpl.prototype.initializeCurrentUserFromIdToken","AuthImpl.prototype.initializeCurrentUser","_popupRedirectResolver._overrideRedirectResult$argument_1","AuthImpl.prototype.tryRedirectSignIn","AuthImpl.prototype.reloadAndSetCurrentUserOrClear","AuthImpl.prototype.useDeviceLanguage","AuthImpl.prototype._delete","AuthImpl.prototype.updateCurrentUser","AuthImpl.prototype._updateCurrentUser","AuthImpl.prototype.signOut","AuthImpl.prototype.setPersistence","AuthImpl.prototype._getRecaptchaConfig","AuthImpl.prototype.validatePassword","AuthImpl.prototype._getPasswordPolicyInternal","AuthImpl.prototype._updatePasswordPolicy","AuthImpl.prototype._getPersistence","AuthImpl.prototype._updateErrorMap","AuthImpl.prototype.onAuthStateChanged","AuthImpl.prototype.beforeAuthStateChanged","AuthImpl.prototype.onIdTokenChanged","AuthImpl.prototype.authStateReady","_this.onAuthStateChanged$argument_0","AuthImpl.prototype.revokeAccessToken","AuthImpl.prototype.toJSON","AuthImpl.prototype._setRedirectUser","AuthImpl.prototype.getOrInitRedirectPersistenceManager","AuthImpl.prototype._redirectUserForId","AuthImpl.prototype._persistUserIfCurrent","AuthImpl.prototype._notifyListenersIfCurrent","AuthImpl.prototype._key","AuthImpl.prototype._startProactiveRefresh","AuthImpl.prototype._stopProactiveRefresh","AuthImpl.prototype.notifyAuthListeners","AuthImpl.prototype.registerStateListener","promise.then$argument_0","AuthImpl.prototype.directlySetCurrentUser","AuthImpl.prototype.queue","AuthImpl.prototype._logFramework","AuthImpl.prototype._getFrameworks","AuthImpl.prototype._getAdditionalHeaders","AuthImpl.prototype._getAppCheckToken","_castAuth","Subscription","util.createSubscribe$argument_0","externalJSProvider.loadJS","_setExternalJSProvider","_loadJS","_recaptchaV2ScriptUrl","_recaptchaEnterpriseScriptUrl","_gapiScriptUrl","_generateCallbackName","RecaptchaEnterpriseVerifier","RecaptchaEnterpriseVerifier.prototype.verify","retrieveSiteKey","getRecaptchaConfig.then$argument_0","getRecaptchaConfig.then._catch$argument_0","retrieveRecaptchaToken","grecaptcha.enterprise.ready$argument_0","grecaptcha.enterprise.execute.then$argument_0","grecaptcha.enterprise.execute.then._catch$argument_0","retrieveSiteKey.then$argument_0","_loadJS.then$argument_0","_loadJS.then._catch$argument_0","retrieveSiteKey.then._catch$argument_0","injectRecaptchaFields","handleRecaptchaFlow","actionMethod._catch$argument_0","_initializeRecaptchaConfig","initializeAuth","_initializeAuthInstance","connectAuthEmulator","extractProtocol","extractHostAndPort","parsePort","emitEmulatorWarning","attachBanner","AuthCredential","AuthCredential.prototype.toJSON","AuthCredential.prototype._getIdTokenResponse","AuthCredential.prototype._linkToIdToken","AuthCredential.prototype._getReauthenticationResolver","resetPassword","updateEmailPassword","linkEmailPassword","applyActionCode$1","signInWithPassword","sendOobCode","sendEmailVerification$1","sendPasswordResetEmail$1","sendSignInLinkToEmail$1","verifyAndChangeEmail","signInWithEmailLink$1","signInWithEmailLinkForLinking","EmailAuthCredential","EmailAuthCredential._fromEmailAndPassword","EmailAuthCredential._fromEmailAndCode","EmailAuthCredential.prototype.toJSON","EmailAuthCredential.fromJSON","EmailAuthCredential.prototype._getIdTokenResponse","EmailAuthCredential.prototype._linkToIdToken","EmailAuthCredential.prototype._getReauthenticationResolver","signInWithIdp","OAuthCredential","OAuthCredential._fromParams","OAuthCredential.prototype.toJSON","OAuthCredential.fromJSON","OAuthCredential.prototype._getIdTokenResponse","OAuthCredential.prototype._linkToIdToken","OAuthCredential.prototype._getReauthenticationResolver","OAuthCredential.prototype.buildRequest","sendPhoneVerificationCode","signInWithPhoneNumber$1","linkWithPhoneNumber$1","verifyPhoneNumberForExisting","PhoneAuthCredential","PhoneAuthCredential._fromVerification","PhoneAuthCredential._fromTokenResponse","PhoneAuthCredential.prototype._getIdTokenResponse","PhoneAuthCredential.prototype._linkToIdToken","PhoneAuthCredential.prototype._getReauthenticationResolver","PhoneAuthCredential.prototype._makeVerificationRequest","PhoneAuthCredential.prototype.toJSON","PhoneAuthCredential.fromJSON","parseMode","parseDeepLink","ActionCodeURL","ActionCodeURL.parseLink","parseActionCodeURL","EmailAuthProvider","EmailAuthProvider.credential","EmailAuthProvider.credentialWithLink","FederatedAuthProvider","FederatedAuthProvider.prototype.setDefaultLanguage","FederatedAuthProvider.prototype.setCustomParameters","FederatedAuthProvider.prototype.getCustomParameters","BaseOAuthProvider","BaseOAuthProvider.prototype.addScope","BaseOAuthProvider.prototype.getScopes","OAuthProvider","OAuthProvider.credentialFromJSON","OAuthProvider.prototype.credential","OAuthProvider.prototype._credential","OAuthProvider.credentialFromResult","OAuthProvider.credentialFromError","OAuthProvider.oauthCredentialFromTaggedObject","FacebookAuthProvider","FacebookAuthProvider.credential","FacebookAuthProvider.credentialFromResult","FacebookAuthProvider.credentialFromError","FacebookAuthProvider.credentialFromTaggedObject","GoogleAuthProvider","GoogleAuthProvider.credential","GoogleAuthProvider.credentialFromResult","GoogleAuthProvider.credentialFromError","GoogleAuthProvider.credentialFromTaggedObject","GithubAuthProvider","GithubAuthProvider.credential","GithubAuthProvider.credentialFromResult","GithubAuthProvider.credentialFromError","GithubAuthProvider.credentialFromTaggedObject","SAMLAuthCredential","SAMLAuthCredential.prototype._getIdTokenResponse","SAMLAuthCredential.prototype._linkToIdToken","SAMLAuthCredential.prototype._getReauthenticationResolver","SAMLAuthCredential.prototype.toJSON","SAMLAuthCredential.fromJSON","SAMLAuthCredential._create","SAMLAuthCredential.prototype.buildRequest","SAMLAuthProvider","SAMLAuthProvider.credentialFromResult","SAMLAuthProvider.credentialFromError","SAMLAuthProvider.credentialFromJSON","SAMLAuthProvider.samlCredentialFromTaggedObject","TwitterAuthProvider","TwitterAuthProvider.credential","TwitterAuthProvider.credentialFromResult","TwitterAuthProvider.credentialFromError","TwitterAuthProvider.credentialFromTaggedObject","signUp","UserCredentialImpl","UserCredentialImpl._fromIdTokenResponse","UserCredentialImpl._forOperation","providerIdForResponse","signInAnonymously","MultiFactorError","MultiFactorError._fromErrorAndOperation","_processCredentialSavingMfaContextIfNecessary","idTokenProvider._catch$argument_0","providerDataAsNames","providerData.map.filter$argument_0","unlink","userInternal.providerData.filter$argument_0","_link","_assertLinkedStatus","_reauthenticate","_signInWithCredential","signInWithCredential","linkWithCredential","reauthenticateWithCredential","signInWithCustomToken$1","signInWithCustomToken","MultiFactorInfoImpl","MultiFactorInfoImpl._fromServerResponse","PhoneMultiFactorInfoImpl","PhoneMultiFactorInfoImpl._fromServerResponse","TotpMultiFactorInfoImpl","TotpMultiFactorInfoImpl._fromServerResponse","_setActionCodeSettingsOnRequest","recachePasswordPolicy","sendPasswordResetEmail","confirmPasswordReset","resetPassword._catch$argument_0","applyActionCode","checkActionCode","verifyPasswordResetCode","createUserWithEmailAndPassword","signUpResponse._catch$argument_0","signInWithEmailAndPassword","signInWithCredential._catch$argument_0","sendSignInLinkToEmail","setActionCodeSettings","isSignInWithEmailLink","signInWithEmailLink","createAuthUri","fetchSignInMethodsForEmail","sendEmailVerification","verifyBeforeUpdateEmail","updateProfile$1","updateProfile","userInternal.providerData.find$argument_0","updateEmail","updatePassword","updateEmailOrPassword","_fromIdTokenResponse","GenericAdditionalUserInfo","FederatedAdditionalUserInfoWithUsername","FacebookAdditionalUserInfo","GithubAdditionalUserInfo","GoogleAdditionalUserInfo","TwitterAdditionalUserInfo","getAdditionalUserInfo","setPersistence","initializeRecaptchaConfig","validatePassword","onIdTokenChanged","beforeAuthStateChanged","onAuthStateChanged","useDeviceLanguage","updateCurrentUser","signOut","revokeAccessToken","deleteUser","MultiFactorSessionImpl","MultiFactorSessionImpl._fromIdtoken","MultiFactorSessionImpl._fromMfaPendingCredential","MultiFactorSessionImpl.prototype.toJSON","MultiFactorSessionImpl.fromJSON","MultiFactorResolverImpl","MultiFactorResolverImpl._fromError","map$argument_0","MultiFactorResolverImpl$argument_2","MultiFactorResolverImpl.prototype.resolveSignIn","getMultiFactorResolver","startEnrollPhoneMfa","finalizeEnrollPhoneMfa","startEnrollTotpMfa","finalizeEnrollTotpMfa","withdrawMfa","MultiFactorUserImpl","user._onReload$argument_0","userInfo.mfaInfo.map$argument_0","MultiFactorUserImpl._fromUser","MultiFactorUserImpl.prototype.getSession","MultiFactorUserImpl.prototype.enroll","MultiFactorUserImpl.prototype.unenroll","enrolledFactors.filter$argument_0","multiFactor","AuthInterop","AuthInterop.prototype.getUid","AuthInterop.prototype.getToken","AuthInterop.prototype.addAuthTokenListener","auth.onIdTokenChanged$argument_0","AuthInterop.prototype.removeAuthTokenListener","AuthInterop.prototype.assertAuthConfigured","AuthInterop.prototype.updateProactiveRefresh","getVersionForPlatform","registerAuth","component.Component$argument_1","component.Component.setInstantiationMode.setInstanceCreatedCallback$argument_0","startSignInPhoneMfa","finalizeSignInPhoneMfa","finalizeSignInTotpMfa","_window","_setWindowLocation","_isWorker","_getActiveServiceWorker","_getServiceWorkerController","_getWorkerGlobalScope","MockReCaptcha","MockReCaptcha.prototype.render","MockReCaptcha.prototype.reset","MockReCaptcha.prototype.getResponse","MockReCaptcha.prototype.execute","MockWidget","clickHandler","MockWidget.prototype.getResponse","MockWidget.prototype._delete","MockWidget.prototype.execute","window.setTimeout$argument_0","MockWidget.prototype.checkIfDeleted","generateRandomAlphaNumericString","ReCaptchaLoaderImpl","ReCaptchaLoaderImpl.prototype.load","_window.setTimeout$argument_0","_window._JSLOAD_CALLBACK","recaptcha.render","_loadJS._catch$argument_0","ReCaptchaLoaderImpl.prototype.clearedOneInstance","ReCaptchaLoaderImpl.prototype.shouldResolveImmediately","isHostLanguageValid","MockReCaptchaLoaderImpl","MockReCaptchaLoaderImpl.prototype.load","MockReCaptchaLoaderImpl.prototype.clearedOneInstance","RecaptchaVerifier","RecaptchaVerifier.prototype.verify","tokenChange","RecaptchaVerifier.prototype.render","makeRenderPromise._catch$argument_0","RecaptchaVerifier.prototype._reset","RecaptchaVerifier.prototype.clear","container.childNodes.forEach$argument_0","RecaptchaVerifier.prototype.validateStartingState","RecaptchaVerifier.prototype.makeTokenCallback","_this.tokenChangeListeners.forEach$argument_0","RecaptchaVerifier.prototype.assertNotDestroyed","RecaptchaVerifier.prototype.makeRenderPromise","RecaptchaVerifier.prototype.init","RecaptchaVerifier.prototype.getAssertedRecaptcha","domReady","resolver","Promise._catch$argument_0","ConfirmationResultImpl","ConfirmationResultImpl.prototype.confirm","signInWithPhoneNumber","ConfirmationResultImpl$argument_1","linkWithPhoneNumber","reauthenticateWithPhoneNumber","_verifyPhoneNumber","updatePhoneNumber","PhoneAuthProvider","PhoneAuthProvider.prototype.verifyPhoneNumber","PhoneAuthProvider.credential","PhoneAuthProvider.credentialFromResult","PhoneAuthProvider.credentialFromError","PhoneAuthProvider.credentialFromTaggedObject","MultiFactorAssertionImpl","MultiFactorAssertionImpl.prototype._process","PhoneMultiFactorAssertionImpl","PhoneMultiFactorAssertionImpl._fromCredential","PhoneMultiFactorAssertionImpl.prototype._finalizeEnroll","PhoneMultiFactorAssertionImpl.prototype._finalizeSignIn","PhoneMultiFactorGenerator","PhoneMultiFactorGenerator.assertion","TotpMultiFactorGenerator","TotpMultiFactorGenerator.assertionForEnrollment","TotpMultiFactorGenerator.assertionForSignIn","TotpMultiFactorGenerator.generateSecret","TotpMultiFactorAssertionImpl","TotpMultiFactorAssertionImpl._fromSecret","TotpMultiFactorAssertionImpl._fromEnrollmentId","TotpMultiFactorAssertionImpl.prototype._finalizeEnroll","TotpMultiFactorAssertionImpl.prototype._finalizeSignIn","TotpSecret","TotpSecret._fromStartTotpMfaEnrollmentResponse","TotpSecret.prototype._makeTotpVerificationInfo","TotpSecret.prototype.generateQrCodeUrl","_isEmptyString"],"mappings":"AAA;ACwB;CD+J;AEC;CFU;AGyJ;CHQ;AIC;CJQ;AKkB;CLM;AMC;CNM;AOC;CPO;AQC;CRE;ASC;CTS;AUC;CVe;AWC;CXQ;AYO;CZS;AaQ;CbI;AckB;CdG;AeC;CfE;AgBC;ChBG;AiBqB;CjBe;AkBC;ClBa;2BmBuB;ICC;KDM;0BEC;KFU;CnBE;AsBkB;CtBO;mCmBkB;IIC;KJC;+BKC;KLQ;0BMC;KNc;4BOC;KPc;6BQC;KRc;CnBE;A4BkH;C5BK;A6BC;iDCE;uCCE;uFCC,4DF;mDCE;qBDiC;iBEC,ID;SDC;KDC;C7BC;AiCC;iDHC;uCCE;SD+D;KGC;CjCC;AkCC;iDJE;uCCE;SDY;KIC;ClCC;AmCC;CnCM;AoCC;CpCW;oCmBC;IkBC;mCCO;qCCC;aDE;SDC;KlBC;mDqBC;KrBE;CnBE;AyCC;CzCc;A0CkB;C1CG;A2CC;C3CG;qCmBC;IyBC;KzBe;4D0BO;K1Ba;kD2BO;K3BI;CnBE;A+CkB;iDjBC;uCCC;SDK;KiBC;C/CC;AgDC;iDlBC;uCCC;SDE;KkBC;ChDC;AiDkB;iDnBC;uCCC;SDE;KmBC;CjDC;AkDC;iDpBC;uCCC;SDE;KoBC;ClDC;AmDC;iDrBC;uCCC;SDE;KqBC;CnDC;AoDkB;CpDiB;AqD8B;CrDG;AsDa;iDxBE;uCCE;SDqB;KwBC;CtDC;AuDC;CvDE;AwDC;CxDoB;AyDI;CzDM;A0DkB;iD5BE;uCCE;SDsB;K4BC;C1DC;A2DC;C3DI;sCmBkB;IyCC;KzCS;wC0CC;K1CM;uC2CC;K3CQ;6C4CC;K5Cc;0C6CC;kCzBQ,4DT;2CCC;aDO;SSC,IyB;K7CC;2C8CC;qDnCC;2CCE;aDoB;SmCC;K9CC;CnBE;kCmBkB;I+CC;K/CI;6CgDC;KhDG;mCiDC;KjDI;oCkDC;KlDK;CnBE;AsEkB;iDxCE;uCCE;SDmC;KwCC;CtEC;AuEQ;iDzCC;uCCE;SDmB;KyCC;CvEC;AwEC;kCCC,oCC,sDD,ID;CxEE;A2EC;yBCC;KDU;C3EC;A6EkB;iD/CC;uCCG;sFCE,4DF;uDCE;yBDmB;qBEC,ID;SDU;K+CC;C7EC;A8EC;iDhDC;uCCC;SDE;KgDC;C9EC;qCmBwB;I4DC;K5DI;a6DE;S7DG;yD8DI;K9DQ;kD+DC;K/DI;yCgEC;qDrDE;2CCC;aDc;SqDC;KhEC;kDiEC;KjEE;wCkEC;qDvDC;2CCE;aDQ;SuDC;KlEC;0DmEC;KnEI;+BoEC;KpEsB;uCqEC;KrEM;wCsEC;KtEI;uCuEC;KvEE;gDwEC;KxEE;CnBE;A4FkB;C5FE;8BmBC;I0EC;K1EoB;oC2EC;qDhEC;2CCE;aDe;SgEC;K3EC;0C4EC;K5EE;gC6EC;K7EE;iC8EC;kDCY,8DD;K9EG;gCgFC;KhFI;mCiFC;KjFQ;+CkFC;KlFQ;gDmFC;KnFE;+CoFC;KpFE;kDqFC;qD1EE;2CCE;aDsB;S0EC;KrFC;gCsFC;qD3EC;2CCE;aDiB;S2EC;KtFC;gCuFC;wWCC,8DD;KvFM;a6DE;S7DE;yByFI;iDDuC,8DC;KzFM;oC0FM;qD/EE;2CCE;aDkB;S+EC;K1FC;2C2FM;qDhFC;2CCE;aD8B;SgFC;K3FC;CnBE;A+GmB;C/GU;yCmBkB;I6FC;K7FG;iD8FC;qDnFC;2CCC;aDE;SmFC;K9FC;yC+FC;qDpFC;2CCC;aDG;SoFC;K/FC;yCgGC;qDrFC;2CCE;aDG;SqFC;KhGC;4CiGC;qDtFC;2CCC;aDG;SsFC;KjGC;iDkGC;KlGG;oDmGC;KnGG;CnBG;AuHwB;CvHE;4CmBC;IqGC;KrGS;sDsGC;KtGE;sDuGC;qD5FC;2CCE;aDO;S4FC;KvGC;yDwGC;KxGE;kEyGC;KzGE;sD0GC;qD/FC;2CCE;aDkB;S+FC;K1GC;8C2GC;K3GE;oC4GC;qDjGE;2CCG;kFiGM,uElG;+DCC;iCDS;6BkGC,IjG;mEkGE,8ClG;0EmGgC,gDnG;8EiGmB,uElG;2DCC;6BDgB;yBkGC,IjG;aDO;SiGC;K5GC;CnBE;AmIqB;CnIiD;AoIC;CpIG;AqIC;CrIO;AsIC;CtIG;AuIC;CvIG;AwIC;CxIG;AyIC;CzIG;A0IC;C1IG;A2IC;C3II;A4IC;C5II;A6IC;C7II;A8IC;C9IE;A+IC;C/IS;AgJqB;ChJqB;yCmBkB;I8HC;K9HG;iD+HC;8BCI;+B7GC;a6GW;SDC;e/HK;iCiIG,yCjI;S+HC;K/HC;kDkIC;qDvHC;2CCE;aD8C;SuHC;KlIC;CnBE;AsJyB;iDxHE;uCCC;SDE;KwHC;CtJC;wCmByB;IoIC;KpIqC;oDqIC;KrIiB;iEsIO;KtIS;oEuIO;KvImB;0EwIY;KxIa;CnBE;8BmBkB;IyIC;KzIoC;oD0IC;iDCO,4DhI;2CCG;aDkC;SgIC,ID;K1IE;yC4II;qDjIC;2CCE;aDkC;SiIC;K5IC;0D6IC;qDlIC;2CCE;aDuB;SkIC;K7IC;+C8IC;qDnIE;2CCG;kEOQ;mDCC;yCDE;qCPC;kFmIiD;yBnIE;aDuB;SmIC;K9IC;2CgJC;qDrIC;2CCE;aDyB;SqIC;KhJC;wDiJC;qDtIC;2CCE;aDmB;SsIC;KjJC;2CkJC;KlJE;iCmJC;qDxIC;2CCC;aDG;SwIC;KnJC;2CoJC;qDzIC;2CCE;aDW;SyIC;KpJC;4CqJC;qD1IE;2CCE;6D+Hc,4DhI;2DCC;6BDQ;yBgIC,I/H;aDE;S0IC;KrJC;iCsJC;qD3IC;2CCC;aDqB;S2IC;KtJC;wCuJC;0BZK,4DhI;2CCC;aDO;SgIC,IY;KvJC;6CwJC;KxJO;0CyJC;qD9IC;2CCE;aDkB;S8IC;KzJC;oD0JC;K1JO;+C2JC;qDhJC;2CCE;aDc;SgJC;K3JC;yC4JC;K5JE;yC6JC;K7JE;4C8JC;K9JE;gD+JC;K/JE;0CgKC;KhKE;wCiKC;2B9IE;6D+IK;iB/IG;S8IE;KjKC;2CmKI;qDxJC;2CCE;aDsB;SwJC;KnKC;gCoKC;KpKQ;0CqKC;qD1JC;2CCE;aDS;S0JC;KrKC;6DsKC;qD3JC;2CCE;aDmB;S2JC;KtKC;4CuKC;qD5JE;2CCE;wD+HI,4DhI,6CC;6BDE,IgI,I/H;aDa;S4JC;KvKC;+CwKC;qD7JC;2CCE;qD+HE,4DhI,6CC;yBDE,IgI,I/H;aDG;S6JC;KxKC;mDyKE;KzKI;8B0KC;K1KE;gD2KC;K3KK;+C4KC;K5KK;a6DG;S7DE;6C6KI;K7KW;+C8KC;mB9KG,e8K;qBCY;SDK;mB9KG;a8KG;mB9KI;a8KG;K9KE;gDgLM;qDrKC;2CCC;aDqB;SqKC;KhLC;+BiLC;KjLK;a6DE;S7DG;uCkLI;KlLS;wCmLC;KnLE;+CoLC;qDzKE;2CCG;aD0B;SyKC;KpLC;2CqLC;qD1KE;2CCE;aDe;S0KC;KrLC;CnBE;AyMO;CzME;kCmBE;IuLC;gDCI,2DD;KvLC;a6DE;S7DG;CnBK;Y4MmB;qD9KC;2CCC;aDE;S8KC;K5MC;A6MK;C7ME;A8MC;C9ME;A+MC;C/ME;AgNC;ChNE;AiNC;CjNE;AkNC;ClNE;iDmBK;IgMM;KhMM;mDiMM;qDtLG;YuLC;6DvLC;mDCE;0DOU,2ER;+DCC;8CuLK;qCvLc;+CwLC;qCxLE;iCDE;6BQC,IP;qBDC;iBuLC;avLC;Y0LC;gDCG;kCCG;yBDE;mCEC;yBFE;qBDC;a1LK;2CCE;kDOC;kCsLE;0CCc;iCDE;2CEC;iCFE;yBtLE;mCyLC;yBzLE;qBPC;aDC;SsLC;KjMC;CnBE;AgOC;iDlME;uCCE;SD+B;KkMC;ChOC;AiOC;iDnME;uCCG;wFmMS,iEpM;uDCE;yBDW;qBoMC,InM;SDE;KmMC;CjOC;AmOC;iDrMC;uCCE;SDuB;KqMC;CnOC;AoO2C;CpOc;AqOC;CrOU;AsOwB;CtOoB;AuOC;CvOG;AwOC;CxOgB;AyOC;CzOS;A0OC;ICC;KDiB;C1Oc;oCmB0B;IyNE;KzNmB;sC0NM;K1NE;mD2NE;K3NE;8C4NE;K5NE;4D6NE;K7NE;CnBE;AiPkB;iDnNC;uCCC;SDE;KmNC;CjPC;AkPC;iDpNC;uCCC;SDE;KoNC;ClPC;AmPG;iDrNC;uCCC;SDE;KqNC;CnPC;AoPC;iDtNC;uCCC;SDE;KsNC;CpPC;AqPkB;iDvNC;uCCC;SDE;KuNC;CrPC;AsPC;iDxNC;uCCC;SDE;KwNC;CtPC;AuPC;iDzNC;uCCC;SDE;KyNC;CvPC;AwPC;iD1NC;uCCC;SDE;K0NC;CxPC;AyPC;iD3NC;uCCC;SDE;K2NC;CzPC;A0PC;iD5NC;uCCC;SDE;K4NC;C1PC;A2PkB;iD7NC;uCCC;SDE;K6NC;C3PC;A4PC;iD9NC;uCCC;SDE;K8NC;C5PC;yCmB4B;I0OG;K1Oa;gD2OE;K3OE;4C4OE;K5OG;2C6OE;K7OO;mC8OS;K9OW;wD+OE;qDpOC;2CCE;aDmB;SoOC;K/OC;mDgPE;qDrOC;2CCE;aDqB;SqOC;KhPC;iEiPE;KjPE;CnBE;AqQkB;iDvOC;uCCC;SDE;KuOC;CrQC;qCmB2B;ImPE;KnPI;kCoPE;KpP2B;uCqPE;KrPU;+BsPU;KtPa;oDuPE;KvPG;+CwPE;KxPI;6DyPE;KzPI;6C0PC;K1P0B;CnBE;A8QmB;iDhPC;uCCC;SDE;KgPC;C9QC;A+QC;iDjPC;uCCC;SDE;KiPC;C/QC;AgRC;iDlPC;uCCE;SDU;KkPC;ChRC;AiRI;iDnPC;uCCE;SDG;KmPC;CjRC;yCmBuB;I+PE;K/PI;4CgQE;KhQE;6CiQE;KjQE;wDkQE;KlQE;mDmQE;KnQE;iEoQE;KpQE;6DqQE;KrQS;2CsQE;KtQiB;mCuQE;KvQiB;CnBE;A2RuB;C3RiB;A4RM;C5RY;mCmBO;I0QO;K1Qc;8B2QU;K3QQ;CnBE;A+RO;C/RE;uCmBuB;I6QC;K7QK;mC8QmB;K9QE;2C+QuB;K/QI;CnBc;2CmByB;IgRM;KhRM;yDiRM;KjRE;0DkRW;KlRG;0DmRI;KnRE;CnBE;uCmBwB;IoRE;KpRK;2CqRM;KrRM;4CsRI;KtRE;CnBE;mCmByC;IuRE;KvRE;uCwRK;KxRI;yCyRsB;KzRE;0C0RE;K1RI;yC2RM;K3RE;wC4RO;K5RE;oD6RC;K7R0B;CnBE;0CmByD;I8RE;K9RE;sC+Ra;K/RM;gDgSM;KhSE;+CiSO;KjSE;sDkSC;KlSc;CnBM;wCmB2D;ImSE;KnSI;oCoSc;KpSO;8CqSM;KrSE;6CsSO;KtSE;oDuSC;KvSgB;CnBM;wCmB4D;IwSE;KxSE;oCySM;KzSM;8C0SM;K1SE;6C2SO;K3SE;oD4SC;K5Sc;CnBM;wCmBsB;I6SG;K7SI;uD8SE;K9SG;kD+SE;K/SI;gEgTE;KhTI;0CiTE;KjTM;kCkTU;KlTU;iCmTM;KnTE;gDoTC;KpTM;CnBE;sCmBwB;IqTM;KrTG;4CsTiB;KtTE;2CuTO;KvTE;0CwTK;KxTI;sDyTC;KzTe;CnBE;yCmByD;I0TE;K1TE;qC2TO;K3TO;+C4TM;K5TE;8C6TO;K7TE;qD8TC;K9Te;CnBM;AkVkB;iDpTC;uCCC;SDE;KoTC;ClVC;wCmBkB;IgUC;KhUK;8CiUC;qDtTE;2CCE;aDc;SsTC;KjUC;uCkUC;qDvTC;2CCE;aDa;SuTC;KlUC;CnBE;AsVC;CtVQ;AuVgC;iDzTE;uCCE;SD+B;KyTC;CvVC;sCmBkB;IqUE;KrUe;8CsUC;KtUE;CnBE;A0VC;iCCI;KDK;C1VC;A4VqB;ajPE;KiPG;gBCC,gCD;C5VC;A8V0B;iDhUC;uCCG;iFgUiB;qBhUE;SDS;KgUC;C9VC;AgWC;iDlUE;uCCE;SDc;KkUC;ChWC;AiWC;iDnUC;uCCE;SDY;KmUC;CjWC;AkWkB;iDpUE;uCCE;SD6B;KoUC;ClWC;AmWkB;iDrUE;uCCE;SDoB;KqUC;CnWC;AoWe;iDtUC;uCCC;SDE;KsUC;CpWC;AqWY;iDvUC;uCCE;SDS;KuUC;CrWC;AsWiB;iDxUC;uCCC;SDE;KwUC;CtWC;AuWkB;iDzUC;uCCC;SDE;KyUC;CvWC;AwWqC;iD1UC;uCCE;SDqB;K0UC;CxWC;yCmBkB;IsVC;KtVK;8CuVC;KvVQ;CnBE;8CmBC;IwVE;KxVI;mDyVC;KzVE;CnBE;6CmBC;I0VE;K1VE;kD2VC;K3VE;CnBE;A+WkB;C/WmB;AgX+B;iDlVC;uCCE;SDW;KkVC;ChXC;AiXoC;iDnVC;uCCE;SDiB;KmVC;CjXC;AkXU;iDpVC;uCCE;+BoVM,iErV;uDCC;yBDM;qBqVC,IpV;SDK;KoVC;ClXC;AoXS;iDtVC;uCCC;SDO;KsVC;CpXC;AqXW;iDvVC;uCCE;SDsC;KuVC;CrXC;AsXW;iDxVC;uCCE;SDQ;KwVC;CtXC;AuXqB;iDzVC;uCCE;8DyVc;yBzVK;SDW;KyVC;CvXC;AyXwB;oHCK,iE5V;uCCC;SDK;K4VC,ID;CzXC;A2XwD;iD7VC;Q8VC;S9VK;uCCE;SDe;K6VC;C3XC;A6XS;C7XG;A8X0C;iDhWC;uCCE;SDU;KgWC;C9XC;A+XkB;iDjWC;uCCC;SDE;KiWC;C/XC;AgYsC;iDlWC;uCCE;SDa;KkWC;ChYC;AiY+B;iDnWC;uCCE;SDwB;KmWC;CjYC;AkYmC;iDpWC;uCCE;SD6B;KoWC;ClYC;AmYkB;iDrWC;uCCC;SDE;KqWC;CnYC;AoY0B;iDtWE;uCCE;sEsWqB;qBtWG;SDU;KsWC;CpYC;AsYyB;CtYM;AuYc;CvYE;AwYC;iD1WC;uCCE;SDyB;K0WC;CxYC;AyYsB;CzYwC;+CmBC;IuXC;KvXK;CnBE;6DmBC;IwXE;KxXI;CnBE;gDmBC;IyXE;KzXE;CnBE;8CmBC;I0XE;K1XE;CnBE;8CmBC;I2XE;K3XE;CnBE;+CmBC;I4XE;K5XE;CnBE;AgZQ;ChZY;AiZ2C;CjZE;AkZ4B;ClZE;AmZwB;iDrXC;uCCE;SDG;KqXC;CnZC;AoZiB;CpZE;AqZW;CrZE;AsZgB;CtZE;AuZQ;CvZE;AwZsB;CxZE;AyZY;CzZE;A0ZS;C1ZG;A2Za;iD7XC;uCCC;SDE;K6XC;C3ZC;4CmBkB;IyYC;KzYI;0C0YC;K1YE;uD2YC;K3YE;8C4YC;K5YU;sC6YC;K7YW;CnBE;6CmBkB;I8YC;K9YI;yC+YE;uDCI;SDE;2DEG,qEtY;2CCE;aD8B;SsYC,IF;K/YC;sDkZC;qDvYC;2CCE;aDG;SuYC;KlZC;CnBE;AsaW;CtaO;AuakB;CvaE;AwaC;CxaE;AyaC;CzaE;A0aC;C1aE;A2aC;C3aE;yCmBE;IyZC;uBCI;6DCE;iBDE;SDE;KzZC;oC4ZC;K5ZE;+C6ZC;qDlZC;2CCE;aDO;SkZC;K7ZC;2C8ZC;qDnZC;2CCE;aDsB;SmZC;K9ZC;6C+ZC;qDpZC;2CCE;2EoZiB;yBpZG;aDqB;SoZC;K/ZC;CnBE;AobY;CpbM;iCmBqB;IkaC;KlaG;mCmaC;KnaI;qCoaC;qDzZC;2CCE;aDe;SyZC;KpaC;iDqaC;qDCK;SDE;KraG;oDuaC;KvaS;iDwaC;KxaE;mDyaC;KzaO;CnBE;A6bkB;C7be;A8bE;qFCC;KDmB;oCEU;KFG;uGCC;gB5aE,iD4a;KDC;C9bI;AicqH;CjcE;AkcC;ClcE;AmcC;CncE;AocsB;CpcE;AqcC;CrcE;AsckB;CtcG;AucC;iDzaC;uCCE;SDkB;KyaC;CvcC;AwcC;CxcG;AycC;CzcE;mCmBqB;IubC;KvbI;qCwbC;KxbK;oCybC;KzbK;0C0bC;K1bI;sC2bC;qDhbE;2CCE;aDI;SgbC;K3bC;CnBE;gCmBC;I4bC;4BCM;SDE;K5ba;uC8bC;K9bG;kC+bC;K/bQ;mCgcC;yCCM;SDsB;KhcC;0CkcC;KlcI;CnBE;AsdC;CtdO;yCmByB;IocC;KpcU;yCqcC;2BlbO;sDmbC;anbE;0CobC;mCCW;iBDI;apbG;+BsbM;atbG;SkbC;KrcC;uD0cC;K1cE;6D2cC;K3ca;CnBE;A+dC;C/dE;6CmBC;I6cC;K7cC;6C8cC;qDncC;2CCC;aDE;SmcC;K9cC;2D+cC,e/c;CnBE;uCmB+B;IgdoB;Khd6B;yCidM;qDtcC;2CCG;0DOY;kD+bC;iC/bM;6BPK;aDE;SscC;KjdC;yCmdM;4DCc;SDG;KndE;yCqdE;KrdK;wCsdI;8CCM;aDE;KtdE;wDwdC;KxdI;oDydC;ezdE;+C0dC,+C1d;SydU;KzdC;qD2dC;K3dE;oD4dC;qDjdC;2CCE;aDgB;SidC;K5dC;uC6dC;qDldC;2CCE;aDkB;SkdC;K7dC;uD8dC;K9dG;CnBE;AkfC;uB5cE;mB6cQ,iC7c;K4cE,QE;KFK;ClfC;4CmBkB;IkeC;KleG;+CmeC;KneG;CnBE;AufkC;iDzdC;uCCE;qFydU;yBzdE;SDE;KydC;CvfC;Ayfa;iD3dC;uCCE;qFydU;yBzdE;SDE;K2dC;CzfC;A0fgB;iD5dC;uCCE;qFydU;yBzdE;SDE;K4dC;C1fC;A2fK;iD7dE;uCCE;SD8D;K6dC;C3fC;A4fwB;iD9dC;uCCE;SDY;K8dC;C5fC;uCmBqC;I0eK;K1eI;oD2egC;K3eE;mC4e4B;K5eE;6C6eK;K7eG;4C8eiC;K9eE;mD+eC;K/eU;CnBM;8CmBE;IgfC;KhfE;kDifC;KjfS;CnBE;mDmBO;IkfE;KlfI;oDmfE;KnfE;8DofE;KpfM;8DqfE;KrfK;CnBE;+CmBM;IsfC;KtfC;0CufW;KvfE;CnBM;8CmBO;IwfC;KxfC;sDyfW;KzfE;kD0fU;K1fE;8C2fU;qDhfE;2CCE;aDa;SgfC;K3fC;CnBM;kDmBC;I4fE;K5fM;+C6fE;K7fE;qD8fE;K9fE;6D+fE;qDpfC;2CCC;aDO;SofC;K/fC;6DggBE;qDrfC;2CCE;aDQ;SqfC;KhgBC;CnBE;gCmBQ;IigBE;KjgBQ;qDkgBE;KlgBE;qDmgBE;KngBE;6CogBW;KpgBe;CnBE;AwhBE;CxhBE"}},"type":"js/module"}]}