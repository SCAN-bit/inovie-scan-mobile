{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/get","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"qjFFB5GnNNadLKzlHyZes/u71/A="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"./gesture","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":68,"index":68}}],"key":"rijS9WvIw33qqKul2343YfpqKYE="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.PanGesture = undefined;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2]));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(_dependencyMap[3]));\n  var _getPrototypeOf2 = _interopRequireDefault(require(_dependencyMap[4]));\n  var _get2 = _interopRequireDefault(require(_dependencyMap[5]));\n  var _inherits2 = _interopRequireDefault(require(_dependencyMap[6]));\n  var _gesture = require(_dependencyMap[7]);\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); }\n  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\n  function changeEventCalculator(current, previous) {\n    'worklet';\n\n    var changePayload;\n    if (previous === undefined) {\n      changePayload = {\n        changeX: current.translationX,\n        changeY: current.translationY\n      };\n    } else {\n      changePayload = {\n        changeX: current.translationX - previous.translationX,\n        changeY: current.translationY - previous.translationY\n      };\n    }\n    return {\n      ...current,\n      ...changePayload\n    };\n  }\n  var PanGesture = exports.PanGesture = /*#__PURE__*/function (_ContinousBaseGesture) {\n    function PanGesture() {\n      var _this;\n      (0, _classCallCheck2.default)(this, PanGesture);\n      _this = _callSuper(this, PanGesture);\n      _this.config = {};\n      _this.handlerName = 'PanGestureHandler';\n      return _this;\n    }\n\n    /**\n     * Range along Y axis (in points) where fingers travels without activation of gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#activeoffsetyvalue-number--number\n     */\n    (0, _inherits2.default)(PanGesture, _ContinousBaseGesture);\n    return (0, _createClass2.default)(PanGesture, [{\n      key: \"activeOffsetY\",\n      value: function activeOffsetY(offset) {\n        if (Array.isArray(offset)) {\n          this.config.activeOffsetYStart = offset[0];\n          this.config.activeOffsetYEnd = offset[1];\n        } else if (offset < 0) {\n          this.config.activeOffsetYStart = offset;\n        } else {\n          this.config.activeOffsetYEnd = offset;\n        }\n        return this;\n      }\n\n      /**\n       * Range along X axis (in points) where fingers travels without activation of gesture.\n       * @param offset\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#activeoffsetxvalue-number--number\n       */\n    }, {\n      key: \"activeOffsetX\",\n      value: function activeOffsetX(offset) {\n        if (Array.isArray(offset)) {\n          this.config.activeOffsetXStart = offset[0];\n          this.config.activeOffsetXEnd = offset[1];\n        } else if (offset < 0) {\n          this.config.activeOffsetXStart = offset;\n        } else {\n          this.config.activeOffsetXEnd = offset;\n        }\n        return this;\n      }\n\n      /**\n       * When the finger moves outside this range (in points) along Y axis and gesture hasn't yet activated it will fail recognizing the gesture.\n       * @param offset\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#failoffsetyvalue-number--number\n       */\n    }, {\n      key: \"failOffsetY\",\n      value: function failOffsetY(offset) {\n        if (Array.isArray(offset)) {\n          this.config.failOffsetYStart = offset[0];\n          this.config.failOffsetYEnd = offset[1];\n        } else if (offset < 0) {\n          this.config.failOffsetYStart = offset;\n        } else {\n          this.config.failOffsetYEnd = offset;\n        }\n        return this;\n      }\n\n      /**\n       * When the finger moves outside this range (in points) along X axis and gesture hasn't yet activated it will fail recognizing the gesture.\n       * @param offset\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#failoffsetxvalue-number--number\n       */\n    }, {\n      key: \"failOffsetX\",\n      value: function failOffsetX(offset) {\n        if (Array.isArray(offset)) {\n          this.config.failOffsetXStart = offset[0];\n          this.config.failOffsetXEnd = offset[1];\n        } else if (offset < 0) {\n          this.config.failOffsetXStart = offset;\n        } else {\n          this.config.failOffsetXEnd = offset;\n        }\n        return this;\n      }\n\n      /**\n       * A number of fingers that is required to be placed before gesture can activate. Should be a higher or equal to 0 integer.\n       * @param minPointers\n       */\n    }, {\n      key: \"minPointers\",\n      value: function minPointers(_minPointers) {\n        this.config.minPointers = _minPointers;\n        return this;\n      }\n\n      /**\n       * When the given number of fingers is placed on the screen and gesture hasn't yet activated it will fail recognizing the gesture.\n       * Should be a higher or equal to 0 integer.\n       * @param maxPointers\n       */\n    }, {\n      key: \"maxPointers\",\n      value: function maxPointers(_maxPointers) {\n        this.config.maxPointers = _maxPointers;\n        return this;\n      }\n\n      /**\n       * Minimum distance the finger (or multiple finger) need to travel before the gesture activates.\n       * Expressed in points.\n       * @param distance\n       */\n    }, {\n      key: \"minDistance\",\n      value: function minDistance(distance) {\n        this.config.minDist = distance;\n        return this;\n      }\n\n      /**\n       * Minimum velocity the finger has to reach in order to activate handler.\n       * @param velocity\n       */\n    }, {\n      key: \"minVelocity\",\n      value: function minVelocity(velocity) {\n        this.config.minVelocity = velocity;\n        return this;\n      }\n\n      /**\n       * Minimum velocity along X axis the finger has to reach in order to activate handler.\n       * @param velocity\n       */\n    }, {\n      key: \"minVelocityX\",\n      value: function minVelocityX(velocity) {\n        this.config.minVelocityX = velocity;\n        return this;\n      }\n\n      /**\n       * Minimum velocity along Y axis the finger has to reach in order to activate handler.\n       * @param velocity\n       */\n    }, {\n      key: \"minVelocityY\",\n      value: function minVelocityY(velocity) {\n        this.config.minVelocityY = velocity;\n        return this;\n      }\n\n      /**\n       * #### Android only\n       * Android, by default, will calculate translation values based on the position of the leading pointer (the first one that was placed on the screen).\n       * This modifier allows that behavior to be changed to the one that is default on iOS - the averaged position of all active pointers will be used to calculate the translation values.\n       * @param value\n       */\n    }, {\n      key: \"averageTouches\",\n      value: function averageTouches(value) {\n        this.config.avgTouches = value;\n        return this;\n      }\n\n      /**\n       * #### iOS only\n       * Enables two-finger gestures on supported devices, for example iPads with trackpads.\n       * @param value\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture/#enabletrackpadtwofingergesturevalue-boolean-ios-only\n       */\n    }, {\n      key: \"enableTrackpadTwoFingerGesture\",\n      value: function enableTrackpadTwoFingerGesture(value) {\n        this.config.enableTrackpadTwoFingerGesture = value;\n        return this;\n      }\n\n      /**\n       * Duration in milliseconds of the LongPress gesture before Pan is allowed to activate.\n       * @param duration\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture/#activateafterlongpressduration-number\n       */\n    }, {\n      key: \"activateAfterLongPress\",\n      value: function activateAfterLongPress(duration) {\n        this.config.activateAfterLongPress = duration;\n        return this;\n      }\n    }, {\n      key: \"onChange\",\n      value: function onChange(callback) {\n        // @ts-ignore TS being overprotective, PanGestureHandlerEventPayload is Record\n        this.handlers.changeEventCalculator = changeEventCalculator;\n        return _superPropGet(PanGesture, \"onChange\", this, 3)([callback]);\n      }\n    }]);\n  }(_gesture.ContinousBaseGesture);\n});","lineCount":238,"map":[[13,2,1,0],[13,6,1,0,"_gesture"],[13,14,1,0],[13,17,1,0,"require"],[13,24,1,0],[13,25,1,0,"_dependencyMap"],[13,39,1,0],[14,2,1,68],[14,11,1,68,"_callSuper"],[14,22,1,68,"t"],[14,23,1,68],[14,25,1,68,"o"],[14,26,1,68],[14,28,1,68,"e"],[14,29,1,68],[14,40,1,68,"o"],[14,41,1,68],[14,48,1,68,"_getPrototypeOf2"],[14,64,1,68],[14,65,1,68,"default"],[14,72,1,68],[14,74,1,68,"o"],[14,75,1,68],[14,82,1,68,"_possibleConstructorReturn2"],[14,109,1,68],[14,110,1,68,"default"],[14,117,1,68],[14,119,1,68,"t"],[14,120,1,68],[14,122,1,68,"_isNativeReflectConstruct"],[14,147,1,68],[14,152,1,68,"Reflect"],[14,159,1,68],[14,160,1,68,"construct"],[14,169,1,68],[14,170,1,68,"o"],[14,171,1,68],[14,173,1,68,"e"],[14,174,1,68],[14,186,1,68,"_getPrototypeOf2"],[14,202,1,68],[14,203,1,68,"default"],[14,210,1,68],[14,212,1,68,"t"],[14,213,1,68],[14,215,1,68,"constructor"],[14,226,1,68],[14,230,1,68,"o"],[14,231,1,68],[14,232,1,68,"apply"],[14,237,1,68],[14,238,1,68,"t"],[14,239,1,68],[14,241,1,68,"e"],[14,242,1,68],[15,2,1,68],[15,11,1,68,"_isNativeReflectConstruct"],[15,37,1,68],[15,51,1,68,"t"],[15,52,1,68],[15,56,1,68,"Boolean"],[15,63,1,68],[15,64,1,68,"prototype"],[15,73,1,68],[15,74,1,68,"valueOf"],[15,81,1,68],[15,82,1,68,"call"],[15,86,1,68],[15,87,1,68,"Reflect"],[15,94,1,68],[15,95,1,68,"construct"],[15,104,1,68],[15,105,1,68,"Boolean"],[15,112,1,68],[15,145,1,68,"t"],[15,146,1,68],[15,159,1,68,"_isNativeReflectConstruct"],[15,184,1,68],[15,196,1,68,"_isNativeReflectConstruct"],[15,197,1,68],[15,210,1,68,"t"],[15,211,1,68],[16,2,1,68],[16,11,1,68,"_superPropGet"],[16,25,1,68,"t"],[16,26,1,68],[16,28,1,68,"o"],[16,29,1,68],[16,31,1,68,"e"],[16,32,1,68],[16,34,1,68,"r"],[16,35,1,68],[16,43,1,68,"p"],[16,44,1,68],[16,51,1,68,"_get2"],[16,56,1,68],[16,57,1,68,"default"],[16,64,1,68],[16,70,1,68,"_getPrototypeOf2"],[16,86,1,68],[16,87,1,68,"default"],[16,94,1,68],[16,100,1,68,"r"],[16,101,1,68],[16,104,1,68,"t"],[16,105,1,68],[16,106,1,68,"prototype"],[16,115,1,68],[16,118,1,68,"t"],[16,119,1,68],[16,122,1,68,"o"],[16,123,1,68],[16,125,1,68,"e"],[16,126,1,68],[16,140,1,68,"r"],[16,141,1,68],[16,166,1,68,"p"],[16,167,1,68],[16,180,1,68,"t"],[16,181,1,68],[16,192,1,68,"p"],[16,193,1,68],[16,194,1,68,"apply"],[16,199,1,68],[16,200,1,68,"e"],[16,201,1,68],[16,203,1,68,"t"],[16,204,1,68],[16,211,1,68,"p"],[16,212,1,68],[17,2,11,0],[17,11,11,9,"changeEventCalculator"],[17,32,11,30,"changeEventCalculator"],[17,33,12,2,"current"],[17,40,12,60],[17,42,13,2,"previous"],[17,50,13,62],[17,52,14,2],[18,4,15,2],[18,13,15,11],[20,4,16,2],[20,8,16,6,"changePayload"],[20,21,16,49],[21,4,17,2],[21,8,17,6,"previous"],[21,16,17,14],[21,21,17,19,"undefined"],[21,30,17,28],[21,32,17,30],[22,6,18,4,"changePayload"],[22,19,18,17],[22,22,18,20],[23,8,19,6,"changeX"],[23,15,19,13],[23,17,19,15,"current"],[23,24,19,22],[23,25,19,23,"translationX"],[23,37,19,35],[24,8,20,6,"changeY"],[24,15,20,13],[24,17,20,15,"current"],[24,24,20,22],[24,25,20,23,"translationY"],[25,6,21,4],[25,7,21,5],[26,4,22,2],[26,5,22,3],[26,11,22,9],[27,6,23,4,"changePayload"],[27,19,23,17],[27,22,23,20],[28,8,24,6,"changeX"],[28,15,24,13],[28,17,24,15,"current"],[28,24,24,22],[28,25,24,23,"translationX"],[28,37,24,35],[28,40,24,38,"previous"],[28,48,24,46],[28,49,24,47,"translationX"],[28,61,24,59],[29,8,25,6,"changeY"],[29,15,25,13],[29,17,25,15,"current"],[29,24,25,22],[29,25,25,23,"translationY"],[29,37,25,35],[29,40,25,38,"previous"],[29,48,25,46],[29,49,25,47,"translationY"],[30,6,26,4],[30,7,26,5],[31,4,27,2],[32,4,29,2],[32,11,29,9],[33,6,29,11],[33,9,29,14,"current"],[33,16,29,21],[34,6,29,23],[34,9,29,26,"changePayload"],[35,4,29,40],[35,5,29,41],[36,2,30,0],[37,2,30,1],[37,6,32,13,"PanGesture"],[37,16,32,23],[37,19,32,23,"exports"],[37,26,32,23],[37,27,32,23,"PanGesture"],[37,37,32,23],[37,63,32,23,"_ContinousBaseGesture"],[37,84,32,23],[38,4,38,2],[38,13,38,2,"PanGesture"],[38,24,38,2],[38,26,38,16],[39,6,38,16],[39,10,38,16,"_this"],[39,15,38,16],[40,6,38,16],[40,10,38,16,"_classCallCheck2"],[40,26,38,16],[40,27,38,16,"default"],[40,34,38,16],[40,42,38,16,"PanGesture"],[40,52,38,16],[41,6,39,4,"_this"],[41,11,39,4],[41,14,39,4,"_callSuper"],[41,24,39,4],[41,31,39,4,"PanGesture"],[41,41,39,4],[42,6,39,12,"_this"],[42,11,39,12],[42,12,36,9,"config"],[42,18,36,15],[42,21,36,56],[42,22,36,57],[42,23,36,58],[43,6,41,4,"_this"],[43,11,41,4],[43,12,41,9,"handlerName"],[43,23,41,20],[43,26,41,23],[43,45,41,42],[44,6,41,43],[44,13,41,43,"_this"],[44,18,41,43],[45,4,42,2],[47,4,44,2],[48,0,45,0],[49,0,46,0],[50,0,47,0],[51,0,48,0],[52,4,44,2],[52,8,44,2,"_inherits2"],[52,18,44,2],[52,19,44,2,"default"],[52,26,44,2],[52,28,44,2,"PanGesture"],[52,38,44,2],[52,40,44,2,"_ContinousBaseGesture"],[52,61,44,2],[53,4,44,2],[53,15,44,2,"_createClass2"],[53,28,44,2],[53,29,44,2,"default"],[53,36,44,2],[53,38,44,2,"PanGesture"],[53,48,44,2],[54,6,44,2,"key"],[54,9,44,2],[55,6,44,2,"value"],[55,11,44,2],[55,13,49,2],[55,22,49,2,"activeOffsetY"],[55,35,49,15,"activeOffsetY"],[55,36,50,4,"offset"],[55,42,50,75],[55,44,51,4],[56,8,52,4],[56,12,52,8,"Array"],[56,17,52,13],[56,18,52,14,"isArray"],[56,25,52,21],[56,26,52,22,"offset"],[56,32,52,28],[56,33,52,29],[56,35,52,31],[57,10,53,6],[57,14,53,10],[57,15,53,11,"config"],[57,21,53,17],[57,22,53,18,"activeOffsetYStart"],[57,40,53,36],[57,43,53,39,"offset"],[57,49,53,45],[57,50,53,46],[57,51,53,47],[57,52,53,48],[58,10,54,6],[58,14,54,10],[58,15,54,11,"config"],[58,21,54,17],[58,22,54,18,"activeOffsetYEnd"],[58,38,54,34],[58,41,54,37,"offset"],[58,47,54,43],[58,48,54,44],[58,49,54,45],[58,50,54,46],[59,8,55,4],[59,9,55,5],[59,15,55,11],[59,19,55,15,"offset"],[59,25,55,21],[59,28,55,24],[59,29,55,25],[59,31,55,27],[60,10,56,6],[60,14,56,10],[60,15,56,11,"config"],[60,21,56,17],[60,22,56,18,"activeOffsetYStart"],[60,40,56,36],[60,43,56,39,"offset"],[60,49,56,45],[61,8,57,4],[61,9,57,5],[61,15,57,11],[62,10,58,6],[62,14,58,10],[62,15,58,11,"config"],[62,21,58,17],[62,22,58,18,"activeOffsetYEnd"],[62,38,58,34],[62,41,58,37,"offset"],[62,47,58,43],[63,8,59,4],[64,8,60,4],[64,15,60,11],[64,19,60,15],[65,6,61,2],[67,6,63,2],[68,0,64,0],[69,0,65,0],[70,0,66,0],[71,0,67,0],[72,4,63,2],[73,6,63,2,"key"],[73,9,63,2],[74,6,63,2,"value"],[74,11,63,2],[74,13,68,2],[74,22,68,2,"activeOffsetX"],[74,35,68,15,"activeOffsetX"],[74,36,69,4,"offset"],[74,42,69,75],[74,44,70,4],[75,8,71,4],[75,12,71,8,"Array"],[75,17,71,13],[75,18,71,14,"isArray"],[75,25,71,21],[75,26,71,22,"offset"],[75,32,71,28],[75,33,71,29],[75,35,71,31],[76,10,72,6],[76,14,72,10],[76,15,72,11,"config"],[76,21,72,17],[76,22,72,18,"activeOffsetXStart"],[76,40,72,36],[76,43,72,39,"offset"],[76,49,72,45],[76,50,72,46],[76,51,72,47],[76,52,72,48],[77,10,73,6],[77,14,73,10],[77,15,73,11,"config"],[77,21,73,17],[77,22,73,18,"activeOffsetXEnd"],[77,38,73,34],[77,41,73,37,"offset"],[77,47,73,43],[77,48,73,44],[77,49,73,45],[77,50,73,46],[78,8,74,4],[78,9,74,5],[78,15,74,11],[78,19,74,15,"offset"],[78,25,74,21],[78,28,74,24],[78,29,74,25],[78,31,74,27],[79,10,75,6],[79,14,75,10],[79,15,75,11,"config"],[79,21,75,17],[79,22,75,18,"activeOffsetXStart"],[79,40,75,36],[79,43,75,39,"offset"],[79,49,75,45],[80,8,76,4],[80,9,76,5],[80,15,76,11],[81,10,77,6],[81,14,77,10],[81,15,77,11,"config"],[81,21,77,17],[81,22,77,18,"activeOffsetXEnd"],[81,38,77,34],[81,41,77,37,"offset"],[81,47,77,43],[82,8,78,4],[83,8,79,4],[83,15,79,11],[83,19,79,15],[84,6,80,2],[86,6,82,2],[87,0,83,0],[88,0,84,0],[89,0,85,0],[90,0,86,0],[91,4,82,2],[92,6,82,2,"key"],[92,9,82,2],[93,6,82,2,"value"],[93,11,82,2],[93,13,87,2],[93,22,87,2,"failOffsetY"],[93,33,87,13,"failOffsetY"],[93,34,88,4,"offset"],[93,40,88,71],[93,42,89,4],[94,8,90,4],[94,12,90,8,"Array"],[94,17,90,13],[94,18,90,14,"isArray"],[94,25,90,21],[94,26,90,22,"offset"],[94,32,90,28],[94,33,90,29],[94,35,90,31],[95,10,91,6],[95,14,91,10],[95,15,91,11,"config"],[95,21,91,17],[95,22,91,18,"failOffsetYStart"],[95,38,91,34],[95,41,91,37,"offset"],[95,47,91,43],[95,48,91,44],[95,49,91,45],[95,50,91,46],[96,10,92,6],[96,14,92,10],[96,15,92,11,"config"],[96,21,92,17],[96,22,92,18,"failOffsetYEnd"],[96,36,92,32],[96,39,92,35,"offset"],[96,45,92,41],[96,46,92,42],[96,47,92,43],[96,48,92,44],[97,8,93,4],[97,9,93,5],[97,15,93,11],[97,19,93,15,"offset"],[97,25,93,21],[97,28,93,24],[97,29,93,25],[97,31,93,27],[98,10,94,6],[98,14,94,10],[98,15,94,11,"config"],[98,21,94,17],[98,22,94,18,"failOffsetYStart"],[98,38,94,34],[98,41,94,37,"offset"],[98,47,94,43],[99,8,95,4],[99,9,95,5],[99,15,95,11],[100,10,96,6],[100,14,96,10],[100,15,96,11,"config"],[100,21,96,17],[100,22,96,18,"failOffsetYEnd"],[100,36,96,32],[100,39,96,35,"offset"],[100,45,96,41],[101,8,97,4],[102,8,98,4],[102,15,98,11],[102,19,98,15],[103,6,99,2],[105,6,101,2],[106,0,102,0],[107,0,103,0],[108,0,104,0],[109,0,105,0],[110,4,101,2],[111,6,101,2,"key"],[111,9,101,2],[112,6,101,2,"value"],[112,11,101,2],[112,13,106,2],[112,22,106,2,"failOffsetX"],[112,33,106,13,"failOffsetX"],[112,34,107,4,"offset"],[112,40,107,71],[112,42,108,4],[113,8,109,4],[113,12,109,8,"Array"],[113,17,109,13],[113,18,109,14,"isArray"],[113,25,109,21],[113,26,109,22,"offset"],[113,32,109,28],[113,33,109,29],[113,35,109,31],[114,10,110,6],[114,14,110,10],[114,15,110,11,"config"],[114,21,110,17],[114,22,110,18,"failOffsetXStart"],[114,38,110,34],[114,41,110,37,"offset"],[114,47,110,43],[114,48,110,44],[114,49,110,45],[114,50,110,46],[115,10,111,6],[115,14,111,10],[115,15,111,11,"config"],[115,21,111,17],[115,22,111,18,"failOffsetXEnd"],[115,36,111,32],[115,39,111,35,"offset"],[115,45,111,41],[115,46,111,42],[115,47,111,43],[115,48,111,44],[116,8,112,4],[116,9,112,5],[116,15,112,11],[116,19,112,15,"offset"],[116,25,112,21],[116,28,112,24],[116,29,112,25],[116,31,112,27],[117,10,113,6],[117,14,113,10],[117,15,113,11,"config"],[117,21,113,17],[117,22,113,18,"failOffsetXStart"],[117,38,113,34],[117,41,113,37,"offset"],[117,47,113,43],[118,8,114,4],[118,9,114,5],[118,15,114,11],[119,10,115,6],[119,14,115,10],[119,15,115,11,"config"],[119,21,115,17],[119,22,115,18,"failOffsetXEnd"],[119,36,115,32],[119,39,115,35,"offset"],[119,45,115,41],[120,8,116,4],[121,8,117,4],[121,15,117,11],[121,19,117,15],[122,6,118,2],[124,6,120,2],[125,0,121,0],[126,0,122,0],[127,0,123,0],[128,4,120,2],[129,6,120,2,"key"],[129,9,120,2],[130,6,120,2,"value"],[130,11,120,2],[130,13,124,2],[130,22,124,2,"minPointers"],[130,33,124,13,"minPointers"],[130,34,124,14,"minPointers"],[130,46,124,33],[130,48,124,35],[131,8,125,4],[131,12,125,8],[131,13,125,9,"config"],[131,19,125,15],[131,20,125,16,"minPointers"],[131,31,125,27],[131,34,125,30,"minPointers"],[131,46,125,41],[132,8,126,4],[132,15,126,11],[132,19,126,15],[133,6,127,2],[135,6,129,2],[136,0,130,0],[137,0,131,0],[138,0,132,0],[139,0,133,0],[140,4,129,2],[141,6,129,2,"key"],[141,9,129,2],[142,6,129,2,"value"],[142,11,129,2],[142,13,134,2],[142,22,134,2,"maxPointers"],[142,33,134,13,"maxPointers"],[142,34,134,14,"maxPointers"],[142,46,134,33],[142,48,134,35],[143,8,135,4],[143,12,135,8],[143,13,135,9,"config"],[143,19,135,15],[143,20,135,16,"maxPointers"],[143,31,135,27],[143,34,135,30,"maxPointers"],[143,46,135,41],[144,8,136,4],[144,15,136,11],[144,19,136,15],[145,6,137,2],[147,6,139,2],[148,0,140,0],[149,0,141,0],[150,0,142,0],[151,0,143,0],[152,4,139,2],[153,6,139,2,"key"],[153,9,139,2],[154,6,139,2,"value"],[154,11,139,2],[154,13,144,2],[154,22,144,2,"minDistance"],[154,33,144,13,"minDistance"],[154,34,144,14,"distance"],[154,42,144,30],[154,44,144,32],[155,8,145,4],[155,12,145,8],[155,13,145,9,"config"],[155,19,145,15],[155,20,145,16,"minDist"],[155,27,145,23],[155,30,145,26,"distance"],[155,38,145,34],[156,8,146,4],[156,15,146,11],[156,19,146,15],[157,6,147,2],[159,6,149,2],[160,0,150,0],[161,0,151,0],[162,0,152,0],[163,4,149,2],[164,6,149,2,"key"],[164,9,149,2],[165,6,149,2,"value"],[165,11,149,2],[165,13,153,2],[165,22,153,2,"minVelocity"],[165,33,153,13,"minVelocity"],[165,34,153,14,"velocity"],[165,42,153,30],[165,44,153,32],[166,8,154,4],[166,12,154,8],[166,13,154,9,"config"],[166,19,154,15],[166,20,154,16,"minVelocity"],[166,31,154,27],[166,34,154,30,"velocity"],[166,42,154,38],[167,8,155,4],[167,15,155,11],[167,19,155,15],[168,6,156,2],[170,6,158,2],[171,0,159,0],[172,0,160,0],[173,0,161,0],[174,4,158,2],[175,6,158,2,"key"],[175,9,158,2],[176,6,158,2,"value"],[176,11,158,2],[176,13,162,2],[176,22,162,2,"minVelocityX"],[176,34,162,14,"minVelocityX"],[176,35,162,15,"velocity"],[176,43,162,31],[176,45,162,33],[177,8,163,4],[177,12,163,8],[177,13,163,9,"config"],[177,19,163,15],[177,20,163,16,"minVelocityX"],[177,32,163,28],[177,35,163,31,"velocity"],[177,43,163,39],[178,8,164,4],[178,15,164,11],[178,19,164,15],[179,6,165,2],[181,6,167,2],[182,0,168,0],[183,0,169,0],[184,0,170,0],[185,4,167,2],[186,6,167,2,"key"],[186,9,167,2],[187,6,167,2,"value"],[187,11,167,2],[187,13,171,2],[187,22,171,2,"minVelocityY"],[187,34,171,14,"minVelocityY"],[187,35,171,15,"velocity"],[187,43,171,31],[187,45,171,33],[188,8,172,4],[188,12,172,8],[188,13,172,9,"config"],[188,19,172,15],[188,20,172,16,"minVelocityY"],[188,32,172,28],[188,35,172,31,"velocity"],[188,43,172,39],[189,8,173,4],[189,15,173,11],[189,19,173,15],[190,6,174,2],[192,6,176,2],[193,0,177,0],[194,0,178,0],[195,0,179,0],[196,0,180,0],[197,0,181,0],[198,4,176,2],[199,6,176,2,"key"],[199,9,176,2],[200,6,176,2,"value"],[200,11,176,2],[200,13,182,2],[200,22,182,2,"averageTouches"],[200,36,182,16,"averageTouches"],[200,37,182,17,"value"],[200,42,182,31],[200,44,182,33],[201,8,183,4],[201,12,183,8],[201,13,183,9,"config"],[201,19,183,15],[201,20,183,16,"avgTouches"],[201,30,183,26],[201,33,183,29,"value"],[201,38,183,34],[202,8,184,4],[202,15,184,11],[202,19,184,15],[203,6,185,2],[205,6,187,2],[206,0,188,0],[207,0,189,0],[208,0,190,0],[209,0,191,0],[210,0,192,0],[211,4,187,2],[212,6,187,2,"key"],[212,9,187,2],[213,6,187,2,"value"],[213,11,187,2],[213,13,193,2],[213,22,193,2,"enableTrackpadTwoFingerGesture"],[213,52,193,32,"enableTrackpadTwoFingerGesture"],[213,53,193,33,"value"],[213,58,193,47],[213,60,193,49],[214,8,194,4],[214,12,194,8],[214,13,194,9,"config"],[214,19,194,15],[214,20,194,16,"enableTrackpadTwoFingerGesture"],[214,50,194,46],[214,53,194,49,"value"],[214,58,194,54],[215,8,195,4],[215,15,195,11],[215,19,195,15],[216,6,196,2],[218,6,198,2],[219,0,199,0],[220,0,200,0],[221,0,201,0],[222,0,202,0],[223,4,198,2],[224,6,198,2,"key"],[224,9,198,2],[225,6,198,2,"value"],[225,11,198,2],[225,13,203,2],[225,22,203,2,"activateAfterLongPress"],[225,44,203,24,"activateAfterLongPress"],[225,45,203,25,"duration"],[225,53,203,41],[225,55,203,43],[226,8,204,4],[226,12,204,8],[226,13,204,9,"config"],[226,19,204,15],[226,20,204,16,"activateAfterLongPress"],[226,42,204,38],[226,45,204,41,"duration"],[226,53,204,49],[227,8,205,4],[227,15,205,11],[227,19,205,15],[228,6,206,2],[229,4,206,3],[230,6,206,3,"key"],[230,9,206,3],[231,6,206,3,"value"],[231,11,206,3],[231,13,208,2],[231,22,208,2,"onChange"],[231,30,208,10,"onChange"],[231,31,209,4,"callback"],[231,39,213,13],[231,41,214,4],[232,8,215,4],[233,8,216,4],[233,12,216,8],[233,13,216,9,"handlers"],[233,21,216,17],[233,22,216,18,"changeEventCalculator"],[233,43,216,39],[233,46,216,42,"changeEventCalculator"],[233,67,216,63],[234,8,217,4],[234,15,217,4,"_superPropGet"],[234,28,217,4],[234,29,217,4,"PanGesture"],[234,39,217,4],[234,63,217,26,"callback"],[234,71,217,34],[235,6,218,2],[236,4,218,3],[237,2,218,3],[237,4,32,32,"ContinousBaseGesture"],[237,33,32,52],[238,0,32,52],[238,3]],"functionMap":{"names":["<global>","changeEventCalculator","PanGesture","PanGesture#constructor","PanGesture#activeOffsetY","PanGesture#activeOffsetX","PanGesture#failOffsetY","PanGesture#failOffsetX","PanGesture#minPointers","PanGesture#maxPointers","PanGesture#minDistance","PanGesture#minVelocity","PanGesture#minVelocityX","PanGesture#minVelocityY","PanGesture#averageTouches","PanGesture#enableTrackpadTwoFingerGesture","PanGesture#activateAfterLongPress","PanGesture#onChange"],"mappings":"AAA;ACU;CDmB;OEE;ECM;GDI;EEO;GFY;EGO;GHY;EIO;GJY;EKO;GLY;EMM;GNG;EOO;GPG;EQO;GRG;ESM;GTG;EUM;GVG;EWM;GXG;EYQ;GZG;EaQ;GbG;EcO;GdG;EeE;GfU;CFC"}},"type":"js/module"}]}