{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":167,"column":0,"index":5194}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":167,"column":0,"index":5194}}],"key":"l9ek7s8G7hY7pJY4P1vxwsk0NPM="}},{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":26,"index":26}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react-native","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":27},"end":{"line":7,"column":22,"index":141}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":167,"column":0,"index":5194}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.StatusBar = StatusBar;\n  exports.setStatusBarNetworkActivityIndicatorVisible = exports.setStatusBarHidden = exports.setStatusBarBackgroundColor = undefined;\n  exports.setStatusBarStyle = setStatusBarStyle;\n  exports.setStatusBarTranslucent = undefined;\n  var _objectWithoutProperties2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _react = _interopRequireDefault(require(_dependencyMap[2]));\n  var _reactNative = require(_dependencyMap[3]);\n  var _jsxRuntime = require(_dependencyMap[4]);\n  var _excluded = [\"style\", \"hideTransitionAnimation\", \"translucent\", \"backgroundColor\"]; // @docsMissing\n  // @docsMissing\n  // @needsAudit\n  /**\n   * A component that allows you to configure your status bar without directly calling imperative\n   * methods like `setBarStyle`.\n   *\n   * You will likely have multiple `StatusBar` components mounted in the same app at the same time.\n   * For example, if you have multiple screens in your app, you may end up using one per screen.\n   * The props of each `StatusBar` component will be merged in the order that they were mounted.\n   * This component is built on top of the [StatusBar](https://reactnative.dev/docs/statusbar)\n   * component exported from React Native, and it provides defaults that work better for Expo users.\n   */\n  function StatusBar(_ref) {\n    var style = _ref.style,\n      hideTransitionAnimation = _ref.hideTransitionAnimation,\n      _ref$translucent = _ref.translucent,\n      translucent = _ref$translucent === undefined ? true : _ref$translucent,\n      backgroundColorProp = _ref.backgroundColor,\n      props = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n    // Pick appropriate default value depending on current theme, so if we are\n    // locked to light mode we don't end up with a light status bar\n    var colorScheme = (0, _reactNative.useColorScheme)();\n    var barStyle = _react.default.useMemo(() => styleToBarStyle(style, colorScheme), [style, colorScheme]);\n\n    // If translucent and no backgroundColor is provided, then use transparent\n    // background\n    var backgroundColor = backgroundColorProp;\n    if (translucent && !backgroundColor) {\n      backgroundColor = 'transparent';\n    }\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.StatusBar, {\n      ...props,\n      translucent: translucent,\n      barStyle: barStyle,\n      backgroundColor: backgroundColor,\n      showHideTransition: hideTransitionAnimation === 'none' ? undefined : hideTransitionAnimation\n    });\n  }\n\n  // @needsAudit\n  /**\n   * Set the bar style of the status bar.\n   * @param style The color of the status bar text.\n   * @param animated If the transition should be animated.\n   */\n  function setStatusBarStyle(style, animated) {\n    _reactNative.StatusBar.setBarStyle(styleToBarStyle(style), animated);\n  }\n\n  // @needsAudit\n  /**\n   * Toggle visibility of the status bar.\n   * @param hidden If the status bar should be hidden.\n   * @param animation Animation to use when toggling hidden, defaults to `'none'`.\n   */\n  var setStatusBarHidden = exports.setStatusBarHidden = _reactNative.StatusBar.setHidden;\n\n  // @needsAudit\n  /**\n   * Set the background color of the status bar.\n   * @param backgroundColor The background color of the status bar.\n   * @param animated `true` to animate the background color change, `false` to change immediately.\n   * @platform android\n   */\n  var setStatusBarBackgroundColor = exports.setStatusBarBackgroundColor = _reactNative.StatusBar.setBackgroundColor;\n\n  // @needsAudit\n  /**\n   * Toggle visibility of the network activity indicator.\n   * @param visible If the network activity indicator should be visible.\n   * @platform ios\n   */\n  var setStatusBarNetworkActivityIndicatorVisible = exports.setStatusBarNetworkActivityIndicatorVisible = _reactNative.StatusBar.setNetworkActivityIndicatorVisible;\n\n  // @needsAudit\n  /**\n   * Set the translucency of the status bar.\n   * @param translucent Whether the app can draw under the status bar. When `true`, content will be\n   * rendered under the status bar. This is always `true` on iOS and cannot be changed.\n   * @platform android\n   */\n  var setStatusBarTranslucent = exports.setStatusBarTranslucent = _reactNative.StatusBar.setTranslucent;\n  function styleToBarStyle() {\n    var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'auto';\n    var colorScheme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _reactNative.Appearance?.getColorScheme() ?? 'light';\n    if (!colorScheme) {\n      colorScheme = 'light';\n    }\n    var resolvedStyle = style;\n    if (style === 'auto') {\n      resolvedStyle = colorScheme === 'light' ? 'dark' : 'light';\n    } else if (style === 'inverted') {\n      resolvedStyle = colorScheme === 'light' ? 'light' : 'dark';\n    }\n    return resolvedStyle === 'light' ? 'light-content' : 'dark-content';\n  }\n});","lineCount":111,"map":[[11,2,1,0],[11,6,1,0,"_react"],[11,12,1,0],[11,15,1,0,"_interopRequireDefault"],[11,37,1,0],[11,38,1,0,"require"],[11,45,1,0],[11,46,1,0,"_dependencyMap"],[11,60,1,0],[12,2,2,0],[12,6,2,0,"_reactNative"],[12,18,2,0],[12,21,2,0,"require"],[12,28,2,0],[12,29,2,0,"_dependencyMap"],[12,43,2,0],[13,2,7,22],[13,6,7,22,"_jsxRuntime"],[13,17,7,22],[13,20,7,22,"require"],[13,27,7,22],[13,28,7,22,"_dependencyMap"],[13,42,7,22],[14,2,7,22],[14,6,7,22,"_excluded"],[14,15,7,22],[14,90,9,0],[15,2,12,0],[16,2,15,0],[17,2,65,0],[18,0,66,0],[19,0,67,0],[20,0,68,0],[21,0,69,0],[22,0,70,0],[23,0,71,0],[24,0,72,0],[25,0,73,0],[26,0,74,0],[27,2,75,7],[27,11,75,16,"StatusBar"],[27,20,75,25,"StatusBar"],[27,21,75,25,"_ref"],[27,25,75,25],[27,27,81,19],[28,4,81,19],[28,8,76,2,"style"],[28,13,76,7],[28,16,76,7,"_ref"],[28,20,76,7],[28,21,76,2,"style"],[28,26,76,7],[29,6,77,2,"hideTransitionAnimation"],[29,29,77,25],[29,32,77,25,"_ref"],[29,36,77,25],[29,37,77,2,"hideTransitionAnimation"],[29,60,77,25],[30,6,77,25,"_ref$translucent"],[30,22,77,25],[30,25,77,25,"_ref"],[30,29,77,25],[30,30,78,2,"translucent"],[30,41,78,13],[31,6,78,2,"translucent"],[31,17,78,13],[31,20,78,13,"_ref$translucent"],[31,36,78,13],[31,41,78,13,"undefined"],[31,50,78,13],[31,53,78,16],[31,57,78,20],[31,60,78,20,"_ref$translucent"],[31,76,78,20],[32,6,79,19,"backgroundColorProp"],[32,25,79,38],[32,28,79,38,"_ref"],[32,32,79,38],[32,33,79,2,"backgroundColor"],[32,48,79,17],[33,6,80,5,"props"],[33,11,80,10],[33,18,80,10,"_objectWithoutProperties2"],[33,43,80,10],[33,44,80,10,"default"],[33,51,80,10],[33,53,80,10,"_ref"],[33,57,80,10],[33,59,80,10,"_excluded"],[33,68,80,10],[34,4,82,2],[35,4,83,2],[36,4,84,2],[36,8,84,8,"colorScheme"],[36,19,84,19],[36,22,84,22],[36,26,84,22,"useColorScheme"],[36,53,84,36],[36,55,84,37],[36,56,84,38],[37,4,85,2],[37,8,85,8,"barStyle"],[37,16,85,16],[37,19,85,19,"React"],[37,33,85,24],[37,34,85,25,"useMemo"],[37,41,85,32],[37,42,85,33],[37,48,85,39,"styleToBarStyle"],[37,63,85,54],[37,64,85,55,"style"],[37,69,85,60],[37,71,85,62,"colorScheme"],[37,82,85,73],[37,83,85,74],[37,85,85,76],[37,86,85,77,"style"],[37,91,85,82],[37,93,85,84,"colorScheme"],[37,104,85,95],[37,105,85,96],[37,106,85,97],[39,4,87,2],[40,4,88,2],[41,4,89,2],[41,8,89,6,"backgroundColor"],[41,23,89,21],[41,26,89,24,"backgroundColorProp"],[41,45,89,43],[42,4,90,2],[42,8,90,6,"translucent"],[42,19,90,17],[42,23,90,21],[42,24,90,22,"backgroundColor"],[42,39,90,37],[42,41,90,39],[43,6,91,4,"backgroundColor"],[43,21,91,19],[43,24,91,22],[43,37,91,35],[44,4,92,2],[45,4,94,2],[45,24,95,4],[45,28,95,4,"_jsxRuntime"],[45,39,95,4],[45,40,95,4,"jsx"],[45,43,95,4],[45,45,95,5,"_reactNative"],[45,57,95,5],[45,58,95,5,"StatusBar"],[45,67,95,20],[46,6,95,20],[46,9,96,10,"props"],[46,14,96,15],[47,6,97,6,"translucent"],[47,17,97,17],[47,19,97,19,"translucent"],[47,30,97,31],[48,6,98,6,"barStyle"],[48,14,98,14],[48,16,98,16,"barStyle"],[48,24,98,25],[49,6,99,6,"backgroundColor"],[49,21,99,21],[49,23,99,23,"backgroundColor"],[49,38,99,39],[50,6,100,6,"showHideTransition"],[50,24,100,24],[50,26,100,26,"hideTransitionAnimation"],[50,49,100,49],[50,54,100,54],[50,60,100,60],[50,63,100,63,"undefined"],[50,72,100,72],[50,75,100,75,"hideTransitionAnimation"],[51,4,100,99],[51,5,101,5],[51,6,101,6],[52,2,103,0],[54,2,105,0],[55,2,106,0],[56,0,107,0],[57,0,108,0],[58,0,109,0],[59,0,110,0],[60,2,111,7],[60,11,111,16,"setStatusBarStyle"],[60,28,111,33,"setStatusBarStyle"],[60,29,111,34,"style"],[60,34,111,55],[60,36,111,57,"animated"],[60,44,111,75],[60,46,111,77],[61,4,112,2,"NativeStatusBar"],[61,26,112,17],[61,27,112,18,"setBarStyle"],[61,38,112,29],[61,39,112,30,"styleToBarStyle"],[61,54,112,45],[61,55,112,46,"style"],[61,60,112,51],[61,61,112,52],[61,63,112,54,"animated"],[61,71,112,62],[61,72,112,63],[62,2,113,0],[64,2,115,0],[65,2,116,0],[66,0,117,0],[67,0,118,0],[68,0,119,0],[69,0,120,0],[70,2,121,7],[70,6,121,13,"setStatusBarHidden"],[70,24,121,31],[70,27,121,31,"exports"],[70,34,121,31],[70,35,121,31,"setStatusBarHidden"],[70,53,121,31],[70,56,121,34,"NativeStatusBar"],[70,78,121,49],[70,79,121,50,"setHidden"],[70,88,121,59],[72,2,123,0],[73,2,124,0],[74,0,125,0],[75,0,126,0],[76,0,127,0],[77,0,128,0],[78,0,129,0],[79,2,130,7],[79,6,130,13,"setStatusBarBackgroundColor"],[79,33,130,40],[79,36,130,40,"exports"],[79,43,130,40],[79,44,130,40,"setStatusBarBackgroundColor"],[79,71,130,40],[79,74,130,43,"NativeStatusBar"],[79,96,130,58],[79,97,130,59,"setBackgroundColor"],[79,115,130,77],[81,2,132,0],[82,2,133,0],[83,0,134,0],[84,0,135,0],[85,0,136,0],[86,0,137,0],[87,2,138,7],[87,6,138,13,"setStatusBarNetworkActivityIndicatorVisible"],[87,49,138,56],[87,52,138,56,"exports"],[87,59,138,56],[87,60,138,56,"setStatusBarNetworkActivityIndicatorVisible"],[87,103,138,56],[87,106,139,2,"NativeStatusBar"],[87,128,139,17],[87,129,139,18,"setNetworkActivityIndicatorVisible"],[87,163,139,52],[89,2,141,0],[90,2,142,0],[91,0,143,0],[92,0,144,0],[93,0,145,0],[94,0,146,0],[95,0,147,0],[96,2,148,7],[96,6,148,13,"setStatusBarTranslucent"],[96,29,148,36],[96,32,148,36,"exports"],[96,39,148,36],[96,40,148,36,"setStatusBarTranslucent"],[96,63,148,36],[96,66,148,39,"NativeStatusBar"],[96,88,148,54],[96,89,148,55,"setTranslucent"],[96,103,148,69],[97,2,150,0],[97,11,150,9,"styleToBarStyle"],[97,26,150,24,"styleToBarStyle"],[97,27,150,24],[97,29,153,36],[98,4,153,36],[98,8,151,2,"style"],[98,13,151,23],[98,16,151,23,"arguments"],[98,25,151,23],[98,26,151,23,"length"],[98,32,151,23],[98,40,151,23,"arguments"],[98,49,151,23],[98,57,151,23,"undefined"],[98,66,151,23],[98,69,151,23,"arguments"],[98,78,151,23],[98,84,151,26],[98,90,151,32],[99,4,151,32],[99,8,152,2,"colorScheme"],[99,19,152,30],[99,22,152,30,"arguments"],[99,31,152,30],[99,32,152,30,"length"],[99,38,152,30],[99,46,152,30,"arguments"],[99,55,152,30],[99,63,152,30,"undefined"],[99,72,152,30],[99,75,152,30,"arguments"],[99,84,152,30],[99,90,152,33,"Appearance"],[99,113,152,43],[99,115,152,45,"getColorScheme"],[99,129,152,59],[99,130,152,60],[99,131,152,61],[99,135,152,65],[99,142,152,72],[100,4,154,2],[100,8,154,6],[100,9,154,7,"colorScheme"],[100,20,154,18],[100,22,154,20],[101,6,155,4,"colorScheme"],[101,17,155,15],[101,20,155,18],[101,27,155,25],[102,4,156,2],[103,4,158,2],[103,8,158,6,"resolvedStyle"],[103,21,158,19],[103,24,158,22,"style"],[103,29,158,27],[104,4,159,2],[104,8,159,6,"style"],[104,13,159,11],[104,18,159,16],[104,24,159,22],[104,26,159,24],[105,6,160,4,"resolvedStyle"],[105,19,160,17],[105,22,160,20,"colorScheme"],[105,33,160,31],[105,38,160,36],[105,45,160,43],[105,48,160,46],[105,54,160,52],[105,57,160,55],[105,64,160,62],[106,4,161,2],[106,5,161,3],[106,11,161,9],[106,15,161,13,"style"],[106,20,161,18],[106,25,161,23],[106,35,161,33],[106,37,161,35],[107,6,162,4,"resolvedStyle"],[107,19,162,17],[107,22,162,20,"colorScheme"],[107,33,162,31],[107,38,162,36],[107,45,162,43],[107,48,162,46],[107,55,162,53],[107,58,162,56],[107,64,162,62],[108,4,163,2],[109,4,165,2],[109,11,165,9,"resolvedStyle"],[109,24,165,22],[109,29,165,27],[109,36,165,34],[109,39,165,37],[109,54,165,52],[109,57,165,55],[109,71,165,69],[110,2,166,0],[111,0,166,1],[111,3]],"functionMap":{"names":["<global>","StatusBar","React.useMemo$argument_0","setStatusBarStyle","styleToBarStyle"],"mappings":"AAA;OC0E;iCCU,yCD;CDkB;OGQ;CHE;AIqC;CJgB"}},"type":"js/module"}]}