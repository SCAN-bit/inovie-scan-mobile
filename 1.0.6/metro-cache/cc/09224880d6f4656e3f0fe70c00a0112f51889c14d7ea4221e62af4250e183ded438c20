{"dependencies":[{"name":"./rng.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":8,"column":34,"index":141},"end":{"line":8,"column":53,"index":160}}],"key":"edMs4qfLQ00elWNYMz6MAqjTMaY="}},{"name":"./stringify.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":10,"column":17,"index":181},"end":{"line":10,"column":42,"index":206}}],"key":"GJQ/K20/vax8KG5LBpoUpzK/Tts="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = undefined;\n  var _rng = _interopRequireDefault(require(_dependencyMap[0]));\n  var _stringify = require(_dependencyMap[1]);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  // **`v1()` - Generate time-based UUID**\n  //\n  // Inspired by https://github.com/LiosK/UUID.js\n  // and http://docs.python.org/library/uuid.html\n  var _nodeId;\n  var _clockseq; // Previous uuid creation time\n\n  var _lastMSecs = 0;\n  var _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\n  function v1(options, buf, offset) {\n    var i = buf && offset || 0;\n    var b = buf || new Array(16);\n    options = options || {};\n    var node = options.node || _nodeId;\n    var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n    // specified.  We do this lazily to minimize issues related to insufficient\n    // system entropy.  See #189\n\n    if (node == null || clockseq == null) {\n      var seedBytes = options.random || (options.rng || _rng.default)();\n      if (node == null) {\n        // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n        node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n      }\n      if (clockseq == null) {\n        // Per 4.2.2, randomize (14 bit) clockseq\n        clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n      }\n    } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n    var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n    // cycle to simulate higher resolution clock\n\n    var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n    var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n    if (dt < 0 && options.clockseq === undefined) {\n      clockseq = clockseq + 1 & 0x3fff;\n    } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n    // time interval\n\n    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n      nsecs = 0;\n    } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n    if (nsecs >= 10000) {\n      throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n    }\n    _lastMSecs = msecs;\n    _lastNSecs = nsecs;\n    _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n    msecs += 12219292800000; // `time_low`\n\n    var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n    b[i++] = tl >>> 24 & 0xff;\n    b[i++] = tl >>> 16 & 0xff;\n    b[i++] = tl >>> 8 & 0xff;\n    b[i++] = tl & 0xff; // `time_mid`\n\n    var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n    b[i++] = tmh >>> 8 & 0xff;\n    b[i++] = tmh & 0xff; // `time_high_and_version`\n\n    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n    b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n    b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n    b[i++] = clockseq & 0xff; // `node`\n\n    for (var n = 0; n < 6; ++n) {\n      b[i + n] = node[n];\n    }\n    return buf || (0, _stringify.unsafeStringify)(b);\n  }\n  var _default = v1;\n  exports.default = _default;\n});","lineCount":100,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,15,"undefined"],[7,29,6,24],[8,2,8,0],[8,6,8,4,"_rng"],[8,10,8,8],[8,13,8,11,"_interopRequireDefault"],[8,35,8,33],[8,36,8,34,"require"],[8,43,8,41],[8,44,8,41,"_dependencyMap"],[8,58,8,41],[8,61,8,52],[8,62,8,53],[8,63,8,54],[9,2,10,0],[9,6,10,4,"_stringify"],[9,16,10,14],[9,19,10,17,"require"],[9,26,10,24],[9,27,10,24,"_dependencyMap"],[9,41,10,24],[9,44,10,41],[9,45,10,42],[10,2,12,0],[10,11,12,9,"_interopRequireDefault"],[10,33,12,31,"_interopRequireDefault"],[10,34,12,32,"obj"],[10,37,12,35],[10,39,12,37],[11,4,12,39],[11,11,12,46,"obj"],[11,14,12,49],[11,18,12,53,"obj"],[11,21,12,56],[11,22,12,57,"__esModule"],[11,32,12,67],[11,35,12,70,"obj"],[11,38,12,73],[11,41,12,76],[12,6,12,78,"default"],[12,13,12,85],[12,15,12,87,"obj"],[13,4,12,91],[13,5,12,92],[14,2,12,94],[16,2,14,0],[17,2,15,0],[18,2,16,0],[19,2,17,0],[20,2,18,0],[20,6,18,4,"_nodeId"],[20,13,18,11],[21,2,20,0],[21,6,20,4,"_clockseq"],[21,15,20,13],[21,16,20,14],[21,17,20,15],[23,2,23,0],[23,6,23,4,"_lastMSecs"],[23,16,23,14],[23,19,23,17],[23,20,23,18],[24,2,24,0],[24,6,24,4,"_lastNSecs"],[24,16,24,14],[24,19,24,17],[24,20,24,18],[24,21,24,19],[24,22,24,20],[26,2,26,0],[26,11,26,9,"v1"],[26,13,26,11,"v1"],[26,14,26,12,"options"],[26,21,26,19],[26,23,26,21,"buf"],[26,26,26,24],[26,28,26,26,"offset"],[26,34,26,32],[26,36,26,34],[27,4,27,2],[27,8,27,6,"i"],[27,9,27,7],[27,12,27,10,"buf"],[27,15,27,13],[27,19,27,17,"offset"],[27,25,27,23],[27,29,27,27],[27,30,27,28],[28,4,28,2],[28,8,28,8,"b"],[28,9,28,9],[28,12,28,12,"buf"],[28,15,28,15],[28,19,28,19],[28,23,28,23,"Array"],[28,28,28,28],[28,29,28,29],[28,31,28,31],[28,32,28,32],[29,4,29,2,"options"],[29,11,29,9],[29,14,29,12,"options"],[29,21,29,19],[29,25,29,23],[29,26,29,24],[29,27,29,25],[30,4,30,2],[30,8,30,6,"node"],[30,12,30,10],[30,15,30,13,"options"],[30,22,30,20],[30,23,30,21,"node"],[30,27,30,25],[30,31,30,29,"_nodeId"],[30,38,30,36],[31,4,31,2],[31,8,31,6,"clockseq"],[31,16,31,14],[31,19,31,17,"options"],[31,26,31,24],[31,27,31,25,"clockseq"],[31,35,31,33],[31,40,31,38,"undefined"],[31,49,31,47],[31,52,31,50,"options"],[31,59,31,57],[31,60,31,58,"clockseq"],[31,68,31,66],[31,71,31,69,"_clockseq"],[31,80,31,78],[31,81,31,79],[31,82,31,80],[32,4,32,2],[33,4,33,2],[35,4,35,2],[35,8,35,6,"node"],[35,12,35,10],[35,16,35,14],[35,20,35,18],[35,24,35,22,"clockseq"],[35,32,35,30],[35,36,35,34],[35,40,35,38],[35,42,35,40],[36,6,36,4],[36,10,36,10,"seedBytes"],[36,19,36,19],[36,22,36,22,"options"],[36,29,36,29],[36,30,36,30,"random"],[36,36,36,36],[36,40,36,40],[36,41,36,41,"options"],[36,48,36,48],[36,49,36,49,"rng"],[36,52,36,52],[36,56,36,56,"_rng"],[36,60,36,60],[36,61,36,61,"default"],[36,68,36,68],[36,70,36,70],[36,71,36,71],[37,6,38,4],[37,10,38,8,"node"],[37,14,38,12],[37,18,38,16],[37,22,38,20],[37,24,38,22],[38,8,39,6],[39,8,40,6,"node"],[39,12,40,10],[39,15,40,13,"_nodeId"],[39,22,40,20],[39,25,40,23],[39,26,40,24,"seedBytes"],[39,35,40,33],[39,36,40,34],[39,37,40,35],[39,38,40,36],[39,41,40,39],[39,45,40,43],[39,47,40,45,"seedBytes"],[39,56,40,54],[39,57,40,55],[39,58,40,56],[39,59,40,57],[39,61,40,59,"seedBytes"],[39,70,40,68],[39,71,40,69],[39,72,40,70],[39,73,40,71],[39,75,40,73,"seedBytes"],[39,84,40,82],[39,85,40,83],[39,86,40,84],[39,87,40,85],[39,89,40,87,"seedBytes"],[39,98,40,96],[39,99,40,97],[39,100,40,98],[39,101,40,99],[39,103,40,101,"seedBytes"],[39,112,40,110],[39,113,40,111],[39,114,40,112],[39,115,40,113],[39,116,40,114],[40,6,41,4],[41,6,43,4],[41,10,43,8,"clockseq"],[41,18,43,16],[41,22,43,20],[41,26,43,24],[41,28,43,26],[42,8,44,6],[43,8,45,6,"clockseq"],[43,16,45,14],[43,19,45,17,"_clockseq"],[43,28,45,26],[43,31,45,29],[43,32,45,30,"seedBytes"],[43,41,45,39],[43,42,45,40],[43,43,45,41],[43,44,45,42],[43,48,45,46],[43,49,45,47],[43,52,45,50,"seedBytes"],[43,61,45,59],[43,62,45,60],[43,63,45,61],[43,64,45,62],[43,68,45,66],[43,74,45,72],[44,6,46,4],[45,4,47,2],[45,5,47,3],[45,6,47,4],[46,4,48,2],[47,4,49,2],[48,4,50,2],[50,4,53,2],[50,8,53,6,"msecs"],[50,13,53,11],[50,16,53,14,"options"],[50,23,53,21],[50,24,53,22,"msecs"],[50,29,53,27],[50,34,53,32,"undefined"],[50,43,53,41],[50,46,53,44,"options"],[50,53,53,51],[50,54,53,52,"msecs"],[50,59,53,57],[50,62,53,60,"Date"],[50,66,53,64],[50,67,53,65,"now"],[50,70,53,68],[50,71,53,69],[50,72,53,70],[50,73,53,71],[50,74,53,72],[51,4,54,2],[53,4,56,2],[53,8,56,6,"nsecs"],[53,13,56,11],[53,16,56,14,"options"],[53,23,56,21],[53,24,56,22,"nsecs"],[53,29,56,27],[53,34,56,32,"undefined"],[53,43,56,41],[53,46,56,44,"options"],[53,53,56,51],[53,54,56,52,"nsecs"],[53,59,56,57],[53,62,56,60,"_lastNSecs"],[53,72,56,70],[53,75,56,73],[53,76,56,74],[53,77,56,75],[53,78,56,76],[55,4,58,2],[55,8,58,8,"dt"],[55,10,58,10],[55,13,58,13,"msecs"],[55,18,58,18],[55,21,58,21,"_lastMSecs"],[55,31,58,31],[55,34,58,34],[55,35,58,35,"nsecs"],[55,40,58,40],[55,43,58,43,"_lastNSecs"],[55,53,58,53],[55,57,58,57],[55,62,58,62],[55,63,58,63],[55,64,58,64],[57,4,60,2],[57,8,60,6,"dt"],[57,10,60,8],[57,13,60,11],[57,14,60,12],[57,18,60,16,"options"],[57,25,60,23],[57,26,60,24,"clockseq"],[57,34,60,32],[57,39,60,37,"undefined"],[57,48,60,46],[57,50,60,48],[58,6,61,4,"clockseq"],[58,14,61,12],[58,17,61,15,"clockseq"],[58,25,61,23],[58,28,61,26],[58,29,61,27],[58,32,61,30],[58,38,61,36],[59,4,62,2],[59,5,62,3],[59,6,62,4],[60,4,63,2],[62,4,66,2],[62,8,66,6],[62,9,66,7,"dt"],[62,11,66,9],[62,14,66,12],[62,15,66,13],[62,19,66,17,"msecs"],[62,24,66,22],[62,27,66,25,"_lastMSecs"],[62,37,66,35],[62,42,66,40,"options"],[62,49,66,47],[62,50,66,48,"nsecs"],[62,55,66,53],[62,60,66,58,"undefined"],[62,69,66,67],[62,71,66,69],[63,6,67,4,"nsecs"],[63,11,67,9],[63,14,67,12],[63,15,67,13],[64,4,68,2],[64,5,68,3],[64,6,68,4],[66,4,71,2],[66,8,71,6,"nsecs"],[66,13,71,11],[66,17,71,15],[66,22,71,20],[66,24,71,22],[67,6,72,4],[67,12,72,10],[67,16,72,14,"Error"],[67,21,72,19],[67,22,72,20],[67,71,72,69],[67,72,72,70],[68,4,73,2],[69,4,75,2,"_lastMSecs"],[69,14,75,12],[69,17,75,15,"msecs"],[69,22,75,20],[70,4,76,2,"_lastNSecs"],[70,14,76,12],[70,17,76,15,"nsecs"],[70,22,76,20],[71,4,77,2,"_clockseq"],[71,13,77,11],[71,16,77,14,"clockseq"],[71,24,77,22],[71,25,77,23],[71,26,77,24],[73,4,79,2,"msecs"],[73,9,79,7],[73,13,79,11],[73,27,79,25],[73,28,79,26],[73,29,79,27],[75,4,81,2],[75,8,81,8,"tl"],[75,10,81,10],[75,13,81,13],[75,14,81,14],[75,15,81,15,"msecs"],[75,20,81,20],[75,23,81,23],[75,32,81,32],[75,36,81,36],[75,41,81,41],[75,44,81,44,"nsecs"],[75,49,81,49],[75,53,81,53],[75,64,81,64],[76,4,82,2,"b"],[76,5,82,3],[76,6,82,4,"i"],[76,7,82,5],[76,9,82,7],[76,10,82,8],[76,13,82,11,"tl"],[76,15,82,13],[76,20,82,18],[76,22,82,20],[76,25,82,23],[76,29,82,27],[77,4,83,2,"b"],[77,5,83,3],[77,6,83,4,"i"],[77,7,83,5],[77,9,83,7],[77,10,83,8],[77,13,83,11,"tl"],[77,15,83,13],[77,20,83,18],[77,22,83,20],[77,25,83,23],[77,29,83,27],[78,4,84,2,"b"],[78,5,84,3],[78,6,84,4,"i"],[78,7,84,5],[78,9,84,7],[78,10,84,8],[78,13,84,11,"tl"],[78,15,84,13],[78,20,84,18],[78,21,84,19],[78,24,84,22],[78,28,84,26],[79,4,85,2,"b"],[79,5,85,3],[79,6,85,4,"i"],[79,7,85,5],[79,9,85,7],[79,10,85,8],[79,13,85,11,"tl"],[79,15,85,13],[79,18,85,16],[79,22,85,20],[79,23,85,21],[79,24,85,22],[81,4,87,2],[81,8,87,8,"tmh"],[81,11,87,11],[81,14,87,14,"msecs"],[81,19,87,19],[81,22,87,22],[81,33,87,33],[81,36,87,36],[81,41,87,41],[81,44,87,44],[81,53,87,53],[82,4,88,2,"b"],[82,5,88,3],[82,6,88,4,"i"],[82,7,88,5],[82,9,88,7],[82,10,88,8],[82,13,88,11,"tmh"],[82,16,88,14],[82,21,88,19],[82,22,88,20],[82,25,88,23],[82,29,88,27],[83,4,89,2,"b"],[83,5,89,3],[83,6,89,4,"i"],[83,7,89,5],[83,9,89,7],[83,10,89,8],[83,13,89,11,"tmh"],[83,16,89,14],[83,19,89,17],[83,23,89,21],[83,24,89,22],[83,25,89,23],[85,4,91,2,"b"],[85,5,91,3],[85,6,91,4,"i"],[85,7,91,5],[85,9,91,7],[85,10,91,8],[85,13,91,11,"tmh"],[85,16,91,14],[85,21,91,19],[85,23,91,21],[85,26,91,24],[85,29,91,27],[85,32,91,30],[85,36,91,34],[85,37,91,35],[85,38,91,36],[87,4,93,2,"b"],[87,5,93,3],[87,6,93,4,"i"],[87,7,93,5],[87,9,93,7],[87,10,93,8],[87,13,93,11,"tmh"],[87,16,93,14],[87,21,93,19],[87,23,93,21],[87,26,93,24],[87,30,93,28],[87,31,93,29],[87,32,93,30],[89,4,95,2,"b"],[89,5,95,3],[89,6,95,4,"i"],[89,7,95,5],[89,9,95,7],[89,10,95,8],[89,13,95,11,"clockseq"],[89,21,95,19],[89,26,95,24],[89,27,95,25],[89,30,95,28],[89,34,95,32],[89,35,95,33],[89,36,95,34],[91,4,97,2,"b"],[91,5,97,3],[91,6,97,4,"i"],[91,7,97,5],[91,9,97,7],[91,10,97,8],[91,13,97,11,"clockseq"],[91,21,97,19],[91,24,97,22],[91,28,97,26],[91,29,97,27],[91,30,97,28],[93,4,99,2],[93,9,99,7],[93,13,99,11,"n"],[93,14,99,12],[93,17,99,15],[93,18,99,16],[93,20,99,18,"n"],[93,21,99,19],[93,24,99,22],[93,25,99,23],[93,27,99,25],[93,29,99,27,"n"],[93,30,99,28],[93,32,99,30],[94,6,100,4,"b"],[94,7,100,5],[94,8,100,6,"i"],[94,9,100,7],[94,12,100,10,"n"],[94,13,100,11],[94,14,100,12],[94,17,100,15,"node"],[94,21,100,19],[94,22,100,20,"n"],[94,23,100,21],[94,24,100,22],[95,4,101,2],[96,4,103,2],[96,11,103,9,"buf"],[96,14,103,12],[96,18,103,16],[96,19,103,17],[96,20,103,18],[96,22,103,20,"_stringify"],[96,32,103,30],[96,33,103,31,"unsafeStringify"],[96,48,103,46],[96,50,103,48,"b"],[96,51,103,49],[96,52,103,50],[97,2,104,0],[98,2,106,0],[98,6,106,4,"_default"],[98,14,106,12],[98,17,106,15,"v1"],[98,19,106,17],[99,2,107,0,"exports"],[99,9,107,7],[99,10,107,8,"default"],[99,17,107,15],[99,20,107,18,"_default"],[99,28,107,26],[100,0,107,27],[100,3]],"functionMap":{"names":["<global>","_interopRequireDefault","v1"],"mappings":"AAA;ACW,+FD;AEc;CF8E"}},"type":"js/module"}]}