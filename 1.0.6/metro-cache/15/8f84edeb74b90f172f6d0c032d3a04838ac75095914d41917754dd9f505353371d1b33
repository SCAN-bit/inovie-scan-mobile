{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":501,"column":48,"index":21258}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":501,"column":48,"index":21258}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":501,"column":48,"index":21258}}],"key":"l9ek7s8G7hY7pJY4P1vxwsk0NPM="}},{"name":"@react-navigation/routers","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":58,"index":73}}],"key":"vzJhU8p+EXFUpX28ANa6h4NbBWk="}},{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":74},"end":{"line":4,"column":31,"index":105}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react-is","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":0,"index":106},"end":{"line":5,"column":46,"index":152}}],"key":"Kh8377WtECxkHj9j3Lmfo9R8et4="}},{"name":"use-latest-callback","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":0,"index":153},"end":{"line":6,"column":52,"index":205}}],"key":"Y37UDlHqFWGsIoaqIV2lsupH1AM="}},{"name":"./deepFreeze.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":0,"index":206},"end":{"line":7,"column":45,"index":251}}],"key":"gUWwtN3cGtPFA39/AfK87dLMoDw="}},{"name":"./Group.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":8,"column":0,"index":252},"end":{"line":8,"column":35,"index":287}}],"key":"MJzpBsNh6Xmuq5gZYt5R0gjFCC0="}},{"name":"./isArrayEqual.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":9,"column":0,"index":288},"end":{"line":9,"column":49,"index":337}}],"key":"Vb50P4WVkAnizz+ENIDrg6CJX4g="}},{"name":"./isRecordEqual.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":10,"column":0,"index":338},"end":{"line":10,"column":51,"index":389}}],"key":"r92Pd29+9uUvlHu+K/XAzxqzFrQ="}},{"name":"./NavigationHelpersContext.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":11,"column":0,"index":390},"end":{"line":11,"column":73,"index":463}}],"key":"fvb0BcCeN3mgZOO7XIAQIk1mles="}},{"name":"./NavigationRouteContext.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":12,"column":0,"index":464},"end":{"line":12,"column":69,"index":533}}],"key":"jk0qVIUl5f0mZv0RFSM44Eb40Bo="}},{"name":"./NavigationStateContext.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":0,"index":534},"end":{"line":13,"column":69,"index":603}}],"key":"s3tKImF4x81CxrhRnhZSIjHl48M="}},{"name":"./PreventRemoveProvider.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":14,"column":0,"index":604},"end":{"line":14,"column":67,"index":671}}],"key":"45SPQoFjK3sUjTZFqk2Y4agFvFk="}},{"name":"./Screen.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":15,"column":0,"index":672},"end":{"line":15,"column":37,"index":709}}],"key":"4AmuaFUSUGP0K1dvEZyRNAwexKU="}},{"name":"./types.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":16,"column":0,"index":710},"end":{"line":16,"column":47,"index":757}}],"key":"60uxQGokIVE04vR1RPOTA2bTDdM="}},{"name":"./useChildListeners.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":17,"column":0,"index":758},"end":{"line":17,"column":59,"index":817}}],"key":"FO+VwKTKNPUgOVmAfSG+UGPnET0="}},{"name":"./useComponent.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":18,"column":0,"index":818},"end":{"line":18,"column":49,"index":867}}],"key":"Y5xAZFHu0jypGToZbfmlrWy1SgE="}},{"name":"./useCurrentRender.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":19,"column":0,"index":868},"end":{"line":19,"column":57,"index":925}}],"key":"tzY2bQtMnt7XLhuL/OlR4pmmhZc="}},{"name":"./useDescriptors.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":20,"column":0,"index":926},"end":{"line":20,"column":53,"index":979}}],"key":"HhfvEZqKuY9HOwhIIOTEjGttH8Y="}},{"name":"./useEventEmitter.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":21,"column":0,"index":980},"end":{"line":21,"column":55,"index":1035}}],"key":"BYS1cAgkQBqwT1M7oWxnCjlR/wY="}},{"name":"./useFocusedListenersChildrenAdapter.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":22,"column":0,"index":1036},"end":{"line":22,"column":93,"index":1129}}],"key":"weYmoyL/DEblcXDY3zs7Q5CbgHE="}},{"name":"./useFocusEvents.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":23,"column":0,"index":1130},"end":{"line":23,"column":53,"index":1183}}],"key":"5Oyhm1kG2EgqR0gx2Pklgk5oawE="}},{"name":"./useIsomorphicLayoutEffect","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":24,"column":0,"index":1184},"end":{"line":24,"column":72,"index":1256}}],"key":"W03y7JxvNp1uZoBb1c7L4Qdz13U="}},{"name":"./useKeyedChildListeners.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":25,"column":0,"index":1257},"end":{"line":25,"column":69,"index":1326}}],"key":"Utbfur1yyRTHmnJD8IptXCXqfxA="}},{"name":"./useLazyValue.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":26,"column":0,"index":1327},"end":{"line":26,"column":49,"index":1376}}],"key":"Ke63sDSZ+3As+jICPBrawHNhIeA="}},{"name":"./useNavigationHelpers.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":27,"column":0,"index":1377},"end":{"line":27,"column":65,"index":1442}}],"key":"6Rst5U3d9V6eo+ZGxpcNX0Xdx2M="}},{"name":"./useOnAction.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":28,"column":0,"index":1443},"end":{"line":28,"column":47,"index":1490}}],"key":"L5EcEtqvsTSR0oSKNg1D3Svf9ok="}},{"name":"./useOnGetState.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":29,"column":0,"index":1491},"end":{"line":29,"column":51,"index":1542}}],"key":"22cB4vxphxCAhpwncmrKt+jDClM="}},{"name":"./useOnRouteFocus.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":30,"column":0,"index":1543},"end":{"line":30,"column":55,"index":1598}}],"key":"eHoDHZjOg6CrFEKf6JDIwwFuGY0="}},{"name":"./useRegisterNavigator.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":31,"column":0,"index":1599},"end":{"line":31,"column":65,"index":1664}}],"key":"KvruacEZ7pRoYaD+bHWqoQIxwuo="}},{"name":"./useScheduleUpdate.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":32,"column":0,"index":1665},"end":{"line":32,"column":59,"index":1724}}],"key":"loWFvvlxo4F+3fT6U1iOJcrLX8M="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":36,"column":0,"index":1840},"end":{"line":36,"column":48,"index":1888}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useNavigationBuilder = useNavigationBuilder;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _objectWithoutProperties2 = _interopRequireDefault(require(_dependencyMap[2]));\n  var _routers = require(_dependencyMap[3]);\n  var React = _interopRequireWildcard(require(_dependencyMap[4]));\n  var _reactIs = require(_dependencyMap[5]);\n  var _useLatestCallback = _interopRequireDefault(require(_dependencyMap[6]));\n  var _deepFreeze = require(_dependencyMap[7]);\n  var _Group = require(_dependencyMap[8]);\n  var _isArrayEqual = require(_dependencyMap[9]);\n  var _isRecordEqual = require(_dependencyMap[10]);\n  var _NavigationHelpersContext = require(_dependencyMap[11]);\n  var _NavigationRouteContext = require(_dependencyMap[12]);\n  var _NavigationStateContext = require(_dependencyMap[13]);\n  var _PreventRemoveProvider = require(_dependencyMap[14]);\n  var _Screen = require(_dependencyMap[15]);\n  var _types = require(_dependencyMap[16]);\n  var _useChildListeners2 = require(_dependencyMap[17]);\n  var _useComponent = require(_dependencyMap[18]);\n  var _useCurrentRender = require(_dependencyMap[19]);\n  var _useDescriptors2 = require(_dependencyMap[20]);\n  var _useEventEmitter = require(_dependencyMap[21]);\n  var _useFocusedListenersChildrenAdapter = require(_dependencyMap[22]);\n  var _useFocusEvents = require(_dependencyMap[23]);\n  var _useIsomorphicLayoutEffect = require(_dependencyMap[24]);\n  var _useKeyedChildListeners = require(_dependencyMap[25]);\n  var _useLazyValue = require(_dependencyMap[26]);\n  var _useNavigationHelpers = require(_dependencyMap[27]);\n  var _useOnAction = require(_dependencyMap[28]);\n  var _useOnGetState = require(_dependencyMap[29]);\n  var _useOnRouteFocus = require(_dependencyMap[30]);\n  var _useRegisterNavigator = require(_dependencyMap[31]);\n  var _useScheduleUpdate = require(_dependencyMap[32]);\n  var _jsxRuntime = require(_dependencyMap[33]);\n  var _excluded = [\"children\", \"layout\", \"screenOptions\", \"screenLayout\", \"screenListeners\", \"UNSTABLE_router\"]; // This is to make TypeScript compiler happy\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  _types.PrivateValueStore;\n  var isScreen = child => {\n    return child.type === _Screen.Screen;\n  };\n  var isGroup = child => {\n    return child.type === React.Fragment || child.type === _Group.Group;\n  };\n  var isValidKey = key => key === undefined || typeof key === 'string' && key !== '';\n\n  /**\n   * Extract route config object from React children elements.\n   *\n   * @param children React Elements to extract the config from.\n   */\n  var getRouteConfigsFromChildren = (children, groupKey, groupOptions, groupLayout) => {\n    var configs = React.Children.toArray(children).reduce((acc, child) => {\n      if (/*#__PURE__*/React.isValidElement(child)) {\n        if (isScreen(child)) {\n          // We can only extract the config from `Screen` elements\n          // If something else was rendered, it's probably a bug\n\n          if (typeof child.props !== 'object' || child.props === null) {\n            throw new Error(`Got an invalid element for screen.`);\n          }\n          if (typeof child.props.name !== 'string' || child.props.name === '') {\n            throw new Error(`Got an invalid name (${JSON.stringify(child.props.name)}) for the screen. It must be a non-empty string.`);\n          }\n          if (child.props.navigationKey !== undefined && (typeof child.props.navigationKey !== 'string' || child.props.navigationKey === '')) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the screen '${child.props.name}'. It must be a non-empty string or 'undefined'.`);\n          }\n          acc.push({\n            keys: [groupKey, child.props.navigationKey],\n            options: groupOptions,\n            layout: groupLayout,\n            props: child.props\n          });\n          return acc;\n        }\n        if (isGroup(child)) {\n          if (!isValidKey(child.props.navigationKey)) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the group. It must be a non-empty string or 'undefined'.`);\n          }\n\n          // When we encounter a fragment or group, we need to dive into its children to extract the configs\n          // This is handy to conditionally define a group of screens\n          acc.push(...getRouteConfigsFromChildren(child.props.children, child.props.navigationKey,\n          // FIXME\n          // @ts-expect-error: add validation\n          child.type !== _Group.Group ? groupOptions : groupOptions != null ? [...groupOptions, child.props.screenOptions] : [child.props.screenOptions], typeof child.props.screenLayout === 'function' ? child.props.screenLayout : groupLayout));\n          return acc;\n        }\n      }\n      throw new Error(`A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found ${/*#__PURE__*/ /*#__PURE__*/React.isValidElement(child) ? `'${typeof child.type === 'string' ? child.type : child.type?.name}'${child.props != null && typeof child.props === 'object' && 'name' in child.props && child.props?.name ? ` for the screen '${child.props.name}'` : ''}` : typeof child === 'object' ? JSON.stringify(child) : `'${String(child)}'`}). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`);\n    }, []);\n    return configs;\n  };\n\n  /**\n   * Hook for building navigators.\n   *\n   * @param createRouter Factory method which returns router object.\n   * @param options Options object containing `children` and additional options for the router.\n   * @returns An object containing `state`, `navigation`, `descriptors` objects.\n   */\n  function useNavigationBuilder(createRouter, options) {\n    var navigatorKey = (0, _useRegisterNavigator.useRegisterNavigator)();\n    var route = React.useContext(_NavigationRouteContext.NavigationRouteContext);\n    var children = options.children,\n      layout = options.layout,\n      screenOptions = options.screenOptions,\n      screenLayout = options.screenLayout,\n      screenListeners = options.screenListeners,\n      UNSTABLE_router = options.UNSTABLE_router,\n      rest = (0, _objectWithoutProperties2.default)(options, _excluded);\n    var routeConfigs = getRouteConfigsFromChildren(children);\n    var router = (0, _useLazyValue.useLazyValue)(() => {\n      if (rest.initialRouteName != null && routeConfigs.every(config => config.props.name !== rest.initialRouteName)) {\n        throw new Error(`Couldn't find a screen named '${rest.initialRouteName}' to use as 'initialRouteName'.`);\n      }\n      var original = createRouter(rest);\n      if (UNSTABLE_router != null) {\n        var overrides = UNSTABLE_router(original);\n        return {\n          ...original,\n          ...overrides\n        };\n      }\n      return original;\n    });\n    var screens = routeConfigs.reduce((acc, config) => {\n      if (config.props.name in acc) {\n        throw new Error(`A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.props.name}')`);\n      }\n      acc[config.props.name] = config;\n      return acc;\n    }, {});\n    var routeNames = routeConfigs.map(config => config.props.name);\n    var routeKeyList = routeNames.reduce((acc, curr) => {\n      acc[curr] = screens[curr].keys.map(key => key ?? '').join(':');\n      return acc;\n    }, {});\n    var routeParamList = routeNames.reduce((acc, curr) => {\n      var initialParams = screens[curr].props.initialParams;\n      acc[curr] = initialParams;\n      return acc;\n    }, {});\n    var routeGetIdList = routeNames.reduce((acc, curr) => Object.assign(acc, {\n      [curr]: screens[curr].props.getId\n    }), {});\n    if (!routeNames.length) {\n      throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");\n    }\n    var isStateValid = React.useCallback(state => state.type === undefined || state.type === router.type, [router.type]);\n    var isStateInitialized = React.useCallback(state => state !== undefined && state.stale === false && isStateValid(state), [isStateValid]);\n    var _React$useContext = React.useContext(_NavigationStateContext.NavigationStateContext),\n      currentState = _React$useContext.state,\n      getCurrentState = _React$useContext.getState,\n      setCurrentState = _React$useContext.setState,\n      setKey = _React$useContext.setKey,\n      getKey = _React$useContext.getKey,\n      getIsInitial = _React$useContext.getIsInitial;\n    var stateCleanedUp = React.useRef(false);\n    var setState = (0, _useLatestCallback.default)(state => {\n      if (stateCleanedUp.current) {\n        // State might have been already cleaned up due to unmount\n        // We do not want to expose API allowing to override this\n        // This would lead to old data preservation on main navigator unmount\n        return;\n      }\n      setCurrentState(state);\n    });\n    var _React$useMemo = React.useMemo(() => {\n        var initialRouteParamList = routeNames.reduce((acc, curr) => {\n          var initialParams = screens[curr].props.initialParams;\n          var initialParamsFromParams = route?.params?.state == null && route?.params?.initial !== false && route?.params?.screen === curr ? route.params.params : undefined;\n          acc[curr] = initialParams !== undefined || initialParamsFromParams !== undefined ? {\n            ...initialParams,\n            ...initialParamsFromParams\n          } : undefined;\n          return acc;\n        }, {});\n\n        // If the current state isn't initialized on first render, we initialize it\n        // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n        // Otherwise assume that the state was provided as initial state\n        // So we need to rehydrate it to make it usable\n        if ((currentState === undefined || !isStateValid(currentState)) && route?.params?.state == null && !(typeof route?.params?.screen === 'string' && route?.params?.initial !== false)) {\n          return [router.getInitialState({\n            routeNames,\n            routeParamList: initialRouteParamList,\n            routeGetIdList\n          }), true];\n        } else {\n          var stateFromParams;\n          if (route?.params?.state != null) {\n            stateFromParams = route.params.state;\n          } else if (typeof route?.params?.screen === 'string' && route?.params?.initial !== false) {\n            stateFromParams = {\n              index: 0,\n              routes: [{\n                name: route.params.screen,\n                params: route.params.params,\n                path: route.params.path\n              }]\n            };\n          }\n          return [router.getRehydratedState(stateFromParams ?? currentState, {\n            routeNames,\n            routeParamList: initialRouteParamList,\n            routeGetIdList\n          }), false];\n        }\n        // We explicitly don't include routeNames, route.params etc. in the dep list\n        // below. We want to avoid forcing a new state to be calculated in those cases\n        // Instead, we handle changes to these in the nextState code below. Note\n        // that some changes to routeConfigs are explicitly ignored, such as changes\n        // to initialParams\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [currentState, router, isStateValid]),\n      _React$useMemo2 = (0, _slicedToArray2.default)(_React$useMemo, 2),\n      initializedState = _React$useMemo2[0],\n      isFirstStateInitialization = _React$useMemo2[1];\n    var previousRouteKeyListRef = React.useRef(routeKeyList);\n    React.useEffect(() => {\n      previousRouteKeyListRef.current = routeKeyList;\n    });\n    var previousRouteKeyList = previousRouteKeyListRef.current;\n    var state =\n    // If the state isn't initialized, or stale, use the state we initialized instead\n    // The state won't update until there's a change needed in the state we have initialized locally\n    // So it'll be `undefined` or stale until the first navigation event happens\n    isStateInitialized(currentState) ? currentState : initializedState;\n    var nextState = state;\n    if (!(0, _isArrayEqual.isArrayEqual)(state.routeNames, routeNames) || !(0, _isRecordEqual.isRecordEqual)(routeKeyList, previousRouteKeyList)) {\n      // When the list of route names change, the router should handle it to remove invalid routes\n      nextState = router.getStateForRouteNamesChange(state, {\n        routeNames,\n        routeParamList,\n        routeGetIdList,\n        routeKeyChanges: Object.keys(routeKeyList).filter(name => name in previousRouteKeyList && routeKeyList[name] !== previousRouteKeyList[name])\n      });\n    }\n    var previousNestedParamsRef = React.useRef(route?.params);\n    React.useEffect(() => {\n      previousNestedParamsRef.current = route?.params;\n    }, [route?.params]);\n    if (route?.params) {\n      var previousParams = previousNestedParamsRef.current;\n      var action;\n      if (typeof route.params.state === 'object' && route.params.state != null && route.params !== previousParams) {\n        // If the route was updated with new state, we should reset to it\n        action = _routers.CommonActions.reset(route.params.state);\n      } else if (typeof route.params.screen === 'string' && (route.params.initial === false && isFirstStateInitialization || route.params !== previousParams)) {\n        // If the route was updated with new screen name and/or params, we should navigate there\n        action = _routers.CommonActions.navigate({\n          name: route.params.screen,\n          params: route.params.params,\n          path: route.params.path,\n          pop: route.params.pop\n        });\n      }\n\n      // The update should be limited to current navigator only, so we call the router manually\n      var updatedState = action ? router.getStateForAction(nextState, action, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : null;\n      nextState = updatedState !== null ? router.getRehydratedState(updatedState, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : nextState;\n    }\n    var shouldUpdate = state !== nextState;\n    (0, _useScheduleUpdate.useScheduleUpdate)(() => {\n      if (shouldUpdate) {\n        // If the state needs to be updated, we'll schedule an update\n        setState(nextState);\n      }\n    });\n\n    // The up-to-date state will come in next render, but we don't need to wait for it\n    // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n    // So we override the state object we return to use the latest state as soon as possible\n    state = nextState;\n    React.useEffect(() => {\n      // In strict mode, React will double-invoke effects.\n      // So we need to reset the flag if component was not unmounted\n      stateCleanedUp.current = false;\n      setKey(navigatorKey);\n      if (!getIsInitial()) {\n        // If it's not initial render, we need to update the state\n        // This will make sure that our container gets notifier of state changes due to new mounts\n        // This is necessary for proper screen tracking, URL updates etc.\n        setState(nextState);\n      }\n      return () => {\n        // We need to clean up state for this navigator on unmount\n        if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n          setCurrentState(undefined);\n          stateCleanedUp.current = true;\n        }\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // In some cases (e.g. route names change), internal state might have changed\n    // But it hasn't been committed yet, so hasn't propagated to the sync external store\n    // During this time, we need to return the internal state in `getState`\n    // Otherwise it can result in inconsistent state during render in children\n    // To avoid this, we use a ref for render phase, and immediately clear it on commit\n    var stateRef = React.useRef(state);\n    stateRef.current = state;\n    (0, _useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(() => {\n      stateRef.current = null;\n    });\n    var getState = (0, _useLatestCallback.default)(() => {\n      var currentState = getCurrentState();\n      return (0, _deepFreeze.deepFreeze)(isStateInitialized(currentState) ? currentState : initializedState);\n    });\n    var emitter = (0, _useEventEmitter.useEventEmitter)(e => {\n      var routeNames = [];\n      var route;\n      if (e.target) {\n        route = state.routes.find(route => route.key === e.target);\n        if (route?.name) {\n          routeNames.push(route.name);\n        }\n      } else {\n        route = state.routes[state.index];\n        routeNames.push(...Object.keys(screens).filter(name => route?.name === name));\n      }\n      if (route == null) {\n        return;\n      }\n      var navigation = descriptors[route.key].navigation;\n      var listeners = [].concat(\n      // Get an array of listeners for all screens + common listeners on navigator\n      ...[screenListeners, ...routeNames.map(name => {\n        var listeners = screens[name].props.listeners;\n        return listeners;\n      })].map(listeners => {\n        var map = typeof listeners === 'function' ? listeners({\n          route: route,\n          navigation\n        }) : listeners;\n        return map ? Object.keys(map).filter(type => type === e.type).map(type => map?.[type]) : undefined;\n      }))\n      // We don't want same listener to be called multiple times for same event\n      // So we remove any duplicate functions from the array\n      .filter((cb, i, self) => cb && self.lastIndexOf(cb) === i);\n      listeners.forEach(listener => listener?.(e));\n    });\n    (0, _useFocusEvents.useFocusEvents)({\n      state,\n      emitter\n    });\n    React.useEffect(() => {\n      emitter.emit({\n        type: 'state',\n        data: {\n          state\n        }\n      });\n    }, [emitter, state]);\n    var _useChildListeners = (0, _useChildListeners2.useChildListeners)(),\n      childListeners = _useChildListeners.listeners,\n      addListener = _useChildListeners.addListener;\n    var _useKeyedChildListene = (0, _useKeyedChildListeners.useKeyedChildListeners)(),\n      keyedListeners = _useKeyedChildListene.keyedListeners,\n      addKeyedListener = _useKeyedChildListene.addKeyedListener;\n    var onAction = (0, _useOnAction.useOnAction)({\n      router,\n      getState,\n      setState,\n      key: route?.key,\n      actionListeners: childListeners.action,\n      beforeRemoveListeners: keyedListeners.beforeRemove,\n      routerConfigOptions: {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      },\n      emitter\n    });\n    var onRouteFocus = (0, _useOnRouteFocus.useOnRouteFocus)({\n      router,\n      key: route?.key,\n      getState,\n      setState\n    });\n    var navigation = (0, _useNavigationHelpers.useNavigationHelpers)({\n      id: options.id,\n      onAction,\n      getState,\n      emitter,\n      router,\n      stateRef\n    });\n    (0, _useFocusedListenersChildrenAdapter.useFocusedListenersChildrenAdapter)({\n      navigation,\n      focusedListeners: childListeners.focus\n    });\n    (0, _useOnGetState.useOnGetState)({\n      getState,\n      getStateListeners: keyedListeners.getState\n    });\n    var _useDescriptors = (0, _useDescriptors2.useDescriptors)({\n        state,\n        screens,\n        navigation,\n        screenOptions,\n        screenLayout,\n        onAction,\n        getState,\n        setState,\n        onRouteFocus,\n        addListener,\n        addKeyedListener,\n        router,\n        // @ts-expect-error: this should have both core and custom events, but too much work right now\n        emitter\n      }),\n      describe = _useDescriptors.describe,\n      descriptors = _useDescriptors.descriptors;\n    (0, _useCurrentRender.useCurrentRender)({\n      state,\n      navigation,\n      descriptors\n    });\n    var NavigationContent = (0, _useComponent.useComponent)(children => {\n      var element = layout != null ? layout({\n        state,\n        descriptors,\n        navigation,\n        children\n      }) : children;\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_NavigationHelpersContext.NavigationHelpersContext.Provider, {\n        value: navigation,\n        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_PreventRemoveProvider.PreventRemoveProvider, {\n          children: element\n        })\n      });\n    });\n    return {\n      state,\n      navigation,\n      describe,\n      descriptors,\n      NavigationContent\n    };\n  }\n});","lineCount":458,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"useNavigationBuilder"],[8,30,1,13],[8,33,1,13,"useNavigationBuilder"],[8,53,1,13],[9,2,1,13],[9,6,1,13,"_slicedToArray2"],[9,21,1,13],[9,24,1,13,"_interopRequireDefault"],[9,46,1,13],[9,47,1,13,"require"],[9,54,1,13],[9,55,1,13,"_dependencyMap"],[9,69,1,13],[10,2,1,13],[10,6,1,13,"_objectWithoutProperties2"],[10,31,1,13],[10,34,1,13,"_interopRequireDefault"],[10,56,1,13],[10,57,1,13,"require"],[10,64,1,13],[10,65,1,13,"_dependencyMap"],[10,79,1,13],[11,2,3,0],[11,6,3,0,"_routers"],[11,14,3,0],[11,17,3,0,"require"],[11,24,3,0],[11,25,3,0,"_dependencyMap"],[11,39,3,0],[12,2,4,0],[12,6,4,0,"React"],[12,11,4,0],[12,14,4,0,"_interopRequireWildcard"],[12,37,4,0],[12,38,4,0,"require"],[12,45,4,0],[12,46,4,0,"_dependencyMap"],[12,60,4,0],[13,2,5,0],[13,6,5,0,"_reactIs"],[13,14,5,0],[13,17,5,0,"require"],[13,24,5,0],[13,25,5,0,"_dependencyMap"],[13,39,5,0],[14,2,6,0],[14,6,6,0,"_useLatestCallback"],[14,24,6,0],[14,27,6,0,"_interopRequireDefault"],[14,49,6,0],[14,50,6,0,"require"],[14,57,6,0],[14,58,6,0,"_dependencyMap"],[14,72,6,0],[15,2,7,0],[15,6,7,0,"_deepFreeze"],[15,17,7,0],[15,20,7,0,"require"],[15,27,7,0],[15,28,7,0,"_dependencyMap"],[15,42,7,0],[16,2,8,0],[16,6,8,0,"_Group"],[16,12,8,0],[16,15,8,0,"require"],[16,22,8,0],[16,23,8,0,"_dependencyMap"],[16,37,8,0],[17,2,9,0],[17,6,9,0,"_isArrayEqual"],[17,19,9,0],[17,22,9,0,"require"],[17,29,9,0],[17,30,9,0,"_dependencyMap"],[17,44,9,0],[18,2,10,0],[18,6,10,0,"_isRecordEqual"],[18,20,10,0],[18,23,10,0,"require"],[18,30,10,0],[18,31,10,0,"_dependencyMap"],[18,45,10,0],[19,2,11,0],[19,6,11,0,"_NavigationHelpersContext"],[19,31,11,0],[19,34,11,0,"require"],[19,41,11,0],[19,42,11,0,"_dependencyMap"],[19,56,11,0],[20,2,12,0],[20,6,12,0,"_NavigationRouteContext"],[20,29,12,0],[20,32,12,0,"require"],[20,39,12,0],[20,40,12,0,"_dependencyMap"],[20,54,12,0],[21,2,13,0],[21,6,13,0,"_NavigationStateContext"],[21,29,13,0],[21,32,13,0,"require"],[21,39,13,0],[21,40,13,0,"_dependencyMap"],[21,54,13,0],[22,2,14,0],[22,6,14,0,"_PreventRemoveProvider"],[22,28,14,0],[22,31,14,0,"require"],[22,38,14,0],[22,39,14,0,"_dependencyMap"],[22,53,14,0],[23,2,15,0],[23,6,15,0,"_Screen"],[23,13,15,0],[23,16,15,0,"require"],[23,23,15,0],[23,24,15,0,"_dependencyMap"],[23,38,15,0],[24,2,16,0],[24,6,16,0,"_types"],[24,12,16,0],[24,15,16,0,"require"],[24,22,16,0],[24,23,16,0,"_dependencyMap"],[24,37,16,0],[25,2,17,0],[25,6,17,0,"_useChildListeners2"],[25,25,17,0],[25,28,17,0,"require"],[25,35,17,0],[25,36,17,0,"_dependencyMap"],[25,50,17,0],[26,2,18,0],[26,6,18,0,"_useComponent"],[26,19,18,0],[26,22,18,0,"require"],[26,29,18,0],[26,30,18,0,"_dependencyMap"],[26,44,18,0],[27,2,19,0],[27,6,19,0,"_useCurrentRender"],[27,23,19,0],[27,26,19,0,"require"],[27,33,19,0],[27,34,19,0,"_dependencyMap"],[27,48,19,0],[28,2,20,0],[28,6,20,0,"_useDescriptors2"],[28,22,20,0],[28,25,20,0,"require"],[28,32,20,0],[28,33,20,0,"_dependencyMap"],[28,47,20,0],[29,2,21,0],[29,6,21,0,"_useEventEmitter"],[29,22,21,0],[29,25,21,0,"require"],[29,32,21,0],[29,33,21,0,"_dependencyMap"],[29,47,21,0],[30,2,22,0],[30,6,22,0,"_useFocusedListenersChildrenAdapter"],[30,41,22,0],[30,44,22,0,"require"],[30,51,22,0],[30,52,22,0,"_dependencyMap"],[30,66,22,0],[31,2,23,0],[31,6,23,0,"_useFocusEvents"],[31,21,23,0],[31,24,23,0,"require"],[31,31,23,0],[31,32,23,0,"_dependencyMap"],[31,46,23,0],[32,2,24,0],[32,6,24,0,"_useIsomorphicLayoutEffect"],[32,32,24,0],[32,35,24,0,"require"],[32,42,24,0],[32,43,24,0,"_dependencyMap"],[32,57,24,0],[33,2,25,0],[33,6,25,0,"_useKeyedChildListeners"],[33,29,25,0],[33,32,25,0,"require"],[33,39,25,0],[33,40,25,0,"_dependencyMap"],[33,54,25,0],[34,2,26,0],[34,6,26,0,"_useLazyValue"],[34,19,26,0],[34,22,26,0,"require"],[34,29,26,0],[34,30,26,0,"_dependencyMap"],[34,44,26,0],[35,2,27,0],[35,6,27,0,"_useNavigationHelpers"],[35,27,27,0],[35,30,27,0,"require"],[35,37,27,0],[35,38,27,0,"_dependencyMap"],[35,52,27,0],[36,2,28,0],[36,6,28,0,"_useOnAction"],[36,18,28,0],[36,21,28,0,"require"],[36,28,28,0],[36,29,28,0,"_dependencyMap"],[36,43,28,0],[37,2,29,0],[37,6,29,0,"_useOnGetState"],[37,20,29,0],[37,23,29,0,"require"],[37,30,29,0],[37,31,29,0,"_dependencyMap"],[37,45,29,0],[38,2,30,0],[38,6,30,0,"_useOnRouteFocus"],[38,22,30,0],[38,25,30,0,"require"],[38,32,30,0],[38,33,30,0,"_dependencyMap"],[38,47,30,0],[39,2,31,0],[39,6,31,0,"_useRegisterNavigator"],[39,27,31,0],[39,30,31,0,"require"],[39,37,31,0],[39,38,31,0,"_dependencyMap"],[39,52,31,0],[40,2,32,0],[40,6,32,0,"_useScheduleUpdate"],[40,24,32,0],[40,27,32,0,"require"],[40,34,32,0],[40,35,32,0,"_dependencyMap"],[40,49,32,0],[41,2,36,0],[41,6,36,0,"_jsxRuntime"],[41,17,36,0],[41,20,36,0,"require"],[41,27,36,0],[41,28,36,0,"_dependencyMap"],[41,42,36,0],[42,2,36,48],[42,6,36,48,"_excluded"],[42,15,36,48],[42,113,34,0],[43,2,35,0],[44,2,35,0],[44,11,35,0,"_interopRequireWildcard"],[44,35,35,0,"e"],[44,36,35,0],[44,38,35,0,"t"],[44,39,35,0],[44,68,35,0,"WeakMap"],[44,75,35,0],[44,81,35,0,"r"],[44,82,35,0],[44,89,35,0,"WeakMap"],[44,96,35,0],[44,100,35,0,"n"],[44,101,35,0],[44,108,35,0,"WeakMap"],[44,115,35,0],[44,127,35,0,"_interopRequireWildcard"],[44,150,35,0],[44,162,35,0,"_interopRequireWildcard"],[44,163,35,0,"e"],[44,164,35,0],[44,166,35,0,"t"],[44,167,35,0],[44,176,35,0,"t"],[44,177,35,0],[44,181,35,0,"e"],[44,182,35,0],[44,186,35,0,"e"],[44,187,35,0],[44,188,35,0,"__esModule"],[44,198,35,0],[44,207,35,0,"e"],[44,208,35,0],[44,214,35,0,"o"],[44,215,35,0],[44,217,35,0,"i"],[44,218,35,0],[44,220,35,0,"f"],[44,221,35,0],[44,226,35,0,"__proto__"],[44,235,35,0],[44,243,35,0,"default"],[44,250,35,0],[44,252,35,0,"e"],[44,253,35,0],[44,270,35,0,"e"],[44,271,35,0],[44,294,35,0,"e"],[44,295,35,0],[44,320,35,0,"e"],[44,321,35,0],[44,330,35,0,"f"],[44,331,35,0],[44,337,35,0,"o"],[44,338,35,0],[44,341,35,0,"t"],[44,342,35,0],[44,345,35,0,"n"],[44,346,35,0],[44,349,35,0,"r"],[44,350,35,0],[44,358,35,0,"o"],[44,359,35,0],[44,360,35,0,"has"],[44,363,35,0],[44,364,35,0,"e"],[44,365,35,0],[44,375,35,0,"o"],[44,376,35,0],[44,377,35,0,"get"],[44,380,35,0],[44,381,35,0,"e"],[44,382,35,0],[44,385,35,0,"o"],[44,386,35,0],[44,387,35,0,"set"],[44,390,35,0],[44,391,35,0,"e"],[44,392,35,0],[44,394,35,0,"f"],[44,395,35,0],[44,409,35,0,"_t"],[44,411,35,0],[44,415,35,0,"e"],[44,416,35,0],[44,432,35,0,"_t"],[44,434,35,0],[44,441,35,0,"hasOwnProperty"],[44,455,35,0],[44,456,35,0,"call"],[44,460,35,0],[44,461,35,0,"e"],[44,462,35,0],[44,464,35,0,"_t"],[44,466,35,0],[44,473,35,0,"i"],[44,474,35,0],[44,478,35,0,"o"],[44,479,35,0],[44,482,35,0,"Object"],[44,488,35,0],[44,489,35,0,"defineProperty"],[44,503,35,0],[44,508,35,0,"Object"],[44,514,35,0],[44,515,35,0,"getOwnPropertyDescriptor"],[44,539,35,0],[44,540,35,0,"e"],[44,541,35,0],[44,543,35,0,"_t"],[44,545,35,0],[44,552,35,0,"i"],[44,553,35,0],[44,554,35,0,"get"],[44,557,35,0],[44,561,35,0,"i"],[44,562,35,0],[44,563,35,0,"set"],[44,566,35,0],[44,570,35,0,"o"],[44,571,35,0],[44,572,35,0,"f"],[44,573,35,0],[44,575,35,0,"_t"],[44,577,35,0],[44,579,35,0,"i"],[44,580,35,0],[44,584,35,0,"f"],[44,585,35,0],[44,586,35,0,"_t"],[44,588,35,0],[44,592,35,0,"e"],[44,593,35,0],[44,594,35,0,"_t"],[44,596,35,0],[44,607,35,0,"f"],[44,608,35,0],[44,613,35,0,"e"],[44,614,35,0],[44,616,35,0,"t"],[44,617,35,0],[45,2,37,0,"PrivateValueStore"],[45,26,37,17],[46,2,38,0],[46,6,38,6,"isScreen"],[46,14,38,14],[46,17,38,17,"child"],[46,22,38,22],[46,26,38,26],[47,4,39,2],[47,11,39,9,"child"],[47,16,39,14],[47,17,39,15,"type"],[47,21,39,19],[47,26,39,24,"Screen"],[47,40,39,30],[48,2,40,0],[48,3,40,1],[49,2,41,0],[49,6,41,6,"isGroup"],[49,13,41,13],[49,16,41,16,"child"],[49,21,41,21],[49,25,41,25],[50,4,42,2],[50,11,42,9,"child"],[50,16,42,14],[50,17,42,15,"type"],[50,21,42,19],[50,26,42,24,"React"],[50,31,42,29],[50,32,42,30,"Fragment"],[50,40,42,38],[50,44,42,42,"child"],[50,49,42,47],[50,50,42,48,"type"],[50,54,42,52],[50,59,42,57,"Group"],[50,71,42,62],[51,2,43,0],[51,3,43,1],[52,2,44,0],[52,6,44,6,"isValidKey"],[52,16,44,16],[52,19,44,19,"key"],[52,22,44,22],[52,26,44,26,"key"],[52,29,44,29],[52,34,44,34,"undefined"],[52,43,44,43],[52,47,44,47],[52,54,44,54,"key"],[52,57,44,57],[52,62,44,62],[52,70,44,70],[52,74,44,74,"key"],[52,77,44,77],[52,82,44,82],[52,84,44,84],[54,2,46,0],[55,0,47,0],[56,0,48,0],[57,0,49,0],[58,0,50,0],[59,2,51,0],[59,6,51,6,"getRouteConfigsFromChildren"],[59,33,51,33],[59,36,51,36,"getRouteConfigsFromChildren"],[59,37,51,37,"children"],[59,45,51,45],[59,47,51,47,"groupKey"],[59,55,51,55],[59,57,51,57,"groupOptions"],[59,69,51,69],[59,71,51,71,"groupLayout"],[59,82,51,82],[59,87,51,87],[60,4,52,2],[60,8,52,8,"configs"],[60,15,52,15],[60,18,52,18,"React"],[60,23,52,23],[60,24,52,24,"Children"],[60,32,52,32],[60,33,52,33,"toArray"],[60,40,52,40],[60,41,52,41,"children"],[60,49,52,49],[60,50,52,50],[60,51,52,51,"reduce"],[60,57,52,57],[60,58,52,58],[60,59,52,59,"acc"],[60,62,52,62],[60,64,52,64,"child"],[60,69,52,69],[60,74,52,74],[61,6,53,4],[61,10,53,8],[61,23,53,21,"React"],[61,28,53,26],[61,29,53,27,"isValidElement"],[61,43,53,41],[61,44,53,42,"child"],[61,49,53,47],[61,50,53,48],[61,52,53,50],[62,8,54,6],[62,12,54,10,"isScreen"],[62,20,54,18],[62,21,54,19,"child"],[62,26,54,24],[62,27,54,25],[62,29,54,27],[63,10,55,8],[64,10,56,8],[66,10,58,8],[66,14,58,12],[66,21,58,19,"child"],[66,26,58,24],[66,27,58,25,"props"],[66,32,58,30],[66,37,58,35],[66,45,58,43],[66,49,58,47,"child"],[66,54,58,52],[66,55,58,53,"props"],[66,60,58,58],[66,65,58,63],[66,69,58,67],[66,71,58,69],[67,12,59,10],[67,18,59,16],[67,22,59,20,"Error"],[67,27,59,25],[67,28,59,26],[67,64,59,62],[67,65,59,63],[68,10,60,8],[69,10,61,8],[69,14,61,12],[69,21,61,19,"child"],[69,26,61,24],[69,27,61,25,"props"],[69,32,61,30],[69,33,61,31,"name"],[69,37,61,35],[69,42,61,40],[69,50,61,48],[69,54,61,52,"child"],[69,59,61,57],[69,60,61,58,"props"],[69,65,61,63],[69,66,61,64,"name"],[69,70,61,68],[69,75,61,73],[69,77,61,75],[69,79,61,77],[70,12,62,10],[70,18,62,16],[70,22,62,20,"Error"],[70,27,62,25],[70,28,62,26],[70,52,62,50,"JSON"],[70,56,62,54],[70,57,62,55,"stringify"],[70,66,62,64],[70,67,62,65,"child"],[70,72,62,70],[70,73,62,71,"props"],[70,78,62,76],[70,79,62,77,"name"],[70,83,62,81],[70,84,62,82],[70,134,62,132],[70,135,62,133],[71,10,63,8],[72,10,64,8],[72,14,64,12,"child"],[72,19,64,17],[72,20,64,18,"props"],[72,25,64,23],[72,26,64,24,"navigationKey"],[72,39,64,37],[72,44,64,42,"undefined"],[72,53,64,51],[72,58,64,56],[72,65,64,63,"child"],[72,70,64,68],[72,71,64,69,"props"],[72,76,64,74],[72,77,64,75,"navigationKey"],[72,90,64,88],[72,95,64,93],[72,103,64,101],[72,107,64,105,"child"],[72,112,64,110],[72,113,64,111,"props"],[72,118,64,116],[72,119,64,117,"navigationKey"],[72,132,64,130],[72,137,64,135],[72,139,64,137],[72,140,64,138],[72,142,64,140],[73,12,65,10],[73,18,65,16],[73,22,65,20,"Error"],[73,27,65,25],[73,28,65,26],[73,68,65,66,"JSON"],[73,72,65,70],[73,73,65,71,"stringify"],[73,82,65,80],[73,83,65,81,"child"],[73,88,65,86],[73,89,65,87,"props"],[73,94,65,92],[73,95,65,93,"navigationKey"],[73,108,65,106],[73,109,65,107],[73,130,65,128,"child"],[73,135,65,133],[73,136,65,134,"props"],[73,141,65,139],[73,142,65,140,"name"],[73,146,65,144],[73,196,65,194],[73,197,65,195],[74,10,66,8],[75,10,67,8,"acc"],[75,13,67,11],[75,14,67,12,"push"],[75,18,67,16],[75,19,67,17],[76,12,68,10,"keys"],[76,16,68,14],[76,18,68,16],[76,19,68,17,"groupKey"],[76,27,68,25],[76,29,68,27,"child"],[76,34,68,32],[76,35,68,33,"props"],[76,40,68,38],[76,41,68,39,"navigationKey"],[76,54,68,52],[76,55,68,53],[77,12,69,10,"options"],[77,19,69,17],[77,21,69,19,"groupOptions"],[77,33,69,31],[78,12,70,10,"layout"],[78,18,70,16],[78,20,70,18,"groupLayout"],[78,31,70,29],[79,12,71,10,"props"],[79,17,71,15],[79,19,71,17,"child"],[79,24,71,22],[79,25,71,23,"props"],[80,10,72,8],[80,11,72,9],[80,12,72,10],[81,10,73,8],[81,17,73,15,"acc"],[81,20,73,18],[82,8,74,6],[83,8,75,6],[83,12,75,10,"isGroup"],[83,19,75,17],[83,20,75,18,"child"],[83,25,75,23],[83,26,75,24],[83,28,75,26],[84,10,76,8],[84,14,76,12],[84,15,76,13,"isValidKey"],[84,25,76,23],[84,26,76,24,"child"],[84,31,76,29],[84,32,76,30,"props"],[84,37,76,35],[84,38,76,36,"navigationKey"],[84,51,76,49],[84,52,76,50],[84,54,76,52],[85,12,77,10],[85,18,77,16],[85,22,77,20,"Error"],[85,27,77,25],[85,28,77,26],[85,68,77,66,"JSON"],[85,72,77,70],[85,73,77,71,"stringify"],[85,82,77,80],[85,83,77,81,"child"],[85,88,77,86],[85,89,77,87,"props"],[85,94,77,92],[85,95,77,93,"navigationKey"],[85,108,77,106],[85,109,77,107],[85,173,77,171],[85,174,77,172],[86,10,78,8],[88,10,80,8],[89,10,81,8],[90,10,82,8,"acc"],[90,13,82,11],[90,14,82,12,"push"],[90,18,82,16],[90,19,82,17],[90,22,82,20,"getRouteConfigsFromChildren"],[90,49,82,47],[90,50,82,48,"child"],[90,55,82,53],[90,56,82,54,"props"],[90,61,82,59],[90,62,82,60,"children"],[90,70,82,68],[90,72,82,70,"child"],[90,77,82,75],[90,78,82,76,"props"],[90,83,82,81],[90,84,82,82,"navigationKey"],[90,97,82,95],[91,10,83,8],[92,10,84,8],[93,10,85,8,"child"],[93,15,85,13],[93,16,85,14,"type"],[93,20,85,18],[93,25,85,23,"Group"],[93,37,85,28],[93,40,85,31,"groupOptions"],[93,52,85,43],[93,55,85,46,"groupOptions"],[93,67,85,58],[93,71,85,62],[93,75,85,66],[93,78,85,69],[93,79,85,70],[93,82,85,73,"groupOptions"],[93,94,85,85],[93,96,85,87,"child"],[93,101,85,92],[93,102,85,93,"props"],[93,107,85,98],[93,108,85,99,"screenOptions"],[93,121,85,112],[93,122,85,113],[93,125,85,116],[93,126,85,117,"child"],[93,131,85,122],[93,132,85,123,"props"],[93,137,85,128],[93,138,85,129,"screenOptions"],[93,151,85,142],[93,152,85,143],[93,154,85,145],[93,161,85,152,"child"],[93,166,85,157],[93,167,85,158,"props"],[93,172,85,163],[93,173,85,164,"screenLayout"],[93,185,85,176],[93,190,85,181],[93,200,85,191],[93,203,85,194,"child"],[93,208,85,199],[93,209,85,200,"props"],[93,214,85,205],[93,215,85,206,"screenLayout"],[93,227,85,218],[93,230,85,221,"groupLayout"],[93,241,85,232],[93,242,85,233],[93,243,85,234],[94,10,86,8],[94,17,86,15,"acc"],[94,20,86,18],[95,8,87,6],[96,6,88,4],[97,6,89,4],[97,12,89,10],[97,16,89,14,"Error"],[97,21,89,19],[97,22,89,20],[97,122,89,120],[97,135,89,133],[97,149,89,133,"React"],[97,154,89,138],[97,155,89,139,"isValidElement"],[97,169,89,153],[97,170,89,154,"child"],[97,175,89,159],[97,176,89,160],[97,179,89,163],[97,183,89,167],[97,190,89,174,"child"],[97,195,89,179],[97,196,89,180,"type"],[97,200,89,184],[97,205,89,189],[97,213,89,197],[97,216,89,200,"child"],[97,221,89,205],[97,222,89,206,"type"],[97,226,89,210],[97,229,89,213,"child"],[97,234,89,218],[97,235,89,219,"type"],[97,239,89,223],[97,241,89,225,"name"],[97,245,89,229],[97,249,89,233,"child"],[97,254,89,238],[97,255,89,239,"props"],[97,260,89,244],[97,264,89,248],[97,268,89,252],[97,272,89,256],[97,279,89,263,"child"],[97,284,89,268],[97,285,89,269,"props"],[97,290,89,274],[97,295,89,279],[97,303,89,287],[97,307,89,291],[97,313,89,297],[97,317,89,301,"child"],[97,322,89,306],[97,323,89,307,"props"],[97,328,89,312],[97,332,89,316,"child"],[97,337,89,321],[97,338,89,322,"props"],[97,343,89,327],[97,345,89,329,"name"],[97,349,89,333],[97,352,89,336],[97,372,89,356,"child"],[97,377,89,361],[97,378,89,362,"props"],[97,383,89,367],[97,384,89,368,"name"],[97,388,89,372],[97,391,89,375],[97,394,89,378],[97,396,89,380],[97,398,89,382],[97,401,89,385],[97,408,89,392,"child"],[97,413,89,397],[97,418,89,402],[97,426,89,410],[97,429,89,413,"JSON"],[97,433,89,417],[97,434,89,418,"stringify"],[97,443,89,427],[97,444,89,428,"child"],[97,449,89,433],[97,450,89,434],[97,453,89,437],[97,457,89,441,"String"],[97,463,89,447],[97,464,89,448,"child"],[97,469,89,453],[97,470,89,454],[97,473,89,457],[97,565,89,549],[97,566,89,550],[98,4,90,2],[98,5,90,3],[98,7,90,5],[98,9,90,7],[98,10,90,8],[99,4,133,2],[99,11,133,9,"configs"],[99,18,133,16],[100,2,134,0],[100,3,134,1],[102,2,136,0],[103,0,137,0],[104,0,138,0],[105,0,139,0],[106,0,140,0],[107,0,141,0],[108,0,142,0],[109,2,143,7],[109,11,143,16,"useNavigationBuilder"],[109,31,143,36,"useNavigationBuilder"],[109,32,143,37,"createRouter"],[109,44,143,49],[109,46,143,51,"options"],[109,53,143,58],[109,55,143,60],[110,4,144,2],[110,8,144,8,"navigatorKey"],[110,20,144,20],[110,23,144,23],[110,27,144,23,"useRegisterNavigator"],[110,69,144,43],[110,71,144,44],[110,72,144,45],[111,4,145,2],[111,8,145,8,"route"],[111,13,145,13],[111,16,145,16,"React"],[111,21,145,21],[111,22,145,22,"useContext"],[111,32,145,32],[111,33,145,33,"NavigationRouteContext"],[111,79,145,55],[111,80,145,56],[112,4,146,2],[112,8,147,4,"children"],[112,16,147,12],[112,19,154,6,"options"],[112,26,154,13],[112,27,147,4,"children"],[112,35,147,12],[113,6,148,4,"layout"],[113,12,148,10],[113,15,154,6,"options"],[113,22,154,13],[113,23,148,4,"layout"],[113,29,148,10],[114,6,149,4,"screenOptions"],[114,19,149,17],[114,22,154,6,"options"],[114,29,154,13],[114,30,149,4,"screenOptions"],[114,43,149,17],[115,6,150,4,"screenLayout"],[115,18,150,16],[115,21,154,6,"options"],[115,28,154,13],[115,29,150,4,"screenLayout"],[115,41,150,16],[116,6,151,4,"screenListeners"],[116,21,151,19],[116,24,154,6,"options"],[116,31,154,13],[116,32,151,4,"screenListeners"],[116,47,151,19],[117,6,152,4,"UNSTABLE_router"],[117,21,152,19],[117,24,154,6,"options"],[117,31,154,13],[117,32,152,4,"UNSTABLE_router"],[117,47,152,19],[118,6,153,7,"rest"],[118,10,153,11],[118,17,153,11,"_objectWithoutProperties2"],[118,42,153,11],[118,43,153,11,"default"],[118,50,153,11],[118,52,154,6,"options"],[118,59,154,13],[118,61,154,13,"_excluded"],[118,70,154,13],[119,4,155,2],[119,8,155,8,"routeConfigs"],[119,20,155,20],[119,23,155,23,"getRouteConfigsFromChildren"],[119,50,155,50],[119,51,155,51,"children"],[119,59,155,59],[119,60,155,60],[120,4,156,2],[120,8,156,8,"router"],[120,14,156,14],[120,17,156,17],[120,21,156,17,"useLazyValue"],[120,47,156,29],[120,49,156,30],[120,55,156,36],[121,6,157,4],[121,10,157,8,"rest"],[121,14,157,12],[121,15,157,13,"initialRouteName"],[121,31,157,29],[121,35,157,33],[121,39,157,37],[121,43,157,41,"routeConfigs"],[121,55,157,53],[121,56,157,54,"every"],[121,61,157,59],[121,62,157,60,"config"],[121,68,157,66],[121,72,157,70,"config"],[121,78,157,76],[121,79,157,77,"props"],[121,84,157,82],[121,85,157,83,"name"],[121,89,157,87],[121,94,157,92,"rest"],[121,98,157,96],[121,99,157,97,"initialRouteName"],[121,115,157,113],[121,116,157,114],[121,118,157,116],[122,8,158,6],[122,14,158,12],[122,18,158,16,"Error"],[122,23,158,21],[122,24,158,22],[122,57,158,55,"rest"],[122,61,158,59],[122,62,158,60,"initialRouteName"],[122,78,158,76],[122,111,158,109],[122,112,158,110],[123,6,159,4],[124,6,160,4],[124,10,160,10,"original"],[124,18,160,18],[124,21,160,21,"createRouter"],[124,33,160,33],[124,34,160,34,"rest"],[124,38,160,38],[124,39,160,39],[125,6,161,4],[125,10,161,8,"UNSTABLE_router"],[125,25,161,23],[125,29,161,27],[125,33,161,31],[125,35,161,33],[126,8,162,6],[126,12,162,12,"overrides"],[126,21,162,21],[126,24,162,24,"UNSTABLE_router"],[126,39,162,39],[126,40,162,40,"original"],[126,48,162,48],[126,49,162,49],[127,8,163,6],[127,15,163,13],[128,10,164,8],[128,13,164,11,"original"],[128,21,164,19],[129,10,165,8],[129,13,165,11,"overrides"],[130,8,166,6],[130,9,166,7],[131,6,167,4],[132,6,168,4],[132,13,168,11,"original"],[132,21,168,19],[133,4,169,2],[133,5,169,3],[133,6,169,4],[134,4,170,2],[134,8,170,8,"screens"],[134,15,170,15],[134,18,170,18,"routeConfigs"],[134,30,170,30],[134,31,170,31,"reduce"],[134,37,170,37],[134,38,170,38],[134,39,170,39,"acc"],[134,42,170,42],[134,44,170,44,"config"],[134,50,170,50],[134,55,170,55],[135,6,171,4],[135,10,171,8,"config"],[135,16,171,14],[135,17,171,15,"props"],[135,22,171,20],[135,23,171,21,"name"],[135,27,171,25],[135,31,171,29,"acc"],[135,34,171,32],[135,36,171,34],[136,8,172,6],[136,14,172,12],[136,18,172,16,"Error"],[136,23,172,21],[136,24,172,22],[136,133,172,131,"config"],[136,139,172,137],[136,140,172,138,"props"],[136,145,172,143],[136,146,172,144,"name"],[136,150,172,148],[136,154,172,152],[136,155,172,153],[137,6,173,4],[138,6,174,4,"acc"],[138,9,174,7],[138,10,174,8,"config"],[138,16,174,14],[138,17,174,15,"props"],[138,22,174,20],[138,23,174,21,"name"],[138,27,174,25],[138,28,174,26],[138,31,174,29,"config"],[138,37,174,35],[139,6,175,4],[139,13,175,11,"acc"],[139,16,175,14],[140,4,176,2],[140,5,176,3],[140,7,176,5],[140,8,176,6],[140,9,176,7],[140,10,176,8],[141,4,177,2],[141,8,177,8,"routeNames"],[141,18,177,18],[141,21,177,21,"routeConfigs"],[141,33,177,33],[141,34,177,34,"map"],[141,37,177,37],[141,38,177,38,"config"],[141,44,177,44],[141,48,177,48,"config"],[141,54,177,54],[141,55,177,55,"props"],[141,60,177,60],[141,61,177,61,"name"],[141,65,177,65],[141,66,177,66],[142,4,178,2],[142,8,178,8,"routeKeyList"],[142,20,178,20],[142,23,178,23,"routeNames"],[142,33,178,33],[142,34,178,34,"reduce"],[142,40,178,40],[142,41,178,41],[142,42,178,42,"acc"],[142,45,178,45],[142,47,178,47,"curr"],[142,51,178,51],[142,56,178,56],[143,6,179,4,"acc"],[143,9,179,7],[143,10,179,8,"curr"],[143,14,179,12],[143,15,179,13],[143,18,179,16,"screens"],[143,25,179,23],[143,26,179,24,"curr"],[143,30,179,28],[143,31,179,29],[143,32,179,30,"keys"],[143,36,179,34],[143,37,179,35,"map"],[143,40,179,38],[143,41,179,39,"key"],[143,44,179,42],[143,48,179,46,"key"],[143,51,179,49],[143,55,179,53],[143,57,179,55],[143,58,179,56],[143,59,179,57,"join"],[143,63,179,61],[143,64,179,62],[143,67,179,65],[143,68,179,66],[144,6,180,4],[144,13,180,11,"acc"],[144,16,180,14],[145,4,181,2],[145,5,181,3],[145,7,181,5],[145,8,181,6],[145,9,181,7],[145,10,181,8],[146,4,182,2],[146,8,182,8,"routeParamList"],[146,22,182,22],[146,25,182,25,"routeNames"],[146,35,182,35],[146,36,182,36,"reduce"],[146,42,182,42],[146,43,182,43],[146,44,182,44,"acc"],[146,47,182,47],[146,49,182,49,"curr"],[146,53,182,53],[146,58,182,58],[147,6,183,4],[147,10,184,6,"initialParams"],[147,23,184,19],[147,26,185,8,"screens"],[147,33,185,15],[147,34,185,16,"curr"],[147,38,185,20],[147,39,185,21],[147,40,185,22,"props"],[147,45,185,27],[147,46,184,6,"initialParams"],[147,59,184,19],[148,6,186,4,"acc"],[148,9,186,7],[148,10,186,8,"curr"],[148,14,186,12],[148,15,186,13],[148,18,186,16,"initialParams"],[148,31,186,29],[149,6,187,4],[149,13,187,11,"acc"],[149,16,187,14],[150,4,188,2],[150,5,188,3],[150,7,188,5],[150,8,188,6],[150,9,188,7],[150,10,188,8],[151,4,189,2],[151,8,189,8,"routeGetIdList"],[151,22,189,22],[151,25,189,25,"routeNames"],[151,35,189,35],[151,36,189,36,"reduce"],[151,42,189,42],[151,43,189,43],[151,44,189,44,"acc"],[151,47,189,47],[151,49,189,49,"curr"],[151,53,189,53],[151,58,189,58,"Object"],[151,64,189,64],[151,65,189,65,"assign"],[151,71,189,71],[151,72,189,72,"acc"],[151,75,189,75],[151,77,189,77],[152,6,190,4],[152,7,190,5,"curr"],[152,11,190,9],[152,14,190,12,"screens"],[152,21,190,19],[152,22,190,20,"curr"],[152,26,190,24],[152,27,190,25],[152,28,190,26,"props"],[152,33,190,31],[152,34,190,32,"getId"],[153,4,191,2],[153,5,191,3],[153,6,191,4],[153,8,191,6],[153,9,191,7],[153,10,191,8],[153,11,191,9],[154,4,192,2],[154,8,192,6],[154,9,192,7,"routeNames"],[154,19,192,17],[154,20,192,18,"length"],[154,26,192,24],[154,28,192,26],[155,6,193,4],[155,12,193,10],[155,16,193,14,"Error"],[155,21,193,19],[155,22,193,20],[155,114,193,112],[155,115,193,113],[156,4,194,2],[157,4,195,2],[157,8,195,8,"isStateValid"],[157,20,195,20],[157,23,195,23,"React"],[157,28,195,28],[157,29,195,29,"useCallback"],[157,40,195,40],[157,41,195,41,"state"],[157,46,195,46],[157,50,195,50,"state"],[157,55,195,55],[157,56,195,56,"type"],[157,60,195,60],[157,65,195,65,"undefined"],[157,74,195,74],[157,78,195,78,"state"],[157,83,195,83],[157,84,195,84,"type"],[157,88,195,88],[157,93,195,93,"router"],[157,99,195,99],[157,100,195,100,"type"],[157,104,195,104],[157,106,195,106],[157,107,195,107,"router"],[157,113,195,113],[157,114,195,114,"type"],[157,118,195,118],[157,119,195,119],[157,120,195,120],[158,4,196,2],[158,8,196,8,"isStateInitialized"],[158,26,196,26],[158,29,196,29,"React"],[158,34,196,34],[158,35,196,35,"useCallback"],[158,46,196,46],[158,47,196,47,"state"],[158,52,196,52],[158,56,196,56,"state"],[158,61,196,61],[158,66,196,66,"undefined"],[158,75,196,75],[158,79,196,79,"state"],[158,84,196,84],[158,85,196,85,"stale"],[158,90,196,90],[158,95,196,95],[158,100,196,100],[158,104,196,104,"isStateValid"],[158,116,196,116],[158,117,196,117,"state"],[158,122,196,122],[158,123,196,123],[158,125,196,125],[158,126,196,126,"isStateValid"],[158,138,196,138],[158,139,196,139],[158,140,196,140],[159,4,197,2],[159,8,197,2,"_React$useContext"],[159,25,197,2],[159,28,204,6,"React"],[159,33,204,11],[159,34,204,12,"useContext"],[159,44,204,22],[159,45,204,23,"NavigationStateContext"],[159,91,204,45],[159,92,204,46],[160,6,198,11,"currentState"],[160,18,198,23],[160,21,198,23,"_React$useContext"],[160,38,198,23],[160,39,198,4,"state"],[160,44,198,9],[161,6,199,14,"getCurrentState"],[161,21,199,29],[161,24,199,29,"_React$useContext"],[161,41,199,29],[161,42,199,4,"getState"],[161,50,199,12],[162,6,200,14,"setCurrentState"],[162,21,200,29],[162,24,200,29,"_React$useContext"],[162,41,200,29],[162,42,200,4,"setState"],[162,50,200,12],[163,6,201,4,"setKey"],[163,12,201,10],[163,15,201,10,"_React$useContext"],[163,32,201,10],[163,33,201,4,"setKey"],[163,39,201,10],[164,6,202,4,"getKey"],[164,12,202,10],[164,15,202,10,"_React$useContext"],[164,32,202,10],[164,33,202,4,"getKey"],[164,39,202,10],[165,6,203,4,"getIsInitial"],[165,18,203,16],[165,21,203,16,"_React$useContext"],[165,38,203,16],[165,39,203,4,"getIsInitial"],[165,51,203,16],[166,4,205,2],[166,8,205,8,"stateCleanedUp"],[166,22,205,22],[166,25,205,25,"React"],[166,30,205,30],[166,31,205,31,"useRef"],[166,37,205,37],[166,38,205,38],[166,43,205,43],[166,44,205,44],[167,4,206,2],[167,8,206,8,"setState"],[167,16,206,16],[167,19,206,19],[167,23,206,19,"useLatestCallback"],[167,49,206,36],[167,51,206,37,"state"],[167,56,206,42],[167,60,206,46],[168,6,207,4],[168,10,207,8,"stateCleanedUp"],[168,24,207,22],[168,25,207,23,"current"],[168,32,207,30],[168,34,207,32],[169,8,208,6],[170,8,209,6],[171,8,210,6],[172,8,211,6],[173,6,212,4],[174,6,213,4,"setCurrentState"],[174,21,213,19],[174,22,213,20,"state"],[174,27,213,25],[174,28,213,26],[175,4,214,2],[175,5,214,3],[175,6,214,4],[176,4,215,2],[176,8,215,2,"_React$useMemo"],[176,22,215,2],[176,25,215,57,"React"],[176,30,215,62],[176,31,215,63,"useMemo"],[176,38,215,70],[176,39,215,71],[176,45,215,77],[177,8,216,4],[177,12,216,10,"initialRouteParamList"],[177,33,216,31],[177,36,216,34,"routeNames"],[177,46,216,44],[177,47,216,45,"reduce"],[177,53,216,51],[177,54,216,52],[177,55,216,53,"acc"],[177,58,216,56],[177,60,216,58,"curr"],[177,64,216,62],[177,69,216,67],[178,10,217,6],[178,14,218,8,"initialParams"],[178,27,218,21],[178,30,219,10,"screens"],[178,37,219,17],[178,38,219,18,"curr"],[178,42,219,22],[178,43,219,23],[178,44,219,24,"props"],[178,49,219,29],[178,50,218,8,"initialParams"],[178,63,218,21],[179,10,220,6],[179,14,220,12,"initialParamsFromParams"],[179,37,220,35],[179,40,220,38,"route"],[179,45,220,43],[179,47,220,45,"params"],[179,53,220,51],[179,55,220,53,"state"],[179,60,220,58],[179,64,220,62],[179,68,220,66],[179,72,220,70,"route"],[179,77,220,75],[179,79,220,77,"params"],[179,85,220,83],[179,87,220,85,"initial"],[179,94,220,92],[179,99,220,97],[179,104,220,102],[179,108,220,106,"route"],[179,113,220,111],[179,115,220,113,"params"],[179,121,220,119],[179,123,220,121,"screen"],[179,129,220,127],[179,134,220,132,"curr"],[179,138,220,136],[179,141,220,139,"route"],[179,146,220,144],[179,147,220,145,"params"],[179,153,220,151],[179,154,220,152,"params"],[179,160,220,158],[179,163,220,161,"undefined"],[179,172,220,170],[180,10,221,6,"acc"],[180,13,221,9],[180,14,221,10,"curr"],[180,18,221,14],[180,19,221,15],[180,22,221,18,"initialParams"],[180,35,221,31],[180,40,221,36,"undefined"],[180,49,221,45],[180,53,221,49,"initialParamsFromParams"],[180,76,221,72],[180,81,221,77,"undefined"],[180,90,221,86],[180,93,221,89],[181,12,222,8],[181,15,222,11,"initialParams"],[181,28,222,24],[182,12,223,8],[182,15,223,11,"initialParamsFromParams"],[183,10,224,6],[183,11,224,7],[183,14,224,10,"undefined"],[183,23,224,19],[184,10,225,6],[184,17,225,13,"acc"],[184,20,225,16],[185,8,226,4],[185,9,226,5],[185,11,226,7],[185,12,226,8],[185,13,226,9],[185,14,226,10],[187,8,228,4],[188,8,229,4],[189,8,230,4],[190,8,231,4],[191,8,232,4],[191,12,232,8],[191,13,232,9,"currentState"],[191,25,232,21],[191,30,232,26,"undefined"],[191,39,232,35],[191,43,232,39],[191,44,232,40,"isStateValid"],[191,56,232,52],[191,57,232,53,"currentState"],[191,69,232,65],[191,70,232,66],[191,75,232,71,"route"],[191,80,232,76],[191,82,232,78,"params"],[191,88,232,84],[191,90,232,86,"state"],[191,95,232,91],[191,99,232,95],[191,103,232,99],[191,107,232,103],[191,109,232,105],[191,116,232,112,"route"],[191,121,232,117],[191,123,232,119,"params"],[191,129,232,125],[191,131,232,127,"screen"],[191,137,232,133],[191,142,232,138],[191,150,232,146],[191,154,232,150,"route"],[191,159,232,155],[191,161,232,157,"params"],[191,167,232,163],[191,169,232,165,"initial"],[191,176,232,172],[191,181,232,177],[191,186,232,182],[191,187,232,183],[191,189,232,185],[192,10,233,6],[192,17,233,13],[192,18,233,14,"router"],[192,24,233,20],[192,25,233,21,"getInitialState"],[192,40,233,36],[192,41,233,37],[193,12,234,8,"routeNames"],[193,22,234,18],[194,12,235,8,"routeParamList"],[194,26,235,22],[194,28,235,24,"initialRouteParamList"],[194,49,235,45],[195,12,236,8,"routeGetIdList"],[196,10,237,6],[196,11,237,7],[196,12,237,8],[196,14,237,10],[196,18,237,14],[196,19,237,15],[197,8,238,4],[197,9,238,5],[197,15,238,11],[198,10,239,6],[198,14,239,10,"stateFromParams"],[198,29,239,25],[199,10,240,6],[199,14,240,10,"route"],[199,19,240,15],[199,21,240,17,"params"],[199,27,240,23],[199,29,240,25,"state"],[199,34,240,30],[199,38,240,34],[199,42,240,38],[199,44,240,40],[200,12,241,8,"stateFromParams"],[200,27,241,23],[200,30,241,26,"route"],[200,35,241,31],[200,36,241,32,"params"],[200,42,241,38],[200,43,241,39,"state"],[200,48,241,44],[201,10,242,6],[201,11,242,7],[201,17,242,13],[201,21,242,17],[201,28,242,24,"route"],[201,33,242,29],[201,35,242,31,"params"],[201,41,242,37],[201,43,242,39,"screen"],[201,49,242,45],[201,54,242,50],[201,62,242,58],[201,66,242,62,"route"],[201,71,242,67],[201,73,242,69,"params"],[201,79,242,75],[201,81,242,77,"initial"],[201,88,242,84],[201,93,242,89],[201,98,242,94],[201,100,242,96],[202,12,243,8,"stateFromParams"],[202,27,243,23],[202,30,243,26],[203,14,244,10,"index"],[203,19,244,15],[203,21,244,17],[203,22,244,18],[204,14,245,10,"routes"],[204,20,245,16],[204,22,245,18],[204,23,245,19],[205,16,246,12,"name"],[205,20,246,16],[205,22,246,18,"route"],[205,27,246,23],[205,28,246,24,"params"],[205,34,246,30],[205,35,246,31,"screen"],[205,41,246,37],[206,16,247,12,"params"],[206,22,247,18],[206,24,247,20,"route"],[206,29,247,25],[206,30,247,26,"params"],[206,36,247,32],[206,37,247,33,"params"],[206,43,247,39],[207,16,248,12,"path"],[207,20,248,16],[207,22,248,18,"route"],[207,27,248,23],[207,28,248,24,"params"],[207,34,248,30],[207,35,248,31,"path"],[208,14,249,10],[208,15,249,11],[209,12,250,8],[209,13,250,9],[210,10,251,6],[211,10,252,6],[211,17,252,13],[211,18,252,14,"router"],[211,24,252,20],[211,25,252,21,"getRehydratedState"],[211,43,252,39],[211,44,252,40,"stateFromParams"],[211,59,252,55],[211,63,252,59,"currentState"],[211,75,252,71],[211,77,252,73],[212,12,253,8,"routeNames"],[212,22,253,18],[213,12,254,8,"routeParamList"],[213,26,254,22],[213,28,254,24,"initialRouteParamList"],[213,49,254,45],[214,12,255,8,"routeGetIdList"],[215,10,256,6],[215,11,256,7],[215,12,256,8],[215,14,256,10],[215,19,256,15],[215,20,256,16],[216,8,257,4],[217,8,258,4],[218,8,259,4],[219,8,260,4],[220,8,261,4],[221,8,262,4],[222,8,263,4],[223,6,264,2],[223,7,264,3],[223,9,264,5],[223,10,264,6,"currentState"],[223,22,264,18],[223,24,264,20,"router"],[223,30,264,26],[223,32,264,28,"isStateValid"],[223,44,264,40],[223,45,264,41],[223,46,264,42],[224,6,264,42,"_React$useMemo2"],[224,21,264,42],[224,28,264,42,"_slicedToArray2"],[224,43,264,42],[224,44,264,42,"default"],[224,51,264,42],[224,53,264,42,"_React$useMemo"],[224,67,264,42],[225,6,215,9,"initializedState"],[225,22,215,25],[225,25,215,25,"_React$useMemo2"],[225,40,215,25],[226,6,215,27,"isFirstStateInitialization"],[226,32,215,53],[226,35,215,53,"_React$useMemo2"],[226,50,215,53],[227,4,265,2],[227,8,265,8,"previousRouteKeyListRef"],[227,31,265,31],[227,34,265,34,"React"],[227,39,265,39],[227,40,265,40,"useRef"],[227,46,265,46],[227,47,265,47,"routeKeyList"],[227,59,265,59],[227,60,265,60],[228,4,266,2,"React"],[228,9,266,7],[228,10,266,8,"useEffect"],[228,19,266,17],[228,20,266,18],[228,26,266,24],[229,6,267,4,"previousRouteKeyListRef"],[229,29,267,27],[229,30,267,28,"current"],[229,37,267,35],[229,40,267,38,"routeKeyList"],[229,52,267,50],[230,4,268,2],[230,5,268,3],[230,6,268,4],[231,4,269,2],[231,8,269,8,"previousRouteKeyList"],[231,28,269,28],[231,31,269,31,"previousRouteKeyListRef"],[231,54,269,54],[231,55,269,55,"current"],[231,62,269,62],[232,4,270,2],[232,8,270,6,"state"],[232,13,270,11],[233,4,271,2],[234,4,272,2],[235,4,273,2],[236,4,274,2,"isStateInitialized"],[236,22,274,20],[236,23,274,21,"currentState"],[236,35,274,33],[236,36,274,34],[236,39,274,37,"currentState"],[236,51,274,49],[236,54,274,52,"initializedState"],[236,70,274,68],[237,4,275,2],[237,8,275,6,"nextState"],[237,17,275,15],[237,20,275,18,"state"],[237,25,275,23],[238,4,276,2],[238,8,276,6],[238,9,276,7],[238,13,276,7,"isArrayEqual"],[238,39,276,19],[238,41,276,20,"state"],[238,46,276,25],[238,47,276,26,"routeNames"],[238,57,276,36],[238,59,276,38,"routeNames"],[238,69,276,48],[238,70,276,49],[238,74,276,53],[238,75,276,54],[238,79,276,54,"isRecordEqual"],[238,107,276,67],[238,109,276,68,"routeKeyList"],[238,121,276,80],[238,123,276,82,"previousRouteKeyList"],[238,143,276,102],[238,144,276,103],[238,146,276,105],[239,6,277,4],[240,6,278,4,"nextState"],[240,15,278,13],[240,18,278,16,"router"],[240,24,278,22],[240,25,278,23,"getStateForRouteNamesChange"],[240,52,278,50],[240,53,278,51,"state"],[240,58,278,56],[240,60,278,58],[241,8,279,6,"routeNames"],[241,18,279,16],[242,8,280,6,"routeParamList"],[242,22,280,20],[243,8,281,6,"routeGetIdList"],[243,22,281,20],[244,8,282,6,"routeKeyChanges"],[244,23,282,21],[244,25,282,23,"Object"],[244,31,282,29],[244,32,282,30,"keys"],[244,36,282,34],[244,37,282,35,"routeKeyList"],[244,49,282,47],[244,50,282,48],[244,51,282,49,"filter"],[244,57,282,55],[244,58,282,56,"name"],[244,62,282,60],[244,66,282,64,"name"],[244,70,282,68],[244,74,282,72,"previousRouteKeyList"],[244,94,282,92],[244,98,282,96,"routeKeyList"],[244,110,282,108],[244,111,282,109,"name"],[244,115,282,113],[244,116,282,114],[244,121,282,119,"previousRouteKeyList"],[244,141,282,139],[244,142,282,140,"name"],[244,146,282,144],[244,147,282,145],[245,6,283,4],[245,7,283,5],[245,8,283,6],[246,4,284,2],[247,4,285,2],[247,8,285,8,"previousNestedParamsRef"],[247,31,285,31],[247,34,285,34,"React"],[247,39,285,39],[247,40,285,40,"useRef"],[247,46,285,46],[247,47,285,47,"route"],[247,52,285,52],[247,54,285,54,"params"],[247,60,285,60],[247,61,285,61],[248,4,286,2,"React"],[248,9,286,7],[248,10,286,8,"useEffect"],[248,19,286,17],[248,20,286,18],[248,26,286,24],[249,6,287,4,"previousNestedParamsRef"],[249,29,287,27],[249,30,287,28,"current"],[249,37,287,35],[249,40,287,38,"route"],[249,45,287,43],[249,47,287,45,"params"],[249,53,287,51],[250,4,288,2],[250,5,288,3],[250,7,288,5],[250,8,288,6,"route"],[250,13,288,11],[250,15,288,13,"params"],[250,21,288,19],[250,22,288,20],[250,23,288,21],[251,4,289,2],[251,8,289,6,"route"],[251,13,289,11],[251,15,289,13,"params"],[251,21,289,19],[251,23,289,21],[252,6,290,4],[252,10,290,10,"previousParams"],[252,24,290,24],[252,27,290,27,"previousNestedParamsRef"],[252,50,290,50],[252,51,290,51,"current"],[252,58,290,58],[253,6,291,4],[253,10,291,8,"action"],[253,16,291,14],[254,6,292,4],[254,10,292,8],[254,17,292,15,"route"],[254,22,292,20],[254,23,292,21,"params"],[254,29,292,27],[254,30,292,28,"state"],[254,35,292,33],[254,40,292,38],[254,48,292,46],[254,52,292,50,"route"],[254,57,292,55],[254,58,292,56,"params"],[254,64,292,62],[254,65,292,63,"state"],[254,70,292,68],[254,74,292,72],[254,78,292,76],[254,82,292,80,"route"],[254,87,292,85],[254,88,292,86,"params"],[254,94,292,92],[254,99,292,97,"previousParams"],[254,113,292,111],[254,115,292,113],[255,8,293,6],[256,8,294,6,"action"],[256,14,294,12],[256,17,294,15,"CommonActions"],[256,39,294,28],[256,40,294,29,"reset"],[256,45,294,34],[256,46,294,35,"route"],[256,51,294,40],[256,52,294,41,"params"],[256,58,294,47],[256,59,294,48,"state"],[256,64,294,53],[256,65,294,54],[257,6,295,4],[257,7,295,5],[257,13,295,11],[257,17,295,15],[257,24,295,22,"route"],[257,29,295,27],[257,30,295,28,"params"],[257,36,295,34],[257,37,295,35,"screen"],[257,43,295,41],[257,48,295,46],[257,56,295,54],[257,61,295,59,"route"],[257,66,295,64],[257,67,295,65,"params"],[257,73,295,71],[257,74,295,72,"initial"],[257,81,295,79],[257,86,295,84],[257,91,295,89],[257,95,295,93,"isFirstStateInitialization"],[257,121,295,119],[257,125,295,123,"route"],[257,130,295,128],[257,131,295,129,"params"],[257,137,295,135],[257,142,295,140,"previousParams"],[257,156,295,154],[257,157,295,155],[257,159,295,157],[258,8,296,6],[259,8,297,6,"action"],[259,14,297,12],[259,17,297,15,"CommonActions"],[259,39,297,28],[259,40,297,29,"navigate"],[259,48,297,37],[259,49,297,38],[260,10,298,8,"name"],[260,14,298,12],[260,16,298,14,"route"],[260,21,298,19],[260,22,298,20,"params"],[260,28,298,26],[260,29,298,27,"screen"],[260,35,298,33],[261,10,299,8,"params"],[261,16,299,14],[261,18,299,16,"route"],[261,23,299,21],[261,24,299,22,"params"],[261,30,299,28],[261,31,299,29,"params"],[261,37,299,35],[262,10,300,8,"path"],[262,14,300,12],[262,16,300,14,"route"],[262,21,300,19],[262,22,300,20,"params"],[262,28,300,26],[262,29,300,27,"path"],[262,33,300,31],[263,10,301,8,"pop"],[263,13,301,11],[263,15,301,13,"route"],[263,20,301,18],[263,21,301,19,"params"],[263,27,301,25],[263,28,301,26,"pop"],[264,8,302,6],[264,9,302,7],[264,10,302,8],[265,6,303,4],[267,6,305,4],[268,6,306,4],[268,10,306,10,"updatedState"],[268,22,306,22],[268,25,306,25,"action"],[268,31,306,31],[268,34,306,34,"router"],[268,40,306,40],[268,41,306,41,"getStateForAction"],[268,58,306,58],[268,59,306,59,"nextState"],[268,68,306,68],[268,70,306,70,"action"],[268,76,306,76],[268,78,306,78],[269,8,307,6,"routeNames"],[269,18,307,16],[270,8,308,6,"routeParamList"],[270,22,308,20],[271,8,309,6,"routeGetIdList"],[272,6,310,4],[272,7,310,5],[272,8,310,6],[272,11,310,9],[272,15,310,13],[273,6,311,4,"nextState"],[273,15,311,13],[273,18,311,16,"updatedState"],[273,30,311,28],[273,35,311,33],[273,39,311,37],[273,42,311,40,"router"],[273,48,311,46],[273,49,311,47,"getRehydratedState"],[273,67,311,65],[273,68,311,66,"updatedState"],[273,80,311,78],[273,82,311,80],[274,8,312,6,"routeNames"],[274,18,312,16],[275,8,313,6,"routeParamList"],[275,22,313,20],[276,8,314,6,"routeGetIdList"],[277,6,315,4],[277,7,315,5],[277,8,315,6],[277,11,315,9,"nextState"],[277,20,315,18],[278,4,316,2],[279,4,317,2],[279,8,317,8,"shouldUpdate"],[279,20,317,20],[279,23,317,23,"state"],[279,28,317,28],[279,33,317,33,"nextState"],[279,42,317,42],[280,4,318,2],[280,8,318,2,"useScheduleUpdate"],[280,44,318,19],[280,46,318,20],[280,52,318,26],[281,6,319,4],[281,10,319,8,"shouldUpdate"],[281,22,319,20],[281,24,319,22],[282,8,320,6],[283,8,321,6,"setState"],[283,16,321,14],[283,17,321,15,"nextState"],[283,26,321,24],[283,27,321,25],[284,6,322,4],[285,4,323,2],[285,5,323,3],[285,6,323,4],[287,4,325,2],[288,4,326,2],[289,4,327,2],[290,4,328,2,"state"],[290,9,328,7],[290,12,328,10,"nextState"],[290,21,328,19],[291,4,329,2,"React"],[291,9,329,7],[291,10,329,8,"useEffect"],[291,19,329,17],[291,20,329,18],[291,26,329,24],[292,6,330,4],[293,6,331,4],[294,6,332,4,"stateCleanedUp"],[294,20,332,18],[294,21,332,19,"current"],[294,28,332,26],[294,31,332,29],[294,36,332,34],[295,6,333,4,"setKey"],[295,12,333,10],[295,13,333,11,"navigatorKey"],[295,25,333,23],[295,26,333,24],[296,6,334,4],[296,10,334,8],[296,11,334,9,"getIsInitial"],[296,23,334,21],[296,24,334,22],[296,25,334,23],[296,27,334,25],[297,8,335,6],[298,8,336,6],[299,8,337,6],[300,8,338,6,"setState"],[300,16,338,14],[300,17,338,15,"nextState"],[300,26,338,24],[300,27,338,25],[301,6,339,4],[302,6,340,4],[302,13,340,11],[302,19,340,17],[303,8,341,6],[304,8,342,6],[304,12,342,10,"getCurrentState"],[304,27,342,25],[304,28,342,26],[304,29,342,27],[304,34,342,32,"undefined"],[304,43,342,41],[304,47,342,45,"getKey"],[304,53,342,51],[304,54,342,52],[304,55,342,53],[304,60,342,58,"navigatorKey"],[304,72,342,70],[304,74,342,72],[305,10,343,8,"setCurrentState"],[305,25,343,23],[305,26,343,24,"undefined"],[305,35,343,33],[305,36,343,34],[306,10,344,8,"stateCleanedUp"],[306,24,344,22],[306,25,344,23,"current"],[306,32,344,30],[306,35,344,33],[306,39,344,37],[307,8,345,6],[308,6,346,4],[308,7,346,5],[309,6,347,4],[310,4,348,2],[310,5,348,3],[310,7,348,5],[310,9,348,7],[310,10,348,8],[312,4,350,2],[313,4,351,2],[314,4,352,2],[315,4,353,2],[316,4,354,2],[317,4,355,2],[317,8,355,8,"stateRef"],[317,16,355,16],[317,19,355,19,"React"],[317,24,355,24],[317,25,355,25,"useRef"],[317,31,355,31],[317,32,355,32,"state"],[317,37,355,37],[317,38,355,38],[318,4,356,2,"stateRef"],[318,12,356,10],[318,13,356,11,"current"],[318,20,356,18],[318,23,356,21,"state"],[318,28,356,26],[319,4,357,2],[319,8,357,2,"useIsomorphicLayoutEffect"],[319,60,357,27],[319,62,357,28],[319,68,357,34],[320,6,358,4,"stateRef"],[320,14,358,12],[320,15,358,13,"current"],[320,22,358,20],[320,25,358,23],[320,29,358,27],[321,4,359,2],[321,5,359,3],[321,6,359,4],[322,4,360,2],[322,8,360,8,"getState"],[322,16,360,16],[322,19,360,19],[322,23,360,19,"useLatestCallback"],[322,49,360,36],[322,51,360,37],[322,57,360,43],[323,6,361,4],[323,10,361,10,"currentState"],[323,22,361,22],[323,25,361,25,"getCurrentState"],[323,40,361,40],[323,41,361,41],[323,42,361,42],[324,6,362,4],[324,13,362,11],[324,17,362,11,"deepFreeze"],[324,39,362,21],[324,41,362,22,"isStateInitialized"],[324,59,362,40],[324,60,362,41,"currentState"],[324,72,362,53],[324,73,362,54],[324,76,362,57,"currentState"],[324,88,362,69],[324,91,362,72,"initializedState"],[324,107,362,88],[324,108,362,89],[325,4,363,2],[325,5,363,3],[325,6,363,4],[326,4,364,2],[326,8,364,8,"emitter"],[326,15,364,15],[326,18,364,18],[326,22,364,18,"useEventEmitter"],[326,54,364,33],[326,56,364,34,"e"],[326,57,364,35],[326,61,364,39],[327,6,365,4],[327,10,365,10,"routeNames"],[327,20,365,20],[327,23,365,23],[327,25,365,25],[328,6,366,4],[328,10,366,8,"route"],[328,15,366,13],[329,6,367,4],[329,10,367,8,"e"],[329,11,367,9],[329,12,367,10,"target"],[329,18,367,16],[329,20,367,18],[330,8,368,6,"route"],[330,13,368,11],[330,16,368,14,"state"],[330,21,368,19],[330,22,368,20,"routes"],[330,28,368,26],[330,29,368,27,"find"],[330,33,368,31],[330,34,368,32,"route"],[330,39,368,37],[330,43,368,41,"route"],[330,48,368,46],[330,49,368,47,"key"],[330,52,368,50],[330,57,368,55,"e"],[330,58,368,56],[330,59,368,57,"target"],[330,65,368,63],[330,66,368,64],[331,8,369,6],[331,12,369,10,"route"],[331,17,369,15],[331,19,369,17,"name"],[331,23,369,21],[331,25,369,23],[332,10,370,8,"routeNames"],[332,20,370,18],[332,21,370,19,"push"],[332,25,370,23],[332,26,370,24,"route"],[332,31,370,29],[332,32,370,30,"name"],[332,36,370,34],[332,37,370,35],[333,8,371,6],[334,6,372,4],[334,7,372,5],[334,13,372,11],[335,8,373,6,"route"],[335,13,373,11],[335,16,373,14,"state"],[335,21,373,19],[335,22,373,20,"routes"],[335,28,373,26],[335,29,373,27,"state"],[335,34,373,32],[335,35,373,33,"index"],[335,40,373,38],[335,41,373,39],[336,8,374,6,"routeNames"],[336,18,374,16],[336,19,374,17,"push"],[336,23,374,21],[336,24,374,22],[336,27,374,25,"Object"],[336,33,374,31],[336,34,374,32,"keys"],[336,38,374,36],[336,39,374,37,"screens"],[336,46,374,44],[336,47,374,45],[336,48,374,46,"filter"],[336,54,374,52],[336,55,374,53,"name"],[336,59,374,57],[336,63,374,61,"route"],[336,68,374,66],[336,70,374,68,"name"],[336,74,374,72],[336,79,374,77,"name"],[336,83,374,81],[336,84,374,82],[336,85,374,83],[337,6,375,4],[338,6,376,4],[338,10,376,8,"route"],[338,15,376,13],[338,19,376,17],[338,23,376,21],[338,25,376,23],[339,8,377,6],[340,6,378,4],[341,6,379,4],[341,10,379,10,"navigation"],[341,20,379,20],[341,23,379,23,"descriptors"],[341,34,379,34],[341,35,379,35,"route"],[341,40,379,40],[341,41,379,41,"key"],[341,44,379,44],[341,45,379,45],[341,46,379,46,"navigation"],[341,56,379,56],[342,6,380,4],[342,10,380,10,"listeners"],[342,19,380,19],[342,22,380,22],[342,24,380,24],[342,25,380,25,"concat"],[342,31,380,31],[343,6,381,4],[344,6,382,4],[344,9,382,7],[344,10,382,8,"screenListeners"],[344,25,382,23],[344,27,382,25],[344,30,382,28,"routeNames"],[344,40,382,38],[344,41,382,39,"map"],[344,44,382,42],[344,45,382,43,"name"],[344,49,382,47],[344,53,382,51],[345,8,383,6],[345,12,384,8,"listeners"],[345,21,384,17],[345,24,385,10,"screens"],[345,31,385,17],[345,32,385,18,"name"],[345,36,385,22],[345,37,385,23],[345,38,385,24,"props"],[345,43,385,29],[345,44,384,8,"listeners"],[345,53,384,17],[346,8,386,6],[346,15,386,13,"listeners"],[346,24,386,22],[347,6,387,4],[347,7,387,5],[347,8,387,6],[347,9,387,7],[347,10,387,8,"map"],[347,13,387,11],[347,14,387,12,"listeners"],[347,23,387,21],[347,27,387,25],[348,8,388,6],[348,12,388,12,"map"],[348,15,388,15],[348,18,388,18],[348,25,388,25,"listeners"],[348,34,388,34],[348,39,388,39],[348,49,388,49],[348,52,388,52,"listeners"],[348,61,388,61],[348,62,388,62],[349,10,389,8,"route"],[349,15,389,13],[349,17,389,15,"route"],[349,22,389,20],[350,10,390,8,"navigation"],[351,8,391,6],[351,9,391,7],[351,10,391,8],[351,13,391,11,"listeners"],[351,22,391,20],[352,8,392,6],[352,15,392,13,"map"],[352,18,392,16],[352,21,392,19,"Object"],[352,27,392,25],[352,28,392,26,"keys"],[352,32,392,30],[352,33,392,31,"map"],[352,36,392,34],[352,37,392,35],[352,38,392,36,"filter"],[352,44,392,42],[352,45,392,43,"type"],[352,49,392,47],[352,53,392,51,"type"],[352,57,392,55],[352,62,392,60,"e"],[352,63,392,61],[352,64,392,62,"type"],[352,68,392,66],[352,69,392,67],[352,70,392,68,"map"],[352,73,392,71],[352,74,392,72,"type"],[352,78,392,76],[352,82,392,80,"map"],[352,85,392,83],[352,88,392,86,"type"],[352,92,392,90],[352,93,392,91],[352,94,392,92],[352,97,392,95,"undefined"],[352,106,392,104],[353,6,393,4],[353,7,393,5],[353,8,393,6],[354,6,394,4],[355,6,395,4],[356,6,395,4],[356,7,396,5,"filter"],[356,13,396,11],[356,14,396,12],[356,15,396,13,"cb"],[356,17,396,15],[356,19,396,17,"i"],[356,20,396,18],[356,22,396,20,"self"],[356,26,396,24],[356,31,396,29,"cb"],[356,33,396,31],[356,37,396,35,"self"],[356,41,396,39],[356,42,396,40,"lastIndexOf"],[356,53,396,51],[356,54,396,52,"cb"],[356,56,396,54],[356,57,396,55],[356,62,396,60,"i"],[356,63,396,61],[356,64,396,62],[357,6,397,4,"listeners"],[357,15,397,13],[357,16,397,14,"forEach"],[357,23,397,21],[357,24,397,22,"listener"],[357,32,397,30],[357,36,397,34,"listener"],[357,44,397,42],[357,47,397,45,"e"],[357,48,397,46],[357,49,397,47],[357,50,397,48],[358,4,398,2],[358,5,398,3],[358,6,398,4],[359,4,399,2],[359,8,399,2,"useFocusEvents"],[359,38,399,16],[359,40,399,17],[360,6,400,4,"state"],[360,11,400,9],[361,6,401,4,"emitter"],[362,4,402,2],[362,5,402,3],[362,6,402,4],[363,4,403,2,"React"],[363,9,403,7],[363,10,403,8,"useEffect"],[363,19,403,17],[363,20,403,18],[363,26,403,24],[364,6,404,4,"emitter"],[364,13,404,11],[364,14,404,12,"emit"],[364,18,404,16],[364,19,404,17],[365,8,405,6,"type"],[365,12,405,10],[365,14,405,12],[365,21,405,19],[366,8,406,6,"data"],[366,12,406,10],[366,14,406,12],[367,10,407,8,"state"],[368,8,408,6],[369,6,409,4],[369,7,409,5],[369,8,409,6],[370,4,410,2],[370,5,410,3],[370,7,410,5],[370,8,410,6,"emitter"],[370,15,410,13],[370,17,410,15,"state"],[370,22,410,20],[370,23,410,21],[370,24,410,22],[371,4,411,2],[371,8,411,2,"_useChildListeners"],[371,26,411,2],[371,29,414,6],[371,33,414,6,"useChildListeners"],[371,70,414,23],[371,72,414,24],[371,73,414,25],[372,6,412,15,"childListeners"],[372,20,412,29],[372,23,412,29,"_useChildListeners"],[372,41,412,29],[372,42,412,4,"listeners"],[372,51,412,13],[373,6,413,4,"addListener"],[373,17,413,15],[373,20,413,15,"_useChildListeners"],[373,38,413,15],[373,39,413,4,"addListener"],[373,50,413,15],[374,4,415,2],[374,8,415,2,"_useKeyedChildListene"],[374,29,415,2],[374,32,418,6],[374,36,418,6,"useKeyedChildListeners"],[374,82,418,28],[374,84,418,29],[374,85,418,30],[375,6,416,4,"keyedListeners"],[375,20,416,18],[375,23,416,18,"_useKeyedChildListene"],[375,44,416,18],[375,45,416,4,"keyedListeners"],[375,59,416,18],[376,6,417,4,"addKeyedListener"],[376,22,417,20],[376,25,417,20,"_useKeyedChildListene"],[376,46,417,20],[376,47,417,4,"addKeyedListener"],[376,63,417,20],[377,4,419,2],[377,8,419,8,"onAction"],[377,16,419,16],[377,19,419,19],[377,23,419,19,"useOnAction"],[377,47,419,30],[377,49,419,31],[378,6,420,4,"router"],[378,12,420,10],[379,6,421,4,"getState"],[379,14,421,12],[380,6,422,4,"setState"],[380,14,422,12],[381,6,423,4,"key"],[381,9,423,7],[381,11,423,9,"route"],[381,16,423,14],[381,18,423,16,"key"],[381,21,423,19],[382,6,424,4,"actionListeners"],[382,21,424,19],[382,23,424,21,"childListeners"],[382,37,424,35],[382,38,424,36,"action"],[382,44,424,42],[383,6,425,4,"beforeRemoveListeners"],[383,27,425,25],[383,29,425,27,"keyedListeners"],[383,43,425,41],[383,44,425,42,"beforeRemove"],[383,56,425,54],[384,6,426,4,"routerConfigOptions"],[384,25,426,23],[384,27,426,25],[385,8,427,6,"routeNames"],[385,18,427,16],[386,8,428,6,"routeParamList"],[386,22,428,20],[387,8,429,6,"routeGetIdList"],[388,6,430,4],[388,7,430,5],[389,6,431,4,"emitter"],[390,4,432,2],[390,5,432,3],[390,6,432,4],[391,4,433,2],[391,8,433,8,"onRouteFocus"],[391,20,433,20],[391,23,433,23],[391,27,433,23,"useOnRouteFocus"],[391,59,433,38],[391,61,433,39],[392,6,434,4,"router"],[392,12,434,10],[393,6,435,4,"key"],[393,9,435,7],[393,11,435,9,"route"],[393,16,435,14],[393,18,435,16,"key"],[393,21,435,19],[394,6,436,4,"getState"],[394,14,436,12],[395,6,437,4,"setState"],[396,4,438,2],[396,5,438,3],[396,6,438,4],[397,4,439,2],[397,8,439,8,"navigation"],[397,18,439,18],[397,21,439,21],[397,25,439,21,"useNavigationHelpers"],[397,67,439,41],[397,69,439,42],[398,6,440,4,"id"],[398,8,440,6],[398,10,440,8,"options"],[398,17,440,15],[398,18,440,16,"id"],[398,20,440,18],[399,6,441,4,"onAction"],[399,14,441,12],[400,6,442,4,"getState"],[400,14,442,12],[401,6,443,4,"emitter"],[401,13,443,11],[402,6,444,4,"router"],[402,12,444,10],[403,6,445,4,"stateRef"],[404,4,446,2],[404,5,446,3],[404,6,446,4],[405,4,447,2],[405,8,447,2,"useFocusedListenersChildrenAdapter"],[405,78,447,36],[405,80,447,37],[406,6,448,4,"navigation"],[406,16,448,14],[407,6,449,4,"focusedListeners"],[407,22,449,20],[407,24,449,22,"childListeners"],[407,38,449,36],[407,39,449,37,"focus"],[408,4,450,2],[408,5,450,3],[408,6,450,4],[409,4,451,2],[409,8,451,2,"useOnGetState"],[409,36,451,15],[409,38,451,16],[410,6,452,4,"getState"],[410,14,452,12],[411,6,453,4,"getStateListeners"],[411,23,453,21],[411,25,453,23,"keyedListeners"],[411,39,453,37],[411,40,453,38,"getState"],[412,4,454,2],[412,5,454,3],[412,6,454,4],[413,4,455,2],[413,8,455,2,"_useDescriptors"],[413,23,455,2],[413,26,458,6],[413,30,458,6,"useDescriptors"],[413,61,458,20],[413,63,458,21],[414,8,459,4,"state"],[414,13,459,9],[415,8,460,4,"screens"],[415,15,460,11],[416,8,461,4,"navigation"],[416,18,461,14],[417,8,462,4,"screenOptions"],[417,21,462,17],[418,8,463,4,"screenLayout"],[418,20,463,16],[419,8,464,4,"onAction"],[419,16,464,12],[420,8,465,4,"getState"],[420,16,465,12],[421,8,466,4,"setState"],[421,16,466,12],[422,8,467,4,"onRouteFocus"],[422,20,467,16],[423,8,468,4,"addListener"],[423,19,468,15],[424,8,469,4,"addKeyedListener"],[424,24,469,20],[425,8,470,4,"router"],[425,14,470,10],[426,8,471,4],[427,8,472,4,"emitter"],[428,6,473,2],[428,7,473,3],[428,8,473,4],[429,6,456,4,"describe"],[429,14,456,12],[429,17,456,12,"_useDescriptors"],[429,32,456,12],[429,33,456,4,"describe"],[429,41,456,12],[430,6,457,4,"descriptors"],[430,17,457,15],[430,20,457,15,"_useDescriptors"],[430,35,457,15],[430,36,457,4,"descriptors"],[430,47,457,15],[431,4,474,2],[431,8,474,2,"useCurrentRender"],[431,42,474,18],[431,44,474,19],[432,6,475,4,"state"],[432,11,475,9],[433,6,476,4,"navigation"],[433,16,476,14],[434,6,477,4,"descriptors"],[435,4,478,2],[435,5,478,3],[435,6,478,4],[436,4,479,2],[436,8,479,8,"NavigationContent"],[436,25,479,25],[436,28,479,28],[436,32,479,28,"useComponent"],[436,58,479,40],[436,60,479,41,"children"],[436,68,479,49],[436,72,479,53],[437,6,480,4],[437,10,480,10,"element"],[437,17,480,17],[437,20,480,20,"layout"],[437,26,480,26],[437,30,480,30],[437,34,480,34],[437,37,480,37,"layout"],[437,43,480,43],[437,44,480,44],[438,8,481,6,"state"],[438,13,481,11],[439,8,482,6,"descriptors"],[439,19,482,17],[440,8,483,6,"navigation"],[440,18,483,16],[441,8,484,6,"children"],[442,6,485,4],[442,7,485,5],[442,8,485,6],[442,11,485,9,"children"],[442,19,485,17],[443,6,486,4],[443,13,486,11],[443,26,486,24],[443,30,486,24,"_jsx"],[443,45,486,28],[443,47,486,29,"NavigationHelpersContext"],[443,97,486,53],[443,98,486,54,"Provider"],[443,106,486,62],[443,108,486,64],[444,8,487,6,"value"],[444,13,487,11],[444,15,487,13,"navigation"],[444,25,487,23],[445,8,488,6,"children"],[445,16,488,14],[445,18,488,16],[445,31,488,29],[445,35,488,29,"_jsx"],[445,50,488,33],[445,52,488,34,"PreventRemoveProvider"],[445,96,488,55],[445,98,488,57],[446,10,489,8,"children"],[446,18,489,16],[446,20,489,18,"element"],[447,8,490,6],[447,9,490,7],[448,6,491,4],[448,7,491,5],[448,8,491,6],[449,4,492,2],[449,5,492,3],[449,6,492,4],[450,4,493,2],[450,11,493,9],[451,6,494,4,"state"],[451,11,494,9],[452,6,495,4,"navigation"],[452,16,495,14],[453,6,496,4,"describe"],[453,14,496,12],[454,6,497,4,"descriptors"],[454,17,497,15],[455,6,498,4,"NavigationContent"],[456,4,499,2],[456,5,499,3],[457,2,500,0],[458,0,500,1],[458,3]],"functionMap":{"names":["<global>","isScreen","isGroup","isValidKey","getRouteConfigsFromChildren","React.Children.toArray.reduce$argument_0","configs.forEach$argument_0","useNavigationBuilder","useLazyValue$argument_0","routeConfigs.every$argument_0","routeConfigs.reduce$argument_0","routeConfigs.map$argument_0","routeNames.reduce$argument_0","screens.curr.keys.map$argument_0","isStateValid","isStateInitialized","useLatestCallback$argument_0","React.useMemo$argument_0","React.useEffect$argument_0","Object.keys.filter$argument_0","useScheduleUpdate$argument_0","<anonymous>","useIsomorphicLayoutEffect$argument_0","useEventEmitter$argument_0","state.routes.find$argument_0","routeNames.map$argument_0","map$argument_0","Object.keys.filter.map$argument_0","concat.filter$argument_0","listeners.forEach$argument_0","useComponent$argument_0"],"mappings":"AAA;iBCqC;CDE;gBEC;CFE;mBGC,iEH;oCIO;0DCC;GDsC;oBEE;KFuC;CJG;OOS;8BCa;4DCC,qDD;GDY;sCGC;GHM;sCIC,2BJ;yCKC;uCCC,gBD;GLE;2CKC;GLM;2CKC;ILE;yCOI,+DP;+CQC,4ER;qCSU;GTQ;uEUC;oDLC;KKU;GVsC;kBWE;GXE;wDYc,yFZ;kBWI;GXE;oBa8B;GbK;kBWM;WGW;KHM;GXE;4BeS;GfE;qCSC;GTG;kCgBC;gCCI,+BD;qDJM,4BI;2CEQ;KFK,OG;2CPK,uBO,MC,mBD;KHC;YKG,iDL;sBMC,yBN;GhBC;kBWK;GXO;yCuBqE;GvBa;CPQ"}},"type":"js/module"}]}