{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1450,"column":0,"index":49626}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1450,"column":0,"index":49626}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"@supabase/supabase-js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":53,"index":53}}],"key":"3wCxg1yjgR3GPuzJMKlMmNBAOKg="}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":54},"end":{"line":2,"column":69,"index":123}}],"key":"6eZFbfKht0uO2NEVT/d8+i8B0s8="}},{"name":"react-native-url-polyfill/auto","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":124},"end":{"line":3,"column":40,"index":164}}],"key":"7eMwYVBvJXC+KhgC6BpVkxtEEVQ="}},{"name":"uuid","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":165},"end":{"line":4,"column":36,"index":201}}],"key":"SONGLL7t2bcM7ZVwLi4mLOuiF9o="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.supabase = exports.default = undefined;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _supabaseJs = require(_dependencyMap[2]);\n  var _asyncStorage = _interopRequireDefault(require(_dependencyMap[3]));\n  require(_dependencyMap[4]);\n  var _uuid = require(_dependencyMap[5]);\n  // Configuration Supabase\n  var supabaseUrl = 'https://xcljahinisqetnsyjmvc.supabase.co';\n  var supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhjbGphaGluaXNxZXRuc3lqbXZjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU1MTgwMzcsImV4cCI6MjA3MTA5NDAzN30.D9bpEubfMSF-MOE3UQs1_Jr8DDx479byvhEgxVeh8xU';\n\n  // Initialiser le client Supabase avec configuration optimisée pour mobile\n  var supabase = exports.supabase = (0, _supabaseJs.createClient)(supabaseUrl, supabaseKey, {\n    auth: {\n      storage: _asyncStorage.default,\n      autoRefreshToken: true,\n      persistSession: true,\n      detectSessionInUrl: false\n    },\n    global: {\n      headers: {\n        'X-Client-Info': 'inovie-scan-mobile'\n      }\n    },\n    db: {\n      schema: 'public'\n    },\n    realtime: {\n      params: {\n        eventsPerSecond: 10\n      }\n    }\n  });\n\n  // Clés pour le stockage local\n  var AUTH_TOKEN_KEY = 'supabase_auth_token';\n  var USER_DATA_KEY = 'supabase_user_data';\n  var SupabaseService = {\n    // Authentification\n    login: function () {\n      var _ref = (0, _asyncToGenerator2.default)(function* (email, password) {\n        try {\n          console.log('Tentative de connexion avec Supabase:', email);\n\n          // Fermer toute session existante avant la connexion\n          try {\n            yield SupabaseService.closeCurrentSession();\n            console.log('Session précédente fermée automatiquement');\n          } catch (sessionError) {\n            console.log('Pas de session active à fermer ou erreur:', sessionError);\n          }\n\n          // Tentative de connexion avec Supabase\n          var _yield$supabase$auth$ = yield supabase.auth.signInWithPassword({\n              email: email,\n              password: password\n            }),\n            data = _yield$supabase$auth$.data,\n            error = _yield$supabase$auth$.error;\n          if (error) {\n            console.error('Erreur de connexion Supabase:', error);\n            throw error;\n          }\n          console.log('Connexion réussie avec Supabase:', {\n            email: data.user.email,\n            id: data.user.id\n          });\n\n          // Stocker les informations utilisateur\n          try {\n            yield _asyncStorage.default.setItem(AUTH_TOKEN_KEY, data.session.access_token);\n            yield _asyncStorage.default.setItem(USER_DATA_KEY, JSON.stringify({\n              email: data.user.email,\n              uid: data.user.id\n            }));\n            console.log('Informations utilisateur stockées avec succès');\n          } catch (storageError) {\n            console.error('Erreur lors du stockage des informations utilisateur:', storageError);\n          }\n          return data.user;\n        } catch (error) {\n          console.error('Erreur détaillée de connexion:', error);\n          throw error;\n        }\n      });\n      return function login(_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    logout: function () {\n      var _ref2 = (0, _asyncToGenerator2.default)(function* () {\n        try {\n          yield supabase.auth.signOut();\n          yield _asyncStorage.default.removeItem(AUTH_TOKEN_KEY);\n          yield _asyncStorage.default.removeItem(USER_DATA_KEY);\n          console.log('Déconnexion réussie');\n        } catch (error) {\n          console.error('Erreur de déconnexion:', error);\n          throw error;\n        }\n      });\n      return function logout() {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    register: function () {\n      var _ref3 = (0, _asyncToGenerator2.default)(function* (email, password) {\n        var selasId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n        try {\n          // Créer l'utilisateur avec Supabase Auth\n          var _yield$supabase$auth$2 = yield supabase.auth.signUp({\n              email: email,\n              password: password\n            }),\n            data = _yield$supabase$auth$2.data,\n            error = _yield$supabase$auth$2.error;\n          if (error) {\n            console.error('Erreur d\\'inscription Supabase:', error);\n            throw error;\n          }\n          var user = data.user;\n\n          // Si pas de selasId fourni, essayer de trouver une SELAS associée à cet email\n          var finalSelasId = selasId;\n          if (!finalSelasId) {\n            var _yield$supabase$from$ = yield supabase.from('selas').select('id').contains('user_emails', [email]).single(),\n              selasData = _yield$supabase$from$.data;\n            if (selasData) {\n              finalSelasId = selasData.id;\n            }\n          }\n\n          // Créer un profil utilisateur\n          var userProfile = {\n            id: user.id,\n            email: user.email,\n            selas_id: finalSelasId,\n            role: 'user',\n            created_at: new Date().toISOString()\n          };\n\n          // Enregistrer le profil dans la table users\n          var _yield$supabase$from$2 = yield supabase.from('users').insert([userProfile]),\n            profileError = _yield$supabase$from$2.error;\n          if (profileError) {\n            console.error('Erreur création profil:', profileError);\n            throw profileError;\n          }\n\n          // Stocker le selasId localement\n          if (finalSelasId) {\n            yield _asyncStorage.default.setItem('user_selas_id', finalSelasId);\n          }\n          return {\n            user,\n            profile: userProfile\n          };\n        } catch (error) {\n          console.error('Erreur d\\'inscription:', error);\n          throw error;\n        }\n      });\n      return function register(_x3, _x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    getCurrentUser: function () {\n      var _ref4 = (0, _asyncToGenerator2.default)(function* () {\n        try {\n          var _yield$supabase$auth$3 = yield supabase.auth.getUser(),\n            user = _yield$supabase$auth$3.data.user;\n          if (!user) {\n            var userData = yield _asyncStorage.default.getItem(USER_DATA_KEY);\n            return userData ? JSON.parse(userData) : null;\n          }\n\n          // Mettre à jour AsyncStorage si nécessaire\n          var userToSave = {\n            email: user.email,\n            uid: user.id\n          };\n          yield _asyncStorage.default.setItem(USER_DATA_KEY, JSON.stringify(userToSave));\n          yield _asyncStorage.default.setItem(AUTH_TOKEN_KEY, user.aud || '');\n          return userToSave;\n        } catch (error) {\n          console.error('Erreur lors de la récupération de l\\'utilisateur:', error);\n          return null;\n        }\n      });\n      return function getCurrentUser() {\n        return _ref4.apply(this, arguments);\n      };\n    }(),\n    getCurrentUserId: function () {\n      var _ref5 = (0, _asyncToGenerator2.default)(function* () {\n        try {\n          var userData = yield SupabaseService.getCurrentUser();\n          if (!userData || !userData.uid) {\n            console.warn('Aucun utilisateur authentifié ou UID manquant');\n            return null;\n          }\n          return userData.uid;\n        } catch (error) {\n          console.error('Erreur lors de la récupération de l\\'ID utilisateur:', error);\n          return null;\n        }\n      });\n      return function getCurrentUserId() {\n        return _ref5.apply(this, arguments);\n      };\n    }(),\n    isAuthenticated: function () {\n      var _ref6 = (0, _asyncToGenerator2.default)(function* () {\n        try {\n          var _yield$supabase$auth$4 = yield supabase.auth.getSession(),\n            session = _yield$supabase$auth$4.data.session;\n          return !!session;\n        } catch (error) {\n          console.error('Erreur lors de la vérification d\\'authentification:', error);\n          return false;\n        }\n      });\n      return function isAuthenticated() {\n        return _ref6.apply(this, arguments);\n      };\n    }(),\n    // Obtenir la SELAS d'un utilisateur\n    getUserSelas: function () {\n      var _ref7 = (0, _asyncToGenerator2.default)(function* () {\n        try {\n          // D'abord vérifier si le selasId est stocké localement\n          var selasId = yield _asyncStorage.default.getItem('user_selas_id');\n          if (selasId) {\n            console.log('SELAS ID récupéré du stockage local:', selasId);\n            return selasId;\n          }\n\n          // Sinon, essayer de le récupérer depuis Supabase\n          var userData = yield SupabaseService.getCurrentUser();\n          if (!userData) throw new Error('Utilisateur non authentifié');\n\n          // Vérifier si l'utilisateur a un selasId dans sa table users\n          var _yield$supabase$from$3 = yield supabase.from('users').select('selas_id').eq('id', userData.uid).single(),\n            userProfile = _yield$supabase$from$3.data;\n          if (userProfile?.selas_id) {\n            var _selasId = userProfile.selas_id;\n            // Stocker pour utilisation future\n            yield _asyncStorage.default.setItem('user_selas_id', _selasId);\n            console.log('SELAS ID récupéré du profil et stocké localement:', _selasId);\n            return _selasId;\n          }\n\n          // Si aucun selasId n'est trouvé, vérifier dans la table 'selas'\n          var _yield$supabase$from$4 = yield supabase.from('selas').select('id').contains('user_emails', [userData.email]).single(),\n            selasData = _yield$supabase$from$4.data;\n          if (selasData) {\n            var _selasId2 = selasData.id;\n            // Mettre à jour le profil utilisateur\n            yield supabase.from('users').update({\n              selas_id: _selasId2\n            }).eq('id', userData.uid);\n\n            // Stocker pour utilisation future\n            yield _asyncStorage.default.setItem('user_selas_id', _selasId2);\n            console.log('SELAS ID trouvé via email et stocké:', _selasId2);\n            return _selasId2;\n          }\n          console.warn('Aucun SELAS ID trouvé pour l\\'utilisateur');\n          return '';\n        } catch (error) {\n          console.error('Erreur lors de la récupération de la SELAS:', error);\n          return '';\n        }\n      });\n      return function getUserSelas() {\n        return _ref7.apply(this, arguments);\n      };\n    }(),\n    // Récupérer toutes les SELAS disponibles\n    getAllSelas: function () {\n      var _ref8 = (0, _asyncToGenerator2.default)(function* () {\n        try {\n          console.log('Récupération de toutes les SELAS...');\n          var _yield$supabase$from$5 = yield supabase.from('selas').select('*').order('nom'),\n            selasList = _yield$supabase$from$5.data,\n            error = _yield$supabase$from$5.error;\n          if (error) {\n            console.error('Erreur récupération SELAS:', error);\n            throw error;\n          }\n          console.log(`${selasList.length} SELAS récupérées:`, selasList.map(s => s.nom));\n          return selasList.map(selas => ({\n            id: selas.id,\n            nom: selas.nom || 'SELAS sans nom',\n            description: selas.description || '',\n            code: selas.code || '',\n            active: selas.active !== false,\n            dateCreation: selas.created_at,\n            dateModification: selas.updated_at,\n            accesPages: selas.acces_pages || {},\n            sitesAutorises: selas.sites_autorises || []\n          }));\n        } catch (error) {\n          console.error('Erreur lors de la récupération des SELAS:', error);\n          throw error;\n        }\n      });\n      return function getAllSelas() {\n        return _ref8.apply(this, arguments);\n      };\n    }(),\n    // Session de travail\n    saveSessionData: function () {\n      var _ref9 = (0, _asyncToGenerator2.default)(function* (sessionData) {\n        try {\n          var userData = yield SupabaseService.getCurrentUser();\n          if (!userData) throw new Error('Utilisateur non authentifié');\n\n          // Récupérer le selasId pour l'associer aux données\n          var selasId = yield SupabaseService.getUserSelas();\n          var sessionInfo = {\n            user_id: userData.uid,\n            tournee_id: sessionData.tournee?.id || null,\n            vehicule_id: sessionData.vehicule?.id || null,\n            pole_id: sessionData.pole?.id || null,\n            status: 'active',\n            selas_id: selasId || null,\n            visited_site_identifiers: [],\n            start_time: new Date().toISOString(),\n            created_at: new Date().toISOString()\n          };\n\n          // Sauvegarder la session dans Supabase\n          var _yield$supabase$from$6 = yield supabase.from('sessions').insert([sessionInfo]).select().single(),\n            data = _yield$supabase$from$6.data,\n            error = _yield$supabase$from$6.error;\n          if (error) {\n            console.error('Erreur sauvegarde session:', error);\n            throw error;\n          }\n\n          // Stocker l'ID de session localement\n          yield _asyncStorage.default.setItem('current_session_id', data.id);\n          return data;\n        } catch (error) {\n          console.error('Erreur lors de la sauvegarde de la session:', error);\n          throw error;\n        }\n      });\n      return function saveSessionData(_x5) {\n        return _ref9.apply(this, arguments);\n      };\n    }(),\n    getCurrentSession: function () {\n      var _ref0 = (0, _asyncToGenerator2.default)(function* () {\n        try {\n          // Vérifier s'il existe une session active dans le stockage local\n          var sessionId = yield _asyncStorage.default.getItem('current_session_id');\n          if (!sessionId) return null;\n\n          // Récupérer les détails de la session depuis Supabase\n          var _yield$supabase$from$7 = yield supabase.from('sessions').select('*').eq('id', sessionId).eq('status', 'active').single(),\n            sessionData = _yield$supabase$from$7.data,\n            error = _yield$supabase$from$7.error;\n          if (error || !sessionData) {\n            // Session non trouvée, supprimer la référence locale\n            yield _asyncStorage.default.removeItem('current_session_id');\n            return null;\n          }\n          return sessionData;\n        } catch (error) {\n          console.error('Erreur lors de la récupération de la session:', error);\n          return null;\n        }\n      });\n      return function getCurrentSession() {\n        return _ref0.apply(this, arguments);\n      };\n    }(),\n    closeCurrentSession: function () {\n      var _ref1 = (0, _asyncToGenerator2.default)(function* () {\n        try {\n          var sessionId = yield _asyncStorage.default.getItem('current_session_id');\n          if (!sessionId) return false;\n\n          // Mettre à jour la session comme terminée\n          var _yield$supabase$from$8 = yield supabase.from('sessions').update({\n              end_time: new Date().toISOString(),\n              status: 'completed',\n              updated_at: new Date().toISOString()\n            }).eq('id', sessionId),\n            error = _yield$supabase$from$8.error;\n          if (error) {\n            console.error('Erreur fermeture session:', error);\n            throw error;\n          }\n\n          // Supprimer la référence locale\n          yield _asyncStorage.default.removeItem('current_session_id');\n          return true;\n        } catch (error) {\n          console.error('Erreur lors de la fermeture de la session:', error);\n          throw error;\n        }\n      });\n      return function closeCurrentSession() {\n        return _ref1.apply(this, arguments);\n      };\n    }(),\n    // Récupérer les véhicules\n    getVehicules: function () {\n      var _ref10 = (0, _asyncToGenerator2.default)(function* () {\n        try {\n          console.log('Tentative de récupération des véhicules...');\n          var selasId = yield SupabaseService.getUserSelas();\n          var query = supabase.from('vehicules').select('*');\n          if (selasId) {\n            query = query.eq('selas_id', selasId);\n          }\n          var _yield$query = yield query,\n            vehicules = _yield$query.data,\n            error = _yield$query.error;\n          if (error) {\n            console.error('Erreur récupération véhicules:', error);\n            throw error;\n          }\n          if (!vehicules || vehicules.length === 0) {\n            console.log('Aucun véhicule trouvé, retour des données par défaut');\n            return [{\n              id: 'V1',\n              immatriculation: 'AB-123-CD',\n              modele: 'Renault Master',\n              type: 'Utilitaire',\n              selas_id: selasId\n            }, {\n              id: 'V2',\n              immatriculation: 'EF-456-GH',\n              modele: 'Citroën Jumper',\n              type: 'Fourgon',\n              selas_id: selasId\n            }];\n          }\n          return vehicules;\n        } catch (error) {\n          console.error('Erreur lors de la récupération des véhicules:', error);\n          var _selasId3 = yield SupabaseService.getUserSelas().catch(() => \"\");\n          return [{\n            id: 'V1',\n            immatriculation: 'AB-123-CD',\n            modele: 'Renault Master',\n            type: 'Utilitaire',\n            selas_id: _selasId3\n          }, {\n            id: 'V2',\n            immatriculation: 'EF-456-GH',\n            modele: 'Citroën Jumper',\n            type: 'Fourgon',\n            selas_id: _selasId3\n          }];\n        }\n      });\n      return function getVehicules() {\n        return _ref10.apply(this, arguments);\n      };\n    }(),\n    // Récupérer les tournées\n    getTournees: function () {\n      var _ref11 = (0, _asyncToGenerator2.default)(function* () {\n        try {\n          var selasId = yield SupabaseService.getUserSelas();\n          var query = supabase.from('tournees').select('*').order('nom');\n          if (selasId) {\n            query = query.eq('selas_id', selasId);\n          }\n          var _yield$query2 = yield query,\n            tournees = _yield$query2.data,\n            error = _yield$query2.error;\n          if (error) {\n            console.error('Erreur récupération tournées:', error);\n            throw error;\n          }\n          return tournees || [];\n        } catch (error) {\n          console.error('Erreur lors de la récupération des tournées:', error);\n          throw error;\n        }\n      });\n      return function getTournees() {\n        return _ref11.apply(this, arguments);\n      };\n    }(),\n    // Récupérer les pôles\n    getPoles: function () {\n      var _ref12 = (0, _asyncToGenerator2.default)(function* () {\n        try {\n          console.log('Tentative de récupération des pôles...');\n          var selasId = yield SupabaseService.getUserSelas();\n          var query = supabase.from('poles').select('*');\n          if (selasId) {\n            query = query.eq('selas_id', selasId);\n          }\n          var _yield$query3 = yield query,\n            poles = _yield$query3.data,\n            error = _yield$query3.error;\n          if (error) {\n            console.error('Erreur récupération pôles:', error);\n            throw error;\n          }\n          if (!poles || poles.length === 0) {\n            console.log('Aucun pôle trouvé, retour des données par défaut');\n            return [{\n              id: 'P1',\n              nom: 'Pôle Nord',\n              selas_id: selasId\n            }, {\n              id: 'P2',\n              nom: 'Pôle Centre',\n              selas_id: selasId\n            }, {\n              id: 'P3',\n              nom: 'Pôle Sud',\n              selas_id: selasId\n            }];\n          }\n          return poles;\n        } catch (error) {\n          console.error('Erreur lors de la récupération des pôles:', error);\n          var _selasId4 = yield SupabaseService.getUserSelas().catch(() => \"\");\n          return [{\n            id: 'P1',\n            nom: 'Pôle Nord',\n            selas_id: _selasId4\n          }, {\n            id: 'P2',\n            nom: 'Pôle Centre',\n            selas_id: _selasId4\n          }, {\n            id: 'P3',\n            nom: 'Pôle Sud',\n            selas_id: _selasId4\n          }];\n        }\n      });\n      return function getPoles() {\n        return _ref12.apply(this, arguments);\n      };\n    }(),\n    // Ajouter des scans/passages\n    addScans: function () {\n      var _ref13 = (0, _asyncToGenerator2.default)(function* (scansArray) {\n        console.log('addScans appelé avec:', scansArray.length, 'scans');\n        try {\n          var user = yield SupabaseService.getCurrentUser();\n          if (!user) {\n            console.log('Utilisateur non connecté lors de l\\'envoi des scans');\n            return {\n              success: false,\n              error: 'Utilisateur non connecté'\n            };\n          }\n          var userProfile = yield SupabaseService.getUserProfile();\n          var selaId = yield SupabaseService.getUserSelas();\n          var sessionData = yield SupabaseService.getCurrentSession();\n          var userName = userProfile?.nom && userProfile?.prenom ? `${userProfile.prenom} ${userProfile.nom}` : user.email;\n\n          // Formatage des données pour Supabase\n          var formattedScans = scansArray.map(scan => ({\n            id_colis: scan.idColis || scan.code || '',\n            scan_date: scan.scanDate || new Date().toISOString(),\n            operation_type: scan.operationType || 'entree',\n            session_id: scan.sessionId || '',\n            coursier_charge: userName || user.email,\n            coursier_chargeant_id: user.uid,\n            tournee: scan.tournee || sessionData?.tournee?.nom || '',\n            tournee_id: scan.tourneeId || sessionData?.tournee_id || '',\n            vehicule: scan.vehicule || sessionData?.vehicule?.immatriculation || '',\n            vehicule_id: scan.vehiculeId || sessionData?.vehicule_id || '',\n            site: scan.site || scan.siteDepart || 'Non spécifié',\n            site_depart: scan.siteDepart || scan.site || 'Non spécifié',\n            site_fin: scan.operationType === 'sortie' ? scan.siteFin || scan.siteActuel || scan.site || '' : null,\n            selas_id: selaId || null,\n            pole: scan.poleId || scan.pole || sessionData?.pole_id || '',\n            pole_name: scan.poleName || scan.pole || '',\n            location: scan.location || null,\n            status: scan.operationType === 'sortie' ? 'livré' : scan.operationType === 'visite_sans_colis' ? 'pas_de_colis' : 'en-cours',\n            created_at: new Date().toISOString()\n          }));\n          console.log('Données formatées pour Supabase:', JSON.stringify(formattedScans, null, 2));\n\n          // Insérer tous les scans en une seule opération\n          var _yield$supabase$from$9 = yield supabase.from('passages').insert(formattedScans).select(),\n            data = _yield$supabase$from$9.data,\n            error = _yield$supabase$from$9.error;\n          if (error) {\n            console.error('Erreur insertion scans:', error);\n            return {\n              success: false,\n              error: error.message\n            };\n          }\n          console.log(`✅ ${data.length} passages créés avec succès`);\n          return {\n            success: true,\n            created: data.length,\n            updated: 0\n          };\n        } catch (error) {\n          console.error('❌ Erreur lors de l\\'envoi des scans:', error);\n          return {\n            success: false,\n            error: error.message\n          };\n        }\n      });\n      return function addScans(_x6) {\n        return _ref13.apply(this, arguments);\n      };\n    }(),\n    // Récupérer le profil utilisateur\n    getUserProfile: function () {\n      var _ref14 = (0, _asyncToGenerator2.default)(function* () {\n        try {\n          var userData = yield SupabaseService.getCurrentUser();\n          if (!userData) throw new Error('Utilisateur non authentifié');\n          var _yield$supabase$from$0 = yield supabase.from('users').select('*').eq('id', userData.uid).single(),\n            profile = _yield$supabase$from$0.data,\n            error = _yield$supabase$from$0.error;\n          if (error) {\n            console.error('Erreur récupération profil:', error);\n            throw error;\n          }\n          return profile;\n        } catch (error) {\n          console.error('Erreur lors de la récupération du profil:', error);\n          throw error;\n        }\n      });\n      return function getUserProfile() {\n        return _ref14.apply(this, arguments);\n      };\n    }(),\n    // Fonction de vérification d'authentification\n    checkAuthAndRedirect: function () {\n      var _ref15 = (0, _asyncToGenerator2.default)(function* (navigation) {\n        try {\n          var userData = yield SupabaseService.getCurrentUser();\n          var isAuth = yield SupabaseService.isAuthenticated();\n          if (!userData || !isAuth) {\n            console.log('Session expirée ou utilisateur déconnecté, redirection vers la connexion');\n\n            // Effacer les données locales\n            yield _asyncStorage.default.removeItem(USER_DATA_KEY);\n            yield _asyncStorage.default.removeItem(AUTH_TOKEN_KEY);\n            yield _asyncStorage.default.removeItem('current_session_id');\n\n            // Rediriger vers l'écran de connexion\n            if (navigation) {\n              navigation.reset({\n                index: 0,\n                routes: [{\n                  name: 'Login'\n                }]\n              });\n            }\n            return false;\n          }\n          return true;\n        } catch (error) {\n          console.error('Erreur de vérification d\\'authentification:', error);\n          if (navigation) {\n            navigation.reset({\n              index: 0,\n              routes: [{\n                name: 'Login'\n              }]\n            });\n          }\n          return false;\n        }\n      });\n      return function checkAuthAndRedirect(_x7) {\n        return _ref15.apply(this, arguments);\n      };\n    }(),\n    // Fonction pour uploader un fichier vers Supabase Storage\n    uploadFile: function () {\n      var _ref16 = (0, _asyncToGenerator2.default)(function* (file) {\n        var bucketName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'documents';\n        var folderPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n        try {\n          console.log(`[Supabase] Début upload - Bucket: ${bucketName}, Dossier: ${folderPath}`);\n          if (!file) {\n            throw new Error('Fichier manquant');\n          }\n\n          // Générer un nom de fichier unique\n          var fileExt = file.name ? file.name.split('.').pop() : 'jpg';\n          var fileName = `${folderPath}/${Date.now()}-${Math.random().toString(36).substring(7)}.${fileExt}`;\n          console.log(`[Supabase] Nom de fichier généré: ${fileName}`);\n\n          // Upload vers Supabase Storage\n          var _yield$supabase$stora = yield supabase.storage.from(bucketName).upload(fileName, file, {\n              cacheControl: '3600',\n              upsert: false\n            }),\n            data = _yield$supabase$stora.data,\n            error = _yield$supabase$stora.error;\n          if (error) {\n            console.error('[Supabase] Erreur upload:', error);\n            throw error;\n          }\n\n          // Récupérer l'URL publique\n          var _supabase$storage$fro = supabase.storage.from(bucketName).getPublicUrl(fileName),\n            urlData = _supabase$storage$fro.data;\n          console.log(`[Supabase] Upload réussi, URL: ${urlData.publicUrl}`);\n          return {\n            success: true,\n            url: urlData.publicUrl,\n            path: fileName,\n            bucket: bucketName\n          };\n        } catch (error) {\n          console.error(`[Supabase] Erreur générale upload:`, error);\n          throw error;\n        }\n      });\n      return function uploadFile(_x8) {\n        return _ref16.apply(this, arguments);\n      };\n    }(),\n    // Fonction pour uploader une image depuis un URI local (React Native) - Photos de vérification mobile\n    uploadImageFromUri: function () {\n      var _ref17 = (0, _asyncToGenerator2.default)(function* (uri) {\n        var bucketName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'vehicle-checks';\n        var folderPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        try {\n          if (!uri) {\n            throw new Error('URI de l\\'image manquante');\n          }\n          console.log(`[Supabase] Début upload image depuis URI: ${uri.substring(0, 50)}...`);\n\n          // Test de connectivité simplifié - éviter les tests trop lourds sur mobile\n          console.log('[Supabase] Test de connectivité rapide...');\n          try {\n            // Test simple de connectivité réseau\n            var quickTest = yield fetch(`${supabaseUrl}/rest/v1/`, {\n              method: 'GET',\n              headers: {\n                'apikey': supabaseKey,\n                'Authorization': `Bearer ${supabaseKey}`,\n                'Content-Type': 'application/json'\n              }\n            });\n            if (!quickTest.ok) {\n              console.warn('[Supabase] Test de connectivité échoué, tentative d\\'upload direct...');\n            } else {\n              console.log('[Supabase] ✅ Test de connectivité OK');\n            }\n          } catch (connectionError) {\n            console.warn('[Supabase] Test de connectivité échoué, tentative d\\'upload direct:', connectionError.message);\n          }\n          var blob;\n          var fileExt = 'jpg';\n\n          // Gérer différents types d'URIs selon la plateforme\n          if (uri.startsWith('blob:') || uri.startsWith('data:')) {\n            // Pour les URIs blob ou data sur le web\n            if (uri.startsWith('data:')) {\n              // Convertir data URL en blob\n              var response = yield fetch(uri);\n              blob = yield response.blob();\n              fileExt = uri.split(';')[0].split('/')[1] || 'jpg';\n            } else {\n              // Pour les URIs blob, essayer de les récupérer depuis le cache\n              try {\n                var _response = yield fetch(uri);\n                blob = yield _response.blob();\n              } catch (blobError) {\n                console.warn('[Supabase] Erreur avec URI blob, tentative alternative:', blobError);\n                // Fallback: essayer de créer un blob vide et demander à l'utilisateur de reprendre la photo\n                throw new Error('Format d\\'image non supporté sur le web. Veuillez reprendre la photo.');\n              }\n            }\n          } else if (uri.startsWith('file://') || uri.startsWith('content://')) {\n            // Pour les URIs de fichiers sur mobile\n            var _response2 = yield fetch(uri);\n            if (!_response2.ok) {\n              throw new Error(`Erreur lors de la lecture du fichier: ${_response2.status}`);\n            }\n            blob = yield _response2.blob();\n            fileExt = uri.split('.').pop() || 'jpg';\n          } else {\n            // Tentative générique\n            try {\n              var _response3 = yield fetch(uri);\n              if (!_response3.ok) {\n                throw new Error(`Erreur lors de la lecture du fichier: ${_response3.status}`);\n              }\n              blob = yield _response3.blob();\n              fileExt = uri.split('.').pop() || 'jpg';\n            } catch (fetchError) {\n              console.error('[Supabase] Erreur fetch générique:', fetchError);\n              throw new Error('Impossible de lire le fichier image. Vérifiez que l\\'image est accessible.');\n            }\n          }\n          if (!blob) {\n            throw new Error('Impossible de créer le blob de l\\'image');\n          }\n\n          // Créer un objet File à partir du blob\n          // CORRECTION : Éviter la duplication de chemins en construisant un nom de fichier unique\n          var fileName;\n          if (folderPath) {\n            // Si folderPath est fourni, l'utiliser comme dossier de base\n            // Nettoyer le folderPath pour éviter les caractères problématiques\n            var cleanFolderPath = folderPath.replace(/[^a-zA-Z0-9_-]/g, '_');\n            var timestamp = Date.now();\n            var randomId = Math.random().toString(36).substring(2, 8);\n            fileName = `${cleanFolderPath}/${timestamp}_${randomId}.${fileExt}`;\n          } else {\n            // Pas de folderPath, créer un nom basé sur la date et un ID unique\n            var _timestamp = Date.now();\n            var _randomId = Math.random().toString(36).substring(2, 8);\n            fileName = `${_timestamp}_${_randomId}.${fileExt}`;\n          }\n          console.log(`[Supabase] Nom de fichier construit: ${fileName}`);\n          var file = new File([blob], fileName, {\n            type: `image/${fileExt}`\n          });\n          console.log(`[Supabase] Upload vers bucket: ${bucketName}, fichier: ${fileName}`);\n\n          // Upload vers Supabase Storage avec fallback REST\n          var uploadResult;\n          var uploadError;\n          try {\n            console.log(`[Supabase] Tentative d'upload vers bucket: ${bucketName}`);\n            var _yield$supabase$stora2 = yield supabase.storage.from(bucketName).upload(fileName, file, {\n                cacheControl: '3600',\n                upsert: false\n              }),\n              data = _yield$supabase$stora2.data,\n              error = _yield$supabase$stora2.error;\n            uploadResult = data;\n            uploadError = error;\n          } catch (uploadException) {\n            console.error('[Supabase] Exception lors de l\\'upload SDK:', uploadException);\n            uploadError = uploadException;\n          }\n          if (uploadError) {\n            // Log moins verbeux pour les erreurs SDK attendues sur mobile\n            console.log('[Supabase] SDK échoué, passage au fallback REST...');\n\n            // Fallback 1: Essayer avec l'API REST directe\n            console.log('[Supabase] Tentative d\\'upload via API REST directe...');\n            try {\n              var uploadUrl = `${supabaseUrl}/storage/v1/object/${bucketName}/${fileName}`;\n              console.log(`[Supabase] Upload REST vers: ${uploadUrl}`);\n\n              // Pour React Native, nous devons utiliser la syntaxe spécifique\n              var formData = new FormData();\n              formData.append('file', {\n                uri: uri,\n                type: `image/${fileExt}`,\n                name: fileName\n              });\n              var _response4 = yield fetch(uploadUrl, {\n                method: 'POST',\n                headers: {\n                  'Authorization': `Bearer ${supabaseKey}`,\n                  'apikey': supabaseKey\n                },\n                body: formData\n              });\n              if (!_response4.ok) {\n                var errorText = yield _response4.text();\n                console.error(`[Supabase] Erreur upload REST vers ${bucketName}:`, _response4.status, errorText);\n                throw new Error(`Upload REST échoué: ${_response4.status} ${errorText}`);\n              }\n              console.log(`[Supabase] ✅ Upload réussi via API REST vers ${bucketName}`);\n\n              // Récupérer l'URL publique\n              var publicUrl = `${supabaseUrl}/storage/v1/object/public/${bucketName}/${fileName}`;\n              return {\n                success: true,\n                url: publicUrl,\n                path: fileName,\n                bucket: bucketName,\n                method: 'REST'\n              };\n            } catch (restError) {\n              console.error('[Supabase] Erreur upload REST:', restError);\n\n              // Fallback 2: Essayer le bucket par défaut \"documents\"\n              if (bucketName !== 'documents') {\n                console.log('[Supabase] Tentative d\\'upload vers le bucket par défaut \"documents\"...');\n                try {\n                  var fallbackFileName = `fallback/${Date.now()}_${Math.random().toString(36).substring(2, 8)}.${fileExt}`;\n\n                  // Essayer d'abord avec le SDK\n                  var _yield$supabase$stora3 = yield supabase.storage.from('documents').upload(fallbackFileName, file, {\n                      cacheControl: '3600',\n                      upsert: false\n                    }),\n                    fallbackData = _yield$supabase$stora3.data,\n                    fallbackError = _yield$supabase$stora3.error;\n                  if (fallbackError) {\n                    console.error('[Supabase] Erreur upload fallback SDK:', fallbackError);\n                    throw new Error(`Upload échoué sur tous les buckets: ${uploadError.message}`);\n                  } else {\n                    console.log('[Supabase] ✅ Upload réussi sur le bucket fallback \"documents\"');\n\n                    // Récupérer l'URL publique du bucket fallback\n                    var _supabase$storage$fro2 = supabase.storage.from('documents').getPublicUrl(fallbackFileName),\n                      fallbackUrlData = _supabase$storage$fro2.data;\n                    return {\n                      success: true,\n                      url: fallbackUrlData.publicUrl,\n                      path: fallbackFileName,\n                      bucket: 'documents',\n                      isFallback: true\n                    };\n                  }\n                } catch (fallbackException) {\n                  console.error('[Supabase] Exception upload fallback:', fallbackException);\n                  throw new Error(`Upload échoué sur tous les buckets: ${uploadError.message}`);\n                }\n              } else {\n                throw new Error(`Upload échoué sur tous les buckets: ${uploadError.message}`);\n              }\n            }\n          }\n\n          // Récupérer l'URL publique\n          var _supabase$storage$fro3 = supabase.storage.from(bucketName).getPublicUrl(fileName),\n            urlData = _supabase$storage$fro3.data;\n          console.log(`[Supabase] Upload réussi, URL: ${urlData.publicUrl}`);\n          return {\n            success: true,\n            url: urlData.publicUrl,\n            path: fileName,\n            bucket: bucketName\n          };\n        } catch (error) {\n          console.error(`[Supabase] Erreur générale upload image:`, error);\n          throw error;\n        }\n      });\n      return function uploadImageFromUri(_x9) {\n        return _ref17.apply(this, arguments);\n      };\n    }(),\n    // Fonction spécifique pour uploader les documents des véhicules\n    uploadVehicleDocument: function () {\n      var _ref18 = (0, _asyncToGenerator2.default)(function* (file, vehicleId) {\n        var documentType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'general';\n        try {\n          console.log(`[Supabase] Upload document véhicule - Type: ${documentType}, Véhicule: ${vehicleId}`);\n          if (!file) {\n            throw new Error('Fichier manquant');\n          }\n\n          // Générer un nom de fichier unique avec métadonnées\n          var fileExt = file.name ? file.name.split('.').pop() : 'pdf';\n          var fileName = `vehicules/${vehicleId}/${documentType}/${Date.now()}-${Math.random().toString(36).substring(7)}.${fileExt}`;\n          console.log(`[Supabase] Nom de fichier généré: ${fileName}`);\n\n          // Upload vers le bucket vehicle-documents\n          var _yield$supabase$stora4 = yield supabase.storage.from('vehicle-documents').upload(fileName, file, {\n              cacheControl: '3600',\n              upsert: false\n            }),\n            uploadData = _yield$supabase$stora4.data,\n            uploadError = _yield$supabase$stora4.error;\n          if (uploadError) {\n            console.error('[Supabase] Erreur upload document véhicule:', uploadError);\n            throw uploadError;\n          }\n\n          // Récupérer l'URL publique\n          var _supabase$storage$fro4 = supabase.storage.from('vehicle-documents').getPublicUrl(fileName),\n            urlData = _supabase$storage$fro4.data;\n          console.log(`[Supabase] Upload document véhicule réussi, URL: ${urlData.publicUrl}`);\n          return {\n            success: true,\n            url: urlData.publicUrl,\n            path: fileName,\n            bucket: 'vehicle-documents',\n            vehicleId: vehicleId,\n            documentType: documentType\n          };\n        } catch (error) {\n          console.error(`[Supabase] Erreur générale upload document véhicule:`, error);\n          throw error;\n        }\n      });\n      return function uploadVehicleDocument(_x0, _x1) {\n        return _ref18.apply(this, arguments);\n      };\n    }(),\n    // Fonction pour uploader une image de document véhicule depuis URI\n    uploadVehicleDocumentFromUri: function () {\n      var _ref19 = (0, _asyncToGenerator2.default)(function* (uri, vehicleId) {\n        var documentType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'general';\n        try {\n          console.log(`[Supabase] Upload document véhicule depuis URI - Type: ${documentType}, Véhicule: ${vehicleId}`);\n          if (!uri) {\n            throw new Error('URI du document manquant');\n          }\n\n          // Convertir l'URI en blob\n          var response = yield fetch(uri);\n          if (!response.ok) {\n            throw new Error(`Erreur lors de la lecture du fichier: ${response.status}`);\n          }\n          var blob = yield response.blob();\n          console.log(`[Supabase] Blob créé, taille: ${blob.size} bytes`);\n\n          // Créer un objet File à partir du blob\n          var fileExt = uri.split('.').pop() || 'jpg';\n          var fileName = `vehicules/${vehicleId}/${documentType}/${Date.now()}-${Math.random().toString(36).substring(7)}.${fileExt}`;\n          var file = new File([blob], fileName, {\n            type: `image/${fileExt}`\n          });\n\n          // Upload vers le bucket vehicle-documents\n          var _yield$supabase$stora5 = yield supabase.storage.from('vehicle-documents').upload(fileName, file, {\n              cacheControl: '3600',\n              upsert: false\n            }),\n            uploadData = _yield$supabase$stora5.data,\n            uploadError = _yield$supabase$stora5.error;\n          if (uploadError) {\n            console.error('[Supabase] Erreur upload document véhicule:', uploadError);\n            throw uploadError;\n          }\n\n          // Récupérer l'URL publique\n          var _supabase$storage$fro5 = supabase.storage.from('vehicle-documents').getPublicUrl(fileName),\n            urlData = _supabase$storage$fro5.data;\n          console.log(`[Supabase] Upload document véhicule réussi, URL: ${urlData.publicUrl}`);\n          return {\n            success: true,\n            url: urlData.publicUrl,\n            path: fileName,\n            bucket: 'vehicle-documents',\n            vehicleId: vehicleId,\n            documentType: documentType\n          };\n        } catch (error) {\n          console.error(`[Supabase] Erreur générale upload document véhicule:`, error);\n          throw error;\n        }\n      });\n      return function uploadVehicleDocumentFromUri(_x10, _x11) {\n        return _ref19.apply(this, arguments);\n      };\n    }(),\n    // Fonction pour tester la connectivité réseau spécifique mobile\n    testMobileNetwork: function () {\n      var _ref20 = (0, _asyncToGenerator2.default)(function* () {\n        try {\n          console.log('[Supabase] Test de connectivité réseau mobile...');\n\n          // Détecter si on est sur web ou mobile\n          var isWeb = typeof window !== 'undefined' && window.location?.protocol === 'http:';\n          console.log('[Supabase] Plateforme détectée:', isWeb ? 'Web' : 'Mobile');\n\n          // Test 1: Connectivité internet de base\n          var internetTest;\n          if (isWeb) {\n            // Sur web, utiliser un endpoint qui accepte CORS\n            try {\n              internetTest = yield fetch('https://httpbin.org/status/200', {\n                method: 'HEAD',\n                timeout: 5000\n              });\n            } catch (corsError) {\n              // Si httpbin échoue aussi, essayer Supabase directement\n              console.log('[Supabase] Test internet via Supabase (fallback web)...');\n              internetTest = yield fetch(`${supabaseUrl}/rest/v1/`, {\n                method: 'HEAD',\n                headers: {\n                  'apikey': supabaseKey,\n                  'Content-Type': 'application/json'\n                },\n                timeout: 5000\n              });\n            }\n          } else {\n            // Sur mobile, utiliser Google comme avant\n            internetTest = yield fetch('https://www.google.com', {\n              method: 'HEAD',\n              timeout: 5000\n            });\n          }\n          console.log('[Supabase] Test internet:', internetTest.ok ? 'OK' : 'ÉCHEC');\n\n          // Test 2: Connectivité Supabase directe\n          var supabaseTest = yield fetch(`${supabaseUrl}/rest/v1/`, {\n            method: 'GET',\n            headers: {\n              'apikey': supabaseKey,\n              'Content-Type': 'application/json'\n            },\n            timeout: 10000\n          });\n          console.log('[Supabase] Test Supabase API:', supabaseTest.ok ? 'OK' : 'ÉCHEC');\n\n          // Test 3: Test DNS Storage\n          var dnsTest;\n          try {\n            dnsTest = yield fetch(`${supabaseUrl}/storage/v1/bucket`, {\n              method: 'GET',\n              headers: {\n                'apikey': supabaseKey,\n                'Authorization': `Bearer ${supabaseKey}`,\n                'Content-Type': 'application/json'\n              },\n              timeout: 10000\n            });\n            console.log('[Supabase] Test DNS Storage:', dnsTest.ok ? 'OK' : 'ÉCHEC');\n          } catch (dnsError) {\n            console.error('[Supabase] Erreur DNS Storage:', dnsError.message);\n            dnsTest = {\n              ok: false\n            };\n          }\n          return {\n            internet: internetTest.ok,\n            supabase: supabaseTest.ok,\n            dns: dnsTest.ok,\n            platform: isWeb ? 'web' : 'mobile'\n          };\n        } catch (error) {\n          console.error('[Supabase] Erreur test réseau mobile:', error);\n          return {\n            internet: false,\n            supabase: false,\n            dns: false,\n            error: error.message\n          };\n        }\n      });\n      return function testMobileNetwork() {\n        return _ref20.apply(this, arguments);\n      };\n    }(),\n    // Fonction de diagnostic simple pour tester l'accès aux buckets\n    testBucketAccess: function () {\n      var _ref21 = (0, _asyncToGenerator2.default)(function* () {\n        var bucketName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'vehicle-checks';\n        try {\n          console.log(`[Supabase] Test d'accès simple au bucket: ${bucketName}`);\n\n          // Test 1: Essayer de lister les fichiers (lecture)\n          try {\n            var _yield$supabase$stora6 = yield supabase.storage.from(bucketName).list('', {\n                limit: 1\n              }),\n              files = _yield$supabase$stora6.data,\n              listError = _yield$supabase$stora6.error;\n            if (listError) {\n              console.log(`[Supabase] Erreur lecture bucket ${bucketName}:`, listError.message);\n              return {\n                success: false,\n                error: listError.message,\n                operation: 'read'\n              };\n            } else {\n              console.log(`[Supabase] ✅ Lecture bucket ${bucketName} OK`);\n              return {\n                success: true,\n                operation: 'read',\n                files: files?.length || 0\n              };\n            }\n          } catch (readError) {\n            console.log(`[Supabase] Exception lecture bucket ${bucketName}:`, readError.message);\n            return {\n              success: false,\n              error: readError.message,\n              operation: 'read'\n            };\n          }\n        } catch (error) {\n          console.error(`[Supabase] Erreur test accès bucket ${bucketName}:`, error);\n          return {\n            success: false,\n            error: error.message\n          };\n        }\n      });\n      return function testBucketAccess() {\n        return _ref21.apply(this, arguments);\n      };\n    }(),\n    // Fonction de test pour vérifier la connectivité avec Supabase\n    testConnection: function () {\n      var _ref22 = (0, _asyncToGenerator2.default)(function* () {\n        try {\n          console.log('[Supabase] Test de connectivité...');\n          console.log('[Supabase] URL Supabase:', supabaseUrl);\n          console.log('[Supabase] Clé API présente:', true);\n\n          // Test de connectivité réseau de base\n          try {\n            console.log('[Supabase] Test de connectivité réseau...');\n            var response = yield fetch(`${supabaseUrl}/rest/v1/`, {\n              method: 'GET',\n              headers: {\n                'apikey': supabaseKey,\n                'Content-Type': 'application/json'\n              }\n            });\n            if (!response.ok) {\n              console.error('[Supabase] Erreur réponse réseau:', response.status, response.statusText);\n              throw new Error(`Erreur réseau: ${response.status} ${response.statusText}`);\n            }\n            console.log('[Supabase] ✅ Connectivité réseau OK');\n\n            // Test spécifique de l'API Storage\n            console.log('[Supabase] Test de l\\'API Storage...');\n            var storageResponse = yield fetch(`${supabaseUrl}/storage/v1/bucket`, {\n              method: 'GET',\n              headers: {\n                'apikey': supabaseKey,\n                'Authorization': `Bearer ${supabaseKey}`,\n                'Content-Type': 'application/json'\n              }\n            });\n            if (!storageResponse.ok) {\n              console.error('[Supabase] Erreur API Storage:', storageResponse.status, storageResponse.statusText);\n              throw new Error(`Erreur API Storage: ${storageResponse.status} ${storageResponse.statusText}`);\n            }\n            console.log('[Supabase] ✅ API Storage accessible');\n          } catch (networkError) {\n            console.error('[Supabase] Erreur réseau:', networkError);\n            throw new Error(`Problème de connectivité réseau: ${networkError.message}`);\n          }\n\n          // Test de la connexion de base (optionnel)\n          try {\n            var _yield$supabase$auth$5 = yield supabase.auth.getUser(),\n              user = _yield$supabase$auth$5.data.user,\n              authError = _yield$supabase$auth$5.error;\n            if (authError) {\n              console.log('[Supabase] Pas d\\'utilisateur authentifié (normal pour les opérations publiques)');\n            } else {\n              console.log('[Supabase] Utilisateur authentifié:', user?.email);\n            }\n          } catch (authError) {\n            console.log('[Supabase] Pas d\\'authentification requise pour les opérations publiques');\n          }\n\n          // Test de l'accès au stockage (sans authentification pour les buckets publics)\n          console.log('[Supabase] Test d\\'accès au stockage...');\n\n          // Essayer d'abord l'accès direct aux buckets spécifiques (plus fiable pour les buckets publics)\n          var bucketsToTest = ['vehicle-checks', 'documents'];\n          var accessibleBuckets = [];\n          var hasVehicleChecksBucket = false;\n          for (var bucketName of bucketsToTest) {\n            var bucketTest = yield SupabaseService.testBucketAccess(bucketName);\n            if (bucketTest.success) {\n              console.log(`[Supabase] ✅ Bucket ${bucketName} accessible`);\n              accessibleBuckets.push(bucketName);\n              if (bucketName === 'vehicle-checks') {\n                hasVehicleChecksBucket = true;\n              }\n            } else {\n              console.log(`[Supabase] Bucket ${bucketName} non accessible:`, bucketTest.error);\n            }\n          }\n\n          // Si aucun bucket n'est accessible directement, essayer listBuckets() comme fallback\n          if (accessibleBuckets.length === 0) {\n            console.log('[Supabase] Aucun bucket accessible directement, tentative listBuckets()...');\n            try {\n              var _yield$supabase$stora7 = yield supabase.storage.listBuckets(),\n                buckets = _yield$supabase$stora7.data,\n                storageError = _yield$supabase$stora7.error;\n              if (storageError) {\n                console.error('[Supabase] Erreur listBuckets:', storageError);\n              } else {\n                console.log('[Supabase] Buckets via listBuckets:', buckets.map(b => b.name));\n                accessibleBuckets.push(...buckets.map(b => b.name));\n                hasVehicleChecksBucket = buckets.some(b => b.name === 'vehicle-checks');\n              }\n            } catch (listError) {\n              console.error('[Supabase] Erreur lors de listBuckets:', listError);\n            }\n          }\n          console.log('[Supabase] Buckets disponibles:', accessibleBuckets);\n          if (hasVehicleChecksBucket) {\n            console.log('[Supabase] ✅ Bucket vehicle-checks trouvé et accessible');\n          } else {\n            console.warn('[Supabase] ⚠️ Bucket vehicle-checks non trouvé. Buckets disponibles:', accessibleBuckets);\n          }\n          return {\n            success: true,\n            buckets: accessibleBuckets,\n            hasVehicleChecksBucket: hasVehicleChecksBucket\n          };\n        } catch (error) {\n          console.error('[Supabase] Erreur lors du test de connectivité:', error);\n          return {\n            success: false,\n            error: error.message\n          };\n        }\n      });\n      return function testConnection() {\n        return _ref22.apply(this, arguments);\n      };\n    }(),\n    // Fonction pour tester spécifiquement l'upload vers un bucket\n    testBucketUpload: function () {\n      var _ref23 = (0, _asyncToGenerator2.default)(function* () {\n        var bucketName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'vehicle-checks';\n        try {\n          console.log(`[Supabase] Test d'upload vers bucket: ${bucketName}`);\n\n          // Créer un petit fichier de test compatible React Native\n          var testContent = 'test upload';\n          var testBlob = new Blob([testContent], {\n            type: 'text/plain'\n          });\n          var testFileName = `test/${Date.now()}_test.txt`;\n          console.log(`[Supabase] Tentative d'upload de fichier test: ${testFileName}`);\n\n          // Essayer d'abord avec le SDK Supabase\n          try {\n            var _yield$supabase$stora8 = yield supabase.storage.from(bucketName).upload(testFileName, testBlob, {\n                cacheControl: '3600',\n                upsert: false\n              }),\n              data = _yield$supabase$stora8.data,\n              error = _yield$supabase$stora8.error;\n            if (error) {\n              console.error(`[Supabase] Erreur upload SDK vers ${bucketName}:`, error);\n              throw error;\n            }\n            console.log(`[Supabase] ✅ Upload test réussi vers ${bucketName} via SDK`);\n\n            // Nettoyer le fichier de test\n            try {\n              yield supabase.storage.from(bucketName).remove([testFileName]);\n              console.log(`[Supabase] Fichier test supprimé: ${testFileName}`);\n            } catch (cleanupError) {\n              console.warn(`[Supabase] Impossible de supprimer le fichier test: ${cleanupError.message}`);\n            }\n            return {\n              success: true,\n              bucket: bucketName,\n              testFile: testFileName,\n              method: 'SDK'\n            };\n          } catch (sdkError) {\n            console.log(`[Supabase] SDK échoué, tentative avec API REST directe...`);\n\n            // Fallback: utiliser l'API REST directement\n            var formData = new FormData();\n            formData.append('file', {\n              uri: `data:text/plain;charset=utf-8,${encodeURIComponent(testContent)}`,\n              type: 'text/plain',\n              name: 'test.txt'\n            });\n            var uploadUrl = `${supabaseUrl}/storage/v1/object/${bucketName}/${testFileName}`;\n            console.log(`[Supabase] Upload REST vers: ${uploadUrl}`);\n            var response = yield fetch(uploadUrl, {\n              method: 'POST',\n              headers: {\n                'Authorization': `Bearer ${supabaseKey}`,\n                'apikey': supabaseKey\n              },\n              body: formData\n            });\n            if (!response.ok) {\n              var errorText = yield response.text();\n              console.error(`[Supabase] Erreur upload REST vers ${bucketName}:`, response.status, errorText);\n              throw new Error(`Upload REST échoué: ${response.status} ${errorText}`);\n            }\n            console.log(`[Supabase] ✅ Upload test réussi vers ${bucketName} via REST`);\n\n            // Nettoyer le fichier de test via REST\n            try {\n              var deleteUrl = `${supabaseUrl}/storage/v1/object/${bucketName}/${testFileName}`;\n              yield fetch(deleteUrl, {\n                method: 'DELETE',\n                headers: {\n                  'Authorization': `Bearer ${supabaseKey}`,\n                  'apikey': supabaseKey\n                }\n              });\n              console.log(`[Supabase] Fichier test supprimé via REST: ${testFileName}`);\n            } catch (cleanupError) {\n              console.warn(`[Supabase] Impossible de supprimer le fichier test via REST: ${cleanupError.message}`);\n            }\n            return {\n              success: true,\n              bucket: bucketName,\n              testFile: testFileName,\n              method: 'REST'\n            };\n          }\n        } catch (error) {\n          console.error(`[Supabase] Erreur test upload bucket ${bucketName}:`, error);\n          return {\n            success: false,\n            error: error.message,\n            bucket: bucketName\n          };\n        }\n      });\n      return function testBucketUpload() {\n        return _ref23.apply(this, arguments);\n      };\n    }(),\n    // Fonction de diagnostic complet pour mobile\n    diagnosticComplet: function () {\n      var _ref24 = (0, _asyncToGenerator2.default)(function* () {\n        console.log('[Supabase] 🔍 Début diagnostic complet...');\n        var results = {\n          timestamp: new Date().toISOString(),\n          platform: 'mobile',\n          tests: {}\n        };\n\n        // Test 1: Connectivité réseau de base\n        try {\n          console.log('[Supabase] Test 1: Connectivité réseau...');\n          var response = yield fetch(`${supabaseUrl}/rest/v1/`, {\n            method: 'GET',\n            headers: {\n              'apikey': supabaseKey,\n              'Authorization': `Bearer ${supabaseKey}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          results.tests.connectivite = {\n            success: response.ok,\n            status: response.status,\n            statusText: response.statusText\n          };\n          console.log(`[Supabase] Test 1: ${response.ok ? '✅' : '❌'} Status: ${response.status}`);\n        } catch (error) {\n          results.tests.connectivite = {\n            success: false,\n            error: error.message\n          };\n          console.log(`[Supabase] Test 1: ❌ Erreur: ${error.message}`);\n        }\n\n        // Test 2: Accès aux buckets\n        try {\n          console.log('[Supabase] Test 2: Accès aux buckets...');\n          var bucketTest = yield SupabaseService.testBucketAccess('vehicle-checks');\n          results.tests.bucketVehicleChecks = bucketTest;\n          console.log(`[Supabase] Test 2: ${bucketTest.success ? '✅' : '❌'} Bucket vehicle-checks`);\n        } catch (error) {\n          results.tests.bucketVehicleChecks = {\n            success: false,\n            error: error.message\n          };\n          console.log(`[Supabase] Test 2: ❌ Erreur: ${error.message}`);\n        }\n\n        // Test 3: Upload de test\n        try {\n          console.log('[Supabase] Test 3: Upload de test...');\n          var uploadTest = yield SupabaseService.testBucketUpload('vehicle-checks');\n          results.tests.uploadTest = uploadTest;\n          console.log(`[Supabase] Test 3: ${uploadTest.success ? '✅' : '❌'} Upload test`);\n        } catch (error) {\n          results.tests.uploadTest = {\n            success: false,\n            error: error.message\n          };\n          console.log(`[Supabase] Test 3: ❌ Erreur: ${error.message}`);\n        }\n\n        // Résumé\n        var totalTests = Object.keys(results.tests).length;\n        var successfulTests = Object.values(results.tests).filter(test => test.success).length;\n        results.summary = {\n          total: totalTests,\n          successful: successfulTests,\n          failed: totalTests - successfulTests,\n          successRate: Math.round(successfulTests / totalTests * 100)\n        };\n        console.log(`[Supabase] 📊 Diagnostic terminé: ${successfulTests}/${totalTests} tests réussis (${results.summary.successRate}%)`);\n        return results;\n      });\n      return function diagnosticComplet() {\n        return _ref24.apply(this, arguments);\n      };\n    }()\n  };\n  var _default = exports.default = SupabaseService;\n});","lineCount":1505,"map":[[8,2,1,0],[8,6,1,0,"_supabaseJs"],[8,17,1,0],[8,20,1,0,"require"],[8,27,1,0],[8,28,1,0,"_dependencyMap"],[8,42,1,0],[9,2,2,0],[9,6,2,0,"_asyncStorage"],[9,19,2,0],[9,22,2,0,"_interopRequireDefault"],[9,44,2,0],[9,45,2,0,"require"],[9,52,2,0],[9,53,2,0,"_dependencyMap"],[9,67,2,0],[10,2,3,0,"require"],[10,9,3,0],[10,10,3,0,"_dependencyMap"],[10,24,3,0],[11,2,4,0],[11,6,4,0,"_uuid"],[11,11,4,0],[11,14,4,0,"require"],[11,21,4,0],[11,22,4,0,"_dependencyMap"],[11,36,4,0],[12,2,6,0],[13,2,7,0],[13,6,7,6,"supabaseUrl"],[13,17,7,17],[13,20,7,20],[13,62,7,62],[14,2,8,0],[14,6,8,6,"supabaseKey"],[14,17,8,17],[14,20,8,20],[14,230,8,230],[16,2,10,0],[17,2,11,7],[17,6,11,13,"supabase"],[17,14,11,21],[17,17,11,21,"exports"],[17,24,11,21],[17,25,11,21,"supabase"],[17,33,11,21],[17,36,11,24],[17,40,11,24,"createClient"],[17,64,11,36],[17,66,11,37,"supabaseUrl"],[17,77,11,48],[17,79,11,50,"supabaseKey"],[17,90,11,61],[17,92,11,63],[18,4,12,2,"auth"],[18,8,12,6],[18,10,12,8],[19,6,13,4,"storage"],[19,13,13,11],[19,15,13,13,"AsyncStorage"],[19,36,13,25],[20,6,14,4,"autoRefreshToken"],[20,22,14,20],[20,24,14,22],[20,28,14,26],[21,6,15,4,"persistSession"],[21,20,15,18],[21,22,15,20],[21,26,15,24],[22,6,16,4,"detectSessionInUrl"],[22,24,16,22],[22,26,16,24],[23,4,17,2],[23,5,17,3],[24,4,18,2,"global"],[24,10,18,8],[24,12,18,10],[25,6,19,4,"headers"],[25,13,19,11],[25,15,19,13],[26,8,20,6],[26,23,20,21],[26,25,20,23],[27,6,21,4],[28,4,22,2],[28,5,22,3],[29,4,23,2,"db"],[29,6,23,4],[29,8,23,6],[30,6,24,4,"schema"],[30,12,24,10],[30,14,24,12],[31,4,25,2],[31,5,25,3],[32,4,26,2,"realtime"],[32,12,26,10],[32,14,26,12],[33,6,27,4,"params"],[33,12,27,10],[33,14,27,12],[34,8,28,6,"eventsPerSecond"],[34,23,28,21],[34,25,28,23],[35,6,29,4],[36,4,30,2],[37,2,31,0],[37,3,31,1],[37,4,31,2],[39,2,33,0],[40,2,34,0],[40,6,34,6,"AUTH_TOKEN_KEY"],[40,20,34,20],[40,23,34,23],[40,44,34,44],[41,2,35,0],[41,6,35,6,"USER_DATA_KEY"],[41,19,35,19],[41,22,35,22],[41,42,35,42],[42,2,37,0],[42,6,37,6,"SupabaseService"],[42,21,37,21],[42,24,37,24],[43,4,38,2],[44,4,39,2,"login"],[44,9,39,7],[45,6,39,7],[45,10,39,7,"_ref"],[45,14,39,7],[45,21,39,7,"_asyncToGenerator2"],[45,39,39,7],[45,40,39,7,"default"],[45,47,39,7],[45,49,39,9],[45,60,39,16,"email"],[45,65,39,21],[45,67,39,23,"password"],[45,75,39,31],[45,77,39,36],[46,8,40,4],[46,12,40,8],[47,10,41,6,"console"],[47,17,41,13],[47,18,41,14,"log"],[47,21,41,17],[47,22,41,18],[47,61,41,57],[47,63,41,59,"email"],[47,68,41,64],[47,69,41,65],[49,10,43,6],[50,10,44,6],[50,14,44,10],[51,12,45,8],[51,18,45,14,"SupabaseService"],[51,33,45,29],[51,34,45,30,"closeCurrentSession"],[51,53,45,49],[51,54,45,50],[51,55,45,51],[52,12,46,8,"console"],[52,19,46,15],[52,20,46,16,"log"],[52,23,46,19],[52,24,46,20],[52,67,46,63],[52,68,46,64],[53,10,47,6],[53,11,47,7],[53,12,47,8],[53,19,47,15,"sessionError"],[53,31,47,27],[53,33,47,29],[54,12,48,8,"console"],[54,19,48,15],[54,20,48,16,"log"],[54,23,48,19],[54,24,48,20],[54,67,48,63],[54,69,48,65,"sessionError"],[54,81,48,77],[54,82,48,78],[55,10,49,6],[57,10,51,6],[58,10,52,6],[58,14,52,6,"_yield$supabase$auth$"],[58,35,52,6],[58,44,52,36,"supabase"],[58,52,52,44],[58,53,52,45,"auth"],[58,57,52,49],[58,58,52,50,"signInWithPassword"],[58,76,52,68],[58,77,52,69],[59,14,53,8,"email"],[59,19,53,13],[59,21,53,15,"email"],[59,26,53,20],[60,14,54,8,"password"],[60,22,54,16],[60,24,54,18,"password"],[61,12,55,6],[61,13,55,7],[61,14,55,8],[62,12,52,14,"data"],[62,16,52,18],[62,19,52,18,"_yield$supabase$auth$"],[62,40,52,18],[62,41,52,14,"data"],[62,45,52,18],[63,12,52,20,"error"],[63,17,52,25],[63,20,52,25,"_yield$supabase$auth$"],[63,41,52,25],[63,42,52,20,"error"],[63,47,52,25],[64,10,57,6],[64,14,57,10,"error"],[64,19,57,15],[64,21,57,17],[65,12,58,8,"console"],[65,19,58,15],[65,20,58,16,"error"],[65,25,58,21],[65,26,58,22],[65,57,58,53],[65,59,58,55,"error"],[65,64,58,60],[65,65,58,61],[66,12,59,8],[66,18,59,14,"error"],[66,23,59,19],[67,10,60,6],[68,10,62,6,"console"],[68,17,62,13],[68,18,62,14,"log"],[68,21,62,17],[68,22,62,18],[68,56,62,52],[68,58,62,54],[69,12,63,8,"email"],[69,17,63,13],[69,19,63,15,"data"],[69,23,63,19],[69,24,63,20,"user"],[69,28,63,24],[69,29,63,25,"email"],[69,34,63,30],[70,12,64,8,"id"],[70,14,64,10],[70,16,64,12,"data"],[70,20,64,16],[70,21,64,17,"user"],[70,25,64,21],[70,26,64,22,"id"],[71,10,65,6],[71,11,65,7],[71,12,65,8],[73,10,67,6],[74,10,68,6],[74,14,68,10],[75,12,69,8],[75,18,69,14,"AsyncStorage"],[75,39,69,26],[75,40,69,27,"setItem"],[75,47,69,34],[75,48,69,35,"AUTH_TOKEN_KEY"],[75,62,69,49],[75,64,69,51,"data"],[75,68,69,55],[75,69,69,56,"session"],[75,76,69,63],[75,77,69,64,"access_token"],[75,89,69,76],[75,90,69,77],[76,12,70,8],[76,18,70,14,"AsyncStorage"],[76,39,70,26],[76,40,70,27,"setItem"],[76,47,70,34],[76,48,70,35,"USER_DATA_KEY"],[76,61,70,48],[76,63,70,50,"JSON"],[76,67,70,54],[76,68,70,55,"stringify"],[76,77,70,64],[76,78,70,65],[77,14,71,10,"email"],[77,19,71,15],[77,21,71,17,"data"],[77,25,71,21],[77,26,71,22,"user"],[77,30,71,26],[77,31,71,27,"email"],[77,36,71,32],[78,14,72,10,"uid"],[78,17,72,13],[78,19,72,15,"data"],[78,23,72,19],[78,24,72,20,"user"],[78,28,72,24],[78,29,72,25,"id"],[79,12,73,8],[79,13,73,9],[79,14,73,10],[79,15,73,11],[80,12,74,8,"console"],[80,19,74,15],[80,20,74,16,"log"],[80,23,74,19],[80,24,74,20],[80,71,74,67],[80,72,74,68],[81,10,75,6],[81,11,75,7],[81,12,75,8],[81,19,75,15,"storageError"],[81,31,75,27],[81,33,75,29],[82,12,76,8,"console"],[82,19,76,15],[82,20,76,16,"error"],[82,25,76,21],[82,26,76,22],[82,81,76,77],[82,83,76,79,"storageError"],[82,95,76,91],[82,96,76,92],[83,10,77,6],[84,10,79,6],[84,17,79,13,"data"],[84,21,79,17],[84,22,79,18,"user"],[84,26,79,22],[85,8,80,4],[85,9,80,5],[85,10,80,6],[85,17,80,13,"error"],[85,22,80,18],[85,24,80,20],[86,10,81,6,"console"],[86,17,81,13],[86,18,81,14,"error"],[86,23,81,19],[86,24,81,20],[86,56,81,52],[86,58,81,54,"error"],[86,63,81,59],[86,64,81,60],[87,10,82,6],[87,16,82,12,"error"],[87,21,82,17],[88,8,83,4],[89,6,84,2],[89,7,84,3],[90,6,84,3],[90,22,39,2,"login"],[90,27,39,7,"login"],[90,28,39,7,"_x"],[90,30,39,7],[90,32,39,7,"_x2"],[90,35,39,7],[91,8,39,7],[91,15,39,7,"_ref"],[91,19,39,7],[91,20,39,7,"apply"],[91,25,39,7],[91,32,39,7,"arguments"],[91,41,39,7],[92,6,39,7],[93,4,39,7],[93,7,84,3],[94,4,86,2,"logout"],[94,10,86,8],[95,6,86,8],[95,10,86,8,"_ref2"],[95,15,86,8],[95,22,86,8,"_asyncToGenerator2"],[95,40,86,8],[95,41,86,8,"default"],[95,48,86,8],[95,50,86,10],[95,63,86,22],[96,8,87,4],[96,12,87,8],[97,10,88,6],[97,16,88,12,"supabase"],[97,24,88,20],[97,25,88,21,"auth"],[97,29,88,25],[97,30,88,26,"signOut"],[97,37,88,33],[97,38,88,34],[97,39,88,35],[98,10,89,6],[98,16,89,12,"AsyncStorage"],[98,37,89,24],[98,38,89,25,"removeItem"],[98,48,89,35],[98,49,89,36,"AUTH_TOKEN_KEY"],[98,63,89,50],[98,64,89,51],[99,10,90,6],[99,16,90,12,"AsyncStorage"],[99,37,90,24],[99,38,90,25,"removeItem"],[99,48,90,35],[99,49,90,36,"USER_DATA_KEY"],[99,62,90,49],[99,63,90,50],[100,10,91,6,"console"],[100,17,91,13],[100,18,91,14,"log"],[100,21,91,17],[100,22,91,18],[100,43,91,39],[100,44,91,40],[101,8,92,4],[101,9,92,5],[101,10,92,6],[101,17,92,13,"error"],[101,22,92,18],[101,24,92,20],[102,10,93,6,"console"],[102,17,93,13],[102,18,93,14,"error"],[102,23,93,19],[102,24,93,20],[102,48,93,44],[102,50,93,46,"error"],[102,55,93,51],[102,56,93,52],[103,10,94,6],[103,16,94,12,"error"],[103,21,94,17],[104,8,95,4],[105,6,96,2],[105,7,96,3],[106,6,96,3],[106,22,86,2,"logout"],[106,28,86,8,"logout"],[106,29,86,8],[107,8,86,8],[107,15,86,8,"_ref2"],[107,20,86,8],[107,21,86,8,"apply"],[107,26,86,8],[107,33,86,8,"arguments"],[107,42,86,8],[108,6,86,8],[109,4,86,8],[109,7,96,3],[110,4,98,2,"register"],[110,12,98,10],[111,6,98,10],[111,10,98,10,"_ref3"],[111,15,98,10],[111,22,98,10,"_asyncToGenerator2"],[111,40,98,10],[111,41,98,10,"default"],[111,48,98,10],[111,50,98,12],[111,61,98,19,"email"],[111,66,98,24],[111,68,98,26,"password"],[111,76,98,34],[111,78,98,53],[112,8,98,53],[112,12,98,36,"selasId"],[112,19,98,43],[112,22,98,43,"arguments"],[112,31,98,43],[112,32,98,43,"length"],[112,38,98,43],[112,46,98,43,"arguments"],[112,55,98,43],[112,63,98,43,"undefined"],[112,72,98,43],[112,75,98,43,"arguments"],[112,84,98,43],[112,90,98,46],[112,92,98,48],[113,8,99,4],[113,12,99,8],[114,10,100,6],[115,10,101,6],[115,14,101,6,"_yield$supabase$auth$2"],[115,36,101,6],[115,45,101,36,"supabase"],[115,53,101,44],[115,54,101,45,"auth"],[115,58,101,49],[115,59,101,50,"signUp"],[115,65,101,56],[115,66,101,57],[116,14,102,8,"email"],[116,19,102,13],[116,21,102,15,"email"],[116,26,102,20],[117,14,103,8,"password"],[117,22,103,16],[117,24,103,18,"password"],[118,12,104,6],[118,13,104,7],[118,14,104,8],[119,12,101,14,"data"],[119,16,101,18],[119,19,101,18,"_yield$supabase$auth$2"],[119,41,101,18],[119,42,101,14,"data"],[119,46,101,18],[120,12,101,20,"error"],[120,17,101,25],[120,20,101,25,"_yield$supabase$auth$2"],[120,42,101,25],[120,43,101,20,"error"],[120,48,101,25],[121,10,106,6],[121,14,106,10,"error"],[121,19,106,15],[121,21,106,17],[122,12,107,8,"console"],[122,19,107,15],[122,20,107,16,"error"],[122,25,107,21],[122,26,107,22],[122,59,107,55],[122,61,107,57,"error"],[122,66,107,62],[122,67,107,63],[123,12,108,8],[123,18,108,14,"error"],[123,23,108,19],[124,10,109,6],[125,10,111,6],[125,14,111,12,"user"],[125,18,111,16],[125,21,111,19,"data"],[125,25,111,23],[125,26,111,24,"user"],[125,30,111,28],[127,10,113,6],[128,10,114,6],[128,14,114,10,"finalSelasId"],[128,26,114,22],[128,29,114,25,"selasId"],[128,36,114,32],[129,10,115,6],[129,14,115,10],[129,15,115,11,"finalSelasId"],[129,27,115,23],[129,29,115,25],[130,12,116,8],[130,16,116,8,"_yield$supabase$from$"],[130,37,116,8],[130,46,116,42,"supabase"],[130,54,116,50],[130,55,117,11,"from"],[130,59,117,15],[130,60,117,16],[130,67,117,23],[130,68,117,24],[130,69,118,11,"select"],[130,75,118,17],[130,76,118,18],[130,80,118,22],[130,81,118,23],[130,82,119,11,"contains"],[130,90,119,19],[130,91,119,20],[130,104,119,33],[130,106,119,35],[130,107,119,36,"email"],[130,112,119,41],[130,113,119,42],[130,114,119,43],[130,115,120,11,"single"],[130,121,120,17],[130,122,120,18],[130,123,120,19],[131,14,116,22,"selasData"],[131,23,116,31],[131,26,116,31,"_yield$supabase$from$"],[131,47,116,31],[131,48,116,16,"data"],[131,52,116,20],[132,12,122,8],[132,16,122,12,"selasData"],[132,25,122,21],[132,27,122,23],[133,14,123,10,"finalSelasId"],[133,26,123,22],[133,29,123,25,"selasData"],[133,38,123,34],[133,39,123,35,"id"],[133,41,123,37],[134,12,124,8],[135,10,125,6],[137,10,127,6],[138,10,128,6],[138,14,128,12,"userProfile"],[138,25,128,23],[138,28,128,26],[139,12,129,8,"id"],[139,14,129,10],[139,16,129,12,"user"],[139,20,129,16],[139,21,129,17,"id"],[139,23,129,19],[140,12,130,8,"email"],[140,17,130,13],[140,19,130,15,"user"],[140,23,130,19],[140,24,130,20,"email"],[140,29,130,25],[141,12,131,8,"selas_id"],[141,20,131,16],[141,22,131,18,"finalSelasId"],[141,34,131,30],[142,12,132,8,"role"],[142,16,132,12],[142,18,132,14],[142,24,132,20],[143,12,133,8,"created_at"],[143,22,133,18],[143,24,133,20],[143,28,133,24,"Date"],[143,32,133,28],[143,33,133,29],[143,34,133,30],[143,35,133,31,"toISOString"],[143,46,133,42],[143,47,133,43],[144,10,134,6],[144,11,134,7],[146,10,136,6],[147,10,137,6],[147,14,137,6,"_yield$supabase$from$2"],[147,36,137,6],[147,45,137,44,"supabase"],[147,53,137,52],[147,54,138,9,"from"],[147,58,138,13],[147,59,138,14],[147,66,138,21],[147,67,138,22],[147,68,139,9,"insert"],[147,74,139,15],[147,75,139,16],[147,76,139,17,"userProfile"],[147,87,139,28],[147,88,139,29],[147,89,139,30],[148,12,137,21,"profileError"],[148,24,137,33],[148,27,137,33,"_yield$supabase$from$2"],[148,49,137,33],[148,50,137,14,"error"],[148,55,137,19],[149,10,141,6],[149,14,141,10,"profileError"],[149,26,141,22],[149,28,141,24],[150,12,142,8,"console"],[150,19,142,15],[150,20,142,16,"error"],[150,25,142,21],[150,26,142,22],[150,51,142,47],[150,53,142,49,"profileError"],[150,65,142,61],[150,66,142,62],[151,12,143,8],[151,18,143,14,"profileError"],[151,30,143,26],[152,10,144,6],[154,10,146,6],[155,10,147,6],[155,14,147,10,"finalSelasId"],[155,26,147,22],[155,28,147,24],[156,12,148,8],[156,18,148,14,"AsyncStorage"],[156,39,148,26],[156,40,148,27,"setItem"],[156,47,148,34],[156,48,148,35],[156,63,148,50],[156,65,148,52,"finalSelasId"],[156,77,148,64],[156,78,148,65],[157,10,149,6],[158,10,151,6],[158,17,151,13],[159,12,152,8,"user"],[159,16,152,12],[160,12,153,8,"profile"],[160,19,153,15],[160,21,153,17,"userProfile"],[161,10,154,6],[161,11,154,7],[162,8,155,4],[162,9,155,5],[162,10,155,6],[162,17,155,13,"error"],[162,22,155,18],[162,24,155,20],[163,10,156,6,"console"],[163,17,156,13],[163,18,156,14,"error"],[163,23,156,19],[163,24,156,20],[163,48,156,44],[163,50,156,46,"error"],[163,55,156,51],[163,56,156,52],[164,10,157,6],[164,16,157,12,"error"],[164,21,157,17],[165,8,158,4],[166,6,159,2],[166,7,159,3],[167,6,159,3],[167,22,98,2,"register"],[167,30,98,10,"register"],[167,31,98,10,"_x3"],[167,34,98,10],[167,36,98,10,"_x4"],[167,39,98,10],[168,8,98,10],[168,15,98,10,"_ref3"],[168,20,98,10],[168,21,98,10,"apply"],[168,26,98,10],[168,33,98,10,"arguments"],[168,42,98,10],[169,6,98,10],[170,4,98,10],[170,7,159,3],[171,4,161,2,"getCurrentUser"],[171,18,161,16],[172,6,161,16],[172,10,161,16,"_ref4"],[172,15,161,16],[172,22,161,16,"_asyncToGenerator2"],[172,40,161,16],[172,41,161,16,"default"],[172,48,161,16],[172,50,161,18],[172,63,161,30],[173,8,162,4],[173,12,162,8],[174,10,163,6],[174,14,163,6,"_yield$supabase$auth$3"],[174,36,163,6],[174,45,163,39,"supabase"],[174,53,163,47],[174,54,163,48,"auth"],[174,58,163,52],[174,59,163,53,"getUser"],[174,66,163,60],[174,67,163,61],[174,68,163,62],[175,12,163,22,"user"],[175,16,163,26],[175,19,163,26,"_yield$supabase$auth$3"],[175,41,163,26],[175,42,163,14,"data"],[175,46,163,18],[175,47,163,22,"user"],[175,51,163,26],[176,10,165,6],[176,14,165,10],[176,15,165,11,"user"],[176,19,165,15],[176,21,165,17],[177,12,166,8],[177,16,166,14,"userData"],[177,24,166,22],[177,33,166,31,"AsyncStorage"],[177,54,166,43],[177,55,166,44,"getItem"],[177,62,166,51],[177,63,166,52,"USER_DATA_KEY"],[177,76,166,65],[177,77,166,66],[178,12,167,8],[178,19,167,15,"userData"],[178,27,167,23],[178,30,167,26,"JSON"],[178,34,167,30],[178,35,167,31,"parse"],[178,40,167,36],[178,41,167,37,"userData"],[178,49,167,45],[178,50,167,46],[178,53,167,49],[178,57,167,53],[179,10,168,6],[181,10,170,6],[182,10,171,6],[182,14,171,12,"userToSave"],[182,24,171,22],[182,27,171,25],[183,12,172,8,"email"],[183,17,172,13],[183,19,172,15,"user"],[183,23,172,19],[183,24,172,20,"email"],[183,29,172,25],[184,12,173,8,"uid"],[184,15,173,11],[184,17,173,13,"user"],[184,21,173,17],[184,22,173,18,"id"],[185,10,174,6],[185,11,174,7],[186,10,175,6],[186,16,175,12,"AsyncStorage"],[186,37,175,24],[186,38,175,25,"setItem"],[186,45,175,32],[186,46,175,33,"USER_DATA_KEY"],[186,59,175,46],[186,61,175,48,"JSON"],[186,65,175,52],[186,66,175,53,"stringify"],[186,75,175,62],[186,76,175,63,"userToSave"],[186,86,175,73],[186,87,175,74],[186,88,175,75],[187,10,176,6],[187,16,176,12,"AsyncStorage"],[187,37,176,24],[187,38,176,25,"setItem"],[187,45,176,32],[187,46,176,33,"AUTH_TOKEN_KEY"],[187,60,176,47],[187,62,176,49,"user"],[187,66,176,53],[187,67,176,54,"aud"],[187,70,176,57],[187,74,176,61],[187,76,176,63],[187,77,176,64],[188,10,178,6],[188,17,178,13,"userToSave"],[188,27,178,23],[189,8,179,4],[189,9,179,5],[189,10,179,6],[189,17,179,13,"error"],[189,22,179,18],[189,24,179,20],[190,10,180,6,"console"],[190,17,180,13],[190,18,180,14,"error"],[190,23,180,19],[190,24,180,20],[190,75,180,71],[190,77,180,73,"error"],[190,82,180,78],[190,83,180,79],[191,10,181,6],[191,17,181,13],[191,21,181,17],[192,8,182,4],[193,6,183,2],[193,7,183,3],[194,6,183,3],[194,22,161,2,"getCurrentUser"],[194,36,161,16,"getCurrentUser"],[194,37,161,16],[195,8,161,16],[195,15,161,16,"_ref4"],[195,20,161,16],[195,21,161,16,"apply"],[195,26,161,16],[195,33,161,16,"arguments"],[195,42,161,16],[196,6,161,16],[197,4,161,16],[197,7,183,3],[198,4,185,2,"getCurrentUserId"],[198,20,185,18],[199,6,185,18],[199,10,185,18,"_ref5"],[199,15,185,18],[199,22,185,18,"_asyncToGenerator2"],[199,40,185,18],[199,41,185,18,"default"],[199,48,185,18],[199,50,185,20],[199,63,185,32],[200,8,186,4],[200,12,186,8],[201,10,187,6],[201,14,187,12,"userData"],[201,22,187,20],[201,31,187,29,"SupabaseService"],[201,46,187,44],[201,47,187,45,"getCurrentUser"],[201,61,187,59],[201,62,187,60],[201,63,187,61],[202,10,188,6],[202,14,188,10],[202,15,188,11,"userData"],[202,23,188,19],[202,27,188,23],[202,28,188,24,"userData"],[202,36,188,32],[202,37,188,33,"uid"],[202,40,188,36],[202,42,188,38],[203,12,189,8,"console"],[203,19,189,15],[203,20,189,16,"warn"],[203,24,189,20],[203,25,189,21],[203,72,189,68],[203,73,189,69],[204,12,190,8],[204,19,190,15],[204,23,190,19],[205,10,191,6],[206,10,192,6],[206,17,192,13,"userData"],[206,25,192,21],[206,26,192,22,"uid"],[206,29,192,25],[207,8,193,4],[207,9,193,5],[207,10,193,6],[207,17,193,13,"error"],[207,22,193,18],[207,24,193,20],[208,10,194,6,"console"],[208,17,194,13],[208,18,194,14,"error"],[208,23,194,19],[208,24,194,20],[208,78,194,74],[208,80,194,76,"error"],[208,85,194,81],[208,86,194,82],[209,10,195,6],[209,17,195,13],[209,21,195,17],[210,8,196,4],[211,6,197,2],[211,7,197,3],[212,6,197,3],[212,22,185,2,"getCurrentUserId"],[212,38,185,18,"getCurrentUserId"],[212,39,185,18],[213,8,185,18],[213,15,185,18,"_ref5"],[213,20,185,18],[213,21,185,18,"apply"],[213,26,185,18],[213,33,185,18,"arguments"],[213,42,185,18],[214,6,185,18],[215,4,185,18],[215,7,197,3],[216,4,199,2,"isAuthenticated"],[216,19,199,17],[217,6,199,17],[217,10,199,17,"_ref6"],[217,15,199,17],[217,22,199,17,"_asyncToGenerator2"],[217,40,199,17],[217,41,199,17,"default"],[217,48,199,17],[217,50,199,19],[217,63,199,31],[218,8,200,4],[218,12,200,8],[219,10,201,6],[219,14,201,6,"_yield$supabase$auth$4"],[219,36,201,6],[219,45,201,42,"supabase"],[219,53,201,50],[219,54,201,51,"auth"],[219,58,201,55],[219,59,201,56,"getSession"],[219,69,201,66],[219,70,201,67],[219,71,201,68],[220,12,201,22,"session"],[220,19,201,29],[220,22,201,29,"_yield$supabase$auth$4"],[220,44,201,29],[220,45,201,14,"data"],[220,49,201,18],[220,50,201,22,"session"],[220,57,201,29],[221,10,202,6],[221,17,202,13],[221,18,202,14],[221,19,202,15,"session"],[221,26,202,22],[222,8,203,4],[222,9,203,5],[222,10,203,6],[222,17,203,13,"error"],[222,22,203,18],[222,24,203,20],[223,10,204,6,"console"],[223,17,204,13],[223,18,204,14,"error"],[223,23,204,19],[223,24,204,20],[223,77,204,73],[223,79,204,75,"error"],[223,84,204,80],[223,85,204,81],[224,10,205,6],[224,17,205,13],[224,22,205,18],[225,8,206,4],[226,6,207,2],[226,7,207,3],[227,6,207,3],[227,22,199,2,"isAuthenticated"],[227,37,199,17,"isAuthenticated"],[227,38,199,17],[228,8,199,17],[228,15,199,17,"_ref6"],[228,20,199,17],[228,21,199,17,"apply"],[228,26,199,17],[228,33,199,17,"arguments"],[228,42,199,17],[229,6,199,17],[230,4,199,17],[230,7,207,3],[231,4,209,2],[232,4,210,2,"getUserSelas"],[232,16,210,14],[233,6,210,14],[233,10,210,14,"_ref7"],[233,15,210,14],[233,22,210,14,"_asyncToGenerator2"],[233,40,210,14],[233,41,210,14,"default"],[233,48,210,14],[233,50,210,16],[233,63,210,28],[234,8,211,4],[234,12,211,8],[235,10,212,6],[236,10,213,6],[236,14,213,12,"selasId"],[236,21,213,19],[236,30,213,28,"AsyncStorage"],[236,51,213,40],[236,52,213,41,"getItem"],[236,59,213,48],[236,60,213,49],[236,75,213,64],[236,76,213,65],[237,10,214,6],[237,14,214,10,"selasId"],[237,21,214,17],[237,23,214,19],[238,12,215,8,"console"],[238,19,215,15],[238,20,215,16,"log"],[238,23,215,19],[238,24,215,20],[238,62,215,58],[238,64,215,60,"selasId"],[238,71,215,67],[238,72,215,68],[239,12,216,8],[239,19,216,15,"selasId"],[239,26,216,22],[240,10,217,6],[242,10,219,6],[243,10,220,6],[243,14,220,12,"userData"],[243,22,220,20],[243,31,220,29,"SupabaseService"],[243,46,220,44],[243,47,220,45,"getCurrentUser"],[243,61,220,59],[243,62,220,60],[243,63,220,61],[244,10,221,6],[244,14,221,10],[244,15,221,11,"userData"],[244,23,221,19],[244,25,221,21],[244,31,221,27],[244,35,221,31,"Error"],[244,40,221,36],[244,41,221,37],[244,70,221,66],[244,71,221,67],[246,10,223,6],[247,10,224,6],[247,14,224,6,"_yield$supabase$from$3"],[247,36,224,6],[247,45,224,42,"supabase"],[247,53,224,50],[247,54,225,9,"from"],[247,58,225,13],[247,59,225,14],[247,66,225,21],[247,67,225,22],[247,68,226,9,"select"],[247,74,226,15],[247,75,226,16],[247,85,226,26],[247,86,226,27],[247,87,227,9,"eq"],[247,89,227,11],[247,90,227,12],[247,94,227,16],[247,96,227,18,"userData"],[247,104,227,26],[247,105,227,27,"uid"],[247,108,227,30],[247,109,227,31],[247,110,228,9,"single"],[247,116,228,15],[247,117,228,16],[247,118,228,17],[248,12,224,20,"userProfile"],[248,23,224,31],[248,26,224,31,"_yield$supabase$from$3"],[248,48,224,31],[248,49,224,14,"data"],[248,53,224,18],[249,10,230,6],[249,14,230,10,"userProfile"],[249,25,230,21],[249,27,230,23,"selas_id"],[249,35,230,31],[249,37,230,33],[250,12,231,8],[250,16,231,14,"selasId"],[250,24,231,21],[250,27,231,24,"userProfile"],[250,38,231,35],[250,39,231,36,"selas_id"],[250,47,231,44],[251,12,232,8],[252,12,233,8],[252,18,233,14,"AsyncStorage"],[252,39,233,26],[252,40,233,27,"setItem"],[252,47,233,34],[252,48,233,35],[252,63,233,50],[252,65,233,52,"selasId"],[252,73,233,59],[252,74,233,60],[253,12,234,8,"console"],[253,19,234,15],[253,20,234,16,"log"],[253,23,234,19],[253,24,234,20],[253,75,234,71],[253,77,234,73,"selasId"],[253,85,234,80],[253,86,234,81],[254,12,235,8],[254,19,235,15,"selasId"],[254,27,235,22],[255,10,236,6],[257,10,238,6],[258,10,239,6],[258,14,239,6,"_yield$supabase$from$4"],[258,36,239,6],[258,45,239,40,"supabase"],[258,53,239,48],[258,54,240,9,"from"],[258,58,240,13],[258,59,240,14],[258,66,240,21],[258,67,240,22],[258,68,241,9,"select"],[258,74,241,15],[258,75,241,16],[258,79,241,20],[258,80,241,21],[258,81,242,9,"contains"],[258,89,242,17],[258,90,242,18],[258,103,242,31],[258,105,242,33],[258,106,242,34,"userData"],[258,114,242,42],[258,115,242,43,"email"],[258,120,242,48],[258,121,242,49],[258,122,242,50],[258,123,243,9,"single"],[258,129,243,15],[258,130,243,16],[258,131,243,17],[259,12,239,20,"selasData"],[259,21,239,29],[259,24,239,29,"_yield$supabase$from$4"],[259,46,239,29],[259,47,239,14,"data"],[259,51,239,18],[260,10,245,6],[260,14,245,10,"selasData"],[260,23,245,19],[260,25,245,21],[261,12,246,8],[261,16,246,14,"selasId"],[261,25,246,21],[261,28,246,24,"selasData"],[261,37,246,33],[261,38,246,34,"id"],[261,40,246,36],[262,12,247,8],[263,12,248,8],[263,18,248,14,"supabase"],[263,26,248,22],[263,27,249,11,"from"],[263,31,249,15],[263,32,249,16],[263,39,249,23],[263,40,249,24],[263,41,250,11,"update"],[263,47,250,17],[263,48,250,18],[264,14,250,20,"selas_id"],[264,22,250,28],[264,24,250,30,"selasId"],[265,12,250,38],[265,13,250,39],[265,14,250,40],[265,15,251,11,"eq"],[265,17,251,13],[265,18,251,14],[265,22,251,18],[265,24,251,20,"userData"],[265,32,251,28],[265,33,251,29,"uid"],[265,36,251,32],[265,37,251,33],[267,12,253,8],[268,12,254,8],[268,18,254,14,"AsyncStorage"],[268,39,254,26],[268,40,254,27,"setItem"],[268,47,254,34],[268,48,254,35],[268,63,254,50],[268,65,254,52,"selasId"],[268,74,254,59],[268,75,254,60],[269,12,255,8,"console"],[269,19,255,15],[269,20,255,16,"log"],[269,23,255,19],[269,24,255,20],[269,62,255,58],[269,64,255,60,"selasId"],[269,73,255,67],[269,74,255,68],[270,12,256,8],[270,19,256,15,"selasId"],[270,28,256,22],[271,10,257,6],[272,10,259,6,"console"],[272,17,259,13],[272,18,259,14,"warn"],[272,22,259,18],[272,23,259,19],[272,66,259,62],[272,67,259,63],[273,10,260,6],[273,17,260,13],[273,19,260,15],[274,8,261,4],[274,9,261,5],[274,10,261,6],[274,17,261,13,"error"],[274,22,261,18],[274,24,261,20],[275,10,262,6,"console"],[275,17,262,13],[275,18,262,14,"error"],[275,23,262,19],[275,24,262,20],[275,69,262,65],[275,71,262,67,"error"],[275,76,262,72],[275,77,262,73],[276,10,263,6],[276,17,263,13],[276,19,263,15],[277,8,264,4],[278,6,265,2],[278,7,265,3],[279,6,265,3],[279,22,210,2,"getUserSelas"],[279,34,210,14,"getUserSelas"],[279,35,210,14],[280,8,210,14],[280,15,210,14,"_ref7"],[280,20,210,14],[280,21,210,14,"apply"],[280,26,210,14],[280,33,210,14,"arguments"],[280,42,210,14],[281,6,210,14],[282,4,210,14],[282,7,265,3],[283,4,267,2],[284,4,268,2,"getAllSelas"],[284,15,268,13],[285,6,268,13],[285,10,268,13,"_ref8"],[285,15,268,13],[285,22,268,13,"_asyncToGenerator2"],[285,40,268,13],[285,41,268,13,"default"],[285,48,268,13],[285,50,268,15],[285,63,268,27],[286,8,269,4],[286,12,269,8],[287,10,270,6,"console"],[287,17,270,13],[287,18,270,14,"log"],[287,21,270,17],[287,22,270,18],[287,59,270,55],[287,60,270,56],[288,10,272,6],[288,14,272,6,"_yield$supabase$from$5"],[288,36,272,6],[288,45,272,47,"supabase"],[288,53,272,55],[288,54,273,9,"from"],[288,58,273,13],[288,59,273,14],[288,66,273,21],[288,67,273,22],[288,68,274,9,"select"],[288,74,274,15],[288,75,274,16],[288,78,274,19],[288,79,274,20],[288,80,275,9,"order"],[288,85,275,14],[288,86,275,15],[288,91,275,20],[288,92,275,21],[289,12,272,20,"selasList"],[289,21,272,29],[289,24,272,29,"_yield$supabase$from$5"],[289,46,272,29],[289,47,272,14,"data"],[289,51,272,18],[290,12,272,31,"error"],[290,17,272,36],[290,20,272,36,"_yield$supabase$from$5"],[290,42,272,36],[290,43,272,31,"error"],[290,48,272,36],[291,10,277,6],[291,14,277,10,"error"],[291,19,277,15],[291,21,277,17],[292,12,278,8,"console"],[292,19,278,15],[292,20,278,16,"error"],[292,25,278,21],[292,26,278,22],[292,54,278,50],[292,56,278,52,"error"],[292,61,278,57],[292,62,278,58],[293,12,279,8],[293,18,279,14,"error"],[293,23,279,19],[294,10,280,6],[295,10,282,6,"console"],[295,17,282,13],[295,18,282,14,"log"],[295,21,282,17],[295,22,282,18],[295,25,282,21,"selasList"],[295,34,282,30],[295,35,282,31,"length"],[295,41,282,37],[295,61,282,57],[295,63,282,59,"selasList"],[295,72,282,68],[295,73,282,69,"map"],[295,76,282,72],[295,77,282,73,"s"],[295,78,282,74],[295,82,282,78,"s"],[295,83,282,79],[295,84,282,80,"nom"],[295,87,282,83],[295,88,282,84],[295,89,282,85],[296,10,283,6],[296,17,283,13,"selasList"],[296,26,283,22],[296,27,283,23,"map"],[296,30,283,26],[296,31,283,27,"selas"],[296,36,283,32],[296,41,283,37],[297,12,284,8,"id"],[297,14,284,10],[297,16,284,12,"selas"],[297,21,284,17],[297,22,284,18,"id"],[297,24,284,20],[298,12,285,8,"nom"],[298,15,285,11],[298,17,285,13,"selas"],[298,22,285,18],[298,23,285,19,"nom"],[298,26,285,22],[298,30,285,26],[298,46,285,42],[299,12,286,8,"description"],[299,23,286,19],[299,25,286,21,"selas"],[299,30,286,26],[299,31,286,27,"description"],[299,42,286,38],[299,46,286,42],[299,48,286,44],[300,12,287,8,"code"],[300,16,287,12],[300,18,287,14,"selas"],[300,23,287,19],[300,24,287,20,"code"],[300,28,287,24],[300,32,287,28],[300,34,287,30],[301,12,288,8,"active"],[301,18,288,14],[301,20,288,16,"selas"],[301,25,288,21],[301,26,288,22,"active"],[301,32,288,28],[301,37,288,33],[301,42,288,38],[302,12,289,8,"dateCreation"],[302,24,289,20],[302,26,289,22,"selas"],[302,31,289,27],[302,32,289,28,"created_at"],[302,42,289,38],[303,12,290,8,"dateModification"],[303,28,290,24],[303,30,290,26,"selas"],[303,35,290,31],[303,36,290,32,"updated_at"],[303,46,290,42],[304,12,291,8,"accesPages"],[304,22,291,18],[304,24,291,20,"selas"],[304,29,291,25],[304,30,291,26,"acces_pages"],[304,41,291,37],[304,45,291,41],[304,46,291,42],[304,47,291,43],[305,12,292,8,"sitesAutorises"],[305,26,292,22],[305,28,292,24,"selas"],[305,33,292,29],[305,34,292,30,"sites_autorises"],[305,49,292,45],[305,53,292,49],[306,10,293,6],[306,11,293,7],[306,12,293,8],[306,13,293,9],[307,8,294,4],[307,9,294,5],[307,10,294,6],[307,17,294,13,"error"],[307,22,294,18],[307,24,294,20],[308,10,295,6,"console"],[308,17,295,13],[308,18,295,14,"error"],[308,23,295,19],[308,24,295,20],[308,67,295,63],[308,69,295,65,"error"],[308,74,295,70],[308,75,295,71],[309,10,296,6],[309,16,296,12,"error"],[309,21,296,17],[310,8,297,4],[311,6,298,2],[311,7,298,3],[312,6,298,3],[312,22,268,2,"getAllSelas"],[312,33,268,13,"getAllSelas"],[312,34,268,13],[313,8,268,13],[313,15,268,13,"_ref8"],[313,20,268,13],[313,21,268,13,"apply"],[313,26,268,13],[313,33,268,13,"arguments"],[313,42,268,13],[314,6,268,13],[315,4,268,13],[315,7,298,3],[316,4,300,2],[317,4,301,2,"saveSessionData"],[317,19,301,17],[318,6,301,17],[318,10,301,17,"_ref9"],[318,15,301,17],[318,22,301,17,"_asyncToGenerator2"],[318,40,301,17],[318,41,301,17,"default"],[318,48,301,17],[318,50,301,19],[318,61,301,26,"sessionData"],[318,72,301,37],[318,74,301,42],[319,8,302,4],[319,12,302,8],[320,10,303,6],[320,14,303,12,"userData"],[320,22,303,20],[320,31,303,29,"SupabaseService"],[320,46,303,44],[320,47,303,45,"getCurrentUser"],[320,61,303,59],[320,62,303,60],[320,63,303,61],[321,10,304,6],[321,14,304,10],[321,15,304,11,"userData"],[321,23,304,19],[321,25,304,21],[321,31,304,27],[321,35,304,31,"Error"],[321,40,304,36],[321,41,304,37],[321,70,304,66],[321,71,304,67],[323,10,306,6],[324,10,307,6],[324,14,307,12,"selasId"],[324,21,307,19],[324,30,307,28,"SupabaseService"],[324,45,307,43],[324,46,307,44,"getUserSelas"],[324,58,307,56],[324,59,307,57],[324,60,307,58],[325,10,309,6],[325,14,309,12,"sessionInfo"],[325,25,309,23],[325,28,309,26],[326,12,310,8,"user_id"],[326,19,310,15],[326,21,310,17,"userData"],[326,29,310,25],[326,30,310,26,"uid"],[326,33,310,29],[327,12,311,8,"tournee_id"],[327,22,311,18],[327,24,311,20,"sessionData"],[327,35,311,31],[327,36,311,32,"tournee"],[327,43,311,39],[327,45,311,41,"id"],[327,47,311,43],[327,51,311,47],[327,55,311,51],[328,12,312,8,"vehicule_id"],[328,23,312,19],[328,25,312,21,"sessionData"],[328,36,312,32],[328,37,312,33,"vehicule"],[328,45,312,41],[328,47,312,43,"id"],[328,49,312,45],[328,53,312,49],[328,57,312,53],[329,12,313,8,"pole_id"],[329,19,313,15],[329,21,313,17,"sessionData"],[329,32,313,28],[329,33,313,29,"pole"],[329,37,313,33],[329,39,313,35,"id"],[329,41,313,37],[329,45,313,41],[329,49,313,45],[330,12,314,8,"status"],[330,18,314,14],[330,20,314,16],[330,28,314,24],[331,12,315,8,"selas_id"],[331,20,315,16],[331,22,315,18,"selasId"],[331,29,315,25],[331,33,315,29],[331,37,315,33],[332,12,316,8,"visited_site_identifiers"],[332,36,316,32],[332,38,316,34],[332,40,316,36],[333,12,317,8,"start_time"],[333,22,317,18],[333,24,317,20],[333,28,317,24,"Date"],[333,32,317,28],[333,33,317,29],[333,34,317,30],[333,35,317,31,"toISOString"],[333,46,317,42],[333,47,317,43],[333,48,317,44],[334,12,318,8,"created_at"],[334,22,318,18],[334,24,318,20],[334,28,318,24,"Date"],[334,32,318,28],[334,33,318,29],[334,34,318,30],[334,35,318,31,"toISOString"],[334,46,318,42],[334,47,318,43],[335,10,319,6],[335,11,319,7],[337,10,321,6],[338,10,322,6],[338,14,322,6,"_yield$supabase$from$6"],[338,36,322,6],[338,45,322,36,"supabase"],[338,53,322,44],[338,54,323,9,"from"],[338,58,323,13],[338,59,323,14],[338,69,323,24],[338,70,323,25],[338,71,324,9,"insert"],[338,77,324,15],[338,78,324,16],[338,79,324,17,"sessionInfo"],[338,90,324,28],[338,91,324,29],[338,92,324,30],[338,93,325,9,"select"],[338,99,325,15],[338,100,325,16],[338,101,325,17],[338,102,326,9,"single"],[338,108,326,15],[338,109,326,16],[338,110,326,17],[339,12,322,14,"data"],[339,16,322,18],[339,19,322,18,"_yield$supabase$from$6"],[339,41,322,18],[339,42,322,14,"data"],[339,46,322,18],[340,12,322,20,"error"],[340,17,322,25],[340,20,322,25,"_yield$supabase$from$6"],[340,42,322,25],[340,43,322,20,"error"],[340,48,322,25],[341,10,328,6],[341,14,328,10,"error"],[341,19,328,15],[341,21,328,17],[342,12,329,8,"console"],[342,19,329,15],[342,20,329,16,"error"],[342,25,329,21],[342,26,329,22],[342,54,329,50],[342,56,329,52,"error"],[342,61,329,57],[342,62,329,58],[343,12,330,8],[343,18,330,14,"error"],[343,23,330,19],[344,10,331,6],[346,10,333,6],[347,10,334,6],[347,16,334,12,"AsyncStorage"],[347,37,334,24],[347,38,334,25,"setItem"],[347,45,334,32],[347,46,334,33],[347,66,334,53],[347,68,334,55,"data"],[347,72,334,59],[347,73,334,60,"id"],[347,75,334,62],[347,76,334,63],[348,10,336,6],[348,17,336,13,"data"],[348,21,336,17],[349,8,337,4],[349,9,337,5],[349,10,337,6],[349,17,337,13,"error"],[349,22,337,18],[349,24,337,20],[350,10,338,6,"console"],[350,17,338,13],[350,18,338,14,"error"],[350,23,338,19],[350,24,338,20],[350,69,338,65],[350,71,338,67,"error"],[350,76,338,72],[350,77,338,73],[351,10,339,6],[351,16,339,12,"error"],[351,21,339,17],[352,8,340,4],[353,6,341,2],[353,7,341,3],[354,6,341,3],[354,22,301,2,"saveSessionData"],[354,37,301,17,"saveSessionData"],[354,38,301,17,"_x5"],[354,41,301,17],[355,8,301,17],[355,15,301,17,"_ref9"],[355,20,301,17],[355,21,301,17,"apply"],[355,26,301,17],[355,33,301,17,"arguments"],[355,42,301,17],[356,6,301,17],[357,4,301,17],[357,7,341,3],[358,4,343,2,"getCurrentSession"],[358,21,343,19],[359,6,343,19],[359,10,343,19,"_ref0"],[359,15,343,19],[359,22,343,19,"_asyncToGenerator2"],[359,40,343,19],[359,41,343,19,"default"],[359,48,343,19],[359,50,343,21],[359,63,343,33],[360,8,344,4],[360,12,344,8],[361,10,345,6],[362,10,346,6],[362,14,346,12,"sessionId"],[362,23,346,21],[362,32,346,30,"AsyncStorage"],[362,53,346,42],[362,54,346,43,"getItem"],[362,61,346,50],[362,62,346,51],[362,82,346,71],[362,83,346,72],[363,10,348,6],[363,14,348,10],[363,15,348,11,"sessionId"],[363,24,348,20],[363,26,348,22],[363,33,348,29],[363,37,348,33],[365,10,350,6],[366,10,351,6],[366,14,351,6,"_yield$supabase$from$7"],[366,36,351,6],[366,45,351,49,"supabase"],[366,53,351,57],[366,54,352,9,"from"],[366,58,352,13],[366,59,352,14],[366,69,352,24],[366,70,352,25],[366,71,353,9,"select"],[366,77,353,15],[366,78,353,16],[366,81,353,19],[366,82,353,20],[366,83,354,9,"eq"],[366,85,354,11],[366,86,354,12],[366,90,354,16],[366,92,354,18,"sessionId"],[366,101,354,27],[366,102,354,28],[366,103,355,9,"eq"],[366,105,355,11],[366,106,355,12],[366,114,355,20],[366,116,355,22],[366,124,355,30],[366,125,355,31],[366,126,356,9,"single"],[366,132,356,15],[366,133,356,16],[366,134,356,17],[367,12,351,20,"sessionData"],[367,23,351,31],[367,26,351,31,"_yield$supabase$from$7"],[367,48,351,31],[367,49,351,14,"data"],[367,53,351,18],[368,12,351,33,"error"],[368,17,351,38],[368,20,351,38,"_yield$supabase$from$7"],[368,42,351,38],[368,43,351,33,"error"],[368,48,351,38],[369,10,358,6],[369,14,358,10,"error"],[369,19,358,15],[369,23,358,19],[369,24,358,20,"sessionData"],[369,35,358,31],[369,37,358,33],[370,12,359,8],[371,12,360,8],[371,18,360,14,"AsyncStorage"],[371,39,360,26],[371,40,360,27,"removeItem"],[371,50,360,37],[371,51,360,38],[371,71,360,58],[371,72,360,59],[372,12,361,8],[372,19,361,15],[372,23,361,19],[373,10,362,6],[374,10,364,6],[374,17,364,13,"sessionData"],[374,28,364,24],[375,8,365,4],[375,9,365,5],[375,10,365,6],[375,17,365,13,"error"],[375,22,365,18],[375,24,365,20],[376,10,366,6,"console"],[376,17,366,13],[376,18,366,14,"error"],[376,23,366,19],[376,24,366,20],[376,71,366,67],[376,73,366,69,"error"],[376,78,366,74],[376,79,366,75],[377,10,367,6],[377,17,367,13],[377,21,367,17],[378,8,368,4],[379,6,369,2],[379,7,369,3],[380,6,369,3],[380,22,343,2,"getCurrentSession"],[380,39,343,19,"getCurrentSession"],[380,40,343,19],[381,8,343,19],[381,15,343,19,"_ref0"],[381,20,343,19],[381,21,343,19,"apply"],[381,26,343,19],[381,33,343,19,"arguments"],[381,42,343,19],[382,6,343,19],[383,4,343,19],[383,7,369,3],[384,4,371,2,"closeCurrentSession"],[384,23,371,21],[385,6,371,21],[385,10,371,21,"_ref1"],[385,15,371,21],[385,22,371,21,"_asyncToGenerator2"],[385,40,371,21],[385,41,371,21,"default"],[385,48,371,21],[385,50,371,23],[385,63,371,35],[386,8,372,4],[386,12,372,8],[387,10,373,6],[387,14,373,12,"sessionId"],[387,23,373,21],[387,32,373,30,"AsyncStorage"],[387,53,373,42],[387,54,373,43,"getItem"],[387,61,373,50],[387,62,373,51],[387,82,373,71],[387,83,373,72],[388,10,375,6],[388,14,375,10],[388,15,375,11,"sessionId"],[388,24,375,20],[388,26,375,22],[388,33,375,29],[388,38,375,34],[390,10,377,6],[391,10,378,6],[391,14,378,6,"_yield$supabase$from$8"],[391,36,378,6],[391,45,378,30,"supabase"],[391,53,378,38],[391,54,379,9,"from"],[391,58,379,13],[391,59,379,14],[391,69,379,24],[391,70,379,25],[391,71,380,9,"update"],[391,77,380,15],[391,78,380,16],[392,14,381,10,"end_time"],[392,22,381,18],[392,24,381,20],[392,28,381,24,"Date"],[392,32,381,28],[392,33,381,29],[392,34,381,30],[392,35,381,31,"toISOString"],[392,46,381,42],[392,47,381,43],[392,48,381,44],[393,14,382,10,"status"],[393,20,382,16],[393,22,382,18],[393,33,382,29],[394,14,383,10,"updated_at"],[394,24,383,20],[394,26,383,22],[394,30,383,26,"Date"],[394,34,383,30],[394,35,383,31],[394,36,383,32],[394,37,383,33,"toISOString"],[394,48,383,44],[394,49,383,45],[395,12,384,8],[395,13,384,9],[395,14,384,10],[395,15,385,9,"eq"],[395,17,385,11],[395,18,385,12],[395,22,385,16],[395,24,385,18,"sessionId"],[395,33,385,27],[395,34,385,28],[396,12,378,14,"error"],[396,17,378,19],[396,20,378,19,"_yield$supabase$from$8"],[396,42,378,19],[396,43,378,14,"error"],[396,48,378,19],[397,10,387,6],[397,14,387,10,"error"],[397,19,387,15],[397,21,387,17],[398,12,388,8,"console"],[398,19,388,15],[398,20,388,16,"error"],[398,25,388,21],[398,26,388,22],[398,53,388,49],[398,55,388,51,"error"],[398,60,388,56],[398,61,388,57],[399,12,389,8],[399,18,389,14,"error"],[399,23,389,19],[400,10,390,6],[402,10,392,6],[403,10,393,6],[403,16,393,12,"AsyncStorage"],[403,37,393,24],[403,38,393,25,"removeItem"],[403,48,393,35],[403,49,393,36],[403,69,393,56],[403,70,393,57],[404,10,395,6],[404,17,395,13],[404,21,395,17],[405,8,396,4],[405,9,396,5],[405,10,396,6],[405,17,396,13,"error"],[405,22,396,18],[405,24,396,20],[406,10,397,6,"console"],[406,17,397,13],[406,18,397,14,"error"],[406,23,397,19],[406,24,397,20],[406,68,397,64],[406,70,397,66,"error"],[406,75,397,71],[406,76,397,72],[407,10,398,6],[407,16,398,12,"error"],[407,21,398,17],[408,8,399,4],[409,6,400,2],[409,7,400,3],[410,6,400,3],[410,22,371,2,"closeCurrentSession"],[410,41,371,21,"closeCurrentSession"],[410,42,371,21],[411,8,371,21],[411,15,371,21,"_ref1"],[411,20,371,21],[411,21,371,21,"apply"],[411,26,371,21],[411,33,371,21,"arguments"],[411,42,371,21],[412,6,371,21],[413,4,371,21],[413,7,400,3],[414,4,402,2],[415,4,403,2,"getVehicules"],[415,16,403,14],[416,6,403,14],[416,10,403,14,"_ref10"],[416,16,403,14],[416,23,403,14,"_asyncToGenerator2"],[416,41,403,14],[416,42,403,14,"default"],[416,49,403,14],[416,51,403,16],[416,64,403,28],[417,8,404,4],[417,12,404,8],[418,10,405,6,"console"],[418,17,405,13],[418,18,405,14,"log"],[418,21,405,17],[418,22,405,18],[418,66,405,62],[418,67,405,63],[419,10,407,6],[419,14,407,12,"selasId"],[419,21,407,19],[419,30,407,28,"SupabaseService"],[419,45,407,43],[419,46,407,44,"getUserSelas"],[419,58,407,56],[419,59,407,57],[419,60,407,58],[420,10,409,6],[420,14,409,10,"query"],[420,19,409,15],[420,22,409,18,"supabase"],[420,30,409,26],[420,31,409,27,"from"],[420,35,409,31],[420,36,409,32],[420,47,409,43],[420,48,409,44],[420,49,409,45,"select"],[420,55,409,51],[420,56,409,52],[420,59,409,55],[420,60,409,56],[421,10,411,6],[421,14,411,10,"selasId"],[421,21,411,17],[421,23,411,19],[422,12,412,8,"query"],[422,17,412,13],[422,20,412,16,"query"],[422,25,412,21],[422,26,412,22,"eq"],[422,28,412,24],[422,29,412,25],[422,39,412,35],[422,41,412,37,"selasId"],[422,48,412,44],[422,49,412,45],[423,10,413,6],[424,10,415,6],[424,14,415,6,"_yield$query"],[424,26,415,6],[424,35,415,47,"query"],[424,40,415,52],[425,12,415,20,"vehicules"],[425,21,415,29],[425,24,415,29,"_yield$query"],[425,36,415,29],[425,37,415,14,"data"],[425,41,415,18],[426,12,415,31,"error"],[426,17,415,36],[426,20,415,36,"_yield$query"],[426,32,415,36],[426,33,415,31,"error"],[426,38,415,36],[427,10,417,6],[427,14,417,10,"error"],[427,19,417,15],[427,21,417,17],[428,12,418,8,"console"],[428,19,418,15],[428,20,418,16,"error"],[428,25,418,21],[428,26,418,22],[428,58,418,54],[428,60,418,56,"error"],[428,65,418,61],[428,66,418,62],[429,12,419,8],[429,18,419,14,"error"],[429,23,419,19],[430,10,420,6],[431,10,422,6],[431,14,422,10],[431,15,422,11,"vehicules"],[431,24,422,20],[431,28,422,24,"vehicules"],[431,37,422,33],[431,38,422,34,"length"],[431,44,422,40],[431,49,422,45],[431,50,422,46],[431,52,422,48],[432,12,423,8,"console"],[432,19,423,15],[432,20,423,16,"log"],[432,23,423,19],[432,24,423,20],[432,78,423,74],[432,79,423,75],[433,12,424,8],[433,19,424,15],[433,20,425,10],[434,14,425,12,"id"],[434,16,425,14],[434,18,425,16],[434,22,425,20],[435,14,425,22,"immatriculation"],[435,29,425,37],[435,31,425,39],[435,42,425,50],[436,14,425,52,"modele"],[436,20,425,58],[436,22,425,60],[436,38,425,76],[437,14,425,78,"type"],[437,18,425,82],[437,20,425,84],[437,32,425,96],[438,14,425,98,"selas_id"],[438,22,425,106],[438,24,425,108,"selasId"],[439,12,425,116],[439,13,425,117],[439,15,426,10],[440,14,426,12,"id"],[440,16,426,14],[440,18,426,16],[440,22,426,20],[441,14,426,22,"immatriculation"],[441,29,426,37],[441,31,426,39],[441,42,426,50],[442,14,426,52,"modele"],[442,20,426,58],[442,22,426,60],[442,38,426,76],[443,14,426,78,"type"],[443,18,426,82],[443,20,426,84],[443,29,426,93],[444,14,426,95,"selas_id"],[444,22,426,103],[444,24,426,105,"selasId"],[445,12,426,113],[445,13,426,114],[445,14,427,9],[446,10,428,6],[447,10,430,6],[447,17,430,13,"vehicules"],[447,26,430,22],[448,8,431,4],[448,9,431,5],[448,10,431,6],[448,17,431,13,"error"],[448,22,431,18],[448,24,431,20],[449,10,432,6,"console"],[449,17,432,13],[449,18,432,14,"error"],[449,23,432,19],[449,24,432,20],[449,71,432,67],[449,73,432,69,"error"],[449,78,432,74],[449,79,432,75],[450,10,433,6],[450,14,433,12,"selasId"],[450,23,433,19],[450,32,433,28,"SupabaseService"],[450,47,433,43],[450,48,433,44,"getUserSelas"],[450,60,433,56],[450,61,433,57],[450,62,433,58],[450,63,433,59,"catch"],[450,68,433,64],[450,69,433,65],[450,75,433,71],[450,77,433,73],[450,78,433,74],[451,10,434,6],[451,17,434,13],[451,18,435,8],[452,12,435,10,"id"],[452,14,435,12],[452,16,435,14],[452,20,435,18],[453,12,435,20,"immatriculation"],[453,27,435,35],[453,29,435,37],[453,40,435,48],[454,12,435,50,"modele"],[454,18,435,56],[454,20,435,58],[454,36,435,74],[455,12,435,76,"type"],[455,16,435,80],[455,18,435,82],[455,30,435,94],[456,12,435,96,"selas_id"],[456,20,435,104],[456,22,435,106,"selasId"],[457,10,435,114],[457,11,435,115],[457,13,436,8],[458,12,436,10,"id"],[458,14,436,12],[458,16,436,14],[458,20,436,18],[459,12,436,20,"immatriculation"],[459,27,436,35],[459,29,436,37],[459,40,436,48],[460,12,436,50,"modele"],[460,18,436,56],[460,20,436,58],[460,36,436,74],[461,12,436,76,"type"],[461,16,436,80],[461,18,436,82],[461,27,436,91],[462,12,436,93,"selas_id"],[462,20,436,101],[462,22,436,103,"selasId"],[463,10,436,111],[463,11,436,112],[463,12,437,7],[464,8,438,4],[465,6,439,2],[465,7,439,3],[466,6,439,3],[466,22,403,2,"getVehicules"],[466,34,403,14,"getVehicules"],[466,35,403,14],[467,8,403,14],[467,15,403,14,"_ref10"],[467,21,403,14],[467,22,403,14,"apply"],[467,27,403,14],[467,34,403,14,"arguments"],[467,43,403,14],[468,6,403,14],[469,4,403,14],[469,7,439,3],[470,4,441,2],[471,4,442,2,"getTournees"],[471,15,442,13],[472,6,442,13],[472,10,442,13,"_ref11"],[472,16,442,13],[472,23,442,13,"_asyncToGenerator2"],[472,41,442,13],[472,42,442,13,"default"],[472,49,442,13],[472,51,442,15],[472,64,442,27],[473,8,443,4],[473,12,443,8],[474,10,444,6],[474,14,444,12,"selasId"],[474,21,444,19],[474,30,444,28,"SupabaseService"],[474,45,444,43],[474,46,444,44,"getUserSelas"],[474,58,444,56],[474,59,444,57],[474,60,444,58],[475,10,446,6],[475,14,446,10,"query"],[475,19,446,15],[475,22,446,18,"supabase"],[475,30,446,26],[475,31,446,27,"from"],[475,35,446,31],[475,36,446,32],[475,46,446,42],[475,47,446,43],[475,48,446,44,"select"],[475,54,446,50],[475,55,446,51],[475,58,446,54],[475,59,446,55],[475,60,446,56,"order"],[475,65,446,61],[475,66,446,62],[475,71,446,67],[475,72,446,68],[476,10,448,6],[476,14,448,10,"selasId"],[476,21,448,17],[476,23,448,19],[477,12,449,8,"query"],[477,17,449,13],[477,20,449,16,"query"],[477,25,449,21],[477,26,449,22,"eq"],[477,28,449,24],[477,29,449,25],[477,39,449,35],[477,41,449,37,"selasId"],[477,48,449,44],[477,49,449,45],[478,10,450,6],[479,10,452,6],[479,14,452,6,"_yield$query2"],[479,27,452,6],[479,36,452,46,"query"],[479,41,452,51],[480,12,452,20,"tournees"],[480,20,452,28],[480,23,452,28,"_yield$query2"],[480,36,452,28],[480,37,452,14,"data"],[480,41,452,18],[481,12,452,30,"error"],[481,17,452,35],[481,20,452,35,"_yield$query2"],[481,33,452,35],[481,34,452,30,"error"],[481,39,452,35],[482,10,454,6],[482,14,454,10,"error"],[482,19,454,15],[482,21,454,17],[483,12,455,8,"console"],[483,19,455,15],[483,20,455,16,"error"],[483,25,455,21],[483,26,455,22],[483,57,455,53],[483,59,455,55,"error"],[483,64,455,60],[483,65,455,61],[484,12,456,8],[484,18,456,14,"error"],[484,23,456,19],[485,10,457,6],[486,10,459,6],[486,17,459,13,"tournees"],[486,25,459,21],[486,29,459,25],[486,31,459,27],[487,8,460,4],[487,9,460,5],[487,10,460,6],[487,17,460,13,"error"],[487,22,460,18],[487,24,460,20],[488,10,461,6,"console"],[488,17,461,13],[488,18,461,14,"error"],[488,23,461,19],[488,24,461,20],[488,70,461,66],[488,72,461,68,"error"],[488,77,461,73],[488,78,461,74],[489,10,462,6],[489,16,462,12,"error"],[489,21,462,17],[490,8,463,4],[491,6,464,2],[491,7,464,3],[492,6,464,3],[492,22,442,2,"getTournees"],[492,33,442,13,"getTournees"],[492,34,442,13],[493,8,442,13],[493,15,442,13,"_ref11"],[493,21,442,13],[493,22,442,13,"apply"],[493,27,442,13],[493,34,442,13,"arguments"],[493,43,442,13],[494,6,442,13],[495,4,442,13],[495,7,464,3],[496,4,466,2],[497,4,467,2,"getPoles"],[497,12,467,10],[498,6,467,10],[498,10,467,10,"_ref12"],[498,16,467,10],[498,23,467,10,"_asyncToGenerator2"],[498,41,467,10],[498,42,467,10,"default"],[498,49,467,10],[498,51,467,12],[498,64,467,24],[499,8,468,4],[499,12,468,8],[500,10,469,6,"console"],[500,17,469,13],[500,18,469,14,"log"],[500,21,469,17],[500,22,469,18],[500,62,469,58],[500,63,469,59],[501,10,471,6],[501,14,471,12,"selasId"],[501,21,471,19],[501,30,471,28,"SupabaseService"],[501,45,471,43],[501,46,471,44,"getUserSelas"],[501,58,471,56],[501,59,471,57],[501,60,471,58],[502,10,473,6],[502,14,473,10,"query"],[502,19,473,15],[502,22,473,18,"supabase"],[502,30,473,26],[502,31,473,27,"from"],[502,35,473,31],[502,36,473,32],[502,43,473,39],[502,44,473,40],[502,45,473,41,"select"],[502,51,473,47],[502,52,473,48],[502,55,473,51],[502,56,473,52],[503,10,475,6],[503,14,475,10,"selasId"],[503,21,475,17],[503,23,475,19],[504,12,476,8,"query"],[504,17,476,13],[504,20,476,16,"query"],[504,25,476,21],[504,26,476,22,"eq"],[504,28,476,24],[504,29,476,25],[504,39,476,35],[504,41,476,37,"selasId"],[504,48,476,44],[504,49,476,45],[505,10,477,6],[506,10,479,6],[506,14,479,6,"_yield$query3"],[506,27,479,6],[506,36,479,43,"query"],[506,41,479,48],[507,12,479,20,"poles"],[507,17,479,25],[507,20,479,25,"_yield$query3"],[507,33,479,25],[507,34,479,14,"data"],[507,38,479,18],[508,12,479,27,"error"],[508,17,479,32],[508,20,479,32,"_yield$query3"],[508,33,479,32],[508,34,479,27,"error"],[508,39,479,32],[509,10,481,6],[509,14,481,10,"error"],[509,19,481,15],[509,21,481,17],[510,12,482,8,"console"],[510,19,482,15],[510,20,482,16,"error"],[510,25,482,21],[510,26,482,22],[510,54,482,50],[510,56,482,52,"error"],[510,61,482,57],[510,62,482,58],[511,12,483,8],[511,18,483,14,"error"],[511,23,483,19],[512,10,484,6],[513,10,486,6],[513,14,486,10],[513,15,486,11,"poles"],[513,20,486,16],[513,24,486,20,"poles"],[513,29,486,25],[513,30,486,26,"length"],[513,36,486,32],[513,41,486,37],[513,42,486,38],[513,44,486,40],[514,12,487,8,"console"],[514,19,487,15],[514,20,487,16,"log"],[514,23,487,19],[514,24,487,20],[514,74,487,70],[514,75,487,71],[515,12,488,8],[515,19,488,15],[515,20,489,10],[516,14,489,12,"id"],[516,16,489,14],[516,18,489,16],[516,22,489,20],[517,14,489,22,"nom"],[517,17,489,25],[517,19,489,27],[517,30,489,38],[518,14,489,40,"selas_id"],[518,22,489,48],[518,24,489,50,"selasId"],[519,12,489,58],[519,13,489,59],[519,15,490,10],[520,14,490,12,"id"],[520,16,490,14],[520,18,490,16],[520,22,490,20],[521,14,490,22,"nom"],[521,17,490,25],[521,19,490,27],[521,32,490,40],[522,14,490,42,"selas_id"],[522,22,490,50],[522,24,490,52,"selasId"],[523,12,490,60],[523,13,490,61],[523,15,491,10],[524,14,491,12,"id"],[524,16,491,14],[524,18,491,16],[524,22,491,20],[525,14,491,22,"nom"],[525,17,491,25],[525,19,491,27],[525,29,491,37],[526,14,491,39,"selas_id"],[526,22,491,47],[526,24,491,49,"selasId"],[527,12,491,57],[527,13,491,58],[527,14,492,9],[528,10,493,6],[529,10,495,6],[529,17,495,13,"poles"],[529,22,495,18],[530,8,496,4],[530,9,496,5],[530,10,496,6],[530,17,496,13,"error"],[530,22,496,18],[530,24,496,20],[531,10,497,6,"console"],[531,17,497,13],[531,18,497,14,"error"],[531,23,497,19],[531,24,497,20],[531,67,497,63],[531,69,497,65,"error"],[531,74,497,70],[531,75,497,71],[532,10,498,6],[532,14,498,12,"selasId"],[532,23,498,19],[532,32,498,28,"SupabaseService"],[532,47,498,43],[532,48,498,44,"getUserSelas"],[532,60,498,56],[532,61,498,57],[532,62,498,58],[532,63,498,59,"catch"],[532,68,498,64],[532,69,498,65],[532,75,498,71],[532,77,498,73],[532,78,498,74],[533,10,499,6],[533,17,499,13],[533,18,500,8],[534,12,500,10,"id"],[534,14,500,12],[534,16,500,14],[534,20,500,18],[535,12,500,20,"nom"],[535,15,500,23],[535,17,500,25],[535,28,500,36],[536,12,500,38,"selas_id"],[536,20,500,46],[536,22,500,48,"selasId"],[537,10,500,56],[537,11,500,57],[537,13,501,8],[538,12,501,10,"id"],[538,14,501,12],[538,16,501,14],[538,20,501,18],[539,12,501,20,"nom"],[539,15,501,23],[539,17,501,25],[539,30,501,38],[540,12,501,40,"selas_id"],[540,20,501,48],[540,22,501,50,"selasId"],[541,10,501,58],[541,11,501,59],[541,13,502,8],[542,12,502,10,"id"],[542,14,502,12],[542,16,502,14],[542,20,502,18],[543,12,502,20,"nom"],[543,15,502,23],[543,17,502,25],[543,27,502,35],[544,12,502,37,"selas_id"],[544,20,502,45],[544,22,502,47,"selasId"],[545,10,502,55],[545,11,502,56],[545,12,503,7],[546,8,504,4],[547,6,505,2],[547,7,505,3],[548,6,505,3],[548,22,467,2,"getPoles"],[548,30,467,10,"getPoles"],[548,31,467,10],[549,8,467,10],[549,15,467,10,"_ref12"],[549,21,467,10],[549,22,467,10,"apply"],[549,27,467,10],[549,34,467,10,"arguments"],[549,43,467,10],[550,6,467,10],[551,4,467,10],[551,7,505,3],[552,4,507,2],[553,4,508,2,"addScans"],[553,12,508,10],[554,6,508,10],[554,10,508,10,"_ref13"],[554,16,508,10],[554,23,508,10,"_asyncToGenerator2"],[554,41,508,10],[554,42,508,10,"default"],[554,49,508,10],[554,51,508,12],[554,62,508,19,"scansArray"],[554,72,508,29],[554,74,508,34],[555,8,509,4,"console"],[555,15,509,11],[555,16,509,12,"log"],[555,19,509,15],[555,20,509,16],[555,43,509,39],[555,45,509,41,"scansArray"],[555,55,509,51],[555,56,509,52,"length"],[555,62,509,58],[555,64,509,60],[555,71,509,67],[555,72,509,68],[556,8,510,4],[556,12,510,8],[557,10,511,6],[557,14,511,12,"user"],[557,18,511,16],[557,27,511,25,"SupabaseService"],[557,42,511,40],[557,43,511,41,"getCurrentUser"],[557,57,511,55],[557,58,511,56],[557,59,511,57],[558,10,512,6],[558,14,512,10],[558,15,512,11,"user"],[558,19,512,15],[558,21,512,17],[559,12,513,8,"console"],[559,19,513,15],[559,20,513,16,"log"],[559,23,513,19],[559,24,513,20],[559,77,513,73],[559,78,513,74],[560,12,514,8],[560,19,514,15],[561,14,514,17,"success"],[561,21,514,24],[561,23,514,26],[561,28,514,31],[562,14,514,33,"error"],[562,19,514,38],[562,21,514,40],[563,12,514,67],[563,13,514,68],[564,10,515,6],[565,10,517,6],[565,14,517,12,"userProfile"],[565,25,517,23],[565,34,517,32,"SupabaseService"],[565,49,517,47],[565,50,517,48,"getUserProfile"],[565,64,517,62],[565,65,517,63],[565,66,517,64],[566,10,518,6],[566,14,518,12,"selaId"],[566,20,518,18],[566,29,518,27,"SupabaseService"],[566,44,518,42],[566,45,518,43,"getUserSelas"],[566,57,518,55],[566,58,518,56],[566,59,518,57],[567,10,519,6],[567,14,519,12,"sessionData"],[567,25,519,23],[567,34,519,32,"SupabaseService"],[567,49,519,47],[567,50,519,48,"getCurrentSession"],[567,67,519,65],[567,68,519,66],[567,69,519,67],[568,10,521,6],[568,14,521,12,"userName"],[568,22,521,20],[568,25,521,23,"userProfile"],[568,36,521,34],[568,38,521,36,"nom"],[568,41,521,39],[568,45,521,43,"userProfile"],[568,56,521,54],[568,58,521,56,"prenom"],[568,64,521,62],[568,67,522,10],[568,70,522,13,"userProfile"],[568,81,522,24],[568,82,522,25,"prenom"],[568,88,522,31],[568,92,522,35,"userProfile"],[568,103,522,46],[568,104,522,47,"nom"],[568,107,522,50],[568,109,522,52],[568,112,523,10,"user"],[568,116,523,14],[568,117,523,15,"email"],[568,122,523,20],[570,10,525,6],[571,10,526,6],[571,14,526,12,"formattedScans"],[571,28,526,26],[571,31,526,29,"scansArray"],[571,41,526,39],[571,42,526,40,"map"],[571,45,526,43],[571,46,526,44,"scan"],[571,50,526,48],[571,55,526,53],[572,12,527,8,"id_colis"],[572,20,527,16],[572,22,527,18,"scan"],[572,26,527,22],[572,27,527,23,"idColis"],[572,34,527,30],[572,38,527,34,"scan"],[572,42,527,38],[572,43,527,39,"code"],[572,47,527,43],[572,51,527,47],[572,53,527,49],[573,12,528,8,"scan_date"],[573,21,528,17],[573,23,528,19,"scan"],[573,27,528,23],[573,28,528,24,"scanDate"],[573,36,528,32],[573,40,528,36],[573,44,528,40,"Date"],[573,48,528,44],[573,49,528,45],[573,50,528,46],[573,51,528,47,"toISOString"],[573,62,528,58],[573,63,528,59],[573,64,528,60],[574,12,529,8,"operation_type"],[574,26,529,22],[574,28,529,24,"scan"],[574,32,529,28],[574,33,529,29,"operationType"],[574,46,529,42],[574,50,529,46],[574,58,529,54],[575,12,530,8,"session_id"],[575,22,530,18],[575,24,530,20,"scan"],[575,28,530,24],[575,29,530,25,"sessionId"],[575,38,530,34],[575,42,530,38],[575,44,530,40],[576,12,531,8,"coursier_charge"],[576,27,531,23],[576,29,531,25,"userName"],[576,37,531,33],[576,41,531,37,"user"],[576,45,531,41],[576,46,531,42,"email"],[576,51,531,47],[577,12,532,8,"coursier_chargeant_id"],[577,33,532,29],[577,35,532,31,"user"],[577,39,532,35],[577,40,532,36,"uid"],[577,43,532,39],[578,12,533,8,"tournee"],[578,19,533,15],[578,21,533,17,"scan"],[578,25,533,21],[578,26,533,22,"tournee"],[578,33,533,29],[578,37,533,33,"sessionData"],[578,48,533,44],[578,50,533,46,"tournee"],[578,57,533,53],[578,59,533,55,"nom"],[578,62,533,58],[578,66,533,62],[578,68,533,64],[579,12,534,8,"tournee_id"],[579,22,534,18],[579,24,534,20,"scan"],[579,28,534,24],[579,29,534,25,"tourneeId"],[579,38,534,34],[579,42,534,38,"sessionData"],[579,53,534,49],[579,55,534,51,"tournee_id"],[579,65,534,61],[579,69,534,65],[579,71,534,67],[580,12,535,8,"vehicule"],[580,20,535,16],[580,22,535,18,"scan"],[580,26,535,22],[580,27,535,23,"vehicule"],[580,35,535,31],[580,39,535,35,"sessionData"],[580,50,535,46],[580,52,535,48,"vehicule"],[580,60,535,56],[580,62,535,58,"immatriculation"],[580,77,535,73],[580,81,535,77],[580,83,535,79],[581,12,536,8,"vehicule_id"],[581,23,536,19],[581,25,536,21,"scan"],[581,29,536,25],[581,30,536,26,"vehiculeId"],[581,40,536,36],[581,44,536,40,"sessionData"],[581,55,536,51],[581,57,536,53,"vehicule_id"],[581,68,536,64],[581,72,536,68],[581,74,536,70],[582,12,537,8,"site"],[582,16,537,12],[582,18,537,14,"scan"],[582,22,537,18],[582,23,537,19,"site"],[582,27,537,23],[582,31,537,27,"scan"],[582,35,537,31],[582,36,537,32,"siteDepart"],[582,46,537,42],[582,50,537,46],[582,64,537,60],[583,12,538,8,"site_depart"],[583,23,538,19],[583,25,538,21,"scan"],[583,29,538,25],[583,30,538,26,"siteDepart"],[583,40,538,36],[583,44,538,40,"scan"],[583,48,538,44],[583,49,538,45,"site"],[583,53,538,49],[583,57,538,53],[583,71,538,67],[584,12,539,8,"site_fin"],[584,20,539,16],[584,22,539,18,"scan"],[584,26,539,22],[584,27,539,23,"operationType"],[584,40,539,36],[584,45,539,41],[584,53,539,49],[584,56,539,53,"scan"],[584,60,539,57],[584,61,539,58,"siteFin"],[584,68,539,65],[584,72,539,69,"scan"],[584,76,539,73],[584,77,539,74,"siteActuel"],[584,87,539,84],[584,91,539,88,"scan"],[584,95,539,92],[584,96,539,93,"site"],[584,100,539,97],[584,104,539,101],[584,106,539,103],[584,109,539,107],[584,113,539,111],[585,12,540,8,"selas_id"],[585,20,540,16],[585,22,540,18,"selaId"],[585,28,540,24],[585,32,540,28],[585,36,540,32],[586,12,541,8,"pole"],[586,16,541,12],[586,18,541,14,"scan"],[586,22,541,18],[586,23,541,19,"poleId"],[586,29,541,25],[586,33,541,29,"scan"],[586,37,541,33],[586,38,541,34,"pole"],[586,42,541,38],[586,46,541,42,"sessionData"],[586,57,541,53],[586,59,541,55,"pole_id"],[586,66,541,62],[586,70,541,66],[586,72,541,68],[587,12,542,8,"pole_name"],[587,21,542,17],[587,23,542,19,"scan"],[587,27,542,23],[587,28,542,24,"poleName"],[587,36,542,32],[587,40,542,36,"scan"],[587,44,542,40],[587,45,542,41,"pole"],[587,49,542,45],[587,53,542,49],[587,55,542,51],[588,12,543,8,"location"],[588,20,543,16],[588,22,543,18,"scan"],[588,26,543,22],[588,27,543,23,"location"],[588,35,543,31],[588,39,543,35],[588,43,543,39],[589,12,544,8,"status"],[589,18,544,14],[589,20,544,16,"scan"],[589,24,544,20],[589,25,544,21,"operationType"],[589,38,544,34],[589,43,544,39],[589,51,544,47],[589,54,544,50],[589,61,544,57],[589,64,545,16,"scan"],[589,68,545,20],[589,69,545,21,"operationType"],[589,82,545,34],[589,87,545,39],[589,106,545,58],[589,109,545,61],[589,123,545,75],[589,126,545,78],[589,136,545,88],[590,12,546,8,"created_at"],[590,22,546,18],[590,24,546,20],[590,28,546,24,"Date"],[590,32,546,28],[590,33,546,29],[590,34,546,30],[590,35,546,31,"toISOString"],[590,46,546,42],[590,47,546,43],[591,10,547,6],[591,11,547,7],[591,12,547,8],[591,13,547,9],[592,10,549,6,"console"],[592,17,549,13],[592,18,549,14,"log"],[592,21,549,17],[592,22,549,18],[592,56,549,52],[592,58,549,54,"JSON"],[592,62,549,58],[592,63,549,59,"stringify"],[592,72,549,68],[592,73,549,69,"formattedScans"],[592,87,549,83],[592,89,549,85],[592,93,549,89],[592,95,549,91],[592,96,549,92],[592,97,549,93],[592,98,549,94],[594,10,551,6],[595,10,552,6],[595,14,552,6,"_yield$supabase$from$9"],[595,36,552,6],[595,45,552,36,"supabase"],[595,53,552,44],[595,54,553,9,"from"],[595,58,553,13],[595,59,553,14],[595,69,553,24],[595,70,553,25],[595,71,554,9,"insert"],[595,77,554,15],[595,78,554,16,"formattedScans"],[595,92,554,30],[595,93,554,31],[595,94,555,9,"select"],[595,100,555,15],[595,101,555,16],[595,102,555,17],[596,12,552,14,"data"],[596,16,552,18],[596,19,552,18,"_yield$supabase$from$9"],[596,41,552,18],[596,42,552,14,"data"],[596,46,552,18],[597,12,552,20,"error"],[597,17,552,25],[597,20,552,25,"_yield$supabase$from$9"],[597,42,552,25],[597,43,552,20,"error"],[597,48,552,25],[598,10,557,6],[598,14,557,10,"error"],[598,19,557,15],[598,21,557,17],[599,12,558,8,"console"],[599,19,558,15],[599,20,558,16,"error"],[599,25,558,21],[599,26,558,22],[599,51,558,47],[599,53,558,49,"error"],[599,58,558,54],[599,59,558,55],[600,12,559,8],[600,19,559,15],[601,14,559,17,"success"],[601,21,559,24],[601,23,559,26],[601,28,559,31],[602,14,559,33,"error"],[602,19,559,38],[602,21,559,40,"error"],[602,26,559,45],[602,27,559,46,"message"],[603,12,559,54],[603,13,559,55],[604,10,560,6],[605,10,562,6,"console"],[605,17,562,13],[605,18,562,14,"log"],[605,21,562,17],[605,22,562,18],[605,27,562,23,"data"],[605,31,562,27],[605,32,562,28,"length"],[605,38,562,34],[605,67,562,63],[605,68,562,64],[606,10,563,6],[606,17,563,13],[607,12,563,15,"success"],[607,19,563,22],[607,21,563,24],[607,25,563,28],[608,12,563,30,"created"],[608,19,563,37],[608,21,563,39,"data"],[608,25,563,43],[608,26,563,44,"length"],[608,32,563,50],[609,12,563,52,"updated"],[609,19,563,59],[609,21,563,61],[610,10,563,63],[610,11,563,64],[611,8,564,4],[611,9,564,5],[611,10,564,6],[611,17,564,13,"error"],[611,22,564,18],[611,24,564,20],[612,10,565,6,"console"],[612,17,565,13],[612,18,565,14,"error"],[612,23,565,19],[612,24,565,20],[612,62,565,58],[612,64,565,60,"error"],[612,69,565,65],[612,70,565,66],[613,10,566,6],[613,17,566,13],[614,12,566,15,"success"],[614,19,566,22],[614,21,566,24],[614,26,566,29],[615,12,566,31,"error"],[615,17,566,36],[615,19,566,38,"error"],[615,24,566,43],[615,25,566,44,"message"],[616,10,566,52],[616,11,566,53],[617,8,567,4],[618,6,568,2],[618,7,568,3],[619,6,568,3],[619,22,508,2,"addScans"],[619,30,508,10,"addScans"],[619,31,508,10,"_x6"],[619,34,508,10],[620,8,508,10],[620,15,508,10,"_ref13"],[620,21,508,10],[620,22,508,10,"apply"],[620,27,508,10],[620,34,508,10,"arguments"],[620,43,508,10],[621,6,508,10],[622,4,508,10],[622,7,568,3],[623,4,570,2],[624,4,571,2,"getUserProfile"],[624,18,571,16],[625,6,571,16],[625,10,571,16,"_ref14"],[625,16,571,16],[625,23,571,16,"_asyncToGenerator2"],[625,41,571,16],[625,42,571,16,"default"],[625,49,571,16],[625,51,571,18],[625,64,571,30],[626,8,572,4],[626,12,572,8],[627,10,573,6],[627,14,573,12,"userData"],[627,22,573,20],[627,31,573,29,"SupabaseService"],[627,46,573,44],[627,47,573,45,"getCurrentUser"],[627,61,573,59],[627,62,573,60],[627,63,573,61],[628,10,574,6],[628,14,574,10],[628,15,574,11,"userData"],[628,23,574,19],[628,25,574,21],[628,31,574,27],[628,35,574,31,"Error"],[628,40,574,36],[628,41,574,37],[628,70,574,66],[628,71,574,67],[629,10,576,6],[629,14,576,6,"_yield$supabase$from$0"],[629,36,576,6],[629,45,576,45,"supabase"],[629,53,576,53],[629,54,577,9,"from"],[629,58,577,13],[629,59,577,14],[629,66,577,21],[629,67,577,22],[629,68,578,9,"select"],[629,74,578,15],[629,75,578,16],[629,78,578,19],[629,79,578,20],[629,80,579,9,"eq"],[629,82,579,11],[629,83,579,12],[629,87,579,16],[629,89,579,18,"userData"],[629,97,579,26],[629,98,579,27,"uid"],[629,101,579,30],[629,102,579,31],[629,103,580,9,"single"],[629,109,580,15],[629,110,580,16],[629,111,580,17],[630,12,576,20,"profile"],[630,19,576,27],[630,22,576,27,"_yield$supabase$from$0"],[630,44,576,27],[630,45,576,14,"data"],[630,49,576,18],[631,12,576,29,"error"],[631,17,576,34],[631,20,576,34,"_yield$supabase$from$0"],[631,42,576,34],[631,43,576,29,"error"],[631,48,576,34],[632,10,582,6],[632,14,582,10,"error"],[632,19,582,15],[632,21,582,17],[633,12,583,8,"console"],[633,19,583,15],[633,20,583,16,"error"],[633,25,583,21],[633,26,583,22],[633,55,583,51],[633,57,583,53,"error"],[633,62,583,58],[633,63,583,59],[634,12,584,8],[634,18,584,14,"error"],[634,23,584,19],[635,10,585,6],[636,10,587,6],[636,17,587,13,"profile"],[636,24,587,20],[637,8,588,4],[637,9,588,5],[637,10,588,6],[637,17,588,13,"error"],[637,22,588,18],[637,24,588,20],[638,10,589,6,"console"],[638,17,589,13],[638,18,589,14,"error"],[638,23,589,19],[638,24,589,20],[638,67,589,63],[638,69,589,65,"error"],[638,74,589,70],[638,75,589,71],[639,10,590,6],[639,16,590,12,"error"],[639,21,590,17],[640,8,591,4],[641,6,592,2],[641,7,592,3],[642,6,592,3],[642,22,571,2,"getUserProfile"],[642,36,571,16,"getUserProfile"],[642,37,571,16],[643,8,571,16],[643,15,571,16,"_ref14"],[643,21,571,16],[643,22,571,16,"apply"],[643,27,571,16],[643,34,571,16,"arguments"],[643,43,571,16],[644,6,571,16],[645,4,571,16],[645,7,592,3],[646,4,594,2],[647,4,595,2,"checkAuthAndRedirect"],[647,24,595,22],[648,6,595,22],[648,10,595,22,"_ref15"],[648,16,595,22],[648,23,595,22,"_asyncToGenerator2"],[648,41,595,22],[648,42,595,22,"default"],[648,49,595,22],[648,51,595,24],[648,62,595,31,"navigation"],[648,72,595,41],[648,74,595,46],[649,8,596,4],[649,12,596,8],[650,10,597,6],[650,14,597,12,"userData"],[650,22,597,20],[650,31,597,29,"SupabaseService"],[650,46,597,44],[650,47,597,45,"getCurrentUser"],[650,61,597,59],[650,62,597,60],[650,63,597,61],[651,10,598,6],[651,14,598,12,"isAuth"],[651,20,598,18],[651,29,598,27,"SupabaseService"],[651,44,598,42],[651,45,598,43,"isAuthenticated"],[651,60,598,58],[651,61,598,59],[651,62,598,60],[652,10,600,6],[652,14,600,10],[652,15,600,11,"userData"],[652,23,600,19],[652,27,600,23],[652,28,600,24,"isAuth"],[652,34,600,30],[652,36,600,32],[653,12,601,8,"console"],[653,19,601,15],[653,20,601,16,"log"],[653,23,601,19],[653,24,601,20],[653,98,601,94],[653,99,601,95],[655,12,603,8],[656,12,604,8],[656,18,604,14,"AsyncStorage"],[656,39,604,26],[656,40,604,27,"removeItem"],[656,50,604,37],[656,51,604,38,"USER_DATA_KEY"],[656,64,604,51],[656,65,604,52],[657,12,605,8],[657,18,605,14,"AsyncStorage"],[657,39,605,26],[657,40,605,27,"removeItem"],[657,50,605,37],[657,51,605,38,"AUTH_TOKEN_KEY"],[657,65,605,52],[657,66,605,53],[658,12,606,8],[658,18,606,14,"AsyncStorage"],[658,39,606,26],[658,40,606,27,"removeItem"],[658,50,606,37],[658,51,606,38],[658,71,606,58],[658,72,606,59],[660,12,608,8],[661,12,609,8],[661,16,609,12,"navigation"],[661,26,609,22],[661,28,609,24],[662,14,610,10,"navigation"],[662,24,610,20],[662,25,610,21,"reset"],[662,30,610,26],[662,31,610,27],[663,16,611,12,"index"],[663,21,611,17],[663,23,611,19],[663,24,611,20],[664,16,612,12,"routes"],[664,22,612,18],[664,24,612,20],[664,25,612,21],[665,18,612,23,"name"],[665,22,612,27],[665,24,612,29],[666,16,612,37],[666,17,612,38],[667,14,613,10],[667,15,613,11],[667,16,613,12],[668,12,614,8],[669,12,615,8],[669,19,615,15],[669,24,615,20],[670,10,616,6],[671,10,617,6],[671,17,617,13],[671,21,617,17],[672,8,618,4],[672,9,618,5],[672,10,618,6],[672,17,618,13,"error"],[672,22,618,18],[672,24,618,20],[673,10,619,6,"console"],[673,17,619,13],[673,18,619,14,"error"],[673,23,619,19],[673,24,619,20],[673,69,619,65],[673,71,619,67,"error"],[673,76,619,72],[673,77,619,73],[674,10,621,6],[674,14,621,10,"navigation"],[674,24,621,20],[674,26,621,22],[675,12,622,8,"navigation"],[675,22,622,18],[675,23,622,19,"reset"],[675,28,622,24],[675,29,622,25],[676,14,623,10,"index"],[676,19,623,15],[676,21,623,17],[676,22,623,18],[677,14,624,10,"routes"],[677,20,624,16],[677,22,624,18],[677,23,624,19],[678,16,624,21,"name"],[678,20,624,25],[678,22,624,27],[679,14,624,35],[679,15,624,36],[680,12,625,8],[680,13,625,9],[680,14,625,10],[681,10,626,6],[682,10,627,6],[682,17,627,13],[682,22,627,18],[683,8,628,4],[684,6,629,2],[684,7,629,3],[685,6,629,3],[685,22,595,2,"checkAuthAndRedirect"],[685,42,595,22,"checkAuthAndRedirect"],[685,43,595,22,"_x7"],[685,46,595,22],[686,8,595,22],[686,15,595,22,"_ref15"],[686,21,595,22],[686,22,595,22,"apply"],[686,27,595,22],[686,34,595,22,"arguments"],[686,43,595,22],[687,6,595,22],[688,4,595,22],[688,7,629,3],[689,4,631,2],[690,4,632,2,"uploadFile"],[690,14,632,12],[691,6,632,12],[691,10,632,12,"_ref16"],[691,16,632,12],[691,23,632,12,"_asyncToGenerator2"],[691,41,632,12],[691,42,632,12,"default"],[691,49,632,12],[691,51,632,14],[691,62,632,21,"file"],[691,66,632,25],[691,68,632,73],[692,8,632,73],[692,12,632,27,"bucketName"],[692,22,632,37],[692,25,632,37,"arguments"],[692,34,632,37],[692,35,632,37,"length"],[692,41,632,37],[692,49,632,37,"arguments"],[692,58,632,37],[692,66,632,37,"undefined"],[692,75,632,37],[692,78,632,37,"arguments"],[692,87,632,37],[692,93,632,40],[692,104,632,51],[693,8,632,51],[693,12,632,53,"folderPath"],[693,22,632,63],[693,25,632,63,"arguments"],[693,34,632,63],[693,35,632,63,"length"],[693,41,632,63],[693,49,632,63,"arguments"],[693,58,632,63],[693,66,632,63,"undefined"],[693,75,632,63],[693,78,632,63,"arguments"],[693,87,632,63],[693,93,632,66],[693,95,632,68],[694,8,633,4],[694,12,633,8],[695,10,634,6,"console"],[695,17,634,13],[695,18,634,14,"log"],[695,21,634,17],[695,22,634,18],[695,59,634,55,"bucketName"],[695,69,634,65],[695,83,634,79,"folderPath"],[695,93,634,89],[695,95,634,91],[695,96,634,92],[696,10,636,6],[696,14,636,10],[696,15,636,11,"file"],[696,19,636,15],[696,21,636,17],[697,12,637,8],[697,18,637,14],[697,22,637,18,"Error"],[697,27,637,23],[697,28,637,24],[697,46,637,42],[697,47,637,43],[698,10,638,6],[700,10,640,6],[701,10,641,6],[701,14,641,12,"fileExt"],[701,21,641,19],[701,24,641,22,"file"],[701,28,641,26],[701,29,641,27,"name"],[701,33,641,31],[701,36,641,34,"file"],[701,40,641,38],[701,41,641,39,"name"],[701,45,641,43],[701,46,641,44,"split"],[701,51,641,49],[701,52,641,50],[701,55,641,53],[701,56,641,54],[701,57,641,55,"pop"],[701,60,641,58],[701,61,641,59],[701,62,641,60],[701,65,641,63],[701,70,641,68],[702,10,642,6],[702,14,642,12,"fileName"],[702,22,642,20],[702,25,642,23],[702,28,642,26,"folderPath"],[702,38,642,36],[702,42,642,40,"Date"],[702,46,642,44],[702,47,642,45,"now"],[702,50,642,48],[702,51,642,49],[702,52,642,50],[702,56,642,54,"Math"],[702,60,642,58],[702,61,642,59,"random"],[702,67,642,65],[702,68,642,66],[702,69,642,67],[702,70,642,68,"toString"],[702,78,642,76],[702,79,642,77],[702,81,642,79],[702,82,642,80],[702,83,642,81,"substring"],[702,92,642,90],[702,93,642,91],[702,94,642,92],[702,95,642,93],[702,99,642,97,"fileExt"],[702,106,642,104],[702,108,642,106],[703,10,644,6,"console"],[703,17,644,13],[703,18,644,14,"log"],[703,21,644,17],[703,22,644,18],[703,59,644,55,"fileName"],[703,67,644,63],[703,69,644,65],[703,70,644,66],[705,10,646,6],[706,10,647,6],[706,14,647,6,"_yield$supabase$stora"],[706,35,647,6],[706,44,647,36,"supabase"],[706,52,647,44],[706,53,647,45,"storage"],[706,60,647,52],[706,61,648,9,"from"],[706,65,648,13],[706,66,648,14,"bucketName"],[706,76,648,24],[706,77,648,25],[706,78,649,9,"upload"],[706,84,649,15],[706,85,649,16,"fileName"],[706,93,649,24],[706,95,649,26,"file"],[706,99,649,30],[706,101,649,32],[707,14,650,10,"cacheControl"],[707,26,650,22],[707,28,650,24],[707,34,650,30],[708,14,651,10,"upsert"],[708,20,651,16],[708,22,651,18],[709,12,652,8],[709,13,652,9],[709,14,652,10],[710,12,647,14,"data"],[710,16,647,18],[710,19,647,18,"_yield$supabase$stora"],[710,40,647,18],[710,41,647,14,"data"],[710,45,647,18],[711,12,647,20,"error"],[711,17,647,25],[711,20,647,25,"_yield$supabase$stora"],[711,41,647,25],[711,42,647,20,"error"],[711,47,647,25],[712,10,654,6],[712,14,654,10,"error"],[712,19,654,15],[712,21,654,17],[713,12,655,8,"console"],[713,19,655,15],[713,20,655,16,"error"],[713,25,655,21],[713,26,655,22],[713,53,655,49],[713,55,655,51,"error"],[713,60,655,56],[713,61,655,57],[714,12,656,8],[714,18,656,14,"error"],[714,23,656,19],[715,10,657,6],[717,10,659,6],[718,10,660,6],[718,14,660,6,"_supabase$storage$fro"],[718,35,660,6],[718,38,660,32,"supabase"],[718,46,660,40],[718,47,660,41,"storage"],[718,54,660,48],[718,55,661,9,"from"],[718,59,661,13],[718,60,661,14,"bucketName"],[718,70,661,24],[718,71,661,25],[718,72,662,9,"getPublicUrl"],[718,84,662,21],[718,85,662,22,"fileName"],[718,93,662,30],[718,94,662,31],[719,12,660,20,"urlData"],[719,19,660,27],[719,22,660,27,"_supabase$storage$fro"],[719,43,660,27],[719,44,660,14,"data"],[719,48,660,18],[720,10,664,6,"console"],[720,17,664,13],[720,18,664,14,"log"],[720,21,664,17],[720,22,664,18],[720,56,664,52,"urlData"],[720,63,664,59],[720,64,664,60,"publicUrl"],[720,73,664,69],[720,75,664,71],[720,76,664,72],[721,10,665,6],[721,17,665,13],[722,12,666,8,"success"],[722,19,666,15],[722,21,666,17],[722,25,666,21],[723,12,667,8,"url"],[723,15,667,11],[723,17,667,13,"urlData"],[723,24,667,20],[723,25,667,21,"publicUrl"],[723,34,667,30],[724,12,668,8,"path"],[724,16,668,12],[724,18,668,14,"fileName"],[724,26,668,22],[725,12,669,8,"bucket"],[725,18,669,14],[725,20,669,16,"bucketName"],[726,10,670,6],[726,11,670,7],[727,8,672,4],[727,9,672,5],[727,10,672,6],[727,17,672,13,"error"],[727,22,672,18],[727,24,672,20],[728,10,673,6,"console"],[728,17,673,13],[728,18,673,14,"error"],[728,23,673,19],[728,24,673,20],[728,60,673,56],[728,62,673,58,"error"],[728,67,673,63],[728,68,673,64],[729,10,674,6],[729,16,674,12,"error"],[729,21,674,17],[730,8,675,4],[731,6,676,2],[731,7,676,3],[732,6,676,3],[732,22,632,2,"uploadFile"],[732,32,632,12,"uploadFile"],[732,33,632,12,"_x8"],[732,36,632,12],[733,8,632,12],[733,15,632,12,"_ref16"],[733,21,632,12],[733,22,632,12,"apply"],[733,27,632,12],[733,34,632,12,"arguments"],[733,43,632,12],[734,6,632,12],[735,4,632,12],[735,7,676,3],[736,4,678,2],[737,4,679,2,"uploadImageFromUri"],[737,22,679,20],[738,6,679,20],[738,10,679,20,"_ref17"],[738,16,679,20],[738,23,679,20,"_asyncToGenerator2"],[738,41,679,20],[738,42,679,20,"default"],[738,49,679,20],[738,51,679,22],[738,62,679,29,"uri"],[738,65,679,32],[738,67,679,87],[739,8,679,87],[739,12,679,34,"bucketName"],[739,22,679,44],[739,25,679,44,"arguments"],[739,34,679,44],[739,35,679,44,"length"],[739,41,679,44],[739,49,679,44,"arguments"],[739,58,679,44],[739,66,679,44,"undefined"],[739,75,679,44],[739,78,679,44,"arguments"],[739,87,679,44],[739,93,679,47],[739,109,679,63],[740,8,679,63],[740,12,679,65,"folderPath"],[740,22,679,75],[740,25,679,75,"arguments"],[740,34,679,75],[740,35,679,75,"length"],[740,41,679,75],[740,49,679,75,"arguments"],[740,58,679,75],[740,66,679,75,"undefined"],[740,75,679,75],[740,78,679,75,"arguments"],[740,87,679,75],[740,93,679,78],[740,97,679,82],[741,8,680,4],[741,12,680,8],[742,10,681,6],[742,14,681,10],[742,15,681,11,"uri"],[742,18,681,14],[742,20,681,16],[743,12,682,8],[743,18,682,14],[743,22,682,18,"Error"],[743,27,682,23],[743,28,682,24],[743,55,682,51],[743,56,682,52],[744,10,683,6],[745,10,685,6,"console"],[745,17,685,13],[745,18,685,14,"log"],[745,21,685,17],[745,22,685,18],[745,67,685,63,"uri"],[745,70,685,66],[745,71,685,67,"substring"],[745,80,685,76],[745,81,685,77],[745,82,685,78],[745,84,685,80],[745,86,685,82],[745,87,685,83],[745,92,685,88],[745,93,685,89],[747,10,687,6],[748,10,688,6,"console"],[748,17,688,13],[748,18,688,14,"log"],[748,21,688,17],[748,22,688,18],[748,65,688,61],[748,66,688,62],[749,10,689,6],[749,14,689,10],[750,12,690,8],[751,12,691,8],[751,16,691,14,"quickTest"],[751,25,691,23],[751,34,691,32,"fetch"],[751,39,691,37],[751,40,691,38],[751,43,691,41,"supabaseUrl"],[751,54,691,52],[751,65,691,63],[751,67,691,65],[752,14,692,10,"method"],[752,20,692,16],[752,22,692,18],[752,27,692,23],[753,14,693,10,"headers"],[753,21,693,17],[753,23,693,19],[754,16,694,12],[754,24,694,20],[754,26,694,22,"supabaseKey"],[754,37,694,33],[755,16,695,12],[755,31,695,27],[755,33,695,29],[755,43,695,39,"supabaseKey"],[755,54,695,50],[755,56,695,52],[756,16,696,12],[756,30,696,26],[756,32,696,28],[757,14,697,10],[758,12,698,8],[758,13,698,9],[758,14,698,10],[759,12,700,8],[759,16,700,12],[759,17,700,13,"quickTest"],[759,26,700,22],[759,27,700,23,"ok"],[759,29,700,25],[759,31,700,27],[760,14,701,10,"console"],[760,21,701,17],[760,22,701,18,"warn"],[760,26,701,22],[760,27,701,23],[760,98,701,94],[760,99,701,95],[761,12,702,8],[761,13,702,9],[761,19,702,15],[762,14,703,10,"console"],[762,21,703,17],[762,22,703,18,"log"],[762,25,703,21],[762,26,703,22],[762,64,703,60],[762,65,703,61],[763,12,704,8],[764,10,705,6],[764,11,705,7],[764,12,705,8],[764,19,705,15,"connectionError"],[764,34,705,30],[764,36,705,32],[765,12,706,8,"console"],[765,19,706,15],[765,20,706,16,"warn"],[765,24,706,20],[765,25,706,21],[765,94,706,90],[765,96,706,92,"connectionError"],[765,111,706,107],[765,112,706,108,"message"],[765,119,706,115],[765,120,706,116],[766,10,707,6],[767,10,709,6],[767,14,709,10,"blob"],[767,18,709,14],[768,10,710,6],[768,14,710,10,"fileExt"],[768,21,710,17],[768,24,710,20],[768,29,710,25],[770,10,712,6],[771,10,713,6],[771,14,713,10,"uri"],[771,17,713,13],[771,18,713,14,"startsWith"],[771,28,713,24],[771,29,713,25],[771,36,713,32],[771,37,713,33],[771,41,713,37,"uri"],[771,44,713,40],[771,45,713,41,"startsWith"],[771,55,713,51],[771,56,713,52],[771,63,713,59],[771,64,713,60],[771,66,713,62],[772,12,714,8],[773,12,715,8],[773,16,715,12,"uri"],[773,19,715,15],[773,20,715,16,"startsWith"],[773,30,715,26],[773,31,715,27],[773,38,715,34],[773,39,715,35],[773,41,715,37],[774,14,716,10],[775,14,717,10],[775,18,717,16,"response"],[775,26,717,24],[775,35,717,33,"fetch"],[775,40,717,38],[775,41,717,39,"uri"],[775,44,717,42],[775,45,717,43],[776,14,718,10,"blob"],[776,18,718,14],[776,27,718,23,"response"],[776,35,718,31],[776,36,718,32,"blob"],[776,40,718,36],[776,41,718,37],[776,42,718,38],[777,14,719,10,"fileExt"],[777,21,719,17],[777,24,719,20,"uri"],[777,27,719,23],[777,28,719,24,"split"],[777,33,719,29],[777,34,719,30],[777,37,719,33],[777,38,719,34],[777,39,719,35],[777,40,719,36],[777,41,719,37],[777,42,719,38,"split"],[777,47,719,43],[777,48,719,44],[777,51,719,47],[777,52,719,48],[777,53,719,49],[777,54,719,50],[777,55,719,51],[777,59,719,55],[777,64,719,60],[778,12,720,8],[778,13,720,9],[778,19,720,15],[779,14,721,10],[780,14,722,10],[780,18,722,14],[781,16,723,12],[781,20,723,18,"response"],[781,29,723,26],[781,38,723,35,"fetch"],[781,43,723,40],[781,44,723,41,"uri"],[781,47,723,44],[781,48,723,45],[782,16,724,12,"blob"],[782,20,724,16],[782,29,724,25,"response"],[782,38,724,33],[782,39,724,34,"blob"],[782,43,724,38],[782,44,724,39],[782,45,724,40],[783,14,725,10],[783,15,725,11],[783,16,725,12],[783,23,725,19,"blobError"],[783,32,725,28],[783,34,725,30],[784,16,726,12,"console"],[784,23,726,19],[784,24,726,20,"warn"],[784,28,726,24],[784,29,726,25],[784,86,726,82],[784,88,726,84,"blobError"],[784,97,726,93],[784,98,726,94],[785,16,727,12],[786,16,728,12],[786,22,728,18],[786,26,728,22,"Error"],[786,31,728,27],[786,32,728,28],[786,103,728,99],[786,104,728,100],[787,14,729,10],[788,12,730,8],[789,10,731,6],[789,11,731,7],[789,17,731,13],[789,21,731,17,"uri"],[789,24,731,20],[789,25,731,21,"startsWith"],[789,35,731,31],[789,36,731,32],[789,45,731,41],[789,46,731,42],[789,50,731,46,"uri"],[789,53,731,49],[789,54,731,50,"startsWith"],[789,64,731,60],[789,65,731,61],[789,77,731,73],[789,78,731,74],[789,80,731,76],[790,12,732,8],[791,12,733,8],[791,16,733,14,"response"],[791,26,733,22],[791,35,733,31,"fetch"],[791,40,733,36],[791,41,733,37,"uri"],[791,44,733,40],[791,45,733,41],[792,12,734,8],[792,16,734,12],[792,17,734,13,"response"],[792,27,734,21],[792,28,734,22,"ok"],[792,30,734,24],[792,32,734,26],[793,14,735,10],[793,20,735,16],[793,24,735,20,"Error"],[793,29,735,25],[793,30,735,26],[793,71,735,67,"response"],[793,81,735,75],[793,82,735,76,"status"],[793,88,735,82],[793,90,735,84],[793,91,735,85],[794,12,736,8],[795,12,737,8,"blob"],[795,16,737,12],[795,25,737,21,"response"],[795,35,737,29],[795,36,737,30,"blob"],[795,40,737,34],[795,41,737,35],[795,42,737,36],[796,12,738,8,"fileExt"],[796,19,738,15],[796,22,738,18,"uri"],[796,25,738,21],[796,26,738,22,"split"],[796,31,738,27],[796,32,738,28],[796,35,738,31],[796,36,738,32],[796,37,738,33,"pop"],[796,40,738,36],[796,41,738,37],[796,42,738,38],[796,46,738,42],[796,51,738,47],[797,10,739,6],[797,11,739,7],[797,17,739,13],[798,12,740,8],[799,12,741,8],[799,16,741,12],[800,14,742,10],[800,18,742,16,"response"],[800,28,742,24],[800,37,742,33,"fetch"],[800,42,742,38],[800,43,742,39,"uri"],[800,46,742,42],[800,47,742,43],[801,14,743,10],[801,18,743,14],[801,19,743,15,"response"],[801,29,743,23],[801,30,743,24,"ok"],[801,32,743,26],[801,34,743,28],[802,16,744,12],[802,22,744,18],[802,26,744,22,"Error"],[802,31,744,27],[802,32,744,28],[802,73,744,69,"response"],[802,83,744,77],[802,84,744,78,"status"],[802,90,744,84],[802,92,744,86],[802,93,744,87],[803,14,745,10],[804,14,746,10,"blob"],[804,18,746,14],[804,27,746,23,"response"],[804,37,746,31],[804,38,746,32,"blob"],[804,42,746,36],[804,43,746,37],[804,44,746,38],[805,14,747,10,"fileExt"],[805,21,747,17],[805,24,747,20,"uri"],[805,27,747,23],[805,28,747,24,"split"],[805,33,747,29],[805,34,747,30],[805,37,747,33],[805,38,747,34],[805,39,747,35,"pop"],[805,42,747,38],[805,43,747,39],[805,44,747,40],[805,48,747,44],[805,53,747,49],[806,12,748,8],[806,13,748,9],[806,14,748,10],[806,21,748,17,"fetchError"],[806,31,748,27],[806,33,748,29],[807,14,749,10,"console"],[807,21,749,17],[807,22,749,18,"error"],[807,27,749,23],[807,28,749,24],[807,64,749,60],[807,66,749,62,"fetchError"],[807,76,749,72],[807,77,749,73],[808,14,750,10],[808,20,750,16],[808,24,750,20,"Error"],[808,29,750,25],[808,30,750,26],[808,106,750,102],[808,107,750,103],[809,12,751,8],[810,10,752,6],[811,10,754,6],[811,14,754,10],[811,15,754,11,"blob"],[811,19,754,15],[811,21,754,17],[812,12,755,8],[812,18,755,14],[812,22,755,18,"Error"],[812,27,755,23],[812,28,755,24],[812,69,755,65],[812,70,755,66],[813,10,756,6],[815,10,758,6],[816,10,759,6],[817,10,760,6],[817,14,760,10,"fileName"],[817,22,760,18],[818,10,762,6],[818,14,762,10,"folderPath"],[818,24,762,20],[818,26,762,22],[819,12,763,8],[820,12,764,8],[821,12,765,8],[821,16,765,14,"cleanFolderPath"],[821,31,765,29],[821,34,765,32,"folderPath"],[821,44,765,42],[821,45,765,43,"replace"],[821,52,765,50],[821,53,765,51],[821,70,765,68],[821,72,765,70],[821,75,765,73],[821,76,765,74],[822,12,766,8],[822,16,766,14,"timestamp"],[822,25,766,23],[822,28,766,26,"Date"],[822,32,766,30],[822,33,766,31,"now"],[822,36,766,34],[822,37,766,35],[822,38,766,36],[823,12,767,8],[823,16,767,14,"randomId"],[823,24,767,22],[823,27,767,25,"Math"],[823,31,767,29],[823,32,767,30,"random"],[823,38,767,36],[823,39,767,37],[823,40,767,38],[823,41,767,39,"toString"],[823,49,767,47],[823,50,767,48],[823,52,767,50],[823,53,767,51],[823,54,767,52,"substring"],[823,63,767,61],[823,64,767,62],[823,65,767,63],[823,67,767,65],[823,68,767,66],[823,69,767,67],[824,12,768,8,"fileName"],[824,20,768,16],[824,23,768,19],[824,26,768,22,"cleanFolderPath"],[824,41,768,37],[824,45,768,41,"timestamp"],[824,54,768,50],[824,58,768,54,"randomId"],[824,66,768,62],[824,70,768,66,"fileExt"],[824,77,768,73],[824,79,768,75],[825,10,769,6],[825,11,769,7],[825,17,769,13],[826,12,770,8],[827,12,771,8],[827,16,771,14,"timestamp"],[827,26,771,23],[827,29,771,26,"Date"],[827,33,771,30],[827,34,771,31,"now"],[827,37,771,34],[827,38,771,35],[827,39,771,36],[828,12,772,8],[828,16,772,14,"randomId"],[828,25,772,22],[828,28,772,25,"Math"],[828,32,772,29],[828,33,772,30,"random"],[828,39,772,36],[828,40,772,37],[828,41,772,38],[828,42,772,39,"toString"],[828,50,772,47],[828,51,772,48],[828,53,772,50],[828,54,772,51],[828,55,772,52,"substring"],[828,64,772,61],[828,65,772,62],[828,66,772,63],[828,68,772,65],[828,69,772,66],[828,70,772,67],[829,12,773,8,"fileName"],[829,20,773,16],[829,23,773,19],[829,26,773,22,"timestamp"],[829,36,773,31],[829,40,773,35,"randomId"],[829,49,773,43],[829,53,773,47,"fileExt"],[829,60,773,54],[829,62,773,56],[830,10,774,6],[831,10,776,6,"console"],[831,17,776,13],[831,18,776,14,"log"],[831,21,776,17],[831,22,776,18],[831,62,776,58,"fileName"],[831,70,776,66],[831,72,776,68],[831,73,776,69],[832,10,778,6],[832,14,778,12,"file"],[832,18,778,16],[832,21,778,19],[832,25,778,23,"File"],[832,29,778,27],[832,30,778,28],[832,31,778,29,"blob"],[832,35,778,33],[832,36,778,34],[832,38,778,36,"fileName"],[832,46,778,44],[832,48,778,46],[833,12,778,48,"type"],[833,16,778,52],[833,18,778,54],[833,27,778,63,"fileExt"],[833,34,778,70],[834,10,778,73],[834,11,778,74],[834,12,778,75],[835,10,780,6,"console"],[835,17,780,13],[835,18,780,14,"log"],[835,21,780,17],[835,22,780,18],[835,56,780,52,"bucketName"],[835,66,780,62],[835,80,780,76,"fileName"],[835,88,780,84],[835,90,780,86],[835,91,780,87],[837,10,782,6],[838,10,783,6],[838,14,783,10,"uploadResult"],[838,26,783,22],[839,10,784,6],[839,14,784,10,"uploadError"],[839,25,784,21],[840,10,786,6],[840,14,786,10],[841,12,787,8,"console"],[841,19,787,15],[841,20,787,16,"log"],[841,23,787,19],[841,24,787,20],[841,70,787,66,"bucketName"],[841,80,787,76],[841,82,787,78],[841,83,787,79],[842,12,788,8],[842,16,788,8,"_yield$supabase$stora2"],[842,38,788,8],[842,47,788,38,"supabase"],[842,55,788,46],[842,56,788,47,"storage"],[842,63,788,54],[842,64,789,11,"from"],[842,68,789,15],[842,69,789,16,"bucketName"],[842,79,789,26],[842,80,789,27],[842,81,790,11,"upload"],[842,87,790,17],[842,88,790,18,"fileName"],[842,96,790,26],[842,98,790,28,"file"],[842,102,790,32],[842,104,790,34],[843,16,791,12,"cacheControl"],[843,28,791,24],[843,30,791,26],[843,36,791,32],[844,16,792,12,"upsert"],[844,22,792,18],[844,24,792,20],[845,14,793,10],[845,15,793,11],[845,16,793,12],[846,14,788,16,"data"],[846,18,788,20],[846,21,788,20,"_yield$supabase$stora2"],[846,43,788,20],[846,44,788,16,"data"],[846,48,788,20],[847,14,788,22,"error"],[847,19,788,27],[847,22,788,27,"_yield$supabase$stora2"],[847,44,788,27],[847,45,788,22,"error"],[847,50,788,27],[848,12,795,8,"uploadResult"],[848,24,795,20],[848,27,795,23,"data"],[848,31,795,27],[849,12,796,8,"uploadError"],[849,23,796,19],[849,26,796,22,"error"],[849,31,796,27],[850,10,797,6],[850,11,797,7],[850,12,797,8],[850,19,797,15,"uploadException"],[850,34,797,30],[850,36,797,32],[851,12,798,8,"console"],[851,19,798,15],[851,20,798,16,"error"],[851,25,798,21],[851,26,798,22],[851,71,798,67],[851,73,798,69,"uploadException"],[851,88,798,84],[851,89,798,85],[852,12,799,8,"uploadError"],[852,23,799,19],[852,26,799,22,"uploadException"],[852,41,799,37],[853,10,800,6],[854,10,802,6],[854,14,802,10,"uploadError"],[854,25,802,21],[854,27,802,23],[855,12,803,8],[856,12,804,8,"console"],[856,19,804,15],[856,20,804,16,"log"],[856,23,804,19],[856,24,804,20],[856,76,804,72],[856,77,804,73],[858,12,806,8],[859,12,807,8,"console"],[859,19,807,15],[859,20,807,16,"log"],[859,23,807,19],[859,24,807,20],[859,80,807,76],[859,81,807,77],[860,12,808,8],[860,16,808,12],[861,14,809,10],[861,18,809,16,"uploadUrl"],[861,27,809,25],[861,30,809,28],[861,33,809,31,"supabaseUrl"],[861,44,809,42],[861,66,809,64,"bucketName"],[861,76,809,74],[861,80,809,78,"fileName"],[861,88,809,86],[861,90,809,88],[862,14,810,10,"console"],[862,21,810,17],[862,22,810,18,"log"],[862,25,810,21],[862,26,810,22],[862,58,810,54,"uploadUrl"],[862,67,810,63],[862,69,810,65],[862,70,810,66],[864,14,812,10],[865,14,813,10],[865,18,813,16,"formData"],[865,26,813,24],[865,29,813,27],[865,33,813,31,"FormData"],[865,41,813,39],[865,42,813,40],[865,43,813,41],[866,14,814,10,"formData"],[866,22,814,18],[866,23,814,19,"append"],[866,29,814,25],[866,30,814,26],[866,36,814,32],[866,38,814,34],[867,16,815,12,"uri"],[867,19,815,15],[867,21,815,17,"uri"],[867,24,815,20],[868,16,816,12,"type"],[868,20,816,16],[868,22,816,18],[868,31,816,27,"fileExt"],[868,38,816,34],[868,40,816,36],[869,16,817,12,"name"],[869,20,817,16],[869,22,817,18,"fileName"],[870,14,818,10],[870,15,818,11],[870,16,818,12],[871,14,820,10],[871,18,820,16,"response"],[871,28,820,24],[871,37,820,33,"fetch"],[871,42,820,38],[871,43,820,39,"uploadUrl"],[871,52,820,48],[871,54,820,50],[872,16,821,12,"method"],[872,22,821,18],[872,24,821,20],[872,30,821,26],[873,16,822,12,"headers"],[873,23,822,19],[873,25,822,21],[874,18,823,14],[874,33,823,29],[874,35,823,31],[874,45,823,41,"supabaseKey"],[874,56,823,52],[874,58,823,54],[875,18,824,14],[875,26,824,22],[875,28,824,24,"supabaseKey"],[876,16,825,12],[876,17,825,13],[877,16,826,12,"body"],[877,20,826,16],[877,22,826,18,"formData"],[878,14,827,10],[878,15,827,11],[878,16,827,12],[879,14,829,10],[879,18,829,14],[879,19,829,15,"response"],[879,29,829,23],[879,30,829,24,"ok"],[879,32,829,26],[879,34,829,28],[880,16,830,12],[880,20,830,18,"errorText"],[880,29,830,27],[880,38,830,36,"response"],[880,48,830,44],[880,49,830,45,"text"],[880,53,830,49],[880,54,830,50],[880,55,830,51],[881,16,831,12,"console"],[881,23,831,19],[881,24,831,20,"error"],[881,29,831,25],[881,30,831,26],[881,68,831,64,"bucketName"],[881,78,831,74],[881,81,831,77],[881,83,831,79,"response"],[881,93,831,87],[881,94,831,88,"status"],[881,100,831,94],[881,102,831,96,"errorText"],[881,111,831,105],[881,112,831,106],[882,16,832,12],[882,22,832,18],[882,26,832,22,"Error"],[882,31,832,27],[882,32,832,28],[882,55,832,51,"response"],[882,65,832,59],[882,66,832,60,"status"],[882,72,832,66],[882,76,832,70,"errorText"],[882,85,832,79],[882,87,832,81],[882,88,832,82],[883,14,833,10],[884,14,835,10,"console"],[884,21,835,17],[884,22,835,18,"log"],[884,25,835,21],[884,26,835,22],[884,74,835,70,"bucketName"],[884,84,835,80],[884,86,835,82],[884,87,835,83],[886,14,837,10],[887,14,838,10],[887,18,838,16,"publicUrl"],[887,27,838,25],[887,30,838,28],[887,33,838,31,"supabaseUrl"],[887,44,838,42],[887,73,838,71,"bucketName"],[887,83,838,81],[887,87,838,85,"fileName"],[887,95,838,93],[887,97,838,95],[888,14,840,10],[888,21,840,17],[889,16,841,12,"success"],[889,23,841,19],[889,25,841,21],[889,29,841,25],[890,16,842,12,"url"],[890,19,842,15],[890,21,842,17,"publicUrl"],[890,30,842,26],[891,16,843,12,"path"],[891,20,843,16],[891,22,843,18,"fileName"],[891,30,843,26],[892,16,844,12,"bucket"],[892,22,844,18],[892,24,844,20,"bucketName"],[892,34,844,30],[893,16,845,12,"method"],[893,22,845,18],[893,24,845,20],[894,14,846,10],[894,15,846,11],[895,12,848,8],[895,13,848,9],[895,14,848,10],[895,21,848,17,"restError"],[895,30,848,26],[895,32,848,28],[896,14,849,10,"console"],[896,21,849,17],[896,22,849,18,"error"],[896,27,849,23],[896,28,849,24],[896,60,849,56],[896,62,849,58,"restError"],[896,71,849,67],[896,72,849,68],[898,14,851,10],[899,14,852,10],[899,18,852,14,"bucketName"],[899,28,852,24],[899,33,852,29],[899,44,852,40],[899,46,852,42],[900,16,853,12,"console"],[900,23,853,19],[900,24,853,20,"log"],[900,27,853,23],[900,28,853,24],[900,101,853,97],[900,102,853,98],[901,16,855,12],[901,20,855,16],[902,18,856,14],[902,22,856,20,"fallbackFileName"],[902,38,856,36],[902,41,856,39],[902,53,856,51,"Date"],[902,57,856,55],[902,58,856,56,"now"],[902,61,856,59],[902,62,856,60],[902,63,856,61],[902,67,856,65,"Math"],[902,71,856,69],[902,72,856,70,"random"],[902,78,856,76],[902,79,856,77],[902,80,856,78],[902,81,856,79,"toString"],[902,89,856,87],[902,90,856,88],[902,92,856,90],[902,93,856,91],[902,94,856,92,"substring"],[902,103,856,101],[902,104,856,102],[902,105,856,103],[902,107,856,105],[902,108,856,106],[902,109,856,107],[902,113,856,111,"fileExt"],[902,120,856,118],[902,122,856,120],[904,18,858,14],[905,18,859,14],[905,22,859,14,"_yield$supabase$stora3"],[905,44,859,14],[905,53,859,73,"supabase"],[905,61,859,81],[905,62,859,82,"storage"],[905,69,859,89],[905,70,860,17,"from"],[905,74,860,21],[905,75,860,22],[905,86,860,33],[905,87,860,34],[905,88,861,17,"upload"],[905,94,861,23],[905,95,861,24,"fallbackFileName"],[905,111,861,40],[905,113,861,42,"file"],[905,117,861,46],[905,119,861,48],[906,22,862,18,"cacheControl"],[906,34,862,30],[906,36,862,32],[906,42,862,38],[907,22,863,18,"upsert"],[907,28,863,24],[907,30,863,26],[908,20,864,16],[908,21,864,17],[908,22,864,18],[909,20,859,28,"fallbackData"],[909,32,859,40],[909,35,859,40,"_yield$supabase$stora3"],[909,57,859,40],[909,58,859,22,"data"],[909,62,859,26],[910,20,859,49,"fallbackError"],[910,33,859,62],[910,36,859,62,"_yield$supabase$stora3"],[910,58,859,62],[910,59,859,42,"error"],[910,64,859,47],[911,18,866,14],[911,22,866,18,"fallbackError"],[911,35,866,31],[911,37,866,33],[912,20,867,16,"console"],[912,27,867,23],[912,28,867,24,"error"],[912,33,867,29],[912,34,867,30],[912,74,867,70],[912,76,867,72,"fallbackError"],[912,89,867,85],[912,90,867,86],[913,20,868,16],[913,26,868,22],[913,30,868,26,"Error"],[913,35,868,31],[913,36,868,32],[913,75,868,71,"uploadError"],[913,86,868,82],[913,87,868,83,"message"],[913,94,868,90],[913,96,868,92],[913,97,868,93],[914,18,869,14],[914,19,869,15],[914,25,869,21],[915,20,870,16,"console"],[915,27,870,23],[915,28,870,24,"log"],[915,31,870,27],[915,32,870,28],[915,95,870,91],[915,96,870,92],[917,20,872,16],[918,20,873,16],[918,24,873,16,"_supabase$storage$fro2"],[918,46,873,16],[918,49,873,50,"supabase"],[918,57,873,58],[918,58,873,59,"storage"],[918,65,873,66],[918,66,874,19,"from"],[918,70,874,23],[918,71,874,24],[918,82,874,35],[918,83,874,36],[918,84,875,19,"getPublicUrl"],[918,96,875,31],[918,97,875,32,"fallbackFileName"],[918,113,875,48],[918,114,875,49],[919,22,873,30,"fallbackUrlData"],[919,37,873,45],[919,40,873,45,"_supabase$storage$fro2"],[919,62,873,45],[919,63,873,24,"data"],[919,67,873,28],[920,20,877,16],[920,27,877,23],[921,22,878,18,"success"],[921,29,878,25],[921,31,878,27],[921,35,878,31],[922,22,879,18,"url"],[922,25,879,21],[922,27,879,23,"fallbackUrlData"],[922,42,879,38],[922,43,879,39,"publicUrl"],[922,52,879,48],[923,22,880,18,"path"],[923,26,880,22],[923,28,880,24,"fallbackFileName"],[923,44,880,40],[924,22,881,18,"bucket"],[924,28,881,24],[924,30,881,26],[924,41,881,37],[925,22,882,18,"isFallback"],[925,32,882,28],[925,34,882,30],[926,20,883,16],[926,21,883,17],[927,18,884,14],[928,16,885,12],[928,17,885,13],[928,18,885,14],[928,25,885,21,"fallbackException"],[928,42,885,38],[928,44,885,40],[929,18,886,14,"console"],[929,25,886,21],[929,26,886,22,"error"],[929,31,886,27],[929,32,886,28],[929,71,886,67],[929,73,886,69,"fallbackException"],[929,90,886,86],[929,91,886,87],[930,18,887,14],[930,24,887,20],[930,28,887,24,"Error"],[930,33,887,29],[930,34,887,30],[930,73,887,69,"uploadError"],[930,84,887,80],[930,85,887,81,"message"],[930,92,887,88],[930,94,887,90],[930,95,887,91],[931,16,888,12],[932,14,889,10],[932,15,889,11],[932,21,889,17],[933,16,890,12],[933,22,890,18],[933,26,890,22,"Error"],[933,31,890,27],[933,32,890,28],[933,71,890,67,"uploadError"],[933,82,890,78],[933,83,890,79,"message"],[933,90,890,86],[933,92,890,88],[933,93,890,89],[934,14,891,10],[935,12,892,8],[936,10,893,6],[938,10,895,6],[939,10,896,6],[939,14,896,6,"_supabase$storage$fro3"],[939,36,896,6],[939,39,896,32,"supabase"],[939,47,896,40],[939,48,896,41,"storage"],[939,55,896,48],[939,56,897,9,"from"],[939,60,897,13],[939,61,897,14,"bucketName"],[939,71,897,24],[939,72,897,25],[939,73,898,9,"getPublicUrl"],[939,85,898,21],[939,86,898,22,"fileName"],[939,94,898,30],[939,95,898,31],[940,12,896,20,"urlData"],[940,19,896,27],[940,22,896,27,"_supabase$storage$fro3"],[940,44,896,27],[940,45,896,14,"data"],[940,49,896,18],[941,10,900,6,"console"],[941,17,900,13],[941,18,900,14,"log"],[941,21,900,17],[941,22,900,18],[941,56,900,52,"urlData"],[941,63,900,59],[941,64,900,60,"publicUrl"],[941,73,900,69],[941,75,900,71],[941,76,900,72],[942,10,902,6],[942,17,902,13],[943,12,903,8,"success"],[943,19,903,15],[943,21,903,17],[943,25,903,21],[944,12,904,8,"url"],[944,15,904,11],[944,17,904,13,"urlData"],[944,24,904,20],[944,25,904,21,"publicUrl"],[944,34,904,30],[945,12,905,8,"path"],[945,16,905,12],[945,18,905,14,"fileName"],[945,26,905,22],[946,12,906,8,"bucket"],[946,18,906,14],[946,20,906,16,"bucketName"],[947,10,907,6],[947,11,907,7],[948,8,909,4],[948,9,909,5],[948,10,909,6],[948,17,909,13,"error"],[948,22,909,18],[948,24,909,20],[949,10,910,6,"console"],[949,17,910,13],[949,18,910,14,"error"],[949,23,910,19],[949,24,910,20],[949,66,910,62],[949,68,910,64,"error"],[949,73,910,69],[949,74,910,70],[950,10,911,6],[950,16,911,12,"error"],[950,21,911,17],[951,8,912,4],[952,6,913,2],[952,7,913,3],[953,6,913,3],[953,22,679,2,"uploadImageFromUri"],[953,40,679,20,"uploadImageFromUri"],[953,41,679,20,"_x9"],[953,44,679,20],[954,8,679,20],[954,15,679,20,"_ref17"],[954,21,679,20],[954,22,679,20,"apply"],[954,27,679,20],[954,34,679,20,"arguments"],[954,43,679,20],[955,6,679,20],[956,4,679,20],[956,7,913,3],[957,4,915,2],[958,4,916,2,"uploadVehicleDocument"],[958,25,916,23],[959,6,916,23],[959,10,916,23,"_ref18"],[959,16,916,23],[959,23,916,23,"_asyncToGenerator2"],[959,41,916,23],[959,42,916,23,"default"],[959,49,916,23],[959,51,916,25],[959,62,916,32,"file"],[959,66,916,36],[959,68,916,38,"vehicleId"],[959,77,916,47],[959,79,916,78],[960,8,916,78],[960,12,916,49,"documentType"],[960,24,916,61],[960,27,916,61,"arguments"],[960,36,916,61],[960,37,916,61,"length"],[960,43,916,61],[960,51,916,61,"arguments"],[960,60,916,61],[960,68,916,61,"undefined"],[960,77,916,61],[960,80,916,61,"arguments"],[960,89,916,61],[960,95,916,64],[960,104,916,73],[961,8,917,4],[961,12,917,8],[962,10,918,6,"console"],[962,17,918,13],[962,18,918,14,"log"],[962,21,918,17],[962,22,918,18],[962,69,918,65,"documentType"],[962,81,918,77],[962,96,918,92,"vehicleId"],[962,105,918,101],[962,107,918,103],[962,108,918,104],[963,10,920,6],[963,14,920,10],[963,15,920,11,"file"],[963,19,920,15],[963,21,920,17],[964,12,921,8],[964,18,921,14],[964,22,921,18,"Error"],[964,27,921,23],[964,28,921,24],[964,46,921,42],[964,47,921,43],[965,10,922,6],[967,10,924,6],[968,10,925,6],[968,14,925,12,"fileExt"],[968,21,925,19],[968,24,925,22,"file"],[968,28,925,26],[968,29,925,27,"name"],[968,33,925,31],[968,36,925,34,"file"],[968,40,925,38],[968,41,925,39,"name"],[968,45,925,43],[968,46,925,44,"split"],[968,51,925,49],[968,52,925,50],[968,55,925,53],[968,56,925,54],[968,57,925,55,"pop"],[968,60,925,58],[968,61,925,59],[968,62,925,60],[968,65,925,63],[968,70,925,68],[969,10,926,6],[969,14,926,12,"fileName"],[969,22,926,20],[969,25,926,23],[969,38,926,36,"vehicleId"],[969,47,926,45],[969,51,926,49,"documentType"],[969,63,926,61],[969,67,926,65,"Date"],[969,71,926,69],[969,72,926,70,"now"],[969,75,926,73],[969,76,926,74],[969,77,926,75],[969,81,926,79,"Math"],[969,85,926,83],[969,86,926,84,"random"],[969,92,926,90],[969,93,926,91],[969,94,926,92],[969,95,926,93,"toString"],[969,103,926,101],[969,104,926,102],[969,106,926,104],[969,107,926,105],[969,108,926,106,"substring"],[969,117,926,115],[969,118,926,116],[969,119,926,117],[969,120,926,118],[969,124,926,122,"fileExt"],[969,131,926,129],[969,133,926,131],[970,10,928,6,"console"],[970,17,928,13],[970,18,928,14,"log"],[970,21,928,17],[970,22,928,18],[970,59,928,55,"fileName"],[970,67,928,63],[970,69,928,65],[970,70,928,66],[972,10,930,6],[973,10,931,6],[973,14,931,6,"_yield$supabase$stora4"],[973,36,931,6],[973,45,931,61,"supabase"],[973,53,931,69],[973,54,931,70,"storage"],[973,61,931,77],[973,62,932,9,"from"],[973,66,932,13],[973,67,932,14],[973,86,932,33],[973,87,932,34],[973,88,933,9,"upload"],[973,94,933,15],[973,95,933,16,"fileName"],[973,103,933,24],[973,105,933,26,"file"],[973,109,933,30],[973,111,933,32],[974,14,934,10,"cacheControl"],[974,26,934,22],[974,28,934,24],[974,34,934,30],[975,14,935,10,"upsert"],[975,20,935,16],[975,22,935,18],[976,12,936,8],[976,13,936,9],[976,14,936,10],[977,12,931,20,"uploadData"],[977,22,931,30],[977,25,931,30,"_yield$supabase$stora4"],[977,47,931,30],[977,48,931,14,"data"],[977,52,931,18],[978,12,931,39,"uploadError"],[978,23,931,50],[978,26,931,50,"_yield$supabase$stora4"],[978,48,931,50],[978,49,931,32,"error"],[978,54,931,37],[979,10,938,6],[979,14,938,10,"uploadError"],[979,25,938,21],[979,27,938,23],[980,12,939,8,"console"],[980,19,939,15],[980,20,939,16,"error"],[980,25,939,21],[980,26,939,22],[980,71,939,67],[980,73,939,69,"uploadError"],[980,84,939,80],[980,85,939,81],[981,12,940,8],[981,18,940,14,"uploadError"],[981,29,940,25],[982,10,941,6],[984,10,943,6],[985,10,944,6],[985,14,944,6,"_supabase$storage$fro4"],[985,36,944,6],[985,39,944,32,"supabase"],[985,47,944,40],[985,48,944,41,"storage"],[985,55,944,48],[985,56,945,9,"from"],[985,60,945,13],[985,61,945,14],[985,80,945,33],[985,81,945,34],[985,82,946,9,"getPublicUrl"],[985,94,946,21],[985,95,946,22,"fileName"],[985,103,946,30],[985,104,946,31],[986,12,944,20,"urlData"],[986,19,944,27],[986,22,944,27,"_supabase$storage$fro4"],[986,44,944,27],[986,45,944,14,"data"],[986,49,944,18],[987,10,948,6,"console"],[987,17,948,13],[987,18,948,14,"log"],[987,21,948,17],[987,22,948,18],[987,74,948,70,"urlData"],[987,81,948,77],[987,82,948,78,"publicUrl"],[987,91,948,87],[987,93,948,89],[987,94,948,90],[988,10,949,6],[988,17,949,13],[989,12,950,8,"success"],[989,19,950,15],[989,21,950,17],[989,25,950,21],[990,12,951,8,"url"],[990,15,951,11],[990,17,951,13,"urlData"],[990,24,951,20],[990,25,951,21,"publicUrl"],[990,34,951,30],[991,12,952,8,"path"],[991,16,952,12],[991,18,952,14,"fileName"],[991,26,952,22],[992,12,953,8,"bucket"],[992,18,953,14],[992,20,953,16],[992,39,953,35],[993,12,954,8,"vehicleId"],[993,21,954,17],[993,23,954,19,"vehicleId"],[993,32,954,28],[994,12,955,8,"documentType"],[994,24,955,20],[994,26,955,22,"documentType"],[995,10,956,6],[995,11,956,7],[996,8,958,4],[996,9,958,5],[996,10,958,6],[996,17,958,13,"error"],[996,22,958,18],[996,24,958,20],[997,10,959,6,"console"],[997,17,959,13],[997,18,959,14,"error"],[997,23,959,19],[997,24,959,20],[997,78,959,74],[997,80,959,76,"error"],[997,85,959,81],[997,86,959,82],[998,10,960,6],[998,16,960,12,"error"],[998,21,960,17],[999,8,961,4],[1000,6,962,2],[1000,7,962,3],[1001,6,962,3],[1001,22,916,2,"uploadVehicleDocument"],[1001,43,916,23,"uploadVehicleDocument"],[1001,44,916,23,"_x0"],[1001,47,916,23],[1001,49,916,23,"_x1"],[1001,52,916,23],[1002,8,916,23],[1002,15,916,23,"_ref18"],[1002,21,916,23],[1002,22,916,23,"apply"],[1002,27,916,23],[1002,34,916,23,"arguments"],[1002,43,916,23],[1003,6,916,23],[1004,4,916,23],[1004,7,962,3],[1005,4,964,2],[1006,4,965,2,"uploadVehicleDocumentFromUri"],[1006,32,965,30],[1007,6,965,30],[1007,10,965,30,"_ref19"],[1007,16,965,30],[1007,23,965,30,"_asyncToGenerator2"],[1007,41,965,30],[1007,42,965,30,"default"],[1007,49,965,30],[1007,51,965,32],[1007,62,965,39,"uri"],[1007,65,965,42],[1007,67,965,44,"vehicleId"],[1007,76,965,53],[1007,78,965,84],[1008,8,965,84],[1008,12,965,55,"documentType"],[1008,24,965,67],[1008,27,965,67,"arguments"],[1008,36,965,67],[1008,37,965,67,"length"],[1008,43,965,67],[1008,51,965,67,"arguments"],[1008,60,965,67],[1008,68,965,67,"undefined"],[1008,77,965,67],[1008,80,965,67,"arguments"],[1008,89,965,67],[1008,95,965,70],[1008,104,965,79],[1009,8,966,4],[1009,12,966,8],[1010,10,967,6,"console"],[1010,17,967,13],[1010,18,967,14,"log"],[1010,21,967,17],[1010,22,967,18],[1010,80,967,76,"documentType"],[1010,92,967,88],[1010,107,967,103,"vehicleId"],[1010,116,967,112],[1010,118,967,114],[1010,119,967,115],[1011,10,969,6],[1011,14,969,10],[1011,15,969,11,"uri"],[1011,18,969,14],[1011,20,969,16],[1012,12,970,8],[1012,18,970,14],[1012,22,970,18,"Error"],[1012,27,970,23],[1012,28,970,24],[1012,54,970,50],[1012,55,970,51],[1013,10,971,6],[1015,10,973,6],[1016,10,974,6],[1016,14,974,12,"response"],[1016,22,974,20],[1016,31,974,29,"fetch"],[1016,36,974,34],[1016,37,974,35,"uri"],[1016,40,974,38],[1016,41,974,39],[1017,10,975,6],[1017,14,975,10],[1017,15,975,11,"response"],[1017,23,975,19],[1017,24,975,20,"ok"],[1017,26,975,22],[1017,28,975,24],[1018,12,976,8],[1018,18,976,14],[1018,22,976,18,"Error"],[1018,27,976,23],[1018,28,976,24],[1018,69,976,65,"response"],[1018,77,976,73],[1018,78,976,74,"status"],[1018,84,976,80],[1018,86,976,82],[1018,87,976,83],[1019,10,977,6],[1020,10,979,6],[1020,14,979,12,"blob"],[1020,18,979,16],[1020,27,979,25,"response"],[1020,35,979,33],[1020,36,979,34,"blob"],[1020,40,979,38],[1020,41,979,39],[1020,42,979,40],[1021,10,980,6,"console"],[1021,17,980,13],[1021,18,980,14,"log"],[1021,21,980,17],[1021,22,980,18],[1021,55,980,51,"blob"],[1021,59,980,55],[1021,60,980,56,"size"],[1021,64,980,60],[1021,72,980,68],[1021,73,980,69],[1023,10,982,6],[1024,10,983,6],[1024,14,983,12,"fileExt"],[1024,21,983,19],[1024,24,983,22,"uri"],[1024,27,983,25],[1024,28,983,26,"split"],[1024,33,983,31],[1024,34,983,32],[1024,37,983,35],[1024,38,983,36],[1024,39,983,37,"pop"],[1024,42,983,40],[1024,43,983,41],[1024,44,983,42],[1024,48,983,46],[1024,53,983,51],[1025,10,984,6],[1025,14,984,12,"fileName"],[1025,22,984,20],[1025,25,984,23],[1025,38,984,36,"vehicleId"],[1025,47,984,45],[1025,51,984,49,"documentType"],[1025,63,984,61],[1025,67,984,65,"Date"],[1025,71,984,69],[1025,72,984,70,"now"],[1025,75,984,73],[1025,76,984,74],[1025,77,984,75],[1025,81,984,79,"Math"],[1025,85,984,83],[1025,86,984,84,"random"],[1025,92,984,90],[1025,93,984,91],[1025,94,984,92],[1025,95,984,93,"toString"],[1025,103,984,101],[1025,104,984,102],[1025,106,984,104],[1025,107,984,105],[1025,108,984,106,"substring"],[1025,117,984,115],[1025,118,984,116],[1025,119,984,117],[1025,120,984,118],[1025,124,984,122,"fileExt"],[1025,131,984,129],[1025,133,984,131],[1026,10,986,6],[1026,14,986,12,"file"],[1026,18,986,16],[1026,21,986,19],[1026,25,986,23,"File"],[1026,29,986,27],[1026,30,986,28],[1026,31,986,29,"blob"],[1026,35,986,33],[1026,36,986,34],[1026,38,986,36,"fileName"],[1026,46,986,44],[1026,48,986,46],[1027,12,986,48,"type"],[1027,16,986,52],[1027,18,986,54],[1027,27,986,63,"fileExt"],[1027,34,986,70],[1028,10,986,73],[1028,11,986,74],[1028,12,986,75],[1030,10,988,6],[1031,10,989,6],[1031,14,989,6,"_yield$supabase$stora5"],[1031,36,989,6],[1031,45,989,61,"supabase"],[1031,53,989,69],[1031,54,989,70,"storage"],[1031,61,989,77],[1031,62,990,9,"from"],[1031,66,990,13],[1031,67,990,14],[1031,86,990,33],[1031,87,990,34],[1031,88,991,9,"upload"],[1031,94,991,15],[1031,95,991,16,"fileName"],[1031,103,991,24],[1031,105,991,26,"file"],[1031,109,991,30],[1031,111,991,32],[1032,14,992,10,"cacheControl"],[1032,26,992,22],[1032,28,992,24],[1032,34,992,30],[1033,14,993,10,"upsert"],[1033,20,993,16],[1033,22,993,18],[1034,12,994,8],[1034,13,994,9],[1034,14,994,10],[1035,12,989,20,"uploadData"],[1035,22,989,30],[1035,25,989,30,"_yield$supabase$stora5"],[1035,47,989,30],[1035,48,989,14,"data"],[1035,52,989,18],[1036,12,989,39,"uploadError"],[1036,23,989,50],[1036,26,989,50,"_yield$supabase$stora5"],[1036,48,989,50],[1036,49,989,32,"error"],[1036,54,989,37],[1037,10,996,6],[1037,14,996,10,"uploadError"],[1037,25,996,21],[1037,27,996,23],[1038,12,997,8,"console"],[1038,19,997,15],[1038,20,997,16,"error"],[1038,25,997,21],[1038,26,997,22],[1038,71,997,67],[1038,73,997,69,"uploadError"],[1038,84,997,80],[1038,85,997,81],[1039,12,998,8],[1039,18,998,14,"uploadError"],[1039,29,998,25],[1040,10,999,6],[1042,10,1001,6],[1043,10,1002,6],[1043,14,1002,6,"_supabase$storage$fro5"],[1043,36,1002,6],[1043,39,1002,32,"supabase"],[1043,47,1002,40],[1043,48,1002,41,"storage"],[1043,55,1002,48],[1043,56,1003,9,"from"],[1043,60,1003,13],[1043,61,1003,14],[1043,80,1003,33],[1043,81,1003,34],[1043,82,1004,9,"getPublicUrl"],[1043,94,1004,21],[1043,95,1004,22,"fileName"],[1043,103,1004,30],[1043,104,1004,31],[1044,12,1002,20,"urlData"],[1044,19,1002,27],[1044,22,1002,27,"_supabase$storage$fro5"],[1044,44,1002,27],[1044,45,1002,14,"data"],[1044,49,1002,18],[1045,10,1006,6,"console"],[1045,17,1006,13],[1045,18,1006,14,"log"],[1045,21,1006,17],[1045,22,1006,18],[1045,74,1006,70,"urlData"],[1045,81,1006,77],[1045,82,1006,78,"publicUrl"],[1045,91,1006,87],[1045,93,1006,89],[1045,94,1006,90],[1046,10,1007,6],[1046,17,1007,13],[1047,12,1008,8,"success"],[1047,19,1008,15],[1047,21,1008,17],[1047,25,1008,21],[1048,12,1009,8,"url"],[1048,15,1009,11],[1048,17,1009,13,"urlData"],[1048,24,1009,20],[1048,25,1009,21,"publicUrl"],[1048,34,1009,30],[1049,12,1010,8,"path"],[1049,16,1010,12],[1049,18,1010,14,"fileName"],[1049,26,1010,22],[1050,12,1011,8,"bucket"],[1050,18,1011,14],[1050,20,1011,16],[1050,39,1011,35],[1051,12,1012,8,"vehicleId"],[1051,21,1012,17],[1051,23,1012,19,"vehicleId"],[1051,32,1012,28],[1052,12,1013,8,"documentType"],[1052,24,1013,20],[1052,26,1013,22,"documentType"],[1053,10,1014,6],[1053,11,1014,7],[1054,8,1016,4],[1054,9,1016,5],[1054,10,1016,6],[1054,17,1016,13,"error"],[1054,22,1016,18],[1054,24,1016,20],[1055,10,1017,6,"console"],[1055,17,1017,13],[1055,18,1017,14,"error"],[1055,23,1017,19],[1055,24,1017,20],[1055,78,1017,74],[1055,80,1017,76,"error"],[1055,85,1017,81],[1055,86,1017,82],[1056,10,1018,6],[1056,16,1018,12,"error"],[1056,21,1018,17],[1057,8,1019,4],[1058,6,1020,2],[1058,7,1020,3],[1059,6,1020,3],[1059,22,965,2,"uploadVehicleDocumentFromUri"],[1059,50,965,30,"uploadVehicleDocumentFromUri"],[1059,51,965,30,"_x10"],[1059,55,965,30],[1059,57,965,30,"_x11"],[1059,61,965,30],[1060,8,965,30],[1060,15,965,30,"_ref19"],[1060,21,965,30],[1060,22,965,30,"apply"],[1060,27,965,30],[1060,34,965,30,"arguments"],[1060,43,965,30],[1061,6,965,30],[1062,4,965,30],[1062,7,1020,3],[1063,4,1022,2],[1064,4,1023,2,"testMobileNetwork"],[1064,21,1023,19],[1065,6,1023,19],[1065,10,1023,19,"_ref20"],[1065,16,1023,19],[1065,23,1023,19,"_asyncToGenerator2"],[1065,41,1023,19],[1065,42,1023,19,"default"],[1065,49,1023,19],[1065,51,1023,21],[1065,64,1023,33],[1066,8,1024,4],[1066,12,1024,8],[1067,10,1025,6,"console"],[1067,17,1025,13],[1067,18,1025,14,"log"],[1067,21,1025,17],[1067,22,1025,18],[1067,72,1025,68],[1067,73,1025,69],[1069,10,1027,6],[1070,10,1028,6],[1070,14,1028,12,"isWeb"],[1070,19,1028,17],[1070,22,1028,20],[1070,29,1028,27,"window"],[1070,35,1028,33],[1070,40,1028,38],[1070,51,1028,49],[1070,55,1028,53,"window"],[1070,61,1028,59],[1070,62,1028,60,"location"],[1070,70,1028,68],[1070,72,1028,70,"protocol"],[1070,80,1028,78],[1070,85,1028,83],[1070,92,1028,90],[1071,10,1029,6,"console"],[1071,17,1029,13],[1071,18,1029,14,"log"],[1071,21,1029,17],[1071,22,1029,18],[1071,55,1029,51],[1071,57,1029,53,"isWeb"],[1071,62,1029,58],[1071,65,1029,61],[1071,70,1029,66],[1071,73,1029,69],[1071,81,1029,77],[1071,82,1029,78],[1073,10,1031,6],[1074,10,1032,6],[1074,14,1032,10,"internetTest"],[1074,26,1032,22],[1075,10,1033,6],[1075,14,1033,10,"isWeb"],[1075,19,1033,15],[1075,21,1033,17],[1076,12,1034,8],[1077,12,1035,8],[1077,16,1035,12],[1078,14,1036,10,"internetTest"],[1078,26,1036,22],[1078,35,1036,31,"fetch"],[1078,40,1036,36],[1078,41,1036,37],[1078,73,1036,69],[1078,75,1036,71],[1079,16,1037,12,"method"],[1079,22,1037,18],[1079,24,1037,20],[1079,30,1037,26],[1080,16,1038,12,"timeout"],[1080,23,1038,19],[1080,25,1038,21],[1081,14,1039,10],[1081,15,1039,11],[1081,16,1039,12],[1082,12,1040,8],[1082,13,1040,9],[1082,14,1040,10],[1082,21,1040,17,"corsError"],[1082,30,1040,26],[1082,32,1040,28],[1083,14,1041,10],[1084,14,1042,10,"console"],[1084,21,1042,17],[1084,22,1042,18,"log"],[1084,25,1042,21],[1084,26,1042,22],[1084,83,1042,79],[1084,84,1042,80],[1085,14,1043,10,"internetTest"],[1085,26,1043,22],[1085,35,1043,31,"fetch"],[1085,40,1043,36],[1085,41,1043,37],[1085,44,1043,40,"supabaseUrl"],[1085,55,1043,51],[1085,66,1043,62],[1085,68,1043,64],[1086,16,1044,12,"method"],[1086,22,1044,18],[1086,24,1044,20],[1086,30,1044,26],[1087,16,1045,12,"headers"],[1087,23,1045,19],[1087,25,1045,21],[1088,18,1046,14],[1088,26,1046,22],[1088,28,1046,24,"supabaseKey"],[1088,39,1046,35],[1089,18,1047,14],[1089,32,1047,28],[1089,34,1047,30],[1090,16,1048,12],[1090,17,1048,13],[1091,16,1049,12,"timeout"],[1091,23,1049,19],[1091,25,1049,21],[1092,14,1050,10],[1092,15,1050,11],[1092,16,1050,12],[1093,12,1051,8],[1094,10,1052,6],[1094,11,1052,7],[1094,17,1052,13],[1095,12,1053,8],[1096,12,1054,8,"internetTest"],[1096,24,1054,20],[1096,33,1054,29,"fetch"],[1096,38,1054,34],[1096,39,1054,35],[1096,63,1054,59],[1096,65,1054,61],[1097,14,1055,10,"method"],[1097,20,1055,16],[1097,22,1055,18],[1097,28,1055,24],[1098,14,1056,10,"timeout"],[1098,21,1056,17],[1098,23,1056,19],[1099,12,1057,8],[1099,13,1057,9],[1099,14,1057,10],[1100,10,1058,6],[1101,10,1059,6,"console"],[1101,17,1059,13],[1101,18,1059,14,"log"],[1101,21,1059,17],[1101,22,1059,18],[1101,49,1059,45],[1101,51,1059,47,"internetTest"],[1101,63,1059,59],[1101,64,1059,60,"ok"],[1101,66,1059,62],[1101,69,1059,65],[1101,73,1059,69],[1101,76,1059,72],[1101,83,1059,79],[1101,84,1059,80],[1103,10,1061,6],[1104,10,1062,6],[1104,14,1062,12,"supabaseTest"],[1104,26,1062,24],[1104,35,1062,33,"fetch"],[1104,40,1062,38],[1104,41,1062,39],[1104,44,1062,42,"supabaseUrl"],[1104,55,1062,53],[1104,66,1062,64],[1104,68,1062,66],[1105,12,1063,8,"method"],[1105,18,1063,14],[1105,20,1063,16],[1105,25,1063,21],[1106,12,1064,8,"headers"],[1106,19,1064,15],[1106,21,1064,17],[1107,14,1065,10],[1107,22,1065,18],[1107,24,1065,20,"supabaseKey"],[1107,35,1065,31],[1108,14,1066,10],[1108,28,1066,24],[1108,30,1066,26],[1109,12,1067,8],[1109,13,1067,9],[1110,12,1068,8,"timeout"],[1110,19,1068,15],[1110,21,1068,17],[1111,10,1069,6],[1111,11,1069,7],[1111,12,1069,8],[1112,10,1070,6,"console"],[1112,17,1070,13],[1112,18,1070,14,"log"],[1112,21,1070,17],[1112,22,1070,18],[1112,53,1070,49],[1112,55,1070,51,"supabaseTest"],[1112,67,1070,63],[1112,68,1070,64,"ok"],[1112,70,1070,66],[1112,73,1070,69],[1112,77,1070,73],[1112,80,1070,76],[1112,87,1070,83],[1112,88,1070,84],[1114,10,1072,6],[1115,10,1073,6],[1115,14,1073,10,"dnsTest"],[1115,21,1073,17],[1116,10,1074,6],[1116,14,1074,10],[1117,12,1075,8,"dnsTest"],[1117,19,1075,15],[1117,28,1075,24,"fetch"],[1117,33,1075,29],[1117,34,1075,30],[1117,37,1075,33,"supabaseUrl"],[1117,48,1075,44],[1117,68,1075,64],[1117,70,1075,66],[1118,14,1076,10,"method"],[1118,20,1076,16],[1118,22,1076,18],[1118,27,1076,23],[1119,14,1077,10,"headers"],[1119,21,1077,17],[1119,23,1077,19],[1120,16,1078,12],[1120,24,1078,20],[1120,26,1078,22,"supabaseKey"],[1120,37,1078,33],[1121,16,1079,12],[1121,31,1079,27],[1121,33,1079,29],[1121,43,1079,39,"supabaseKey"],[1121,54,1079,50],[1121,56,1079,52],[1122,16,1080,12],[1122,30,1080,26],[1122,32,1080,28],[1123,14,1081,10],[1123,15,1081,11],[1124,14,1082,10,"timeout"],[1124,21,1082,17],[1124,23,1082,19],[1125,12,1083,8],[1125,13,1083,9],[1125,14,1083,10],[1126,12,1084,8,"console"],[1126,19,1084,15],[1126,20,1084,16,"log"],[1126,23,1084,19],[1126,24,1084,20],[1126,54,1084,50],[1126,56,1084,52,"dnsTest"],[1126,63,1084,59],[1126,64,1084,60,"ok"],[1126,66,1084,62],[1126,69,1084,65],[1126,73,1084,69],[1126,76,1084,72],[1126,83,1084,79],[1126,84,1084,80],[1127,10,1085,6],[1127,11,1085,7],[1127,12,1085,8],[1127,19,1085,15,"dnsError"],[1127,27,1085,23],[1127,29,1085,25],[1128,12,1086,8,"console"],[1128,19,1086,15],[1128,20,1086,16,"error"],[1128,25,1086,21],[1128,26,1086,22],[1128,58,1086,54],[1128,60,1086,56,"dnsError"],[1128,68,1086,64],[1128,69,1086,65,"message"],[1128,76,1086,72],[1128,77,1086,73],[1129,12,1087,8,"dnsTest"],[1129,19,1087,15],[1129,22,1087,18],[1130,14,1087,20,"ok"],[1130,16,1087,22],[1130,18,1087,24],[1131,12,1087,30],[1131,13,1087,31],[1132,10,1088,6],[1133,10,1090,6],[1133,17,1090,13],[1134,12,1091,8,"internet"],[1134,20,1091,16],[1134,22,1091,18,"internetTest"],[1134,34,1091,30],[1134,35,1091,31,"ok"],[1134,37,1091,33],[1135,12,1092,8,"supabase"],[1135,20,1092,16],[1135,22,1092,18,"supabaseTest"],[1135,34,1092,30],[1135,35,1092,31,"ok"],[1135,37,1092,33],[1136,12,1093,8,"dns"],[1136,15,1093,11],[1136,17,1093,13,"dnsTest"],[1136,24,1093,20],[1136,25,1093,21,"ok"],[1136,27,1093,23],[1137,12,1094,8,"platform"],[1137,20,1094,16],[1137,22,1094,18,"isWeb"],[1137,27,1094,23],[1137,30,1094,26],[1137,35,1094,31],[1137,38,1094,34],[1138,10,1095,6],[1138,11,1095,7],[1139,8,1097,4],[1139,9,1097,5],[1139,10,1097,6],[1139,17,1097,13,"error"],[1139,22,1097,18],[1139,24,1097,20],[1140,10,1098,6,"console"],[1140,17,1098,13],[1140,18,1098,14,"error"],[1140,23,1098,19],[1140,24,1098,20],[1140,63,1098,59],[1140,65,1098,61,"error"],[1140,70,1098,66],[1140,71,1098,67],[1141,10,1099,6],[1141,17,1099,13],[1142,12,1100,8,"internet"],[1142,20,1100,16],[1142,22,1100,18],[1142,27,1100,23],[1143,12,1101,8,"supabase"],[1143,20,1101,16],[1143,22,1101,18],[1143,27,1101,23],[1144,12,1102,8,"dns"],[1144,15,1102,11],[1144,17,1102,13],[1144,22,1102,18],[1145,12,1103,8,"error"],[1145,17,1103,13],[1145,19,1103,15,"error"],[1145,24,1103,20],[1145,25,1103,21,"message"],[1146,10,1104,6],[1146,11,1104,7],[1147,8,1105,4],[1148,6,1106,2],[1148,7,1106,3],[1149,6,1106,3],[1149,22,1023,2,"testMobileNetwork"],[1149,39,1023,19,"testMobileNetwork"],[1149,40,1023,19],[1150,8,1023,19],[1150,15,1023,19,"_ref20"],[1150,21,1023,19],[1150,22,1023,19,"apply"],[1150,27,1023,19],[1150,34,1023,19,"arguments"],[1150,43,1023,19],[1151,6,1023,19],[1152,4,1023,19],[1152,7,1106,3],[1153,4,1108,2],[1154,4,1109,2,"testBucketAccess"],[1154,20,1109,18],[1155,6,1109,18],[1155,10,1109,18,"_ref21"],[1155,16,1109,18],[1155,23,1109,18,"_asyncToGenerator2"],[1155,41,1109,18],[1155,42,1109,18,"default"],[1155,49,1109,18],[1155,51,1109,20],[1155,64,1109,61],[1156,8,1109,61],[1156,12,1109,27,"bucketName"],[1156,22,1109,37],[1156,25,1109,37,"arguments"],[1156,34,1109,37],[1156,35,1109,37,"length"],[1156,41,1109,37],[1156,49,1109,37,"arguments"],[1156,58,1109,37],[1156,66,1109,37,"undefined"],[1156,75,1109,37],[1156,78,1109,37,"arguments"],[1156,87,1109,37],[1156,93,1109,40],[1156,109,1109,56],[1157,8,1110,4],[1157,12,1110,8],[1158,10,1111,6,"console"],[1158,17,1111,13],[1158,18,1111,14,"log"],[1158,21,1111,17],[1158,22,1111,18],[1158,67,1111,63,"bucketName"],[1158,77,1111,73],[1158,79,1111,75],[1158,80,1111,76],[1160,10,1113,6],[1161,10,1114,6],[1161,14,1114,10],[1162,12,1115,8],[1162,16,1115,8,"_yield$supabase$stora6"],[1162,38,1115,8],[1162,47,1115,56,"supabase"],[1162,55,1115,64],[1162,56,1115,65,"storage"],[1162,63,1115,72],[1162,64,1116,11,"from"],[1162,68,1116,15],[1162,69,1116,16,"bucketName"],[1162,79,1116,26],[1162,80,1116,27],[1162,81,1117,11,"list"],[1162,85,1117,15],[1162,86,1117,16],[1162,88,1117,18],[1162,90,1117,20],[1163,16,1117,22,"limit"],[1163,21,1117,27],[1163,23,1117,29],[1164,14,1117,31],[1164,15,1117,32],[1164,16,1117,33],[1165,14,1115,22,"files"],[1165,19,1115,27],[1165,22,1115,27,"_yield$supabase$stora6"],[1165,44,1115,27],[1165,45,1115,16,"data"],[1165,49,1115,20],[1166,14,1115,36,"listError"],[1166,23,1115,45],[1166,26,1115,45,"_yield$supabase$stora6"],[1166,48,1115,45],[1166,49,1115,29,"error"],[1166,54,1115,34],[1167,12,1119,8],[1167,16,1119,12,"listError"],[1167,25,1119,21],[1167,27,1119,23],[1168,14,1120,10,"console"],[1168,21,1120,17],[1168,22,1120,18,"log"],[1168,25,1120,21],[1168,26,1120,22],[1168,62,1120,58,"bucketName"],[1168,72,1120,68],[1168,75,1120,71],[1168,77,1120,73,"listError"],[1168,86,1120,82],[1168,87,1120,83,"message"],[1168,94,1120,90],[1168,95,1120,91],[1169,14,1121,10],[1169,21,1121,17],[1170,16,1121,19,"success"],[1170,23,1121,26],[1170,25,1121,28],[1170,30,1121,33],[1171,16,1121,35,"error"],[1171,21,1121,40],[1171,23,1121,42,"listError"],[1171,32,1121,51],[1171,33,1121,52,"message"],[1171,40,1121,59],[1172,16,1121,61,"operation"],[1172,25,1121,70],[1172,27,1121,72],[1173,14,1121,79],[1173,15,1121,80],[1174,12,1122,8],[1174,13,1122,9],[1174,19,1122,15],[1175,14,1123,10,"console"],[1175,21,1123,17],[1175,22,1123,18,"log"],[1175,25,1123,21],[1175,26,1123,22],[1175,57,1123,53,"bucketName"],[1175,67,1123,63],[1175,72,1123,68],[1175,73,1123,69],[1176,14,1124,10],[1176,21,1124,17],[1177,16,1124,19,"success"],[1177,23,1124,26],[1177,25,1124,28],[1177,29,1124,32],[1178,16,1124,34,"operation"],[1178,25,1124,43],[1178,27,1124,45],[1178,33,1124,51],[1179,16,1124,53,"files"],[1179,21,1124,58],[1179,23,1124,60,"files"],[1179,28,1124,65],[1179,30,1124,67,"length"],[1179,36,1124,73],[1179,40,1124,77],[1180,14,1124,79],[1180,15,1124,80],[1181,12,1125,8],[1182,10,1126,6],[1182,11,1126,7],[1182,12,1126,8],[1182,19,1126,15,"readError"],[1182,28,1126,24],[1182,30,1126,26],[1183,12,1127,8,"console"],[1183,19,1127,15],[1183,20,1127,16,"log"],[1183,23,1127,19],[1183,24,1127,20],[1183,63,1127,59,"bucketName"],[1183,73,1127,69],[1183,76,1127,72],[1183,78,1127,74,"readError"],[1183,87,1127,83],[1183,88,1127,84,"message"],[1183,95,1127,91],[1183,96,1127,92],[1184,12,1128,8],[1184,19,1128,15],[1185,14,1128,17,"success"],[1185,21,1128,24],[1185,23,1128,26],[1185,28,1128,31],[1186,14,1128,33,"error"],[1186,19,1128,38],[1186,21,1128,40,"readError"],[1186,30,1128,49],[1186,31,1128,50,"message"],[1186,38,1128,57],[1187,14,1128,59,"operation"],[1187,23,1128,68],[1187,25,1128,70],[1188,12,1128,77],[1188,13,1128,78],[1189,10,1129,6],[1190,8,1131,4],[1190,9,1131,5],[1190,10,1131,6],[1190,17,1131,13,"error"],[1190,22,1131,18],[1190,24,1131,20],[1191,10,1132,6,"console"],[1191,17,1132,13],[1191,18,1132,14,"error"],[1191,23,1132,19],[1191,24,1132,20],[1191,63,1132,59,"bucketName"],[1191,73,1132,69],[1191,76,1132,72],[1191,78,1132,74,"error"],[1191,83,1132,79],[1191,84,1132,80],[1192,10,1133,6],[1192,17,1133,13],[1193,12,1133,15,"success"],[1193,19,1133,22],[1193,21,1133,24],[1193,26,1133,29],[1194,12,1133,31,"error"],[1194,17,1133,36],[1194,19,1133,38,"error"],[1194,24,1133,43],[1194,25,1133,44,"message"],[1195,10,1133,52],[1195,11,1133,53],[1196,8,1134,4],[1197,6,1135,2],[1197,7,1135,3],[1198,6,1135,3],[1198,22,1109,2,"testBucketAccess"],[1198,38,1109,18,"testBucketAccess"],[1198,39,1109,18],[1199,8,1109,18],[1199,15,1109,18,"_ref21"],[1199,21,1109,18],[1199,22,1109,18,"apply"],[1199,27,1109,18],[1199,34,1109,18,"arguments"],[1199,43,1109,18],[1200,6,1109,18],[1201,4,1109,18],[1201,7,1135,3],[1202,4,1137,2],[1203,4,1138,2,"testConnection"],[1203,18,1138,16],[1204,6,1138,16],[1204,10,1138,16,"_ref22"],[1204,16,1138,16],[1204,23,1138,16,"_asyncToGenerator2"],[1204,41,1138,16],[1204,42,1138,16,"default"],[1204,49,1138,16],[1204,51,1138,18],[1204,64,1138,30],[1205,8,1139,4],[1205,12,1139,8],[1206,10,1140,6,"console"],[1206,17,1140,13],[1206,18,1140,14,"log"],[1206,21,1140,17],[1206,22,1140,18],[1206,58,1140,54],[1206,59,1140,55],[1207,10,1141,6,"console"],[1207,17,1141,13],[1207,18,1141,14,"log"],[1207,21,1141,17],[1207,22,1141,18],[1207,48,1141,44],[1207,50,1141,46,"supabaseUrl"],[1207,61,1141,57],[1207,62,1141,58],[1208,10,1142,6,"console"],[1208,17,1142,13],[1208,18,1142,14,"log"],[1208,21,1142,17],[1208,22,1142,18],[1208,52,1142,48],[1208,58,1142,63],[1208,59,1142,64],[1210,10,1144,6],[1211,10,1145,6],[1211,14,1145,10],[1212,12,1146,8,"console"],[1212,19,1146,15],[1212,20,1146,16,"log"],[1212,23,1146,19],[1212,24,1146,20],[1212,67,1146,63],[1212,68,1146,64],[1213,12,1147,8],[1213,16,1147,14,"response"],[1213,24,1147,22],[1213,33,1147,31,"fetch"],[1213,38,1147,36],[1213,39,1147,37],[1213,42,1147,40,"supabaseUrl"],[1213,53,1147,51],[1213,64,1147,62],[1213,66,1147,64],[1214,14,1148,10,"method"],[1214,20,1148,16],[1214,22,1148,18],[1214,27,1148,23],[1215,14,1149,10,"headers"],[1215,21,1149,17],[1215,23,1149,19],[1216,16,1150,12],[1216,24,1150,20],[1216,26,1150,22,"supabaseKey"],[1216,37,1150,33],[1217,16,1151,12],[1217,30,1151,26],[1217,32,1151,28],[1218,14,1152,10],[1219,12,1153,8],[1219,13,1153,9],[1219,14,1153,10],[1220,12,1155,8],[1220,16,1155,12],[1220,17,1155,13,"response"],[1220,25,1155,21],[1220,26,1155,22,"ok"],[1220,28,1155,24],[1220,30,1155,26],[1221,14,1156,10,"console"],[1221,21,1156,17],[1221,22,1156,18,"error"],[1221,27,1156,23],[1221,28,1156,24],[1221,63,1156,59],[1221,65,1156,61,"response"],[1221,73,1156,69],[1221,74,1156,70,"status"],[1221,80,1156,76],[1221,82,1156,78,"response"],[1221,90,1156,86],[1221,91,1156,87,"statusText"],[1221,101,1156,97],[1221,102,1156,98],[1222,14,1157,10],[1222,20,1157,16],[1222,24,1157,20,"Error"],[1222,29,1157,25],[1222,30,1157,26],[1222,48,1157,44,"response"],[1222,56,1157,52],[1222,57,1157,53,"status"],[1222,63,1157,59],[1222,67,1157,63,"response"],[1222,75,1157,71],[1222,76,1157,72,"statusText"],[1222,86,1157,82],[1222,88,1157,84],[1222,89,1157,85],[1223,12,1158,8],[1224,12,1160,8,"console"],[1224,19,1160,15],[1224,20,1160,16,"log"],[1224,23,1160,19],[1224,24,1160,20],[1224,61,1160,57],[1224,62,1160,58],[1226,12,1162,8],[1227,12,1163,8,"console"],[1227,19,1163,15],[1227,20,1163,16,"log"],[1227,23,1163,19],[1227,24,1163,20],[1227,62,1163,58],[1227,63,1163,59],[1228,12,1164,8],[1228,16,1164,14,"storageResponse"],[1228,31,1164,29],[1228,40,1164,38,"fetch"],[1228,45,1164,43],[1228,46,1164,44],[1228,49,1164,47,"supabaseUrl"],[1228,60,1164,58],[1228,80,1164,78],[1228,82,1164,80],[1229,14,1165,10,"method"],[1229,20,1165,16],[1229,22,1165,18],[1229,27,1165,23],[1230,14,1166,10,"headers"],[1230,21,1166,17],[1230,23,1166,19],[1231,16,1167,12],[1231,24,1167,20],[1231,26,1167,22,"supabaseKey"],[1231,37,1167,33],[1232,16,1168,12],[1232,31,1168,27],[1232,33,1168,29],[1232,43,1168,39,"supabaseKey"],[1232,54,1168,50],[1232,56,1168,52],[1233,16,1169,12],[1233,30,1169,26],[1233,32,1169,28],[1234,14,1170,10],[1235,12,1171,8],[1235,13,1171,9],[1235,14,1171,10],[1236,12,1173,8],[1236,16,1173,12],[1236,17,1173,13,"storageResponse"],[1236,32,1173,28],[1236,33,1173,29,"ok"],[1236,35,1173,31],[1236,37,1173,33],[1237,14,1174,10,"console"],[1237,21,1174,17],[1237,22,1174,18,"error"],[1237,27,1174,23],[1237,28,1174,24],[1237,60,1174,56],[1237,62,1174,58,"storageResponse"],[1237,77,1174,73],[1237,78,1174,74,"status"],[1237,84,1174,80],[1237,86,1174,82,"storageResponse"],[1237,101,1174,97],[1237,102,1174,98,"statusText"],[1237,112,1174,108],[1237,113,1174,109],[1238,14,1175,10],[1238,20,1175,16],[1238,24,1175,20,"Error"],[1238,29,1175,25],[1238,30,1175,26],[1238,53,1175,49,"storageResponse"],[1238,68,1175,64],[1238,69,1175,65,"status"],[1238,75,1175,71],[1238,79,1175,75,"storageResponse"],[1238,94,1175,90],[1238,95,1175,91,"statusText"],[1238,105,1175,101],[1238,107,1175,103],[1238,108,1175,104],[1239,12,1176,8],[1240,12,1178,8,"console"],[1240,19,1178,15],[1240,20,1178,16,"log"],[1240,23,1178,19],[1240,24,1178,20],[1240,61,1178,57],[1240,62,1178,58],[1241,10,1180,6],[1241,11,1180,7],[1241,12,1180,8],[1241,19,1180,15,"networkError"],[1241,31,1180,27],[1241,33,1180,29],[1242,12,1181,8,"console"],[1242,19,1181,15],[1242,20,1181,16,"error"],[1242,25,1181,21],[1242,26,1181,22],[1242,53,1181,49],[1242,55,1181,51,"networkError"],[1242,67,1181,63],[1242,68,1181,64],[1243,12,1182,8],[1243,18,1182,14],[1243,22,1182,18,"Error"],[1243,27,1182,23],[1243,28,1182,24],[1243,64,1182,60,"networkError"],[1243,76,1182,72],[1243,77,1182,73,"message"],[1243,84,1182,80],[1243,86,1182,82],[1243,87,1182,83],[1244,10,1183,6],[1246,10,1185,6],[1247,10,1186,6],[1247,14,1186,10],[1248,12,1187,8],[1248,16,1187,8,"_yield$supabase$auth$5"],[1248,38,1187,8],[1248,47,1187,59,"supabase"],[1248,55,1187,67],[1248,56,1187,68,"auth"],[1248,60,1187,72],[1248,61,1187,73,"getUser"],[1248,68,1187,80],[1248,69,1187,81],[1248,70,1187,82],[1249,14,1187,24,"user"],[1249,18,1187,28],[1249,21,1187,28,"_yield$supabase$auth$5"],[1249,43,1187,28],[1249,44,1187,16,"data"],[1249,48,1187,20],[1249,49,1187,24,"user"],[1249,53,1187,28],[1250,14,1187,39,"authError"],[1250,23,1187,48],[1250,26,1187,48,"_yield$supabase$auth$5"],[1250,48,1187,48],[1250,49,1187,32,"error"],[1250,54,1187,37],[1251,12,1188,8],[1251,16,1188,12,"authError"],[1251,25,1188,21],[1251,27,1188,23],[1252,14,1189,10,"console"],[1252,21,1189,17],[1252,22,1189,18,"log"],[1252,25,1189,21],[1252,26,1189,22],[1252,108,1189,104],[1252,109,1189,105],[1253,12,1190,8],[1253,13,1190,9],[1253,19,1190,15],[1254,14,1191,10,"console"],[1254,21,1191,17],[1254,22,1191,18,"log"],[1254,25,1191,21],[1254,26,1191,22],[1254,63,1191,59],[1254,65,1191,61,"user"],[1254,69,1191,65],[1254,71,1191,67,"email"],[1254,76,1191,72],[1254,77,1191,73],[1255,12,1192,8],[1256,10,1193,6],[1256,11,1193,7],[1256,12,1193,8],[1256,19,1193,15,"authError"],[1256,28,1193,24],[1256,30,1193,26],[1257,12,1194,8,"console"],[1257,19,1194,15],[1257,20,1194,16,"log"],[1257,23,1194,19],[1257,24,1194,20],[1257,98,1194,94],[1257,99,1194,95],[1258,10,1195,6],[1260,10,1197,6],[1261,10,1198,6,"console"],[1261,17,1198,13],[1261,18,1198,14,"log"],[1261,21,1198,17],[1261,22,1198,18],[1261,63,1198,59],[1261,64,1198,60],[1263,10,1200,6],[1264,10,1201,6],[1264,14,1201,12,"bucketsToTest"],[1264,27,1201,25],[1264,30,1201,28],[1264,31,1201,29],[1264,47,1201,45],[1264,49,1201,47],[1264,60,1201,58],[1264,61,1201,59],[1265,10,1202,6],[1265,14,1202,12,"accessibleBuckets"],[1265,31,1202,29],[1265,34,1202,32],[1265,36,1202,34],[1266,10,1203,6],[1266,14,1203,10,"hasVehicleChecksBucket"],[1266,36,1203,32],[1266,39,1203,35],[1266,44,1203,40],[1267,10,1205,6],[1267,15,1205,11],[1267,19,1205,17,"bucketName"],[1267,29,1205,27],[1267,33,1205,31,"bucketsToTest"],[1267,46,1205,44],[1267,48,1205,46],[1268,12,1206,8],[1268,16,1206,14,"bucketTest"],[1268,26,1206,24],[1268,35,1206,33,"SupabaseService"],[1268,50,1206,48],[1268,51,1206,49,"testBucketAccess"],[1268,67,1206,65],[1268,68,1206,66,"bucketName"],[1268,78,1206,76],[1268,79,1206,77],[1269,12,1207,8],[1269,16,1207,12,"bucketTest"],[1269,26,1207,22],[1269,27,1207,23,"success"],[1269,34,1207,30],[1269,36,1207,32],[1270,14,1208,10,"console"],[1270,21,1208,17],[1270,22,1208,18,"log"],[1270,25,1208,21],[1270,26,1208,22],[1270,49,1208,45,"bucketName"],[1270,59,1208,55],[1270,72,1208,68],[1270,73,1208,69],[1271,14,1209,10,"accessibleBuckets"],[1271,31,1209,27],[1271,32,1209,28,"push"],[1271,36,1209,32],[1271,37,1209,33,"bucketName"],[1271,47,1209,43],[1271,48,1209,44],[1272,14,1210,10],[1272,18,1210,14,"bucketName"],[1272,28,1210,24],[1272,33,1210,29],[1272,49,1210,45],[1272,51,1210,47],[1273,16,1211,12,"hasVehicleChecksBucket"],[1273,38,1211,34],[1273,41,1211,37],[1273,45,1211,41],[1274,14,1212,10],[1275,12,1213,8],[1275,13,1213,9],[1275,19,1213,15],[1276,14,1214,10,"console"],[1276,21,1214,17],[1276,22,1214,18,"log"],[1276,25,1214,21],[1276,26,1214,22],[1276,47,1214,43,"bucketName"],[1276,57,1214,53],[1276,75,1214,71],[1276,77,1214,73,"bucketTest"],[1276,87,1214,83],[1276,88,1214,84,"error"],[1276,93,1214,89],[1276,94,1214,90],[1277,12,1215,8],[1278,10,1216,6],[1280,10,1218,6],[1281,10,1219,6],[1281,14,1219,10,"accessibleBuckets"],[1281,31,1219,27],[1281,32,1219,28,"length"],[1281,38,1219,34],[1281,43,1219,39],[1281,44,1219,40],[1281,46,1219,42],[1282,12,1220,8,"console"],[1282,19,1220,15],[1282,20,1220,16,"log"],[1282,23,1220,19],[1282,24,1220,20],[1282,100,1220,96],[1282,101,1220,97],[1283,12,1221,8],[1283,16,1221,12],[1284,14,1222,10],[1284,18,1222,10,"_yield$supabase$stora7"],[1284,40,1222,10],[1284,49,1222,63,"supabase"],[1284,57,1222,71],[1284,58,1222,72,"storage"],[1284,65,1222,79],[1284,66,1222,80,"listBuckets"],[1284,77,1222,91],[1284,78,1222,92],[1284,79,1222,93],[1285,16,1222,24,"buckets"],[1285,23,1222,31],[1285,26,1222,31,"_yield$supabase$stora7"],[1285,48,1222,31],[1285,49,1222,18,"data"],[1285,53,1222,22],[1286,16,1222,40,"storageError"],[1286,28,1222,52],[1286,31,1222,52,"_yield$supabase$stora7"],[1286,53,1222,52],[1286,54,1222,33,"error"],[1286,59,1222,38],[1287,14,1223,10],[1287,18,1223,14,"storageError"],[1287,30,1223,26],[1287,32,1223,28],[1288,16,1224,12,"console"],[1288,23,1224,19],[1288,24,1224,20,"error"],[1288,29,1224,25],[1288,30,1224,26],[1288,62,1224,58],[1288,64,1224,60,"storageError"],[1288,76,1224,72],[1288,77,1224,73],[1289,14,1225,10],[1289,15,1225,11],[1289,21,1225,17],[1290,16,1226,12,"console"],[1290,23,1226,19],[1290,24,1226,20,"log"],[1290,27,1226,23],[1290,28,1226,24],[1290,65,1226,61],[1290,67,1226,63,"buckets"],[1290,74,1226,70],[1290,75,1226,71,"map"],[1290,78,1226,74],[1290,79,1226,75,"b"],[1290,80,1226,76],[1290,84,1226,80,"b"],[1290,85,1226,81],[1290,86,1226,82,"name"],[1290,90,1226,86],[1290,91,1226,87],[1290,92,1226,88],[1291,16,1227,12,"accessibleBuckets"],[1291,33,1227,29],[1291,34,1227,30,"push"],[1291,38,1227,34],[1291,39,1227,35],[1291,42,1227,38,"buckets"],[1291,49,1227,45],[1291,50,1227,46,"map"],[1291,53,1227,49],[1291,54,1227,50,"b"],[1291,55,1227,51],[1291,59,1227,55,"b"],[1291,60,1227,56],[1291,61,1227,57,"name"],[1291,65,1227,61],[1291,66,1227,62],[1291,67,1227,63],[1292,16,1228,12,"hasVehicleChecksBucket"],[1292,38,1228,34],[1292,41,1228,37,"buckets"],[1292,48,1228,44],[1292,49,1228,45,"some"],[1292,53,1228,49],[1292,54,1228,50,"b"],[1292,55,1228,51],[1292,59,1228,55,"b"],[1292,60,1228,56],[1292,61,1228,57,"name"],[1292,65,1228,61],[1292,70,1228,66],[1292,86,1228,82],[1292,87,1228,83],[1293,14,1229,10],[1294,12,1230,8],[1294,13,1230,9],[1294,14,1230,10],[1294,21,1230,17,"listError"],[1294,30,1230,26],[1294,32,1230,28],[1295,14,1231,10,"console"],[1295,21,1231,17],[1295,22,1231,18,"error"],[1295,27,1231,23],[1295,28,1231,24],[1295,68,1231,64],[1295,70,1231,66,"listError"],[1295,79,1231,75],[1295,80,1231,76],[1296,12,1232,8],[1297,10,1233,6],[1298,10,1235,6,"console"],[1298,17,1235,13],[1298,18,1235,14,"log"],[1298,21,1235,17],[1298,22,1235,18],[1298,55,1235,51],[1298,57,1235,53,"accessibleBuckets"],[1298,74,1235,70],[1298,75,1235,71],[1299,10,1237,6],[1299,14,1237,10,"hasVehicleChecksBucket"],[1299,36,1237,32],[1299,38,1237,34],[1300,12,1238,8,"console"],[1300,19,1238,15],[1300,20,1238,16,"log"],[1300,23,1238,19],[1300,24,1238,20],[1300,81,1238,77],[1300,82,1238,78],[1301,10,1239,6],[1301,11,1239,7],[1301,17,1239,13],[1302,12,1240,8,"console"],[1302,19,1240,15],[1302,20,1240,16,"warn"],[1302,24,1240,20],[1302,25,1240,21],[1302,95,1240,91],[1302,97,1240,93,"accessibleBuckets"],[1302,114,1240,110],[1302,115,1240,111],[1303,10,1241,6],[1304,10,1243,6],[1304,17,1243,13],[1305,12,1244,8,"success"],[1305,19,1244,15],[1305,21,1244,17],[1305,25,1244,21],[1306,12,1245,8,"buckets"],[1306,19,1245,15],[1306,21,1245,17,"accessibleBuckets"],[1306,38,1245,34],[1307,12,1246,8,"hasVehicleChecksBucket"],[1307,34,1246,30],[1307,36,1246,32,"hasVehicleChecksBucket"],[1308,10,1247,6],[1308,11,1247,7],[1309,8,1249,4],[1309,9,1249,5],[1309,10,1249,6],[1309,17,1249,13,"error"],[1309,22,1249,18],[1309,24,1249,20],[1310,10,1250,6,"console"],[1310,17,1250,13],[1310,18,1250,14,"error"],[1310,23,1250,19],[1310,24,1250,20],[1310,73,1250,69],[1310,75,1250,71,"error"],[1310,80,1250,76],[1310,81,1250,77],[1311,10,1251,6],[1311,17,1251,13],[1312,12,1252,8,"success"],[1312,19,1252,15],[1312,21,1252,17],[1312,26,1252,22],[1313,12,1253,8,"error"],[1313,17,1253,13],[1313,19,1253,15,"error"],[1313,24,1253,20],[1313,25,1253,21,"message"],[1314,10,1254,6],[1314,11,1254,7],[1315,8,1255,4],[1316,6,1256,2],[1316,7,1256,3],[1317,6,1256,3],[1317,22,1138,2,"testConnection"],[1317,36,1138,16,"testConnection"],[1317,37,1138,16],[1318,8,1138,16],[1318,15,1138,16,"_ref22"],[1318,21,1138,16],[1318,22,1138,16,"apply"],[1318,27,1138,16],[1318,34,1138,16,"arguments"],[1318,43,1138,16],[1319,6,1138,16],[1320,4,1138,16],[1320,7,1256,3],[1321,4,1258,2],[1322,4,1259,2,"testBucketUpload"],[1322,20,1259,18],[1323,6,1259,18],[1323,10,1259,18,"_ref23"],[1323,16,1259,18],[1323,23,1259,18,"_asyncToGenerator2"],[1323,41,1259,18],[1323,42,1259,18,"default"],[1323,49,1259,18],[1323,51,1259,20],[1323,64,1259,61],[1324,8,1259,61],[1324,12,1259,27,"bucketName"],[1324,22,1259,37],[1324,25,1259,37,"arguments"],[1324,34,1259,37],[1324,35,1259,37,"length"],[1324,41,1259,37],[1324,49,1259,37,"arguments"],[1324,58,1259,37],[1324,66,1259,37,"undefined"],[1324,75,1259,37],[1324,78,1259,37,"arguments"],[1324,87,1259,37],[1324,93,1259,40],[1324,109,1259,56],[1325,8,1260,4],[1325,12,1260,8],[1326,10,1261,6,"console"],[1326,17,1261,13],[1326,18,1261,14,"log"],[1326,21,1261,17],[1326,22,1261,18],[1326,63,1261,59,"bucketName"],[1326,73,1261,69],[1326,75,1261,71],[1326,76,1261,72],[1328,10,1263,6],[1329,10,1264,6],[1329,14,1264,12,"testContent"],[1329,25,1264,23],[1329,28,1264,26],[1329,41,1264,39],[1330,10,1265,6],[1330,14,1265,12,"testBlob"],[1330,22,1265,20],[1330,25,1265,23],[1330,29,1265,27,"Blob"],[1330,33,1265,31],[1330,34,1265,32],[1330,35,1265,33,"testContent"],[1330,46,1265,44],[1330,47,1265,45],[1330,49,1265,47],[1331,12,1265,49,"type"],[1331,16,1265,53],[1331,18,1265,55],[1332,10,1265,68],[1332,11,1265,69],[1332,12,1265,70],[1333,10,1266,6],[1333,14,1266,12,"testFileName"],[1333,26,1266,24],[1333,29,1266,27],[1333,37,1266,35,"Date"],[1333,41,1266,39],[1333,42,1266,40,"now"],[1333,45,1266,43],[1333,46,1266,44],[1333,47,1266,45],[1333,58,1266,56],[1334,10,1268,6,"console"],[1334,17,1268,13],[1334,18,1268,14,"log"],[1334,21,1268,17],[1334,22,1268,18],[1334,72,1268,68,"testFileName"],[1334,84,1268,80],[1334,86,1268,82],[1334,87,1268,83],[1336,10,1270,6],[1337,10,1271,6],[1337,14,1271,10],[1338,12,1272,8],[1338,16,1272,8,"_yield$supabase$stora8"],[1338,38,1272,8],[1338,47,1272,38,"supabase"],[1338,55,1272,46],[1338,56,1272,47,"storage"],[1338,63,1272,54],[1338,64,1273,11,"from"],[1338,68,1273,15],[1338,69,1273,16,"bucketName"],[1338,79,1273,26],[1338,80,1273,27],[1338,81,1274,11,"upload"],[1338,87,1274,17],[1338,88,1274,18,"testFileName"],[1338,100,1274,30],[1338,102,1274,32,"testBlob"],[1338,110,1274,40],[1338,112,1274,42],[1339,16,1275,12,"cacheControl"],[1339,28,1275,24],[1339,30,1275,26],[1339,36,1275,32],[1340,16,1276,12,"upsert"],[1340,22,1276,18],[1340,24,1276,20],[1341,14,1277,10],[1341,15,1277,11],[1341,16,1277,12],[1342,14,1272,16,"data"],[1342,18,1272,20],[1342,21,1272,20,"_yield$supabase$stora8"],[1342,43,1272,20],[1342,44,1272,16,"data"],[1342,48,1272,20],[1343,14,1272,22,"error"],[1343,19,1272,27],[1343,22,1272,27,"_yield$supabase$stora8"],[1343,44,1272,27],[1343,45,1272,22,"error"],[1343,50,1272,27],[1344,12,1279,8],[1344,16,1279,12,"error"],[1344,21,1279,17],[1344,23,1279,19],[1345,14,1280,10,"console"],[1345,21,1280,17],[1345,22,1280,18,"error"],[1345,27,1280,23],[1345,28,1280,24],[1345,65,1280,61,"bucketName"],[1345,75,1280,71],[1345,78,1280,74],[1345,80,1280,76,"error"],[1345,85,1280,81],[1345,86,1280,82],[1346,14,1281,10],[1346,20,1281,16,"error"],[1346,25,1281,21],[1347,12,1282,8],[1348,12,1284,8,"console"],[1348,19,1284,15],[1348,20,1284,16,"log"],[1348,23,1284,19],[1348,24,1284,20],[1348,64,1284,60,"bucketName"],[1348,74,1284,70],[1348,84,1284,80],[1348,85,1284,81],[1350,12,1286,8],[1351,12,1287,8],[1351,16,1287,12],[1352,14,1288,10],[1352,20,1288,16,"supabase"],[1352,28,1288,24],[1352,29,1288,25,"storage"],[1352,36,1288,32],[1352,37,1289,13,"from"],[1352,41,1289,17],[1352,42,1289,18,"bucketName"],[1352,52,1289,28],[1352,53,1289,29],[1352,54,1290,13,"remove"],[1352,60,1290,19],[1352,61,1290,20],[1352,62,1290,21,"testFileName"],[1352,74,1290,33],[1352,75,1290,34],[1352,76,1290,35],[1353,14,1291,10,"console"],[1353,21,1291,17],[1353,22,1291,18,"log"],[1353,25,1291,21],[1353,26,1291,22],[1353,63,1291,59,"testFileName"],[1353,75,1291,71],[1353,77,1291,73],[1353,78,1291,74],[1354,12,1292,8],[1354,13,1292,9],[1354,14,1292,10],[1354,21,1292,17,"cleanupError"],[1354,33,1292,29],[1354,35,1292,31],[1355,14,1293,10,"console"],[1355,21,1293,17],[1355,22,1293,18,"warn"],[1355,26,1293,22],[1355,27,1293,23],[1355,82,1293,78,"cleanupError"],[1355,94,1293,90],[1355,95,1293,91,"message"],[1355,102,1293,98],[1355,104,1293,100],[1355,105,1293,101],[1356,12,1294,8],[1357,12,1296,8],[1357,19,1296,15],[1358,14,1297,10,"success"],[1358,21,1297,17],[1358,23,1297,19],[1358,27,1297,23],[1359,14,1298,10,"bucket"],[1359,20,1298,16],[1359,22,1298,18,"bucketName"],[1359,32,1298,28],[1360,14,1299,10,"testFile"],[1360,22,1299,18],[1360,24,1299,20,"testFileName"],[1360,36,1299,32],[1361,14,1300,10,"method"],[1361,20,1300,16],[1361,22,1300,18],[1362,12,1301,8],[1362,13,1301,9],[1363,10,1303,6],[1363,11,1303,7],[1363,12,1303,8],[1363,19,1303,15,"sdkError"],[1363,27,1303,23],[1363,29,1303,25],[1364,12,1304,8,"console"],[1364,19,1304,15],[1364,20,1304,16,"log"],[1364,23,1304,19],[1364,24,1304,20],[1364,83,1304,79],[1364,84,1304,80],[1366,12,1306,8],[1367,12,1307,8],[1367,16,1307,14,"formData"],[1367,24,1307,22],[1367,27,1307,25],[1367,31,1307,29,"FormData"],[1367,39,1307,37],[1367,40,1307,38],[1367,41,1307,39],[1368,12,1308,8,"formData"],[1368,20,1308,16],[1368,21,1308,17,"append"],[1368,27,1308,23],[1368,28,1308,24],[1368,34,1308,30],[1368,36,1308,32],[1369,14,1309,10,"uri"],[1369,17,1309,13],[1369,19,1309,15],[1369,52,1309,48,"encodeURIComponent"],[1369,70,1309,66],[1369,71,1309,67,"testContent"],[1369,82,1309,78],[1369,83,1309,79],[1369,85,1309,81],[1370,14,1310,10,"type"],[1370,18,1310,14],[1370,20,1310,16],[1370,32,1310,28],[1371,14,1311,10,"name"],[1371,18,1311,14],[1371,20,1311,16],[1372,12,1312,8],[1372,13,1312,9],[1372,14,1312,10],[1373,12,1314,8],[1373,16,1314,14,"uploadUrl"],[1373,25,1314,23],[1373,28,1314,26],[1373,31,1314,29,"supabaseUrl"],[1373,42,1314,40],[1373,64,1314,62,"bucketName"],[1373,74,1314,72],[1373,78,1314,76,"testFileName"],[1373,90,1314,88],[1373,92,1314,90],[1374,12,1315,8,"console"],[1374,19,1315,15],[1374,20,1315,16,"log"],[1374,23,1315,19],[1374,24,1315,20],[1374,56,1315,52,"uploadUrl"],[1374,65,1315,61],[1374,67,1315,63],[1374,68,1315,64],[1375,12,1317,8],[1375,16,1317,14,"response"],[1375,24,1317,22],[1375,33,1317,31,"fetch"],[1375,38,1317,36],[1375,39,1317,37,"uploadUrl"],[1375,48,1317,46],[1375,50,1317,48],[1376,14,1318,10,"method"],[1376,20,1318,16],[1376,22,1318,18],[1376,28,1318,24],[1377,14,1319,10,"headers"],[1377,21,1319,17],[1377,23,1319,19],[1378,16,1320,12],[1378,31,1320,27],[1378,33,1320,29],[1378,43,1320,39,"supabaseKey"],[1378,54,1320,50],[1378,56,1320,52],[1379,16,1321,12],[1379,24,1321,20],[1379,26,1321,22,"supabaseKey"],[1380,14,1322,10],[1380,15,1322,11],[1381,14,1323,10,"body"],[1381,18,1323,14],[1381,20,1323,16,"formData"],[1382,12,1324,8],[1382,13,1324,9],[1382,14,1324,10],[1383,12,1326,8],[1383,16,1326,12],[1383,17,1326,13,"response"],[1383,25,1326,21],[1383,26,1326,22,"ok"],[1383,28,1326,24],[1383,30,1326,26],[1384,14,1327,10],[1384,18,1327,16,"errorText"],[1384,27,1327,25],[1384,36,1327,34,"response"],[1384,44,1327,42],[1384,45,1327,43,"text"],[1384,49,1327,47],[1384,50,1327,48],[1384,51,1327,49],[1385,14,1328,10,"console"],[1385,21,1328,17],[1385,22,1328,18,"error"],[1385,27,1328,23],[1385,28,1328,24],[1385,66,1328,62,"bucketName"],[1385,76,1328,72],[1385,79,1328,75],[1385,81,1328,77,"response"],[1385,89,1328,85],[1385,90,1328,86,"status"],[1385,96,1328,92],[1385,98,1328,94,"errorText"],[1385,107,1328,103],[1385,108,1328,104],[1386,14,1329,10],[1386,20,1329,16],[1386,24,1329,20,"Error"],[1386,29,1329,25],[1386,30,1329,26],[1386,53,1329,49,"response"],[1386,61,1329,57],[1386,62,1329,58,"status"],[1386,68,1329,64],[1386,72,1329,68,"errorText"],[1386,81,1329,77],[1386,83,1329,79],[1386,84,1329,80],[1387,12,1330,8],[1388,12,1332,8,"console"],[1388,19,1332,15],[1388,20,1332,16,"log"],[1388,23,1332,19],[1388,24,1332,20],[1388,64,1332,60,"bucketName"],[1388,74,1332,70],[1388,85,1332,81],[1388,86,1332,82],[1390,12,1334,8],[1391,12,1335,8],[1391,16,1335,12],[1392,14,1336,10],[1392,18,1336,16,"deleteUrl"],[1392,27,1336,25],[1392,30,1336,28],[1392,33,1336,31,"supabaseUrl"],[1392,44,1336,42],[1392,66,1336,64,"bucketName"],[1392,76,1336,74],[1392,80,1336,78,"testFileName"],[1392,92,1336,90],[1392,94,1336,92],[1393,14,1337,10],[1393,20,1337,16,"fetch"],[1393,25,1337,21],[1393,26,1337,22,"deleteUrl"],[1393,35,1337,31],[1393,37,1337,33],[1394,16,1338,12,"method"],[1394,22,1338,18],[1394,24,1338,20],[1394,32,1338,28],[1395,16,1339,12,"headers"],[1395,23,1339,19],[1395,25,1339,21],[1396,18,1340,14],[1396,33,1340,29],[1396,35,1340,31],[1396,45,1340,41,"supabaseKey"],[1396,56,1340,52],[1396,58,1340,54],[1397,18,1341,14],[1397,26,1341,22],[1397,28,1341,24,"supabaseKey"],[1398,16,1342,12],[1399,14,1343,10],[1399,15,1343,11],[1399,16,1343,12],[1400,14,1344,10,"console"],[1400,21,1344,17],[1400,22,1344,18,"log"],[1400,25,1344,21],[1400,26,1344,22],[1400,72,1344,68,"testFileName"],[1400,84,1344,80],[1400,86,1344,82],[1400,87,1344,83],[1401,12,1345,8],[1401,13,1345,9],[1401,14,1345,10],[1401,21,1345,17,"cleanupError"],[1401,33,1345,29],[1401,35,1345,31],[1402,14,1346,10,"console"],[1402,21,1346,17],[1402,22,1346,18,"warn"],[1402,26,1346,22],[1402,27,1346,23],[1402,91,1346,87,"cleanupError"],[1402,103,1346,99],[1402,104,1346,100,"message"],[1402,111,1346,107],[1402,113,1346,109],[1402,114,1346,110],[1403,12,1347,8],[1404,12,1349,8],[1404,19,1349,15],[1405,14,1350,10,"success"],[1405,21,1350,17],[1405,23,1350,19],[1405,27,1350,23],[1406,14,1351,10,"bucket"],[1406,20,1351,16],[1406,22,1351,18,"bucketName"],[1406,32,1351,28],[1407,14,1352,10,"testFile"],[1407,22,1352,18],[1407,24,1352,20,"testFileName"],[1407,36,1352,32],[1408,14,1353,10,"method"],[1408,20,1353,16],[1408,22,1353,18],[1409,12,1354,8],[1409,13,1354,9],[1410,10,1355,6],[1411,8,1357,4],[1411,9,1357,5],[1411,10,1357,6],[1411,17,1357,13,"error"],[1411,22,1357,18],[1411,24,1357,20],[1412,10,1358,6,"console"],[1412,17,1358,13],[1412,18,1358,14,"error"],[1412,23,1358,19],[1412,24,1358,20],[1412,64,1358,60,"bucketName"],[1412,74,1358,70],[1412,77,1358,73],[1412,79,1358,75,"error"],[1412,84,1358,80],[1412,85,1358,81],[1413,10,1359,6],[1413,17,1359,13],[1414,12,1360,8,"success"],[1414,19,1360,15],[1414,21,1360,17],[1414,26,1360,22],[1415,12,1361,8,"error"],[1415,17,1361,13],[1415,19,1361,15,"error"],[1415,24,1361,20],[1415,25,1361,21,"message"],[1415,32,1361,28],[1416,12,1362,8,"bucket"],[1416,18,1362,14],[1416,20,1362,16,"bucketName"],[1417,10,1363,6],[1417,11,1363,7],[1418,8,1364,4],[1419,6,1365,2],[1419,7,1365,3],[1420,6,1365,3],[1420,22,1259,2,"testBucketUpload"],[1420,38,1259,18,"testBucketUpload"],[1420,39,1259,18],[1421,8,1259,18],[1421,15,1259,18,"_ref23"],[1421,21,1259,18],[1421,22,1259,18,"apply"],[1421,27,1259,18],[1421,34,1259,18,"arguments"],[1421,43,1259,18],[1422,6,1259,18],[1423,4,1259,18],[1423,7,1365,3],[1424,4,1367,2],[1425,4,1368,2,"diagnosticComplet"],[1425,21,1368,19],[1426,6,1368,19],[1426,10,1368,19,"_ref24"],[1426,16,1368,19],[1426,23,1368,19,"_asyncToGenerator2"],[1426,41,1368,19],[1426,42,1368,19,"default"],[1426,49,1368,19],[1426,51,1368,21],[1426,64,1368,33],[1427,8,1369,4,"console"],[1427,15,1369,11],[1427,16,1369,12,"log"],[1427,19,1369,15],[1427,20,1369,16],[1427,63,1369,59],[1427,64,1369,60],[1428,8,1371,4],[1428,12,1371,10,"results"],[1428,19,1371,17],[1428,22,1371,20],[1429,10,1372,6,"timestamp"],[1429,19,1372,15],[1429,21,1372,17],[1429,25,1372,21,"Date"],[1429,29,1372,25],[1429,30,1372,26],[1429,31,1372,27],[1429,32,1372,28,"toISOString"],[1429,43,1372,39],[1429,44,1372,40],[1429,45,1372,41],[1430,10,1373,6,"platform"],[1430,18,1373,14],[1430,20,1373,16],[1430,28,1373,24],[1431,10,1374,6,"tests"],[1431,15,1374,11],[1431,17,1374,13],[1431,18,1374,14],[1432,8,1375,4],[1432,9,1375,5],[1434,8,1377,4],[1435,8,1378,4],[1435,12,1378,8],[1436,10,1379,6,"console"],[1436,17,1379,13],[1436,18,1379,14,"log"],[1436,21,1379,17],[1436,22,1379,18],[1436,65,1379,61],[1436,66,1379,62],[1437,10,1380,6],[1437,14,1380,12,"response"],[1437,22,1380,20],[1437,31,1380,29,"fetch"],[1437,36,1380,34],[1437,37,1380,35],[1437,40,1380,38,"supabaseUrl"],[1437,51,1380,49],[1437,62,1380,60],[1437,64,1380,62],[1438,12,1381,8,"method"],[1438,18,1381,14],[1438,20,1381,16],[1438,25,1381,21],[1439,12,1382,8,"headers"],[1439,19,1382,15],[1439,21,1382,17],[1440,14,1383,10],[1440,22,1383,18],[1440,24,1383,20,"supabaseKey"],[1440,35,1383,31],[1441,14,1384,10],[1441,29,1384,25],[1441,31,1384,27],[1441,41,1384,37,"supabaseKey"],[1441,52,1384,48],[1441,54,1384,50],[1442,14,1385,10],[1442,28,1385,24],[1442,30,1385,26],[1443,12,1386,8],[1444,10,1387,6],[1444,11,1387,7],[1444,12,1387,8],[1445,10,1389,6,"results"],[1445,17,1389,13],[1445,18,1389,14,"tests"],[1445,23,1389,19],[1445,24,1389,20,"connectivite"],[1445,36,1389,32],[1445,39,1389,35],[1446,12,1390,8,"success"],[1446,19,1390,15],[1446,21,1390,17,"response"],[1446,29,1390,25],[1446,30,1390,26,"ok"],[1446,32,1390,28],[1447,12,1391,8,"status"],[1447,18,1391,14],[1447,20,1391,16,"response"],[1447,28,1391,24],[1447,29,1391,25,"status"],[1447,35,1391,31],[1448,12,1392,8,"statusText"],[1448,22,1392,18],[1448,24,1392,20,"response"],[1448,32,1392,28],[1448,33,1392,29,"statusText"],[1449,10,1393,6],[1449,11,1393,7],[1450,10,1395,6,"console"],[1450,17,1395,13],[1450,18,1395,14,"log"],[1450,21,1395,17],[1450,22,1395,18],[1450,44,1395,40,"response"],[1450,52,1395,48],[1450,53,1395,49,"ok"],[1450,55,1395,51],[1450,58,1395,54],[1450,61,1395,57],[1450,64,1395,60],[1450,67,1395,63],[1450,79,1395,75,"response"],[1450,87,1395,83],[1450,88,1395,84,"status"],[1450,94,1395,90],[1450,96,1395,92],[1450,97,1395,93],[1451,8,1396,4],[1451,9,1396,5],[1451,10,1396,6],[1451,17,1396,13,"error"],[1451,22,1396,18],[1451,24,1396,20],[1452,10,1397,6,"results"],[1452,17,1397,13],[1452,18,1397,14,"tests"],[1452,23,1397,19],[1452,24,1397,20,"connectivite"],[1452,36,1397,32],[1452,39,1397,35],[1453,12,1398,8,"success"],[1453,19,1398,15],[1453,21,1398,17],[1453,26,1398,22],[1454,12,1399,8,"error"],[1454,17,1399,13],[1454,19,1399,15,"error"],[1454,24,1399,20],[1454,25,1399,21,"message"],[1455,10,1400,6],[1455,11,1400,7],[1456,10,1401,6,"console"],[1456,17,1401,13],[1456,18,1401,14,"log"],[1456,21,1401,17],[1456,22,1401,18],[1456,54,1401,50,"error"],[1456,59,1401,55],[1456,60,1401,56,"message"],[1456,67,1401,63],[1456,69,1401,65],[1456,70,1401,66],[1457,8,1402,4],[1459,8,1404,4],[1460,8,1405,4],[1460,12,1405,8],[1461,10,1406,6,"console"],[1461,17,1406,13],[1461,18,1406,14,"log"],[1461,21,1406,17],[1461,22,1406,18],[1461,63,1406,59],[1461,64,1406,60],[1462,10,1407,6],[1462,14,1407,12,"bucketTest"],[1462,24,1407,22],[1462,33,1407,31,"SupabaseService"],[1462,48,1407,46],[1462,49,1407,47,"testBucketAccess"],[1462,65,1407,63],[1462,66,1407,64],[1462,82,1407,80],[1462,83,1407,81],[1463,10,1408,6,"results"],[1463,17,1408,13],[1463,18,1408,14,"tests"],[1463,23,1408,19],[1463,24,1408,20,"bucketVehicleChecks"],[1463,43,1408,39],[1463,46,1408,42,"bucketTest"],[1463,56,1408,52],[1464,10,1409,6,"console"],[1464,17,1409,13],[1464,18,1409,14,"log"],[1464,21,1409,17],[1464,22,1409,18],[1464,44,1409,40,"bucketTest"],[1464,54,1409,50],[1464,55,1409,51,"success"],[1464,62,1409,58],[1464,65,1409,61],[1464,68,1409,64],[1464,71,1409,67],[1464,74,1409,70],[1464,98,1409,94],[1464,99,1409,95],[1465,8,1410,4],[1465,9,1410,5],[1465,10,1410,6],[1465,17,1410,13,"error"],[1465,22,1410,18],[1465,24,1410,20],[1466,10,1411,6,"results"],[1466,17,1411,13],[1466,18,1411,14,"tests"],[1466,23,1411,19],[1466,24,1411,20,"bucketVehicleChecks"],[1466,43,1411,39],[1466,46,1411,42],[1467,12,1412,8,"success"],[1467,19,1412,15],[1467,21,1412,17],[1467,26,1412,22],[1468,12,1413,8,"error"],[1468,17,1413,13],[1468,19,1413,15,"error"],[1468,24,1413,20],[1468,25,1413,21,"message"],[1469,10,1414,6],[1469,11,1414,7],[1470,10,1415,6,"console"],[1470,17,1415,13],[1470,18,1415,14,"log"],[1470,21,1415,17],[1470,22,1415,18],[1470,54,1415,50,"error"],[1470,59,1415,55],[1470,60,1415,56,"message"],[1470,67,1415,63],[1470,69,1415,65],[1470,70,1415,66],[1471,8,1416,4],[1473,8,1418,4],[1474,8,1419,4],[1474,12,1419,8],[1475,10,1420,6,"console"],[1475,17,1420,13],[1475,18,1420,14,"log"],[1475,21,1420,17],[1475,22,1420,18],[1475,60,1420,56],[1475,61,1420,57],[1476,10,1421,6],[1476,14,1421,12,"uploadTest"],[1476,24,1421,22],[1476,33,1421,31,"SupabaseService"],[1476,48,1421,46],[1476,49,1421,47,"testBucketUpload"],[1476,65,1421,63],[1476,66,1421,64],[1476,82,1421,80],[1476,83,1421,81],[1477,10,1422,6,"results"],[1477,17,1422,13],[1477,18,1422,14,"tests"],[1477,23,1422,19],[1477,24,1422,20,"uploadTest"],[1477,34,1422,30],[1477,37,1422,33,"uploadTest"],[1477,47,1422,43],[1478,10,1423,6,"console"],[1478,17,1423,13],[1478,18,1423,14,"log"],[1478,21,1423,17],[1478,22,1423,18],[1478,44,1423,40,"uploadTest"],[1478,54,1423,50],[1478,55,1423,51,"success"],[1478,62,1423,58],[1478,65,1423,61],[1478,68,1423,64],[1478,71,1423,67],[1478,74,1423,70],[1478,88,1423,84],[1478,89,1423,85],[1479,8,1424,4],[1479,9,1424,5],[1479,10,1424,6],[1479,17,1424,13,"error"],[1479,22,1424,18],[1479,24,1424,20],[1480,10,1425,6,"results"],[1480,17,1425,13],[1480,18,1425,14,"tests"],[1480,23,1425,19],[1480,24,1425,20,"uploadTest"],[1480,34,1425,30],[1480,37,1425,33],[1481,12,1426,8,"success"],[1481,19,1426,15],[1481,21,1426,17],[1481,26,1426,22],[1482,12,1427,8,"error"],[1482,17,1427,13],[1482,19,1427,15,"error"],[1482,24,1427,20],[1482,25,1427,21,"message"],[1483,10,1428,6],[1483,11,1428,7],[1484,10,1429,6,"console"],[1484,17,1429,13],[1484,18,1429,14,"log"],[1484,21,1429,17],[1484,22,1429,18],[1484,54,1429,50,"error"],[1484,59,1429,55],[1484,60,1429,56,"message"],[1484,67,1429,63],[1484,69,1429,65],[1484,70,1429,66],[1485,8,1430,4],[1487,8,1432,4],[1488,8,1433,4],[1488,12,1433,10,"totalTests"],[1488,22,1433,20],[1488,25,1433,23,"Object"],[1488,31,1433,29],[1488,32,1433,30,"keys"],[1488,36,1433,34],[1488,37,1433,35,"results"],[1488,44,1433,42],[1488,45,1433,43,"tests"],[1488,50,1433,48],[1488,51,1433,49],[1488,52,1433,50,"length"],[1488,58,1433,56],[1489,8,1434,4],[1489,12,1434,10,"successfulTests"],[1489,27,1434,25],[1489,30,1434,28,"Object"],[1489,36,1434,34],[1489,37,1434,35,"values"],[1489,43,1434,41],[1489,44,1434,42,"results"],[1489,51,1434,49],[1489,52,1434,50,"tests"],[1489,57,1434,55],[1489,58,1434,56],[1489,59,1434,57,"filter"],[1489,65,1434,63],[1489,66,1434,64,"test"],[1489,70,1434,68],[1489,74,1434,72,"test"],[1489,78,1434,76],[1489,79,1434,77,"success"],[1489,86,1434,84],[1489,87,1434,85],[1489,88,1434,86,"length"],[1489,94,1434,92],[1490,8,1436,4,"results"],[1490,15,1436,11],[1490,16,1436,12,"summary"],[1490,23,1436,19],[1490,26,1436,22],[1491,10,1437,6,"total"],[1491,15,1437,11],[1491,17,1437,13,"totalTests"],[1491,27,1437,23],[1492,10,1438,6,"successful"],[1492,20,1438,16],[1492,22,1438,18,"successfulTests"],[1492,37,1438,33],[1493,10,1439,6,"failed"],[1493,16,1439,12],[1493,18,1439,14,"totalTests"],[1493,28,1439,24],[1493,31,1439,27,"successfulTests"],[1493,46,1439,42],[1494,10,1440,6,"successRate"],[1494,21,1440,17],[1494,23,1440,19,"Math"],[1494,27,1440,23],[1494,28,1440,24,"round"],[1494,33,1440,29],[1494,34,1440,31,"successfulTests"],[1494,49,1440,46],[1494,52,1440,49,"totalTests"],[1494,62,1440,59],[1494,65,1440,63],[1494,68,1440,66],[1495,8,1441,4],[1495,9,1441,5],[1496,8,1443,4,"console"],[1496,15,1443,11],[1496,16,1443,12,"log"],[1496,19,1443,15],[1496,20,1443,16],[1496,57,1443,53,"successfulTests"],[1496,72,1443,68],[1496,76,1443,72,"totalTests"],[1496,86,1443,82],[1496,105,1443,101,"results"],[1496,112,1443,108],[1496,113,1443,109,"summary"],[1496,120,1443,116],[1496,121,1443,117,"successRate"],[1496,132,1443,128],[1496,136,1443,132],[1496,137,1443,133],[1497,8,1445,4],[1497,15,1445,11,"results"],[1497,22,1445,18],[1498,6,1446,2],[1498,7,1446,3],[1499,6,1446,3],[1499,22,1368,2,"diagnosticComplet"],[1499,39,1368,19,"diagnosticComplet"],[1499,40,1368,19],[1500,8,1368,19],[1500,15,1368,19,"_ref24"],[1500,21,1368,19],[1500,22,1368,19,"apply"],[1500,27,1368,19],[1500,34,1368,19,"arguments"],[1500,43,1368,19],[1501,6,1368,19],[1502,4,1368,19],[1503,2,1447,0],[1503,3,1447,1],[1504,2,1447,2],[1504,6,1447,2,"_default"],[1504,14,1447,2],[1504,17,1447,2,"exports"],[1504,24,1447,2],[1504,25,1447,2,"default"],[1504,32,1447,2],[1504,35,1449,15,"SupabaseService"],[1504,50,1449,30],[1505,0,1449,30],[1505,3]],"functionMap":{"names":["<global>","SupabaseService.login","SupabaseService.logout","SupabaseService.register","SupabaseService.getCurrentUser","SupabaseService.getCurrentUserId","SupabaseService.isAuthenticated","SupabaseService.getUserSelas","SupabaseService.getAllSelas","selasList.map$argument_0","SupabaseService.saveSessionData","SupabaseService.getCurrentSession","SupabaseService.closeCurrentSession","SupabaseService.getVehicules","SupabaseService.getUserSelas._catch$argument_0","SupabaseService.getTournees","SupabaseService.getPoles","SupabaseService.addScans","scansArray.map$argument_0","SupabaseService.getUserProfile","SupabaseService.checkAuthAndRedirect","SupabaseService.uploadFile","SupabaseService.uploadImageFromUri","SupabaseService.uploadVehicleDocument","SupabaseService.uploadVehicleDocumentFromUri","SupabaseService.testMobileNetwork","SupabaseService.testBucketAccess","SupabaseService.testConnection","buckets.map$argument_0","buckets.some$argument_0","SupabaseService.testBucketUpload","SupabaseService.diagnosticComplet","Object.values.filter$argument_0"],"mappings":"AAA;SCsC;GD6C;UEE;GFU;YGE;GH6D;kBIE;GJsB;oBKE;GLY;mBME;GNQ;gBOG;GPuD;eQG;yECc,UD;2BCC;QDU;GRK;mBUG;GVwC;qBWE;GX0B;uBYE;GZ6B;gBaG;iEC8B,QD;GbM;eeG;GfsB;YgBG;iEF+B,QE;GhBO;YiBG;4CCkB;QDqB;GjBqB;kBmBG;GnBqB;wBoBG;GpBkC;cqBG;GrB4C;sBsBG;GtB0O;yBuBG;GvB8C;gCwBG;GxBuD;qByBG;GzBmF;oB0BG;G1B0B;kB2BG;2ECwF,WD;kDCC,WD;kDEC,gCF;G3B4B;oB8BG;G9B0G;qB+BG;gECkE,oBD;G/BY"}},"type":"js/module"}]}