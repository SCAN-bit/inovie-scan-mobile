{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":76,"column":0,"index":2370}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"react-native","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":2,"column":76,"index":108}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"./handlersRegistry","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":109},"end":{"line":3,"column":52,"index":161}}],"key":"uUSwkNM2LATozp8YVz2n0Z5NN80="}},{"name":"../utils","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":162},"end":{"line":4,"column":35,"index":197}}],"key":"wnEVYE0exYilYcCniP5DP5xdv08="}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":0,"index":198},"end":{"line":5,"column":63,"index":261}}],"key":"rPPmo2MLpjENsDg3Ww924PhFl60="}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":0,"index":262},"end":{"line":6,"column":55,"index":317}}],"key":"TTQQP3RHvuVHAscADKbtBNLPyaU="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.filterConfig = filterConfig;\n  exports.findNodeHandle = findNodeHandle;\n  exports.scheduleFlushOperations = scheduleFlushOperations;\n  var _reactNative = require(_dependencyMap[1]);\n  var _handlersRegistry = require(_dependencyMap[2]);\n  var _utils = require(_dependencyMap[3]);\n  var _RNGestureHandlerModule = _interopRequireDefault(require(_dependencyMap[4]));\n  var _ghQueueMicrotask = require(_dependencyMap[5]);\n  function isConfigParam(param, name) {\n    // param !== Object(param) returns false if `param` is a function\n    // or an object and returns true if `param` is null\n    return param !== undefined && (param !== Object(param) || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n  }\n  function filterConfig(props, validProps) {\n    var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var filteredConfig = {\n      ...defaults\n    };\n    for (var key of validProps) {\n      var value = props[key];\n      if (isConfigParam(value, key)) {\n        if (key === 'simultaneousHandlers' || key === 'waitFor') {\n          value = transformIntoHandlerTags(props[key]);\n        } else if (key === 'hitSlop' && typeof value !== 'object') {\n          value = {\n            top: value,\n            left: value,\n            bottom: value,\n            right: value\n          };\n        }\n        filteredConfig[key] = value;\n      }\n    }\n    return filteredConfig;\n  }\n  function transformIntoHandlerTags(handlerIDs) {\n    handlerIDs = (0, _utils.toArray)(handlerIDs);\n    // converts handler string IDs into their numeric tags\n    return handlerIDs.map(handlerID => _handlersRegistry.handlerIDToTag[handlerID] || handlerID.current?.handlerTag || -1).filter(handlerTag => handlerTag > 0);\n  }\n  function findNodeHandle(node) {\n    return (0, _reactNative.findNodeHandle)(node);\n  }\n  var flushOperationsScheduled = false;\n  function scheduleFlushOperations() {\n    if (!flushOperationsScheduled) {\n      flushOperationsScheduled = true;\n      (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n        _RNGestureHandlerModule.default.flushOperations();\n        flushOperationsScheduled = false;\n      });\n    }\n  }\n});","lineCount":60,"map":[[9,2,2,0],[9,6,2,0,"_reactNative"],[9,18,2,0],[9,21,2,0,"require"],[9,28,2,0],[9,29,2,0,"_dependencyMap"],[9,43,2,0],[10,2,3,0],[10,6,3,0,"_handlersRegistry"],[10,23,3,0],[10,26,3,0,"require"],[10,33,3,0],[10,34,3,0,"_dependencyMap"],[10,48,3,0],[11,2,4,0],[11,6,4,0,"_utils"],[11,12,4,0],[11,15,4,0,"require"],[11,22,4,0],[11,23,4,0,"_dependencyMap"],[11,37,4,0],[12,2,5,0],[12,6,5,0,"_RNGestureHandlerModule"],[12,29,5,0],[12,32,5,0,"_interopRequireDefault"],[12,54,5,0],[12,55,5,0,"require"],[12,62,5,0],[12,63,5,0,"_dependencyMap"],[12,77,5,0],[13,2,6,0],[13,6,6,0,"_ghQueueMicrotask"],[13,23,6,0],[13,26,6,0,"require"],[13,33,6,0],[13,34,6,0,"_dependencyMap"],[13,48,6,0],[14,2,8,0],[14,11,8,9,"isConfigParam"],[14,24,8,22,"isConfigParam"],[14,25,8,23,"param"],[14,30,8,37],[14,32,8,39,"name"],[14,36,8,51],[14,38,8,53],[15,4,9,2],[16,4,10,2],[17,4,11,2],[17,11,12,4,"param"],[17,16,12,9],[17,21,12,14,"undefined"],[17,30,12,23],[17,35,13,5,"param"],[17,40,13,10],[17,45,13,15,"Object"],[17,51,13,21],[17,52,13,22,"param"],[17,57,13,27],[17,58,13,28],[17,62,14,6],[17,64,14,8],[17,76,14,20],[17,80,14,25,"param"],[17,85,14,58],[17,86,14,59],[17,87,14,60],[17,91,15,4,"name"],[17,95,15,8],[17,100,15,13],[17,122,15,35],[17,126,16,4,"name"],[17,130,16,8],[17,135,16,13],[17,151,16,29],[18,2,18,0],[19,2,20,7],[19,11,20,16,"filterConfig"],[19,23,20,28,"filterConfig"],[19,24,21,2,"props"],[19,29,21,32],[19,31,22,2,"validProps"],[19,41,22,22],[19,43,24,2],[20,4,24,2],[20,8,23,2,"defaults"],[20,16,23,35],[20,19,23,35,"arguments"],[20,28,23,35],[20,29,23,35,"length"],[20,35,23,35],[20,43,23,35,"arguments"],[20,52,23,35],[20,60,23,35,"undefined"],[20,69,23,35],[20,72,23,35,"arguments"],[20,81,23,35],[20,87,23,38],[20,88,23,39],[20,89,23,40],[21,4,25,2],[21,8,25,8,"filteredConfig"],[21,22,25,22],[21,25,25,25],[22,6,25,27],[22,9,25,30,"defaults"],[23,4,25,39],[23,5,25,40],[24,4,26,2],[24,9,26,7],[24,13,26,13,"key"],[24,16,26,16],[24,20,26,20,"validProps"],[24,30,26,30],[24,32,26,32],[25,6,27,4],[25,10,27,8,"value"],[25,15,27,13],[25,18,27,16,"props"],[25,23,27,21],[25,24,27,22,"key"],[25,27,27,25],[25,28,27,26],[26,6,28,4],[26,10,28,8,"isConfigParam"],[26,23,28,21],[26,24,28,22,"value"],[26,29,28,27],[26,31,28,29,"key"],[26,34,28,32],[26,35,28,33],[26,37,28,35],[27,8,29,6],[27,12,29,10,"key"],[27,15,29,13],[27,20,29,18],[27,42,29,40],[27,46,29,44,"key"],[27,49,29,47],[27,54,29,52],[27,63,29,61],[27,65,29,63],[28,10,30,8,"value"],[28,15,30,13],[28,18,30,16,"transformIntoHandlerTags"],[28,42,30,40],[28,43,30,41,"props"],[28,48,30,46],[28,49,30,47,"key"],[28,52,30,50],[28,53,30,51],[28,54,30,52],[29,8,31,6],[29,9,31,7],[29,15,31,13],[29,19,31,17,"key"],[29,22,31,20],[29,27,31,25],[29,36,31,34],[29,40,31,38],[29,47,31,45,"value"],[29,52,31,50],[29,57,31,55],[29,65,31,63],[29,67,31,65],[30,10,32,8,"value"],[30,15,32,13],[30,18,32,16],[31,12,32,18,"top"],[31,15,32,21],[31,17,32,23,"value"],[31,22,32,28],[32,12,32,30,"left"],[32,16,32,34],[32,18,32,36,"value"],[32,23,32,41],[33,12,32,43,"bottom"],[33,18,32,49],[33,20,32,51,"value"],[33,25,32,56],[34,12,32,58,"right"],[34,17,32,63],[34,19,32,65,"value"],[35,10,32,71],[35,11,32,72],[36,8,33,6],[37,8,34,6,"filteredConfig"],[37,22,34,20],[37,23,34,21,"key"],[37,26,34,24],[37,27,34,25],[37,30,34,28,"value"],[37,35,34,33],[38,6,35,4],[39,4,36,2],[40,4,37,2],[40,11,37,9,"filteredConfig"],[40,25,37,23],[41,2,38,0],[42,2,39,0],[42,11,39,9,"transformIntoHandlerTags"],[42,35,39,33,"transformIntoHandlerTags"],[42,36,39,34,"handlerIDs"],[42,46,39,49],[42,48,39,51],[43,4,40,2,"handlerIDs"],[43,14,40,12],[43,17,40,15],[43,21,40,15,"toArray"],[43,35,40,22],[43,37,40,23,"handlerIDs"],[43,47,40,33],[43,48,40,34],[44,4,47,2],[45,4,48,2],[45,11,48,9,"handlerIDs"],[45,21,48,19],[45,22,49,5,"map"],[45,25,49,8],[45,26,50,7,"handlerID"],[45,35,50,21],[45,39,51,8,"handlerIDToTag"],[45,71,51,22],[45,72,51,23,"handlerID"],[45,81,51,32],[45,82,51,33],[45,86,51,37,"handlerID"],[45,95,51,46],[45,96,51,47,"current"],[45,103,51,54],[45,105,51,56,"handlerTag"],[45,115,51,66],[45,121,52,4],[45,122,52,5],[45,123,53,5,"filter"],[45,129,53,11],[45,130,53,13,"handlerTag"],[45,140,53,31],[45,144,53,36,"handlerTag"],[45,154,53,46],[45,157,53,49],[45,158,53,50],[45,159,53,51],[46,2,54,0],[47,2,56,7],[47,11,56,16,"findNodeHandle"],[47,25,56,30,"findNodeHandle"],[47,26,57,2,"node"],[47,30,57,77],[47,32,58,73],[48,4,62,2],[48,11,62,9],[48,15,62,9,"findNodeHandleRN"],[48,42,62,25],[48,44,62,26,"node"],[48,48,62,30],[48,49,62,31],[49,2,63,0],[50,2,64,0],[50,6,64,4,"flushOperationsScheduled"],[50,30,64,28],[50,33,64,31],[50,38,64,36],[51,2,66,7],[51,11,66,16,"scheduleFlushOperations"],[51,34,66,39,"scheduleFlushOperations"],[51,35,66,39],[51,37,66,42],[52,4,67,2],[52,8,67,6],[52,9,67,7,"flushOperationsScheduled"],[52,33,67,31],[52,35,67,33],[53,6,68,4,"flushOperationsScheduled"],[53,30,68,28],[53,33,68,31],[53,37,68,35],[54,6,69,4],[54,10,69,4,"ghQueueMicrotask"],[54,44,69,20],[54,46,69,21],[54,52,69,27],[55,8,70,6,"RNGestureHandlerModule"],[55,39,70,28],[55,40,70,29,"flushOperations"],[55,55,70,44],[55,56,70,45],[55,57,70,46],[56,8,72,6,"flushOperationsScheduled"],[56,32,72,30],[56,35,72,33],[56,40,72,38],[57,6,73,4],[57,7,73,5],[57,8,73,6],[58,4,74,2],[59,2,75,0],[60,0,75,1],[60,3]],"functionMap":{"names":["<global>","isConfigParam","filterConfig","transformIntoHandlerTags","handlerIDs.map$argument_0","handlerIDs.map.filter$argument_0","findNodeHandle","scheduleFlushOperations","ghQueueMicrotask$argument_0"],"mappings":"AAA;ACO;CDU;OEE;CFkB;AGC;WCK,0CD;cEC,uBF;MCK;wEDC;YEE,sCF;CHC;OME;CNO;OOG;qBCG;KDI;CPE"}},"type":"js/module"}]}