{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1156,"column":0,"index":42982}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1156,"column":0,"index":42982}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"@babel/runtime/helpers/assertThisInitialized","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1156,"column":0,"index":42982}}],"key":"H9L2+uCkw7MxkVOB2fLNQJ+FYts="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1156,"column":0,"index":42982}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1156,"column":0,"index":42982}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1156,"column":0,"index":42982}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1156,"column":0,"index":42982}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1156,"column":0,"index":42982}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@firebase/component","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":68,"index":68}}],"key":"YiqCXfmpUmXL2y7xTPTj9/PFPYg="}},{"name":"@firebase/logger","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":69},"end":{"line":2,"column":91,"index":160}}],"key":"ZYsX9nlr38OA1SirG2iNW8KjJAk="}},{"name":"@firebase/util","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":161},"end":{"line":3,"column":197,"index":358}}],"key":"E1TkBF0412Fgmp0WXPMAjAx5mio="}},{"name":"idb","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":0,"index":407},"end":{"line":5,"column":29,"index":436}}],"key":"ovu47OF+XFM5VdlH6IS6ElYaKXw="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"FirebaseError\", {\n    enumerable: true,\n    get: function () {\n      return _util.FirebaseError;\n    }\n  });\n  exports._DEFAULT_ENTRY_NAME = exports.SDK_VERSION = undefined;\n  exports._addComponent = _addComponent;\n  exports._addOrOverwriteComponent = _addOrOverwriteComponent;\n  exports._apps = undefined;\n  exports._clearComponents = _clearComponents;\n  exports._components = undefined;\n  exports._getProvider = _getProvider;\n  exports._isFirebaseApp = _isFirebaseApp;\n  exports._isFirebaseServerApp = _isFirebaseServerApp;\n  exports._registerComponent = _registerComponent;\n  exports._removeServiceInstance = _removeServiceInstance;\n  exports._serverApps = undefined;\n  exports.deleteApp = deleteApp;\n  exports.getApp = getApp;\n  exports.getApps = getApps;\n  exports.initializeApp = initializeApp;\n  exports.initializeServerApp = initializeServerApp;\n  exports.onLog = onLog;\n  exports.registerVersion = registerVersion;\n  exports.setLogLevel = setLogLevel;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _assertThisInitialized2 = _interopRequireDefault(require(_dependencyMap[2]));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(_dependencyMap[3]));\n  var _getPrototypeOf2 = _interopRequireDefault(require(_dependencyMap[4]));\n  var _inherits2 = _interopRequireDefault(require(_dependencyMap[5]));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[6]));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[7]));\n  var _component = require(_dependencyMap[8]);\n  var _logger = require(_dependencyMap[9]);\n  var _util = require(_dependencyMap[10]);\n  var _idb = require(_dependencyMap[11]);\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); }\n  /**\r\n   * @license\r\n   * Copyright 2019 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var PlatformLoggerServiceImpl = /*#__PURE__*/function () {\n    function PlatformLoggerServiceImpl(container) {\n      (0, _classCallCheck2.default)(this, PlatformLoggerServiceImpl);\n      this.container = container;\n    }\n    // In initial implementation, this will be called by installations on\n    // auth token refresh, and installations will send this string.\n    return (0, _createClass2.default)(PlatformLoggerServiceImpl, [{\n      key: \"getPlatformInfoString\",\n      value: function getPlatformInfoString() {\n        var providers = this.container.getProviders();\n        // Loop through providers and get library/version pairs from any that are\n        // version components.\n        return providers.map(provider => {\n          if (isVersionServiceProvider(provider)) {\n            var service = provider.getImmediate();\n            return `${service.library}/${service.version}`;\n          } else {\n            return null;\n          }\n        }).filter(logString => logString).join(' ');\n      }\n    }]);\n  }();\n  /**\r\n   *\r\n   * @param provider check if this provider provides a VersionService\r\n   *\r\n   * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n   * provides VersionService. The provider is not necessarily a 'app-version'\r\n   * provider.\r\n   */\n  function isVersionServiceProvider(provider) {\n    var component = provider.getComponent();\n    return (component === null || component === undefined ? undefined : component.type) === \"VERSION\" /* ComponentType.VERSION */;\n  }\n  var name$q = \"@firebase/app\";\n  var version$1 = \"0.10.13\";\n\n  /**\r\n   * @license\r\n   * Copyright 2019 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var logger = new _logger.Logger('@firebase/app');\n  var name$p = \"@firebase/app-compat\";\n  var name$o = \"@firebase/analytics-compat\";\n  var name$n = \"@firebase/analytics\";\n  var name$m = \"@firebase/app-check-compat\";\n  var name$l = \"@firebase/app-check\";\n  var name$k = \"@firebase/auth\";\n  var name$j = \"@firebase/auth-compat\";\n  var name$i = \"@firebase/database\";\n  var name$h = \"@firebase/data-connect\";\n  var name$g = \"@firebase/database-compat\";\n  var name$f = \"@firebase/functions\";\n  var name$e = \"@firebase/functions-compat\";\n  var name$d = \"@firebase/installations\";\n  var name$c = \"@firebase/installations-compat\";\n  var name$b = \"@firebase/messaging\";\n  var name$a = \"@firebase/messaging-compat\";\n  var name$9 = \"@firebase/performance\";\n  var name$8 = \"@firebase/performance-compat\";\n  var name$7 = \"@firebase/remote-config\";\n  var name$6 = \"@firebase/remote-config-compat\";\n  var name$5 = \"@firebase/storage\";\n  var name$4 = \"@firebase/storage-compat\";\n  var name$3 = \"@firebase/firestore\";\n  var name$2 = \"@firebase/vertexai-preview\";\n  var name$1 = \"@firebase/firestore-compat\";\n  var name = \"firebase\";\n  var version = \"10.14.1\";\n\n  /**\r\n   * @license\r\n   * Copyright 2019 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * The default app name\r\n   *\r\n   * @internal\r\n   */\n  var DEFAULT_ENTRY_NAME = exports._DEFAULT_ENTRY_NAME = '[DEFAULT]';\n  var PLATFORM_LOG_STRING = {\n    [name$q]: 'fire-core',\n    [name$p]: 'fire-core-compat',\n    [name$n]: 'fire-analytics',\n    [name$o]: 'fire-analytics-compat',\n    [name$l]: 'fire-app-check',\n    [name$m]: 'fire-app-check-compat',\n    [name$k]: 'fire-auth',\n    [name$j]: 'fire-auth-compat',\n    [name$i]: 'fire-rtdb',\n    [name$h]: 'fire-data-connect',\n    [name$g]: 'fire-rtdb-compat',\n    [name$f]: 'fire-fn',\n    [name$e]: 'fire-fn-compat',\n    [name$d]: 'fire-iid',\n    [name$c]: 'fire-iid-compat',\n    [name$b]: 'fire-fcm',\n    [name$a]: 'fire-fcm-compat',\n    [name$9]: 'fire-perf',\n    [name$8]: 'fire-perf-compat',\n    [name$7]: 'fire-rc',\n    [name$6]: 'fire-rc-compat',\n    [name$5]: 'fire-gcs',\n    [name$4]: 'fire-gcs-compat',\n    [name$3]: 'fire-fst',\n    [name$1]: 'fire-fst-compat',\n    [name$2]: 'fire-vertex',\n    'fire-js': 'fire-js',\n    [name]: 'fire-js-all'\n  };\n\n  /**\r\n   * @license\r\n   * Copyright 2019 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * @internal\r\n   */\n  var _apps = exports._apps = new Map();\n  /**\r\n   * @internal\r\n   */\n  var _serverApps = exports._serverApps = new Map();\n  /**\r\n   * Registered components.\r\n   *\r\n   * @internal\r\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var _components = exports._components = new Map();\n  /**\r\n   * @param component - the component being added to this app's container\r\n   *\r\n   * @internal\r\n   */\n  function _addComponent(app, component) {\n    try {\n      app.container.addComponent(component);\n    } catch (e) {\n      logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\n    }\n  }\n  /**\r\n   *\r\n   * @internal\r\n   */\n  function _addOrOverwriteComponent(app, component) {\n    app.container.addOrOverwriteComponent(component);\n  }\n  /**\r\n   *\r\n   * @param component - the component to register\r\n   * @returns whether or not the component is registered successfully\r\n   *\r\n   * @internal\r\n   */\n  function _registerComponent(component) {\n    var componentName = component.name;\n    if (_components.has(componentName)) {\n      logger.debug(`There were multiple attempts to register component ${componentName}.`);\n      return false;\n    }\n    _components.set(componentName, component);\n    // add the component to existing app instances\n    for (var app of _apps.values()) {\n      _addComponent(app, component);\n    }\n    for (var serverApp of _serverApps.values()) {\n      _addComponent(serverApp, component);\n    }\n    return true;\n  }\n  /**\r\n   *\r\n   * @param app - FirebaseApp instance\r\n   * @param name - service name\r\n   *\r\n   * @returns the provider for the service with the matching name\r\n   *\r\n   * @internal\r\n   */\n  function _getProvider(app, name) {\n    var heartbeatController = app.container.getProvider('heartbeat').getImmediate({\n      optional: true\n    });\n    if (heartbeatController) {\n      void heartbeatController.triggerHeartbeat();\n    }\n    return app.container.getProvider(name);\n  }\n  /**\r\n   *\r\n   * @param app - FirebaseApp instance\r\n   * @param name - service name\r\n   * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n   *\r\n   * @internal\r\n   */\n  function _removeServiceInstance(app, name) {\n    var instanceIdentifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_ENTRY_NAME;\n    _getProvider(app, name).clearInstance(instanceIdentifier);\n  }\n  /**\r\n   *\r\n   * @param obj - an object of type FirebaseApp or FirebaseOptions.\r\n   *\r\n   * @returns true if the provide object is of type FirebaseApp.\r\n   *\r\n   * @internal\r\n   */\n  function _isFirebaseApp(obj) {\n    return obj.options !== undefined;\n  }\n  /**\r\n   *\r\n   * @param obj - an object of type FirebaseApp.\r\n   *\r\n   * @returns true if the provided object is of type FirebaseServerAppImpl.\r\n   *\r\n   * @internal\r\n   */\n  function _isFirebaseServerApp(obj) {\n    return obj.settings !== undefined;\n  }\n  /**\r\n   * Test only\r\n   *\r\n   * @internal\r\n   */\n  function _clearComponents() {\n    _components.clear();\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2019 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var ERRORS = {\n    [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - call initializeApp() first\",\n    [\"bad-app-name\" /* AppError.BAD_APP_NAME */]: \"Illegal App name: '{$appName}'\",\n    [\"duplicate-app\" /* AppError.DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\n    [\"app-deleted\" /* AppError.APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\n    [\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */]: 'Firebase Server App has been deleted',\n    [\"no-options\" /* AppError.NO_OPTIONS */]: 'Need to provide options, when not being deployed to hosting via source.',\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: \"firebase.{$appName}() takes either no argument or a Firebase App instance.\",\n    [\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.',\n    [\"idb-open\" /* AppError.IDB_OPEN */]: 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"idb-get\" /* AppError.IDB_GET */]: 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"idb-set\" /* AppError.IDB_WRITE */]: 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"idb-delete\" /* AppError.IDB_DELETE */]: 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */]: 'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',\n    [\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */]: 'FirebaseServerApp is not for use in browser environments.'\n  };\n  var ERROR_FACTORY = new _util.ErrorFactory('app', 'Firebase', ERRORS);\n\n  /**\r\n   * @license\r\n   * Copyright 2019 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var FirebaseAppImpl = /*#__PURE__*/function () {\n    function FirebaseAppImpl(options, config, container) {\n      (0, _classCallCheck2.default)(this, FirebaseAppImpl);\n      this._isDeleted = false;\n      this._options = Object.assign({}, options);\n      this._config = Object.assign({}, config);\n      this._name = config.name;\n      this._automaticDataCollectionEnabled = config.automaticDataCollectionEnabled;\n      this._container = container;\n      this.container.addComponent(new _component.Component('app', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\n    }\n    return (0, _createClass2.default)(FirebaseAppImpl, [{\n      key: \"automaticDataCollectionEnabled\",\n      get: function () {\n        this.checkDestroyed();\n        return this._automaticDataCollectionEnabled;\n      },\n      set: function (val) {\n        this.checkDestroyed();\n        this._automaticDataCollectionEnabled = val;\n      }\n    }, {\n      key: \"name\",\n      get: function () {\n        this.checkDestroyed();\n        return this._name;\n      }\n    }, {\n      key: \"options\",\n      get: function () {\n        this.checkDestroyed();\n        return this._options;\n      }\n    }, {\n      key: \"config\",\n      get: function () {\n        this.checkDestroyed();\n        return this._config;\n      }\n    }, {\n      key: \"container\",\n      get: function () {\n        return this._container;\n      }\n    }, {\n      key: \"isDeleted\",\n      get: function () {\n        return this._isDeleted;\n      },\n      set: function (val) {\n        this._isDeleted = val;\n      }\n      /**\r\n       * This function will throw an Error if the App has already been deleted -\r\n       * use before performing API actions on the App.\r\n       */\n    }, {\n      key: \"checkDestroyed\",\n      value: function checkDestroyed() {\n        if (this.isDeleted) {\n          throw ERROR_FACTORY.create(\"app-deleted\" /* AppError.APP_DELETED */, {\n            appName: this._name\n          });\n        }\n      }\n    }]);\n  }();\n  /**\r\n   * @license\r\n   * Copyright 2023 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var FirebaseServerAppImpl = /*#__PURE__*/function (_FirebaseAppImpl) {\n    function FirebaseServerAppImpl(options, serverConfig, name, container) {\n      var _this;\n      (0, _classCallCheck2.default)(this, FirebaseServerAppImpl);\n      // Build configuration parameters for the FirebaseAppImpl base class.\n      var automaticDataCollectionEnabled = serverConfig.automaticDataCollectionEnabled !== undefined ? serverConfig.automaticDataCollectionEnabled : false;\n      // Create the FirebaseAppSettings object for the FirebaseAppImp constructor.\n      var config = {\n        name,\n        automaticDataCollectionEnabled\n      };\n      if (options.apiKey !== undefined) {\n        // Construct the parent FirebaseAppImp object.\n        _this = _callSuper(this, FirebaseServerAppImpl, [options, config, container]);\n      } else {\n        var appImpl = options;\n        _this = _callSuper(this, FirebaseServerAppImpl, [appImpl.options, config, container]);\n      }\n      // Now construct the data for the FirebaseServerAppImpl.\n      _this._serverConfig = Object.assign({\n        automaticDataCollectionEnabled\n      }, serverConfig);\n      _this._finalizationRegistry = null;\n      if (typeof FinalizationRegistry !== 'undefined') {\n        _this._finalizationRegistry = new FinalizationRegistry(() => {\n          _this.automaticCleanup();\n        });\n      }\n      _this._refCount = 0;\n      _this.incRefCount(_this._serverConfig.releaseOnDeref);\n      // Do not retain a hard reference to the dref object, otherwise the FinalizationRegistry\n      // will never trigger.\n      _this._serverConfig.releaseOnDeref = undefined;\n      serverConfig.releaseOnDeref = undefined;\n      registerVersion(name$q, version$1, 'serverapp');\n      return (0, _assertThisInitialized2.default)(_this);\n    }\n    (0, _inherits2.default)(FirebaseServerAppImpl, _FirebaseAppImpl);\n    return (0, _createClass2.default)(FirebaseServerAppImpl, [{\n      key: \"toJSON\",\n      value: function toJSON() {\n        return undefined;\n      }\n    }, {\n      key: \"refCount\",\n      get: function () {\n        return this._refCount;\n      }\n      // Increment the reference count of this server app. If an object is provided, register it\n      // with the finalization registry.\n    }, {\n      key: \"incRefCount\",\n      value: function incRefCount(obj) {\n        if (this.isDeleted) {\n          return;\n        }\n        this._refCount++;\n        if (obj !== undefined && this._finalizationRegistry !== null) {\n          this._finalizationRegistry.register(obj, this);\n        }\n      }\n      // Decrement the reference count.\n    }, {\n      key: \"decRefCount\",\n      value: function decRefCount() {\n        if (this.isDeleted) {\n          return 0;\n        }\n        return --this._refCount;\n      }\n      // Invoked by the FinalizationRegistry callback to note that this app should go through its\n      // reference counts and delete itself if no reference count remain. The coordinating logic that\n      // handles this is in deleteApp(...).\n    }, {\n      key: \"automaticCleanup\",\n      value: function automaticCleanup() {\n        void deleteApp(this);\n      }\n    }, {\n      key: \"settings\",\n      get: function () {\n        this.checkDestroyed();\n        return this._serverConfig;\n      }\n      /**\r\n       * This function will throw an Error if the App has already been deleted -\r\n       * use before performing API actions on the App.\r\n       */\n    }, {\n      key: \"checkDestroyed\",\n      value: function checkDestroyed() {\n        if (this.isDeleted) {\n          throw ERROR_FACTORY.create(\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */);\n        }\n      }\n    }]);\n  }(FirebaseAppImpl);\n  /**\r\n   * @license\r\n   * Copyright 2019 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  /**\r\n   * The current SDK version.\r\n   *\r\n   * @public\r\n   */\n  var SDK_VERSION = exports.SDK_VERSION = version;\n  function initializeApp(_options) {\n    var rawConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var options = _options;\n    if (typeof rawConfig !== 'object') {\n      var _name = rawConfig;\n      rawConfig = {\n        name: _name\n      };\n    }\n    var config = Object.assign({\n      name: DEFAULT_ENTRY_NAME,\n      automaticDataCollectionEnabled: false\n    }, rawConfig);\n    var name = config.name;\n    if (typeof name !== 'string' || !name) {\n      throw ERROR_FACTORY.create(\"bad-app-name\" /* AppError.BAD_APP_NAME */, {\n        appName: String(name)\n      });\n    }\n    options || (options = (0, _util.getDefaultAppConfig)());\n    if (!options) {\n      throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\n    }\n    var existingApp = _apps.get(name);\n    if (existingApp) {\n      // return the existing app if options and config deep equal the ones in the existing app.\n      if ((0, _util.deepEqual)(options, existingApp.options) && (0, _util.deepEqual)(config, existingApp.config)) {\n        return existingApp;\n      } else {\n        throw ERROR_FACTORY.create(\"duplicate-app\" /* AppError.DUPLICATE_APP */, {\n          appName: name\n        });\n      }\n    }\n    var container = new _component.ComponentContainer(name);\n    for (var component of _components.values()) {\n      container.addComponent(component);\n    }\n    var newApp = new FirebaseAppImpl(options, config, container);\n    _apps.set(name, newApp);\n    return newApp;\n  }\n  function initializeServerApp(_options, _serverAppConfig) {\n    if ((0, _util.isBrowser)() && !(0, _util.isWebWorker)()) {\n      // FirebaseServerApp isn't designed to be run in browsers.\n      throw ERROR_FACTORY.create(\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */);\n    }\n    if (_serverAppConfig.automaticDataCollectionEnabled === undefined) {\n      _serverAppConfig.automaticDataCollectionEnabled = false;\n    }\n    var appOptions;\n    if (_isFirebaseApp(_options)) {\n      appOptions = _options.options;\n    } else {\n      appOptions = _options;\n    }\n    // Build an app name based on a hash of the configuration options.\n    var nameObj = Object.assign(Object.assign({}, _serverAppConfig), appOptions);\n    // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\n    // construction of FirebaseServerApp instances. For example, if the object is the request headers.\n    if (nameObj.releaseOnDeref !== undefined) {\n      delete nameObj.releaseOnDeref;\n    }\n    var hashCode = s => {\n      return [...s].reduce((hash, c) => Math.imul(31, hash) + c.charCodeAt(0) | 0, 0);\n    };\n    if (_serverAppConfig.releaseOnDeref !== undefined) {\n      if (typeof FinalizationRegistry === 'undefined') {\n        throw ERROR_FACTORY.create(\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */, {});\n      }\n    }\n    var nameString = '' + hashCode(JSON.stringify(nameObj));\n    var existingApp = _serverApps.get(nameString);\n    if (existingApp) {\n      existingApp.incRefCount(_serverAppConfig.releaseOnDeref);\n      return existingApp;\n    }\n    var container = new _component.ComponentContainer(nameString);\n    for (var component of _components.values()) {\n      container.addComponent(component);\n    }\n    var newApp = new FirebaseServerAppImpl(appOptions, _serverAppConfig, nameString, container);\n    _serverApps.set(nameString, newApp);\n    return newApp;\n  }\n  /**\r\n   * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n   *\r\n   * When called with no arguments, the default app is returned. When an app name\r\n   * is provided, the app corresponding to that name is returned.\r\n   *\r\n   * An exception is thrown if the app being retrieved has not yet been\r\n   * initialized.\r\n   *\r\n   * @example\r\n   * ```javascript\r\n   * // Return the default app\r\n   * const app = getApp();\r\n   * ```\r\n   *\r\n   * @example\r\n   * ```javascript\r\n   * // Return a named app\r\n   * const otherApp = getApp(\"otherApp\");\r\n   * ```\r\n   *\r\n   * @param name - Optional name of the app to return. If no name is\r\n   *   provided, the default is `\"[DEFAULT]\"`.\r\n   *\r\n   * @returns The app corresponding to the provided app name.\r\n   *   If no app name is provided, the default app is returned.\r\n   *\r\n   * @public\r\n   */\n  function getApp() {\n    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ENTRY_NAME;\n    var app = _apps.get(name);\n    if (!app && name === DEFAULT_ENTRY_NAME && (0, _util.getDefaultAppConfig)()) {\n      return initializeApp();\n    }\n    if (!app) {\n      throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, {\n        appName: name\n      });\n    }\n    return app;\n  }\n  /**\r\n   * A (read-only) array of all initialized apps.\r\n   * @public\r\n   */\n  function getApps() {\n    return Array.from(_apps.values());\n  }\n  /**\r\n   * Renders this app unusable and frees the resources of all associated\r\n   * services.\r\n   *\r\n   * @example\r\n   * ```javascript\r\n   * deleteApp(app)\r\n   *   .then(function() {\r\n   *     console.log(\"App deleted successfully\");\r\n   *   })\r\n   *   .catch(function(error) {\r\n   *     console.log(\"Error deleting app:\", error);\r\n   *   });\r\n   * ```\r\n   *\r\n   * @public\r\n   */\n  function deleteApp(_x) {\n    return _deleteApp.apply(this, arguments);\n  }\n  /**\r\n   * Registers a library's name and version for platform logging purposes.\r\n   * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n   * @param version - Current version of that library.\r\n   * @param variant - Bundle variant, e.g., node, rn, etc.\r\n   *\r\n   * @public\r\n   */\n  function _deleteApp() {\n    _deleteApp = (0, _asyncToGenerator2.default)(function* (app) {\n      var cleanupProviders = false;\n      var name = app.name;\n      if (_apps.has(name)) {\n        cleanupProviders = true;\n        _apps.delete(name);\n      } else if (_serverApps.has(name)) {\n        var firebaseServerApp = app;\n        if (firebaseServerApp.decRefCount() <= 0) {\n          _serverApps.delete(name);\n          cleanupProviders = true;\n        }\n      }\n      if (cleanupProviders) {\n        yield Promise.all(app.container.getProviders().map(provider => provider.delete()));\n        app.isDeleted = true;\n      }\n    });\n    return _deleteApp.apply(this, arguments);\n  }\n  function registerVersion(libraryKeyOrName, version, variant) {\n    var _a;\n    // TODO: We can use this check to whitelist strings when/if we set up\n    // a good whitelist system.\n    var library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== undefined ? _a : libraryKeyOrName;\n    if (variant) {\n      library += `-${variant}`;\n    }\n    var libraryMismatch = library.match(/\\s|\\//);\n    var versionMismatch = version.match(/\\s|\\//);\n    if (libraryMismatch || versionMismatch) {\n      var warning = [`Unable to register library \"${library}\" with version \"${version}\":`];\n      if (libraryMismatch) {\n        warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\n      }\n      if (libraryMismatch && versionMismatch) {\n        warning.push('and');\n      }\n      if (versionMismatch) {\n        warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\n      }\n      logger.warn(warning.join(' '));\n      return;\n    }\n    _registerComponent(new _component.Component(`${library}-version`, () => ({\n      library,\n      version\n    }), \"VERSION\" /* ComponentType.VERSION */));\n  }\n  /**\r\n   * Sets log handler for all Firebase SDKs.\r\n   * @param logCallback - An optional custom log handler that executes user code whenever\r\n   * the Firebase SDK makes a logging call.\r\n   *\r\n   * @public\r\n   */\n  function onLog(logCallback, options) {\n    if (logCallback !== null && typeof logCallback !== 'function') {\n      throw ERROR_FACTORY.create(\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */);\n    }\n    (0, _logger.setUserLogHandler)(logCallback, options);\n  }\n  /**\r\n   * Sets log level for all Firebase SDKs.\r\n   *\r\n   * All of the log types above the current log level are captured (i.e. if\r\n   * you set the log level to `info`, errors are logged, but `debug` and\r\n   * `verbose` logs are not).\r\n   *\r\n   * @public\r\n   */\n  function setLogLevel(logLevel) {\n    (0, _logger.setLogLevel)(logLevel);\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2021 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var DB_NAME = 'firebase-heartbeat-database';\n  var DB_VERSION = 1;\n  var STORE_NAME = 'firebase-heartbeat-store';\n  var dbPromise = null;\n  function getDbPromise() {\n    if (!dbPromise) {\n      dbPromise = (0, _idb.openDB)(DB_NAME, DB_VERSION, {\n        upgrade: (db, oldVersion) => {\n          // We don't use 'break' in this switch statement, the fall-through\n          // behavior is what we want, because if there are multiple versions between\n          // the old version and the current version, we want ALL the migrations\n          // that correspond to those versions to run, not only the last one.\n          // eslint-disable-next-line default-case\n          switch (oldVersion) {\n            case 0:\n              try {\n                db.createObjectStore(STORE_NAME);\n              } catch (e) {\n                // Safari/iOS browsers throw occasional exceptions on\n                // db.createObjectStore() that may be a bug. Avoid blocking\n                // the rest of the app functionality.\n                console.warn(e);\n              }\n          }\n        }\n      }).catch(e => {\n        throw ERROR_FACTORY.create(\"idb-open\" /* AppError.IDB_OPEN */, {\n          originalErrorMessage: e.message\n        });\n      });\n    }\n    return dbPromise;\n  }\n  function readHeartbeatsFromIndexedDB(_x2) {\n    return _readHeartbeatsFromIndexedDB.apply(this, arguments);\n  }\n  function _readHeartbeatsFromIndexedDB() {\n    _readHeartbeatsFromIndexedDB = (0, _asyncToGenerator2.default)(function* (app) {\n      try {\n        var db = yield getDbPromise();\n        var tx = db.transaction(STORE_NAME);\n        var result = yield tx.objectStore(STORE_NAME).get(computeKey(app));\n        // We already have the value but tx.done can throw,\n        // so we need to await it here to catch errors\n        yield tx.done;\n        return result;\n      } catch (e) {\n        if (e instanceof _util.FirebaseError) {\n          logger.warn(e.message);\n        } else {\n          var idbGetError = ERROR_FACTORY.create(\"idb-get\" /* AppError.IDB_GET */, {\n            originalErrorMessage: e === null || e === undefined ? undefined : e.message\n          });\n          logger.warn(idbGetError.message);\n        }\n      }\n    });\n    return _readHeartbeatsFromIndexedDB.apply(this, arguments);\n  }\n  function writeHeartbeatsToIndexedDB(_x3, _x4) {\n    return _writeHeartbeatsToIndexedDB.apply(this, arguments);\n  }\n  function _writeHeartbeatsToIndexedDB() {\n    _writeHeartbeatsToIndexedDB = (0, _asyncToGenerator2.default)(function* (app, heartbeatObject) {\n      try {\n        var db = yield getDbPromise();\n        var tx = db.transaction(STORE_NAME, 'readwrite');\n        var objectStore = tx.objectStore(STORE_NAME);\n        yield objectStore.put(heartbeatObject, computeKey(app));\n        yield tx.done;\n      } catch (e) {\n        if (e instanceof _util.FirebaseError) {\n          logger.warn(e.message);\n        } else {\n          var idbGetError = ERROR_FACTORY.create(\"idb-set\" /* AppError.IDB_WRITE */, {\n            originalErrorMessage: e === null || e === undefined ? undefined : e.message\n          });\n          logger.warn(idbGetError.message);\n        }\n      }\n    });\n    return _writeHeartbeatsToIndexedDB.apply(this, arguments);\n  }\n  function computeKey(app) {\n    return `${app.name}!${app.options.appId}`;\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2021 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  var MAX_HEADER_BYTES = 1024;\n  // 30 days\n  var STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 2592000000;\n  var HeartbeatServiceImpl = /*#__PURE__*/function () {\n    function HeartbeatServiceImpl(container) {\n      (0, _classCallCheck2.default)(this, HeartbeatServiceImpl);\n      this.container = container;\n      /**\r\n       * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\r\n       * the header string.\r\n       * Stores one record per date. This will be consolidated into the standard\r\n       * format of one record per user agent string before being sent as a header.\r\n       * Populated from indexedDB when the controller is instantiated and should\r\n       * be kept in sync with indexedDB.\r\n       * Leave public for easier testing.\r\n       */\n      this._heartbeatsCache = null;\n      var app = this.container.getProvider('app').getImmediate();\n      this._storage = new HeartbeatStorageImpl(app);\n      this._heartbeatsCachePromise = this._storage.read().then(result => {\n        this._heartbeatsCache = result;\n        return result;\n      });\n    }\n    /**\r\n     * Called to report a heartbeat. The function will generate\r\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\r\n     * to IndexedDB.\r\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\r\n     * already logged, subsequent calls to this function in the same day will be ignored.\r\n     */\n    return (0, _createClass2.default)(HeartbeatServiceImpl, [{\n      key: \"triggerHeartbeat\",\n      value: (function () {\n        var _triggerHeartbeat = (0, _asyncToGenerator2.default)(function* () {\n          var _a, _b;\n          try {\n            var platformLogger = this.container.getProvider('platform-logger').getImmediate();\n            // This is the \"Firebase user agent\" string from the platform logger\n            // service, not the browser user agent.\n            var agent = platformLogger.getPlatformInfoString();\n            var date = getUTCDateString();\n            if (((_a = this._heartbeatsCache) === null || _a === undefined ? undefined : _a.heartbeats) == null) {\n              this._heartbeatsCache = yield this._heartbeatsCachePromise;\n              // If we failed to construct a heartbeats cache, then return immediately.\n              if (((_b = this._heartbeatsCache) === null || _b === undefined ? undefined : _b.heartbeats) == null) {\n                return;\n              }\n            }\n            // Do not store a heartbeat if one is already stored for this day\n            // or if a header has already been sent today.\n            if (this._heartbeatsCache.lastSentHeartbeatDate === date || this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\n              return;\n            } else {\n              // There is no entry for this date. Create one.\n              this._heartbeatsCache.heartbeats.push({\n                date,\n                agent\n              });\n            }\n            // Remove entries older than 30 days.\n            this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat => {\n              var hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n              var now = Date.now();\n              return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n            });\n            return this._storage.overwrite(this._heartbeatsCache);\n          } catch (e) {\n            logger.warn(e);\n          }\n        });\n        function triggerHeartbeat() {\n          return _triggerHeartbeat.apply(this, arguments);\n        }\n        return triggerHeartbeat;\n      }()\n      /**\r\n       * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\r\n       * It also clears all heartbeats from memory as well as in IndexedDB.\r\n       *\r\n       * NOTE: Consuming product SDKs should not send the header if this method\r\n       * returns an empty string.\r\n       */\n      )\n    }, {\n      key: \"getHeartbeatsHeader\",\n      value: (function () {\n        var _getHeartbeatsHeader = (0, _asyncToGenerator2.default)(function* () {\n          var _a;\n          try {\n            if (this._heartbeatsCache === null) {\n              yield this._heartbeatsCachePromise;\n            }\n            // If it's still null or the array is empty, there is no data to send.\n            if (((_a = this._heartbeatsCache) === null || _a === undefined ? undefined : _a.heartbeats) == null || this._heartbeatsCache.heartbeats.length === 0) {\n              return '';\n            }\n            var date = getUTCDateString();\n            // Extract as many heartbeats from the cache as will fit under the size limit.\n            var _extractHeartbeatsFor = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats),\n              heartbeatsToSend = _extractHeartbeatsFor.heartbeatsToSend,\n              unsentEntries = _extractHeartbeatsFor.unsentEntries;\n            var headerString = (0, _util.base64urlEncodeWithoutPadding)(JSON.stringify({\n              version: 2,\n              heartbeats: heartbeatsToSend\n            }));\n            // Store last sent date to prevent another being logged/sent for the same day.\n            this._heartbeatsCache.lastSentHeartbeatDate = date;\n            if (unsentEntries.length > 0) {\n              // Store any unsent entries if they exist.\n              this._heartbeatsCache.heartbeats = unsentEntries;\n              // This seems more likely than emptying the array (below) to lead to some odd state\n              // since the cache isn't empty and this will be called again on the next request,\n              // and is probably safest if we await it.\n              yield this._storage.overwrite(this._heartbeatsCache);\n            } else {\n              this._heartbeatsCache.heartbeats = [];\n              // Do not wait for this, to reduce latency.\n              void this._storage.overwrite(this._heartbeatsCache);\n            }\n            return headerString;\n          } catch (e) {\n            logger.warn(e);\n            return '';\n          }\n        });\n        function getHeartbeatsHeader() {\n          return _getHeartbeatsHeader.apply(this, arguments);\n        }\n        return getHeartbeatsHeader;\n      }())\n    }]);\n  }();\n  function getUTCDateString() {\n    var today = new Date();\n    // Returns date format 'YYYY-MM-DD'\n    return today.toISOString().substring(0, 10);\n  }\n  function extractHeartbeatsForHeader(heartbeatsCache) {\n    var maxSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : MAX_HEADER_BYTES;\n    // Heartbeats grouped by user agent in the standard format to be sent in\n    // the header.\n    var heartbeatsToSend = [];\n    // Single date format heartbeats that are not sent.\n    var unsentEntries = heartbeatsCache.slice();\n    var _loop = function (singleDateHeartbeat) {\n        // Look for an existing entry with the same user agent.\n        var heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\n        if (!heartbeatEntry) {\n          // If no entry for this user agent exists, create one.\n          heartbeatsToSend.push({\n            agent: singleDateHeartbeat.agent,\n            dates: [singleDateHeartbeat.date]\n          });\n          if (countBytes(heartbeatsToSend) > maxSize) {\n            // If the header would exceed max size, remove the added heartbeat\n            // entry and stop adding to the header.\n            heartbeatsToSend.pop();\n            return 0; // break\n          }\n        } else {\n          heartbeatEntry.dates.push(singleDateHeartbeat.date);\n          // If the header would exceed max size, remove the added date\n          // and stop adding to the header.\n          if (countBytes(heartbeatsToSend) > maxSize) {\n            heartbeatEntry.dates.pop();\n            return 0; // break\n          }\n        }\n        // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n        // quota and the loop breaks early.)\n        unsentEntries = unsentEntries.slice(1);\n      },\n      _ret;\n    for (var singleDateHeartbeat of heartbeatsCache) {\n      _ret = _loop(singleDateHeartbeat);\n      if (_ret === 0) break;\n    }\n    return {\n      heartbeatsToSend,\n      unsentEntries\n    };\n  }\n  var HeartbeatStorageImpl = /*#__PURE__*/function () {\n    function HeartbeatStorageImpl(app) {\n      (0, _classCallCheck2.default)(this, HeartbeatStorageImpl);\n      this.app = app;\n      this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n    }\n    return (0, _createClass2.default)(HeartbeatStorageImpl, [{\n      key: \"runIndexedDBEnvironmentCheck\",\n      value: function () {\n        var _runIndexedDBEnvironmentCheck = (0, _asyncToGenerator2.default)(function* () {\n          if (!(0, _util.isIndexedDBAvailable)()) {\n            return false;\n          } else {\n            return (0, _util.validateIndexedDBOpenable)().then(() => true).catch(() => false);\n          }\n        });\n        function runIndexedDBEnvironmentCheck() {\n          return _runIndexedDBEnvironmentCheck.apply(this, arguments);\n        }\n        return runIndexedDBEnvironmentCheck;\n      }()\n      /**\r\n       * Read all heartbeats.\r\n       */\n    }, {\n      key: \"read\",\n      value: (function () {\n        var _read = (0, _asyncToGenerator2.default)(function* () {\n          var canUseIndexedDB = yield this._canUseIndexedDBPromise;\n          if (!canUseIndexedDB) {\n            return {\n              heartbeats: []\n            };\n          } else {\n            var idbHeartbeatObject = yield readHeartbeatsFromIndexedDB(this.app);\n            if (idbHeartbeatObject === null || idbHeartbeatObject === undefined ? undefined : idbHeartbeatObject.heartbeats) {\n              return idbHeartbeatObject;\n            } else {\n              return {\n                heartbeats: []\n              };\n            }\n          }\n        });\n        function read() {\n          return _read.apply(this, arguments);\n        }\n        return read;\n      }() // overwrite the storage with the provided heartbeats\n      )\n    }, {\n      key: \"overwrite\",\n      value: function () {\n        var _overwrite = (0, _asyncToGenerator2.default)(function* (heartbeatsObject) {\n          var _a;\n          var canUseIndexedDB = yield this._canUseIndexedDBPromise;\n          if (!canUseIndexedDB) {\n            return;\n          } else {\n            var existingHeartbeatsObject = yield this.read();\n            return writeHeartbeatsToIndexedDB(this.app, {\n              lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== undefined ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\n              heartbeats: heartbeatsObject.heartbeats\n            });\n          }\n        });\n        function overwrite(_x5) {\n          return _overwrite.apply(this, arguments);\n        }\n        return overwrite;\n      }() // add heartbeats\n    }, {\n      key: \"add\",\n      value: function () {\n        var _add = (0, _asyncToGenerator2.default)(function* (heartbeatsObject) {\n          var _a;\n          var canUseIndexedDB = yield this._canUseIndexedDBPromise;\n          if (!canUseIndexedDB) {\n            return;\n          } else {\n            var existingHeartbeatsObject = yield this.read();\n            return writeHeartbeatsToIndexedDB(this.app, {\n              lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== undefined ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\n              heartbeats: [...existingHeartbeatsObject.heartbeats, ...heartbeatsObject.heartbeats]\n            });\n          }\n        });\n        function add(_x6) {\n          return _add.apply(this, arguments);\n        }\n        return add;\n      }()\n    }]);\n  }();\n  /**\r\n   * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\r\n   * in a platform logging header JSON object, stringified, and converted\r\n   * to base 64.\r\n   */\n  function countBytes(heartbeatsCache) {\n    // base64 has a restricted set of characters, all of which should be 1 byte.\n    return (0, _util.base64urlEncodeWithoutPadding)(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({\n      version: 2,\n      heartbeats: heartbeatsCache\n    })).length;\n  }\n\n  /**\r\n   * @license\r\n   * Copyright 2019 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n  function registerCoreComponents(variant) {\n    _registerComponent(new _component.Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\n    _registerComponent(new _component.Component('heartbeat', container => new HeartbeatServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\n    // Register `app` package.\n    registerVersion(name$q, version$1, variant);\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n    registerVersion(name$q, version$1, 'esm2017');\n    // Register platform SDK identifier (no version).\n    registerVersion('fire-js', '');\n  }\n\n  /**\r\n   * Firebase App\r\n   *\r\n   * @remarks This package coordinates the communication between the different Firebase components\r\n   * @packageDocumentation\r\n   */\n  registerCoreComponents('');\n});","lineCount":1267,"map":[[39,2,1,0],[39,6,1,0,"_component"],[39,16,1,0],[39,19,1,0,"require"],[39,26,1,0],[39,27,1,0,"_dependencyMap"],[39,41,1,0],[40,2,2,0],[40,6,2,0,"_logger"],[40,13,2,0],[40,16,2,0,"require"],[40,23,2,0],[40,24,2,0,"_dependencyMap"],[40,38,2,0],[41,2,3,0],[41,6,3,0,"_util"],[41,11,3,0],[41,14,3,0,"require"],[41,21,3,0],[41,22,3,0,"_dependencyMap"],[41,36,3,0],[42,2,5,0],[42,6,5,0,"_idb"],[42,10,5,0],[42,13,5,0,"require"],[42,20,5,0],[42,21,5,0,"_dependencyMap"],[42,35,5,0],[43,2,5,29],[43,11,5,29,"_callSuper"],[43,22,5,29,"t"],[43,23,5,29],[43,25,5,29,"o"],[43,26,5,29],[43,28,5,29,"e"],[43,29,5,29],[43,40,5,29,"o"],[43,41,5,29],[43,48,5,29,"_getPrototypeOf2"],[43,64,5,29],[43,65,5,29,"default"],[43,72,5,29],[43,74,5,29,"o"],[43,75,5,29],[43,82,5,29,"_possibleConstructorReturn2"],[43,109,5,29],[43,110,5,29,"default"],[43,117,5,29],[43,119,5,29,"t"],[43,120,5,29],[43,122,5,29,"_isNativeReflectConstruct"],[43,147,5,29],[43,152,5,29,"Reflect"],[43,159,5,29],[43,160,5,29,"construct"],[43,169,5,29],[43,170,5,29,"o"],[43,171,5,29],[43,173,5,29,"e"],[43,174,5,29],[43,186,5,29,"_getPrototypeOf2"],[43,202,5,29],[43,203,5,29,"default"],[43,210,5,29],[43,212,5,29,"t"],[43,213,5,29],[43,215,5,29,"constructor"],[43,226,5,29],[43,230,5,29,"o"],[43,231,5,29],[43,232,5,29,"apply"],[43,237,5,29],[43,238,5,29,"t"],[43,239,5,29],[43,241,5,29,"e"],[43,242,5,29],[44,2,5,29],[44,11,5,29,"_isNativeReflectConstruct"],[44,37,5,29],[44,51,5,29,"t"],[44,52,5,29],[44,56,5,29,"Boolean"],[44,63,5,29],[44,64,5,29,"prototype"],[44,73,5,29],[44,74,5,29,"valueOf"],[44,81,5,29],[44,82,5,29,"call"],[44,86,5,29],[44,87,5,29,"Reflect"],[44,94,5,29],[44,95,5,29,"construct"],[44,104,5,29],[44,105,5,29,"Boolean"],[44,112,5,29],[44,145,5,29,"t"],[44,146,5,29],[44,159,5,29,"_isNativeReflectConstruct"],[44,184,5,29],[44,196,5,29,"_isNativeReflectConstruct"],[44,197,5,29],[44,210,5,29,"t"],[44,211,5,29],[45,2,7,0],[46,0,8,0],[47,0,9,0],[48,0,10,0],[49,0,11,0],[50,0,12,0],[51,0,13,0],[52,0,14,0],[53,0,15,0],[54,0,16,0],[55,0,17,0],[56,0,18,0],[57,0,19,0],[58,0,20,0],[59,0,21,0],[60,0,22,0],[61,2,7,0],[61,6,23,6,"PlatformLoggerServiceImpl"],[61,31,23,31],[62,4,24,4],[62,13,24,4,"PlatformLoggerServiceImpl"],[62,39,24,16,"container"],[62,48,24,25],[62,50,24,27],[63,6,24,27],[63,10,24,27,"_classCallCheck2"],[63,26,24,27],[63,27,24,27,"default"],[63,34,24,27],[63,42,24,27,"PlatformLoggerServiceImpl"],[63,67,24,27],[64,6,25,8],[64,10,25,12],[64,11,25,13,"container"],[64,20,25,22],[64,23,25,25,"container"],[64,32,25,34],[65,4,26,4],[66,4,27,4],[67,4,28,4],[68,4,28,4],[68,15,28,4,"_createClass2"],[68,28,28,4],[68,29,28,4,"default"],[68,36,28,4],[68,38,28,4,"PlatformLoggerServiceImpl"],[68,63,28,4],[69,6,28,4,"key"],[69,9,28,4],[70,6,28,4,"value"],[70,11,28,4],[70,13,29,4],[70,22,29,4,"getPlatformInfoString"],[70,43,29,25,"getPlatformInfoString"],[70,44,29,25],[70,46,29,28],[71,8,30,8],[71,12,30,14,"providers"],[71,21,30,23],[71,24,30,26],[71,28,30,30],[71,29,30,31,"container"],[71,38,30,40],[71,39,30,41,"getProviders"],[71,51,30,53],[71,52,30,54],[71,53,30,55],[72,8,31,8],[73,8,32,8],[74,8,33,8],[74,15,33,15,"providers"],[74,24,33,24],[74,25,34,13,"map"],[74,28,34,16],[74,29,34,17,"provider"],[74,37,34,25],[74,41,34,29],[75,10,35,12],[75,14,35,16,"isVersionServiceProvider"],[75,38,35,40],[75,39,35,41,"provider"],[75,47,35,49],[75,48,35,50],[75,50,35,52],[76,12,36,16],[76,16,36,22,"service"],[76,23,36,29],[76,26,36,32,"provider"],[76,34,36,40],[76,35,36,41,"getImmediate"],[76,47,36,53],[76,48,36,54],[76,49,36,55],[77,12,37,16],[77,19,37,23],[77,22,37,26,"service"],[77,29,37,33],[77,30,37,34,"library"],[77,37,37,41],[77,41,37,45,"service"],[77,48,37,52],[77,49,37,53,"version"],[77,56,37,60],[77,58,37,62],[78,10,38,12],[78,11,38,13],[78,17,39,17],[79,12,40,16],[79,19,40,23],[79,23,40,27],[80,10,41,12],[81,8,42,8],[81,9,42,9],[81,10,42,10],[81,11,43,13,"filter"],[81,17,43,19],[81,18,43,20,"logString"],[81,27,43,29],[81,31,43,33,"logString"],[81,40,43,42],[81,41,43,43],[81,42,44,13,"join"],[81,46,44,17],[81,47,44,18],[81,50,44,21],[81,51,44,22],[82,6,45,4],[83,4,45,5],[84,2,45,5],[85,2,47,0],[86,0,48,0],[87,0,49,0],[88,0,50,0],[89,0,51,0],[90,0,52,0],[91,0,53,0],[92,0,54,0],[93,2,55,0],[93,11,55,9,"isVersionServiceProvider"],[93,35,55,33,"isVersionServiceProvider"],[93,36,55,34,"provider"],[93,44,55,42],[93,46,55,44],[94,4,56,4],[94,8,56,10,"component"],[94,17,56,19],[94,20,56,22,"provider"],[94,28,56,30],[94,29,56,31,"getComponent"],[94,41,56,43],[94,42,56,44],[94,43,56,45],[95,4,57,4],[95,11,57,11],[95,12,57,12,"component"],[95,21,57,21],[95,26,57,26],[95,30,57,30],[95,34,57,34,"component"],[95,43,57,43],[95,48,57,43,"undefined"],[95,57,57,54],[95,60,57,54,"undefined"],[95,69,57,54],[95,72,57,66,"component"],[95,81,57,75],[95,82,57,76,"type"],[95,86,57,80],[95,92,57,86],[95,101,57,95],[95,102,57,96],[96,2,58,0],[97,2,60,0],[97,6,60,6,"name$q"],[97,12,60,12],[97,15,60,15],[97,30,60,30],[98,2,61,0],[98,6,61,6,"version$1"],[98,15,61,15],[98,18,61,18],[98,27,61,27],[100,2,63,0],[101,0,64,0],[102,0,65,0],[103,0,66,0],[104,0,67,0],[105,0,68,0],[106,0,69,0],[107,0,70,0],[108,0,71,0],[109,0,72,0],[110,0,73,0],[111,0,74,0],[112,0,75,0],[113,0,76,0],[114,0,77,0],[115,0,78,0],[116,2,79,0],[116,6,79,6,"logger"],[116,12,79,12],[116,15,79,15],[116,19,79,19,"Logger"],[116,33,79,25],[116,34,79,26],[116,49,79,41],[116,50,79,42],[117,2,81,0],[117,6,81,6,"name$p"],[117,12,81,12],[117,15,81,15],[117,37,81,37],[118,2,83,0],[118,6,83,6,"name$o"],[118,12,83,12],[118,15,83,15],[118,43,83,43],[119,2,85,0],[119,6,85,6,"name$n"],[119,12,85,12],[119,15,85,15],[119,36,85,36],[120,2,87,0],[120,6,87,6,"name$m"],[120,12,87,12],[120,15,87,15],[120,43,87,43],[121,2,89,0],[121,6,89,6,"name$l"],[121,12,89,12],[121,15,89,15],[121,36,89,36],[122,2,91,0],[122,6,91,6,"name$k"],[122,12,91,12],[122,15,91,15],[122,31,91,31],[123,2,93,0],[123,6,93,6,"name$j"],[123,12,93,12],[123,15,93,15],[123,38,93,38],[124,2,95,0],[124,6,95,6,"name$i"],[124,12,95,12],[124,15,95,15],[124,35,95,35],[125,2,97,0],[125,6,97,6,"name$h"],[125,12,97,12],[125,15,97,15],[125,39,97,39],[126,2,99,0],[126,6,99,6,"name$g"],[126,12,99,12],[126,15,99,15],[126,42,99,42],[127,2,101,0],[127,6,101,6,"name$f"],[127,12,101,12],[127,15,101,15],[127,36,101,36],[128,2,103,0],[128,6,103,6,"name$e"],[128,12,103,12],[128,15,103,15],[128,43,103,43],[129,2,105,0],[129,6,105,6,"name$d"],[129,12,105,12],[129,15,105,15],[129,40,105,40],[130,2,107,0],[130,6,107,6,"name$c"],[130,12,107,12],[130,15,107,15],[130,47,107,47],[131,2,109,0],[131,6,109,6,"name$b"],[131,12,109,12],[131,15,109,15],[131,36,109,36],[132,2,111,0],[132,6,111,6,"name$a"],[132,12,111,12],[132,15,111,15],[132,43,111,43],[133,2,113,0],[133,6,113,6,"name$9"],[133,12,113,12],[133,15,113,15],[133,38,113,38],[134,2,115,0],[134,6,115,6,"name$8"],[134,12,115,12],[134,15,115,15],[134,45,115,45],[135,2,117,0],[135,6,117,6,"name$7"],[135,12,117,12],[135,15,117,15],[135,40,117,40],[136,2,119,0],[136,6,119,6,"name$6"],[136,12,119,12],[136,15,119,15],[136,47,119,47],[137,2,121,0],[137,6,121,6,"name$5"],[137,12,121,12],[137,15,121,15],[137,34,121,34],[138,2,123,0],[138,6,123,6,"name$4"],[138,12,123,12],[138,15,123,15],[138,41,123,41],[139,2,125,0],[139,6,125,6,"name$3"],[139,12,125,12],[139,15,125,15],[139,36,125,36],[140,2,127,0],[140,6,127,6,"name$2"],[140,12,127,12],[140,15,127,15],[140,43,127,43],[141,2,129,0],[141,6,129,6,"name$1"],[141,12,129,12],[141,15,129,15],[141,43,129,43],[142,2,131,0],[142,6,131,6,"name"],[142,10,131,10],[142,13,131,13],[142,23,131,23],[143,2,132,0],[143,6,132,6,"version"],[143,13,132,13],[143,16,132,16],[143,25,132,25],[145,2,134,0],[146,0,135,0],[147,0,136,0],[148,0,137,0],[149,0,138,0],[150,0,139,0],[151,0,140,0],[152,0,141,0],[153,0,142,0],[154,0,143,0],[155,0,144,0],[156,0,145,0],[157,0,146,0],[158,0,147,0],[159,0,148,0],[160,0,149,0],[161,2,150,0],[162,0,151,0],[163,0,152,0],[164,0,153,0],[165,0,154,0],[166,2,155,0],[166,6,155,6,"DEFAULT_ENTRY_NAME"],[166,24,155,24],[166,27,155,24,"exports"],[166,34,155,24],[166,35,155,24,"_DEFAULT_ENTRY_NAME"],[166,54,155,24],[166,57,155,27],[166,68,155,38],[167,2,156,0],[167,6,156,6,"PLATFORM_LOG_STRING"],[167,25,156,25],[167,28,156,28],[168,4,157,4],[168,5,157,5,"name$q"],[168,11,157,11],[168,14,157,14],[168,25,157,25],[169,4,158,4],[169,5,158,5,"name$p"],[169,11,158,11],[169,14,158,14],[169,32,158,32],[170,4,159,4],[170,5,159,5,"name$n"],[170,11,159,11],[170,14,159,14],[170,30,159,30],[171,4,160,4],[171,5,160,5,"name$o"],[171,11,160,11],[171,14,160,14],[171,37,160,37],[172,4,161,4],[172,5,161,5,"name$l"],[172,11,161,11],[172,14,161,14],[172,30,161,30],[173,4,162,4],[173,5,162,5,"name$m"],[173,11,162,11],[173,14,162,14],[173,37,162,37],[174,4,163,4],[174,5,163,5,"name$k"],[174,11,163,11],[174,14,163,14],[174,25,163,25],[175,4,164,4],[175,5,164,5,"name$j"],[175,11,164,11],[175,14,164,14],[175,32,164,32],[176,4,165,4],[176,5,165,5,"name$i"],[176,11,165,11],[176,14,165,14],[176,25,165,25],[177,4,166,4],[177,5,166,5,"name$h"],[177,11,166,11],[177,14,166,14],[177,33,166,33],[178,4,167,4],[178,5,167,5,"name$g"],[178,11,167,11],[178,14,167,14],[178,32,167,32],[179,4,168,4],[179,5,168,5,"name$f"],[179,11,168,11],[179,14,168,14],[179,23,168,23],[180,4,169,4],[180,5,169,5,"name$e"],[180,11,169,11],[180,14,169,14],[180,30,169,30],[181,4,170,4],[181,5,170,5,"name$d"],[181,11,170,11],[181,14,170,14],[181,24,170,24],[182,4,171,4],[182,5,171,5,"name$c"],[182,11,171,11],[182,14,171,14],[182,31,171,31],[183,4,172,4],[183,5,172,5,"name$b"],[183,11,172,11],[183,14,172,14],[183,24,172,24],[184,4,173,4],[184,5,173,5,"name$a"],[184,11,173,11],[184,14,173,14],[184,31,173,31],[185,4,174,4],[185,5,174,5,"name$9"],[185,11,174,11],[185,14,174,14],[185,25,174,25],[186,4,175,4],[186,5,175,5,"name$8"],[186,11,175,11],[186,14,175,14],[186,32,175,32],[187,4,176,4],[187,5,176,5,"name$7"],[187,11,176,11],[187,14,176,14],[187,23,176,23],[188,4,177,4],[188,5,177,5,"name$6"],[188,11,177,11],[188,14,177,14],[188,30,177,30],[189,4,178,4],[189,5,178,5,"name$5"],[189,11,178,11],[189,14,178,14],[189,24,178,24],[190,4,179,4],[190,5,179,5,"name$4"],[190,11,179,11],[190,14,179,14],[190,31,179,31],[191,4,180,4],[191,5,180,5,"name$3"],[191,11,180,11],[191,14,180,14],[191,24,180,24],[192,4,181,4],[192,5,181,5,"name$1"],[192,11,181,11],[192,14,181,14],[192,31,181,31],[193,4,182,4],[193,5,182,5,"name$2"],[193,11,182,11],[193,14,182,14],[193,27,182,27],[194,4,183,4],[194,13,183,13],[194,15,183,15],[194,24,183,24],[195,4,184,4],[195,5,184,5,"name"],[195,9,184,9],[195,12,184,12],[196,2,185,0],[196,3,185,1],[198,2,187,0],[199,0,188,0],[200,0,189,0],[201,0,190,0],[202,0,191,0],[203,0,192,0],[204,0,193,0],[205,0,194,0],[206,0,195,0],[207,0,196,0],[208,0,197,0],[209,0,198,0],[210,0,199,0],[211,0,200,0],[212,0,201,0],[213,0,202,0],[214,2,203,0],[215,0,204,0],[216,0,205,0],[217,2,206,0],[217,6,206,6,"_apps"],[217,11,206,11],[217,14,206,11,"exports"],[217,21,206,11],[217,22,206,11,"_apps"],[217,27,206,11],[217,30,206,14],[217,34,206,18,"Map"],[217,37,206,21],[217,38,206,22],[217,39,206,23],[218,2,207,0],[219,0,208,0],[220,0,209,0],[221,2,210,0],[221,6,210,6,"_serverApps"],[221,17,210,17],[221,20,210,17,"exports"],[221,27,210,17],[221,28,210,17,"_serverApps"],[221,39,210,17],[221,42,210,20],[221,46,210,24,"Map"],[221,49,210,27],[221,50,210,28],[221,51,210,29],[222,2,211,0],[223,0,212,0],[224,0,213,0],[225,0,214,0],[226,0,215,0],[227,2,216,0],[228,2,217,0],[228,6,217,6,"_components"],[228,17,217,17],[228,20,217,17,"exports"],[228,27,217,17],[228,28,217,17,"_components"],[228,39,217,17],[228,42,217,20],[228,46,217,24,"Map"],[228,49,217,27],[228,50,217,28],[228,51,217,29],[229,2,218,0],[230,0,219,0],[231,0,220,0],[232,0,221,0],[233,0,222,0],[234,2,223,0],[234,11,223,9,"_addComponent"],[234,24,223,22,"_addComponent"],[234,25,223,23,"app"],[234,28,223,26],[234,30,223,28,"component"],[234,39,223,37],[234,41,223,39],[235,4,224,4],[235,8,224,8],[236,6,225,8,"app"],[236,9,225,11],[236,10,225,12,"container"],[236,19,225,21],[236,20,225,22,"addComponent"],[236,32,225,34],[236,33,225,35,"component"],[236,42,225,44],[236,43,225,45],[237,4,226,4],[237,5,226,5],[237,6,227,4],[237,13,227,11,"e"],[237,14,227,12],[237,16,227,14],[238,6,228,8,"logger"],[238,12,228,14],[238,13,228,15,"debug"],[238,18,228,20],[238,19,228,21],[238,32,228,34,"component"],[238,41,228,43],[238,42,228,44,"name"],[238,46,228,48],[238,86,228,88,"app"],[238,89,228,91],[238,90,228,92,"name"],[238,94,228,96],[238,96,228,98],[238,98,228,100,"e"],[238,99,228,101],[238,100,228,102],[239,4,229,4],[240,2,230,0],[241,2,231,0],[242,0,232,0],[243,0,233,0],[244,0,234,0],[245,2,235,0],[245,11,235,9,"_addOrOverwriteComponent"],[245,35,235,33,"_addOrOverwriteComponent"],[245,36,235,34,"app"],[245,39,235,37],[245,41,235,39,"component"],[245,50,235,48],[245,52,235,50],[246,4,236,4,"app"],[246,7,236,7],[246,8,236,8,"container"],[246,17,236,17],[246,18,236,18,"addOrOverwriteComponent"],[246,41,236,41],[246,42,236,42,"component"],[246,51,236,51],[246,52,236,52],[247,2,237,0],[248,2,238,0],[249,0,239,0],[250,0,240,0],[251,0,241,0],[252,0,242,0],[253,0,243,0],[254,0,244,0],[255,2,245,0],[255,11,245,9,"_registerComponent"],[255,29,245,27,"_registerComponent"],[255,30,245,28,"component"],[255,39,245,37],[255,41,245,39],[256,4,246,4],[256,8,246,10,"componentName"],[256,21,246,23],[256,24,246,26,"component"],[256,33,246,35],[256,34,246,36,"name"],[256,38,246,40],[257,4,247,4],[257,8,247,8,"_components"],[257,19,247,19],[257,20,247,20,"has"],[257,23,247,23],[257,24,247,24,"componentName"],[257,37,247,37],[257,38,247,38],[257,40,247,40],[258,6,248,8,"logger"],[258,12,248,14],[258,13,248,15,"debug"],[258,18,248,20],[258,19,248,21],[258,73,248,75,"componentName"],[258,86,248,88],[258,89,248,91],[258,90,248,92],[259,6,249,8],[259,13,249,15],[259,18,249,20],[260,4,250,4],[261,4,251,4,"_components"],[261,15,251,15],[261,16,251,16,"set"],[261,19,251,19],[261,20,251,20,"componentName"],[261,33,251,33],[261,35,251,35,"component"],[261,44,251,44],[261,45,251,45],[262,4,252,4],[263,4,253,4],[263,9,253,9],[263,13,253,15,"app"],[263,16,253,18],[263,20,253,22,"_apps"],[263,25,253,27],[263,26,253,28,"values"],[263,32,253,34],[263,33,253,35],[263,34,253,36],[263,36,253,38],[264,6,254,8,"_addComponent"],[264,19,254,21],[264,20,254,22,"app"],[264,23,254,25],[264,25,254,27,"component"],[264,34,254,36],[264,35,254,37],[265,4,255,4],[266,4,256,4],[266,9,256,9],[266,13,256,15,"serverApp"],[266,22,256,24],[266,26,256,28,"_serverApps"],[266,37,256,39],[266,38,256,40,"values"],[266,44,256,46],[266,45,256,47],[266,46,256,48],[266,48,256,50],[267,6,257,8,"_addComponent"],[267,19,257,21],[267,20,257,22,"serverApp"],[267,29,257,31],[267,31,257,33,"component"],[267,40,257,42],[267,41,257,43],[268,4,258,4],[269,4,259,4],[269,11,259,11],[269,15,259,15],[270,2,260,0],[271,2,261,0],[272,0,262,0],[273,0,263,0],[274,0,264,0],[275,0,265,0],[276,0,266,0],[277,0,267,0],[278,0,268,0],[279,0,269,0],[280,2,270,0],[280,11,270,9,"_getProvider"],[280,23,270,21,"_getProvider"],[280,24,270,22,"app"],[280,27,270,25],[280,29,270,27,"name"],[280,33,270,31],[280,35,270,33],[281,4,271,4],[281,8,271,10,"heartbeatController"],[281,27,271,29],[281,30,271,32,"app"],[281,33,271,35],[281,34,271,36,"container"],[281,43,271,45],[281,44,272,9,"getProvider"],[281,55,272,20],[281,56,272,21],[281,67,272,32],[281,68,272,33],[281,69,273,9,"getImmediate"],[281,81,273,21],[281,82,273,22],[282,6,273,24,"optional"],[282,14,273,32],[282,16,273,34],[283,4,273,39],[283,5,273,40],[283,6,273,41],[284,4,274,4],[284,8,274,8,"heartbeatController"],[284,27,274,27],[284,29,274,29],[285,6,275,8],[285,11,275,13,"heartbeatController"],[285,30,275,32],[285,31,275,33,"triggerHeartbeat"],[285,47,275,49],[285,48,275,50],[285,49,275,51],[286,4,276,4],[287,4,277,4],[287,11,277,11,"app"],[287,14,277,14],[287,15,277,15,"container"],[287,24,277,24],[287,25,277,25,"getProvider"],[287,36,277,36],[287,37,277,37,"name"],[287,41,277,41],[287,42,277,42],[288,2,278,0],[289,2,279,0],[290,0,280,0],[291,0,281,0],[292,0,282,0],[293,0,283,0],[294,0,284,0],[295,0,285,0],[296,0,286,0],[297,2,287,0],[297,11,287,9,"_removeServiceInstance"],[297,33,287,31,"_removeServiceInstance"],[297,34,287,32,"app"],[297,37,287,35],[297,39,287,37,"name"],[297,43,287,41],[297,45,287,84],[298,4,287,84],[298,8,287,43,"instanceIdentifier"],[298,26,287,61],[298,29,287,61,"arguments"],[298,38,287,61],[298,39,287,61,"length"],[298,45,287,61],[298,53,287,61,"arguments"],[298,62,287,61],[298,70,287,61,"undefined"],[298,79,287,61],[298,82,287,61,"arguments"],[298,91,287,61],[298,97,287,64,"DEFAULT_ENTRY_NAME"],[298,115,287,82],[299,4,288,4,"_getProvider"],[299,16,288,16],[299,17,288,17,"app"],[299,20,288,20],[299,22,288,22,"name"],[299,26,288,26],[299,27,288,27],[299,28,288,28,"clearInstance"],[299,41,288,41],[299,42,288,42,"instanceIdentifier"],[299,60,288,60],[299,61,288,61],[300,2,289,0],[301,2,290,0],[302,0,291,0],[303,0,292,0],[304,0,293,0],[305,0,294,0],[306,0,295,0],[307,0,296,0],[308,0,297,0],[309,2,298,0],[309,11,298,9,"_isFirebaseApp"],[309,25,298,23,"_isFirebaseApp"],[309,26,298,24,"obj"],[309,29,298,27],[309,31,298,29],[310,4,299,4],[310,11,299,11,"obj"],[310,14,299,14],[310,15,299,15,"options"],[310,22,299,22],[310,27,299,27,"undefined"],[310,36,299,36],[311,2,300,0],[312,2,301,0],[313,0,302,0],[314,0,303,0],[315,0,304,0],[316,0,305,0],[317,0,306,0],[318,0,307,0],[319,0,308,0],[320,2,309,0],[320,11,309,9,"_isFirebaseServerApp"],[320,31,309,29,"_isFirebaseServerApp"],[320,32,309,30,"obj"],[320,35,309,33],[320,37,309,35],[321,4,310,4],[321,11,310,11,"obj"],[321,14,310,14],[321,15,310,15,"settings"],[321,23,310,23],[321,28,310,28,"undefined"],[321,37,310,37],[322,2,311,0],[323,2,312,0],[324,0,313,0],[325,0,314,0],[326,0,315,0],[327,0,316,0],[328,2,317,0],[328,11,317,9,"_clearComponents"],[328,27,317,25,"_clearComponents"],[328,28,317,25],[328,30,317,28],[329,4,318,4,"_components"],[329,15,318,15],[329,16,318,16,"clear"],[329,21,318,21],[329,22,318,22],[329,23,318,23],[330,2,319,0],[332,2,321,0],[333,0,322,0],[334,0,323,0],[335,0,324,0],[336,0,325,0],[337,0,326,0],[338,0,327,0],[339,0,328,0],[340,0,329,0],[341,0,330,0],[342,0,331,0],[343,0,332,0],[344,0,333,0],[345,0,334,0],[346,0,335,0],[347,0,336,0],[348,2,337,0],[348,6,337,6,"ERRORS"],[348,12,337,12],[348,15,337,15],[349,4,338,4],[349,5,338,5],[349,13,338,13],[349,14,338,14],[349,114,339,36],[350,4,340,4],[350,5,340,5],[350,19,340,19],[350,20,340,20],[350,50,340,50],[350,82,340,82],[351,4,341,4],[351,5,341,5],[351,20,341,20],[351,21,341,21],[351,52,341,52],[351,133,341,133],[352,4,342,4],[352,5,342,5],[352,18,342,18],[352,19,342,19],[352,48,342,48],[352,97,342,97],[353,4,343,4],[353,5,343,5],[353,25,343,25],[353,26,343,26],[353,62,343,62],[353,100,343,100],[354,4,344,4],[354,5,344,5],[354,17,344,17],[354,18,344,18],[354,46,344,46],[354,119,344,119],[355,4,345,4],[355,5,345,5],[355,27,345,27],[355,28,345,28],[355,142,346,32],[356,4,347,4],[356,5,347,5],[356,27,347,27],[356,28,347,28],[356,66,347,66],[356,121,347,121],[357,4,348,4],[357,5,348,5],[357,15,348,15],[357,16,348,16],[357,42,348,42],[357,121,348,121],[358,4,349,4],[358,5,349,5],[358,14,349,14],[358,15,349,15],[358,40,349,40],[358,124,349,124],[359,4,350,4],[359,5,350,5],[359,14,350,14],[359,15,350,15],[359,42,350,42],[359,124,350,124],[360,4,351,4],[360,5,351,5],[360,17,351,17],[360,18,351,18],[360,46,351,46],[360,131,351,131],[361,4,352,4],[361,5,352,5],[361,42,352,42],[361,43,352,43],[361,96,352,96],[361,201,352,201],[362,4,353,4],[362,5,353,5],[362,37,353,37],[362,38,353,38],[362,86,353,86],[363,2,354,0],[363,3,354,1],[364,2,355,0],[364,6,355,6,"ERROR_FACTORY"],[364,19,355,19],[364,22,355,22],[364,26,355,26,"ErrorFactory"],[364,44,355,38],[364,45,355,39],[364,50,355,44],[364,52,355,46],[364,62,355,56],[364,64,355,58,"ERRORS"],[364,70,355,64],[364,71,355,65],[366,2,357,0],[367,0,358,0],[368,0,359,0],[369,0,360,0],[370,0,361,0],[371,0,362,0],[372,0,363,0],[373,0,364,0],[374,0,365,0],[375,0,366,0],[376,0,367,0],[377,0,368,0],[378,0,369,0],[379,0,370,0],[380,0,371,0],[381,0,372,0],[382,2,357,0],[382,6,373,6,"FirebaseAppImpl"],[382,21,373,21],[383,4,374,4],[383,13,374,4,"FirebaseAppImpl"],[383,29,374,16,"options"],[383,36,374,23],[383,38,374,25,"config"],[383,44,374,31],[383,46,374,33,"container"],[383,55,374,42],[383,57,374,44],[384,6,374,44],[384,10,374,44,"_classCallCheck2"],[384,26,374,44],[384,27,374,44,"default"],[384,34,374,44],[384,42,374,44,"FirebaseAppImpl"],[384,57,374,44],[385,6,375,8],[385,10,375,12],[385,11,375,13,"_isDeleted"],[385,21,375,23],[385,24,375,26],[385,29,375,31],[386,6,376,8],[386,10,376,12],[386,11,376,13,"_options"],[386,19,376,21],[386,22,376,24,"Object"],[386,28,376,30],[386,29,376,31,"assign"],[386,35,376,37],[386,36,376,38],[386,37,376,39],[386,38,376,40],[386,40,376,42,"options"],[386,47,376,49],[386,48,376,50],[387,6,377,8],[387,10,377,12],[387,11,377,13,"_config"],[387,18,377,20],[387,21,377,23,"Object"],[387,27,377,29],[387,28,377,30,"assign"],[387,34,377,36],[387,35,377,37],[387,36,377,38],[387,37,377,39],[387,39,377,41,"config"],[387,45,377,47],[387,46,377,48],[388,6,378,8],[388,10,378,12],[388,11,378,13,"_name"],[388,16,378,18],[388,19,378,21,"config"],[388,25,378,27],[388,26,378,28,"name"],[388,30,378,32],[389,6,379,8],[389,10,379,12],[389,11,379,13,"_automaticDataCollectionEnabled"],[389,42,379,44],[389,45,380,12,"config"],[389,51,380,18],[389,52,380,19,"automaticDataCollectionEnabled"],[389,82,380,49],[390,6,381,8],[390,10,381,12],[390,11,381,13,"_container"],[390,21,381,23],[390,24,381,26,"container"],[390,33,381,35],[391,6,382,8],[391,10,382,12],[391,11,382,13,"container"],[391,20,382,22],[391,21,382,23,"addComponent"],[391,33,382,35],[391,34,382,36],[391,38,382,40,"Component"],[391,58,382,49],[391,59,382,50],[391,64,382,55],[391,66,382,57],[391,72,382,63],[391,76,382,67],[391,78,382,69],[391,86,382,77],[391,87,382,78],[391,113,382,104],[391,114,382,105],[391,115,382,106],[392,4,383,4],[393,4,383,5],[393,15,383,5,"_createClass2"],[393,28,383,5],[393,29,383,5,"default"],[393,36,383,5],[393,38,383,5,"FirebaseAppImpl"],[393,53,383,5],[394,6,383,5,"key"],[394,9,383,5],[395,6,383,5,"get"],[395,9,383,5],[395,11,384,4],[395,20,384,4,"get"],[395,21,384,4],[395,23,384,41],[396,8,385,8],[396,12,385,12],[396,13,385,13,"checkDestroyed"],[396,27,385,27],[396,28,385,28],[396,29,385,29],[397,8,386,8],[397,15,386,15],[397,19,386,19],[397,20,386,20,"_automaticDataCollectionEnabled"],[397,51,386,51],[398,6,387,4],[398,7,387,5],[399,6,387,5,"set"],[399,9,387,5],[399,11,388,4],[399,20,388,4,"set"],[399,21,388,39,"val"],[399,24,388,42],[399,26,388,44],[400,8,389,8],[400,12,389,12],[400,13,389,13,"checkDestroyed"],[400,27,389,27],[400,28,389,28],[400,29,389,29],[401,8,390,8],[401,12,390,12],[401,13,390,13,"_automaticDataCollectionEnabled"],[401,44,390,44],[401,47,390,47,"val"],[401,50,390,50],[402,6,391,4],[403,4,391,5],[404,6,391,5,"key"],[404,9,391,5],[405,6,391,5,"get"],[405,9,391,5],[405,11,392,4],[405,20,392,4,"get"],[405,21,392,4],[405,23,392,15],[406,8,393,8],[406,12,393,12],[406,13,393,13,"checkDestroyed"],[406,27,393,27],[406,28,393,28],[406,29,393,29],[407,8,394,8],[407,15,394,15],[407,19,394,19],[407,20,394,20,"_name"],[407,25,394,25],[408,6,395,4],[409,4,395,5],[410,6,395,5,"key"],[410,9,395,5],[411,6,395,5,"get"],[411,9,395,5],[411,11,396,4],[411,20,396,4,"get"],[411,21,396,4],[411,23,396,18],[412,8,397,8],[412,12,397,12],[412,13,397,13,"checkDestroyed"],[412,27,397,27],[412,28,397,28],[412,29,397,29],[413,8,398,8],[413,15,398,15],[413,19,398,19],[413,20,398,20,"_options"],[413,28,398,28],[414,6,399,4],[415,4,399,5],[416,6,399,5,"key"],[416,9,399,5],[417,6,399,5,"get"],[417,9,399,5],[417,11,400,4],[417,20,400,4,"get"],[417,21,400,4],[417,23,400,17],[418,8,401,8],[418,12,401,12],[418,13,401,13,"checkDestroyed"],[418,27,401,27],[418,28,401,28],[418,29,401,29],[419,8,402,8],[419,15,402,15],[419,19,402,19],[419,20,402,20,"_config"],[419,27,402,27],[420,6,403,4],[421,4,403,5],[422,6,403,5,"key"],[422,9,403,5],[423,6,403,5,"get"],[423,9,403,5],[423,11,404,4],[423,20,404,4,"get"],[423,21,404,4],[423,23,404,20],[424,8,405,8],[424,15,405,15],[424,19,405,19],[424,20,405,20,"_container"],[424,30,405,30],[425,6,406,4],[426,4,406,5],[427,6,406,5,"key"],[427,9,406,5],[428,6,406,5,"get"],[428,9,406,5],[428,11,407,4],[428,20,407,4,"get"],[428,21,407,4],[428,23,407,20],[429,8,408,8],[429,15,408,15],[429,19,408,19],[429,20,408,20,"_isDeleted"],[429,30,408,30],[430,6,409,4],[430,7,409,5],[431,6,409,5,"set"],[431,9,409,5],[431,11,410,4],[431,20,410,4,"set"],[431,21,410,18,"val"],[431,24,410,21],[431,26,410,23],[432,8,411,8],[432,12,411,12],[432,13,411,13,"_isDeleted"],[432,23,411,23],[432,26,411,26,"val"],[432,29,411,29],[433,6,412,4],[434,6,413,4],[435,0,414,0],[436,0,415,0],[437,0,416,0],[438,4,413,4],[439,6,413,4,"key"],[439,9,413,4],[440,6,413,4,"value"],[440,11,413,4],[440,13,417,4],[440,22,417,4,"checkDestroyed"],[440,36,417,18,"checkDestroyed"],[440,37,417,18],[440,39,417,21],[441,8,418,8],[441,12,418,12],[441,16,418,16],[441,17,418,17,"isDeleted"],[441,26,418,26],[441,28,418,28],[442,10,419,12],[442,16,419,18,"ERROR_FACTORY"],[442,29,419,31],[442,30,419,32,"create"],[442,36,419,38],[442,37,419,39],[442,50,419,52],[442,51,419,53],[442,79,419,81],[443,12,419,83,"appName"],[443,19,419,90],[443,21,419,92],[443,25,419,96],[443,26,419,97,"_name"],[444,10,419,103],[444,11,419,104],[444,12,419,105],[445,8,420,8],[446,6,421,4],[447,4,421,5],[448,2,421,5],[449,2,424,0],[450,0,425,0],[451,0,426,0],[452,0,427,0],[453,0,428,0],[454,0,429,0],[455,0,430,0],[456,0,431,0],[457,0,432,0],[458,0,433,0],[459,0,434,0],[460,0,435,0],[461,0,436,0],[462,0,437,0],[463,0,438,0],[464,0,439,0],[465,2,424,0],[465,6,440,6,"FirebaseServerAppImpl"],[465,27,440,27],[465,53,440,27,"_FirebaseAppImpl"],[465,69,440,27],[466,4,441,4],[466,13,441,4,"FirebaseServerAppImpl"],[466,35,441,16,"options"],[466,42,441,23],[466,44,441,25,"serverConfig"],[466,56,441,37],[466,58,441,39,"name"],[466,62,441,43],[466,64,441,45,"container"],[466,73,441,54],[466,75,441,56],[467,6,441,56],[467,10,441,56,"_this"],[467,15,441,56],[468,6,441,56],[468,10,441,56,"_classCallCheck2"],[468,26,441,56],[468,27,441,56,"default"],[468,34,441,56],[468,42,441,56,"FirebaseServerAppImpl"],[468,63,441,56],[469,6,442,8],[470,6,443,8],[470,10,443,14,"automaticDataCollectionEnabled"],[470,40,443,44],[470,43,443,47,"serverConfig"],[470,55,443,59],[470,56,443,60,"automaticDataCollectionEnabled"],[470,86,443,90],[470,91,443,95,"undefined"],[470,100,443,104],[470,103,444,14,"serverConfig"],[470,115,444,26],[470,116,444,27,"automaticDataCollectionEnabled"],[470,146,444,57],[470,149,445,14],[470,154,445,19],[471,6,446,8],[472,6,447,8],[472,10,447,14,"config"],[472,16,447,20],[472,19,447,23],[473,8,448,12,"name"],[473,12,448,16],[474,8,449,12,"automaticDataCollectionEnabled"],[475,6,450,8],[475,7,450,9],[476,6,451,8],[476,10,451,12,"options"],[476,17,451,19],[476,18,451,20,"apiKey"],[476,24,451,26],[476,29,451,31,"undefined"],[476,38,451,40],[476,40,451,42],[477,8,452,12],[478,8,453,12,"_this"],[478,13,453,12],[478,16,453,12,"_callSuper"],[478,26,453,12],[478,33,453,12,"FirebaseServerAppImpl"],[478,54,453,12],[478,57,453,18,"options"],[478,64,453,25],[478,66,453,27,"config"],[478,72,453,33],[478,74,453,35,"container"],[478,83,453,44],[479,6,454,8],[479,7,454,9],[479,13,455,13],[480,8,456,12],[480,12,456,18,"appImpl"],[480,19,456,25],[480,22,456,28,"options"],[480,29,456,35],[481,8,457,12,"_this"],[481,13,457,12],[481,16,457,12,"_callSuper"],[481,26,457,12],[481,33,457,12,"FirebaseServerAppImpl"],[481,54,457,12],[481,57,457,18,"appImpl"],[481,64,457,25],[481,65,457,26,"options"],[481,72,457,33],[481,74,457,35,"config"],[481,80,457,41],[481,82,457,43,"container"],[481,91,457,52],[482,6,458,8],[483,6,459,8],[484,6,460,8,"_this"],[484,11,460,8],[484,12,460,13,"_serverConfig"],[484,25,460,26],[484,28,460,29,"Object"],[484,34,460,35],[484,35,460,36,"assign"],[484,41,460,42],[484,42,460,43],[485,8,460,45,"automaticDataCollectionEnabled"],[486,6,460,76],[486,7,460,77],[486,9,460,79,"serverConfig"],[486,21,460,91],[486,22,460,92],[487,6,461,8,"_this"],[487,11,461,8],[487,12,461,13,"_finalizationRegistry"],[487,33,461,34],[487,36,461,37],[487,40,461,41],[488,6,462,8],[488,10,462,12],[488,17,462,19,"FinalizationRegistry"],[488,37,462,39],[488,42,462,44],[488,53,462,55],[488,55,462,57],[489,8,463,12,"_this"],[489,13,463,12],[489,14,463,17,"_finalizationRegistry"],[489,35,463,38],[489,38,463,41],[489,42,463,45,"FinalizationRegistry"],[489,62,463,65],[489,63,463,66],[489,69,463,72],[490,10,464,16,"_this"],[490,15,464,16],[490,16,464,21,"automaticCleanup"],[490,32,464,37],[490,33,464,38],[490,34,464,39],[491,8,465,12],[491,9,465,13],[491,10,465,14],[492,6,466,8],[493,6,467,8,"_this"],[493,11,467,8],[493,12,467,13,"_refCount"],[493,21,467,22],[493,24,467,25],[493,25,467,26],[494,6,468,8,"_this"],[494,11,468,8],[494,12,468,13,"incRefCount"],[494,23,468,24],[494,24,468,25,"_this"],[494,29,468,25],[494,30,468,30,"_serverConfig"],[494,43,468,43],[494,44,468,44,"releaseOnDeref"],[494,58,468,58],[494,59,468,59],[495,6,469,8],[496,6,470,8],[497,6,471,8,"_this"],[497,11,471,8],[497,12,471,13,"_serverConfig"],[497,25,471,26],[497,26,471,27,"releaseOnDeref"],[497,40,471,41],[497,43,471,44,"undefined"],[497,52,471,53],[498,6,472,8,"serverConfig"],[498,18,472,20],[498,19,472,21,"releaseOnDeref"],[498,33,472,35],[498,36,472,38,"undefined"],[498,45,472,47],[499,6,473,8,"registerVersion"],[499,21,473,23],[499,22,473,24,"name$q"],[499,28,473,30],[499,30,473,32,"version$1"],[499,39,473,41],[499,41,473,43],[499,52,473,54],[499,53,473,55],[500,6,473,56],[500,17,473,56,"_assertThisInitialized2"],[500,40,473,56],[500,41,473,56,"default"],[500,48,473,56],[500,50,473,56,"_this"],[500,55,473,56],[501,4,474,4],[502,4,474,5],[502,8,474,5,"_inherits2"],[502,18,474,5],[502,19,474,5,"default"],[502,26,474,5],[502,28,474,5,"FirebaseServerAppImpl"],[502,49,474,5],[502,51,474,5,"_FirebaseAppImpl"],[502,67,474,5],[503,4,474,5],[503,15,474,5,"_createClass2"],[503,28,474,5],[503,29,474,5,"default"],[503,36,474,5],[503,38,474,5,"FirebaseServerAppImpl"],[503,59,474,5],[504,6,474,5,"key"],[504,9,474,5],[505,6,474,5,"value"],[505,11,474,5],[505,13,475,4],[505,22,475,4,"toJSON"],[505,28,475,10,"toJSON"],[505,29,475,10],[505,31,475,13],[506,8,476,8],[506,15,476,15,"undefined"],[506,24,476,24],[507,6,477,4],[508,4,477,5],[509,6,477,5,"key"],[509,9,477,5],[510,6,477,5,"get"],[510,9,477,5],[510,11,478,4],[510,20,478,4,"get"],[510,21,478,4],[510,23,478,19],[511,8,479,8],[511,15,479,15],[511,19,479,19],[511,20,479,20,"_refCount"],[511,29,479,29],[512,6,480,4],[513,6,481,4],[514,6,482,4],[515,4,482,4],[516,6,482,4,"key"],[516,9,482,4],[517,6,482,4,"value"],[517,11,482,4],[517,13,483,4],[517,22,483,4,"incRefCount"],[517,33,483,15,"incRefCount"],[517,34,483,16,"obj"],[517,37,483,19],[517,39,483,21],[518,8,484,8],[518,12,484,12],[518,16,484,16],[518,17,484,17,"isDeleted"],[518,26,484,26],[518,28,484,28],[519,10,485,12],[520,8,486,8],[521,8,487,8],[521,12,487,12],[521,13,487,13,"_refCount"],[521,22,487,22],[521,24,487,24],[522,8,488,8],[522,12,488,12,"obj"],[522,15,488,15],[522,20,488,20,"undefined"],[522,29,488,29],[522,33,488,33],[522,37,488,37],[522,38,488,38,"_finalizationRegistry"],[522,59,488,59],[522,64,488,64],[522,68,488,68],[522,70,488,70],[523,10,489,12],[523,14,489,16],[523,15,489,17,"_finalizationRegistry"],[523,36,489,38],[523,37,489,39,"register"],[523,45,489,47],[523,46,489,48,"obj"],[523,49,489,51],[523,51,489,53],[523,55,489,57],[523,56,489,58],[524,8,490,8],[525,6,491,4],[526,6,492,4],[527,4,492,4],[528,6,492,4,"key"],[528,9,492,4],[529,6,492,4,"value"],[529,11,492,4],[529,13,493,4],[529,22,493,4,"decRefCount"],[529,33,493,15,"decRefCount"],[529,34,493,15],[529,36,493,18],[530,8,494,8],[530,12,494,12],[530,16,494,16],[530,17,494,17,"isDeleted"],[530,26,494,26],[530,28,494,28],[531,10,495,12],[531,17,495,19],[531,18,495,20],[532,8,496,8],[533,8,497,8],[533,15,497,15],[533,17,497,17],[533,21,497,21],[533,22,497,22,"_refCount"],[533,31,497,31],[534,6,498,4],[535,6,499,4],[536,6,500,4],[537,6,501,4],[538,4,501,4],[539,6,501,4,"key"],[539,9,501,4],[540,6,501,4,"value"],[540,11,501,4],[540,13,502,4],[540,22,502,4,"automaticCleanup"],[540,38,502,20,"automaticCleanup"],[540,39,502,20],[540,41,502,23],[541,8,503,8],[541,13,503,13,"deleteApp"],[541,22,503,22],[541,23,503,23],[541,27,503,27],[541,28,503,28],[542,6,504,4],[543,4,504,5],[544,6,504,5,"key"],[544,9,504,5],[545,6,504,5,"get"],[545,9,504,5],[545,11,505,4],[545,20,505,4,"get"],[545,21,505,4],[545,23,505,19],[546,8,506,8],[546,12,506,12],[546,13,506,13,"checkDestroyed"],[546,27,506,27],[546,28,506,28],[546,29,506,29],[547,8,507,8],[547,15,507,15],[547,19,507,19],[547,20,507,20,"_serverConfig"],[547,33,507,33],[548,6,508,4],[549,6,509,4],[550,0,510,0],[551,0,511,0],[552,0,512,0],[553,4,509,4],[554,6,509,4,"key"],[554,9,509,4],[555,6,509,4,"value"],[555,11,509,4],[555,13,513,4],[555,22,513,4,"checkDestroyed"],[555,36,513,18,"checkDestroyed"],[555,37,513,18],[555,39,513,21],[556,8,514,8],[556,12,514,12],[556,16,514,16],[556,17,514,17,"isDeleted"],[556,26,514,26],[556,28,514,28],[557,10,515,12],[557,16,515,18,"ERROR_FACTORY"],[557,29,515,31],[557,30,515,32,"create"],[557,36,515,38],[557,37,515,39],[557,57,515,59],[557,58,515,60],[557,91,515,93],[557,92,515,94],[558,8,516,8],[559,6,517,4],[560,4,517,5],[561,2,517,5],[561,4,440,36,"FirebaseAppImpl"],[561,19,440,51],[562,2,520,0],[563,0,521,0],[564,0,522,0],[565,0,523,0],[566,0,524,0],[567,0,525,0],[568,0,526,0],[569,0,527,0],[570,0,528,0],[571,0,529,0],[572,0,530,0],[573,0,531,0],[574,0,532,0],[575,0,533,0],[576,0,534,0],[577,0,535,0],[578,2,536,0],[579,0,537,0],[580,0,538,0],[581,0,539,0],[582,0,540,0],[583,2,541,0],[583,6,541,6,"SDK_VERSION"],[583,17,541,17],[583,20,541,17,"exports"],[583,27,541,17],[583,28,541,17,"SDK_VERSION"],[583,39,541,17],[583,42,541,20,"version"],[583,49,541,27],[584,2,542,0],[584,11,542,9,"initializeApp"],[584,24,542,22,"initializeApp"],[584,25,542,23,"_options"],[584,33,542,31],[584,35,542,49],[585,4,542,49],[585,8,542,33,"rawConfig"],[585,17,542,42],[585,20,542,42,"arguments"],[585,29,542,42],[585,30,542,42,"length"],[585,36,542,42],[585,44,542,42,"arguments"],[585,53,542,42],[585,61,542,42,"undefined"],[585,70,542,42],[585,73,542,42,"arguments"],[585,82,542,42],[585,88,542,45],[585,89,542,46],[585,90,542,47],[586,4,543,4],[586,8,543,8,"options"],[586,15,543,15],[586,18,543,18,"_options"],[586,26,543,26],[587,4,544,4],[587,8,544,8],[587,15,544,15,"rawConfig"],[587,24,544,24],[587,29,544,29],[587,37,544,37],[587,39,544,39],[588,6,545,8],[588,10,545,14,"name"],[588,15,545,18],[588,18,545,21,"rawConfig"],[588,27,545,30],[589,6,546,8,"rawConfig"],[589,15,546,17],[589,18,546,20],[590,8,546,22,"name"],[590,12,546,26],[590,14,546,22,"name"],[591,6,546,27],[591,7,546,28],[592,4,547,4],[593,4,548,4],[593,8,548,10,"config"],[593,14,548,16],[593,17,548,19,"Object"],[593,23,548,25],[593,24,548,26,"assign"],[593,30,548,32],[593,31,548,33],[594,6,548,35,"name"],[594,10,548,39],[594,12,548,41,"DEFAULT_ENTRY_NAME"],[594,30,548,59],[595,6,548,61,"automaticDataCollectionEnabled"],[595,36,548,91],[595,38,548,93],[596,4,548,99],[596,5,548,100],[596,7,548,102,"rawConfig"],[596,16,548,111],[596,17,548,112],[597,4,549,4],[597,8,549,10,"name"],[597,12,549,14],[597,15,549,17,"config"],[597,21,549,23],[597,22,549,24,"name"],[597,26,549,28],[598,4,550,4],[598,8,550,8],[598,15,550,15,"name"],[598,19,550,19],[598,24,550,24],[598,32,550,32],[598,36,550,36],[598,37,550,37,"name"],[598,41,550,41],[598,43,550,43],[599,6,551,8],[599,12,551,14,"ERROR_FACTORY"],[599,25,551,27],[599,26,551,28,"create"],[599,32,551,34],[599,33,551,35],[599,47,551,49],[599,48,551,50],[599,77,551,79],[600,8,552,12,"appName"],[600,15,552,19],[600,17,552,21,"String"],[600,23,552,27],[600,24,552,28,"name"],[600,28,552,32],[601,6,553,8],[601,7,553,9],[601,8,553,10],[602,4,554,4],[603,4,555,4,"options"],[603,11,555,11],[603,16,555,16,"options"],[603,23,555,23],[603,26,555,26],[603,30,555,26,"getDefaultAppConfig"],[603,55,555,45],[603,57,555,46],[603,58,555,47],[603,59,555,48],[604,4,556,4],[604,8,556,8],[604,9,556,9,"options"],[604,16,556,16],[604,18,556,18],[605,6,557,8],[605,12,557,14,"ERROR_FACTORY"],[605,25,557,27],[605,26,557,28,"create"],[605,32,557,34],[605,33,557,35],[605,45,557,47],[605,46,557,48],[605,71,557,73],[605,72,557,74],[606,4,558,4],[607,4,559,4],[607,8,559,10,"existingApp"],[607,19,559,21],[607,22,559,24,"_apps"],[607,27,559,29],[607,28,559,30,"get"],[607,31,559,33],[607,32,559,34,"name"],[607,36,559,38],[607,37,559,39],[608,4,560,4],[608,8,560,8,"existingApp"],[608,19,560,19],[608,21,560,21],[609,6,561,8],[610,6,562,8],[610,10,562,12],[610,14,562,12,"deepEqual"],[610,29,562,21],[610,31,562,22,"options"],[610,38,562,29],[610,40,562,31,"existingApp"],[610,51,562,42],[610,52,562,43,"options"],[610,59,562,50],[610,60,562,51],[610,64,563,12],[610,68,563,12,"deepEqual"],[610,83,563,21],[610,85,563,22,"config"],[610,91,563,28],[610,93,563,30,"existingApp"],[610,104,563,41],[610,105,563,42,"config"],[610,111,563,48],[610,112,563,49],[610,114,563,51],[611,8,564,12],[611,15,564,19,"existingApp"],[611,26,564,30],[612,6,565,8],[612,7,565,9],[612,13,566,13],[613,8,567,12],[613,14,567,18,"ERROR_FACTORY"],[613,27,567,31],[613,28,567,32,"create"],[613,34,567,38],[613,35,567,39],[613,50,567,54],[613,51,567,55],[613,81,567,85],[614,10,567,87,"appName"],[614,17,567,94],[614,19,567,96,"name"],[615,8,567,101],[615,9,567,102],[615,10,567,103],[616,6,568,8],[617,4,569,4],[618,4,570,4],[618,8,570,10,"container"],[618,17,570,19],[618,20,570,22],[618,24,570,26,"ComponentContainer"],[618,53,570,44],[618,54,570,45,"name"],[618,58,570,49],[618,59,570,50],[619,4,571,4],[619,9,571,9],[619,13,571,15,"component"],[619,22,571,24],[619,26,571,28,"_components"],[619,37,571,39],[619,38,571,40,"values"],[619,44,571,46],[619,45,571,47],[619,46,571,48],[619,48,571,50],[620,6,572,8,"container"],[620,15,572,17],[620,16,572,18,"addComponent"],[620,28,572,30],[620,29,572,31,"component"],[620,38,572,40],[620,39,572,41],[621,4,573,4],[622,4,574,4],[622,8,574,10,"newApp"],[622,14,574,16],[622,17,574,19],[622,21,574,23,"FirebaseAppImpl"],[622,36,574,38],[622,37,574,39,"options"],[622,44,574,46],[622,46,574,48,"config"],[622,52,574,54],[622,54,574,56,"container"],[622,63,574,65],[622,64,574,66],[623,4,575,4,"_apps"],[623,9,575,9],[623,10,575,10,"set"],[623,13,575,13],[623,14,575,14,"name"],[623,18,575,18],[623,20,575,20,"newApp"],[623,26,575,26],[623,27,575,27],[624,4,576,4],[624,11,576,11,"newApp"],[624,17,576,17],[625,2,577,0],[626,2,578,0],[626,11,578,9,"initializeServerApp"],[626,30,578,28,"initializeServerApp"],[626,31,578,29,"_options"],[626,39,578,37],[626,41,578,39,"_serverAppConfig"],[626,57,578,55],[626,59,578,57],[627,4,579,4],[627,8,579,8],[627,12,579,8,"isBrowser"],[627,27,579,17],[627,29,579,18],[627,30,579,19],[627,34,579,23],[627,35,579,24],[627,39,579,24,"isWebWorker"],[627,56,579,35],[627,58,579,36],[627,59,579,37],[627,61,579,39],[628,6,580,8],[629,6,581,8],[629,12,581,14,"ERROR_FACTORY"],[629,25,581,27],[629,26,581,28,"create"],[629,32,581,34],[629,33,581,35],[629,65,581,67],[629,66,581,68],[629,111,581,113],[629,112,581,114],[630,4,582,4],[631,4,583,4],[631,8,583,8,"_serverAppConfig"],[631,24,583,24],[631,25,583,25,"automaticDataCollectionEnabled"],[631,55,583,55],[631,60,583,60,"undefined"],[631,69,583,69],[631,71,583,71],[632,6,584,8,"_serverAppConfig"],[632,22,584,24],[632,23,584,25,"automaticDataCollectionEnabled"],[632,53,584,55],[632,56,584,58],[632,61,584,63],[633,4,585,4],[634,4,586,4],[634,8,586,8,"appOptions"],[634,18,586,18],[635,4,587,4],[635,8,587,8,"_isFirebaseApp"],[635,22,587,22],[635,23,587,23,"_options"],[635,31,587,31],[635,32,587,32],[635,34,587,34],[636,6,588,8,"appOptions"],[636,16,588,18],[636,19,588,21,"_options"],[636,27,588,29],[636,28,588,30,"options"],[636,35,588,37],[637,4,589,4],[637,5,589,5],[637,11,590,9],[638,6,591,8,"appOptions"],[638,16,591,18],[638,19,591,21,"_options"],[638,27,591,29],[639,4,592,4],[640,4,593,4],[641,4,594,4],[641,8,594,10,"nameObj"],[641,15,594,17],[641,18,594,20,"Object"],[641,24,594,26],[641,25,594,27,"assign"],[641,31,594,33],[641,32,594,34,"Object"],[641,38,594,40],[641,39,594,41,"assign"],[641,45,594,47],[641,46,594,48],[641,47,594,49],[641,48,594,50],[641,50,594,52,"_serverAppConfig"],[641,66,594,68],[641,67,594,69],[641,69,594,71,"appOptions"],[641,79,594,81],[641,80,594,82],[642,4,595,4],[643,4,596,4],[644,4,597,4],[644,8,597,8,"nameObj"],[644,15,597,15],[644,16,597,16,"releaseOnDeref"],[644,30,597,30],[644,35,597,35,"undefined"],[644,44,597,44],[644,46,597,46],[645,6,598,8],[645,13,598,15,"nameObj"],[645,20,598,22],[645,21,598,23,"releaseOnDeref"],[645,35,598,37],[646,4,599,4],[647,4,600,4],[647,8,600,10,"hashCode"],[647,16,600,18],[647,19,600,22,"s"],[647,20,600,23],[647,24,600,28],[648,6,601,8],[648,13,601,15],[648,14,601,16],[648,17,601,19,"s"],[648,18,601,20],[648,19,601,21],[648,20,601,22,"reduce"],[648,26,601,28],[648,27,601,29],[648,28,601,30,"hash"],[648,32,601,34],[648,34,601,36,"c"],[648,35,601,37],[648,40,601,43,"Math"],[648,44,601,47],[648,45,601,48,"imul"],[648,49,601,52],[648,50,601,53],[648,52,601,55],[648,54,601,57,"hash"],[648,58,601,61],[648,59,601,62],[648,62,601,65,"c"],[648,63,601,66],[648,64,601,67,"charCodeAt"],[648,74,601,77],[648,75,601,78],[648,76,601,79],[648,77,601,80],[648,80,601,84],[648,81,601,85],[648,83,601,87],[648,84,601,88],[648,85,601,89],[649,4,602,4],[649,5,602,5],[650,4,603,4],[650,8,603,8,"_serverAppConfig"],[650,24,603,24],[650,25,603,25,"releaseOnDeref"],[650,39,603,39],[650,44,603,44,"undefined"],[650,53,603,53],[650,55,603,55],[651,6,604,8],[651,10,604,12],[651,17,604,19,"FinalizationRegistry"],[651,37,604,39],[651,42,604,44],[651,53,604,55],[651,55,604,57],[652,8,605,12],[652,14,605,18,"ERROR_FACTORY"],[652,27,605,31],[652,28,605,32,"create"],[652,34,605,38],[652,35,605,39],[652,72,605,76],[652,73,605,77],[652,125,605,129],[652,126,605,130],[652,127,605,131],[652,128,605,132],[653,6,606,8],[654,4,607,4],[655,4,608,4],[655,8,608,10,"nameString"],[655,18,608,20],[655,21,608,23],[655,23,608,25],[655,26,608,28,"hashCode"],[655,34,608,36],[655,35,608,37,"JSON"],[655,39,608,41],[655,40,608,42,"stringify"],[655,49,608,51],[655,50,608,52,"nameObj"],[655,57,608,59],[655,58,608,60],[655,59,608,61],[656,4,609,4],[656,8,609,10,"existingApp"],[656,19,609,21],[656,22,609,24,"_serverApps"],[656,33,609,35],[656,34,609,36,"get"],[656,37,609,39],[656,38,609,40,"nameString"],[656,48,609,50],[656,49,609,51],[657,4,610,4],[657,8,610,8,"existingApp"],[657,19,610,19],[657,21,610,21],[658,6,611,8,"existingApp"],[658,17,611,19],[658,18,611,20,"incRefCount"],[658,29,611,31],[658,30,611,32,"_serverAppConfig"],[658,46,611,48],[658,47,611,49,"releaseOnDeref"],[658,61,611,63],[658,62,611,64],[659,6,612,8],[659,13,612,15,"existingApp"],[659,24,612,26],[660,4,613,4],[661,4,614,4],[661,8,614,10,"container"],[661,17,614,19],[661,20,614,22],[661,24,614,26,"ComponentContainer"],[661,53,614,44],[661,54,614,45,"nameString"],[661,64,614,55],[661,65,614,56],[662,4,615,4],[662,9,615,9],[662,13,615,15,"component"],[662,22,615,24],[662,26,615,28,"_components"],[662,37,615,39],[662,38,615,40,"values"],[662,44,615,46],[662,45,615,47],[662,46,615,48],[662,48,615,50],[663,6,616,8,"container"],[663,15,616,17],[663,16,616,18,"addComponent"],[663,28,616,30],[663,29,616,31,"component"],[663,38,616,40],[663,39,616,41],[664,4,617,4],[665,4,618,4],[665,8,618,10,"newApp"],[665,14,618,16],[665,17,618,19],[665,21,618,23,"FirebaseServerAppImpl"],[665,42,618,44],[665,43,618,45,"appOptions"],[665,53,618,55],[665,55,618,57,"_serverAppConfig"],[665,71,618,73],[665,73,618,75,"nameString"],[665,83,618,85],[665,85,618,87,"container"],[665,94,618,96],[665,95,618,97],[666,4,619,4,"_serverApps"],[666,15,619,15],[666,16,619,16,"set"],[666,19,619,19],[666,20,619,20,"nameString"],[666,30,619,30],[666,32,619,32,"newApp"],[666,38,619,38],[666,39,619,39],[667,4,620,4],[667,11,620,11,"newApp"],[667,17,620,17],[668,2,621,0],[669,2,622,0],[670,0,623,0],[671,0,624,0],[672,0,625,0],[673,0,626,0],[674,0,627,0],[675,0,628,0],[676,0,629,0],[677,0,630,0],[678,0,631,0],[679,0,632,0],[680,0,633,0],[681,0,634,0],[682,0,635,0],[683,0,636,0],[684,0,637,0],[685,0,638,0],[686,0,639,0],[687,0,640,0],[688,0,641,0],[689,0,642,0],[690,0,643,0],[691,0,644,0],[692,0,645,0],[693,0,646,0],[694,0,647,0],[695,0,648,0],[696,0,649,0],[697,0,650,0],[698,2,651,0],[698,11,651,9,"getApp"],[698,17,651,15,"getApp"],[698,18,651,15],[698,20,651,43],[699,4,651,43],[699,8,651,16,"name"],[699,12,651,20],[699,15,651,20,"arguments"],[699,24,651,20],[699,25,651,20,"length"],[699,31,651,20],[699,39,651,20,"arguments"],[699,48,651,20],[699,56,651,20,"undefined"],[699,65,651,20],[699,68,651,20,"arguments"],[699,77,651,20],[699,83,651,23,"DEFAULT_ENTRY_NAME"],[699,101,651,41],[700,4,652,4],[700,8,652,10,"app"],[700,11,652,13],[700,14,652,16,"_apps"],[700,19,652,21],[700,20,652,22,"get"],[700,23,652,25],[700,24,652,26,"name"],[700,28,652,30],[700,29,652,31],[701,4,653,4],[701,8,653,8],[701,9,653,9,"app"],[701,12,653,12],[701,16,653,16,"name"],[701,20,653,20],[701,25,653,25,"DEFAULT_ENTRY_NAME"],[701,43,653,43],[701,47,653,47],[701,51,653,47,"getDefaultAppConfig"],[701,76,653,66],[701,78,653,67],[701,79,653,68],[701,81,653,70],[702,6,654,8],[702,13,654,15,"initializeApp"],[702,26,654,28],[702,27,654,29],[702,28,654,30],[703,4,655,4],[704,4,656,4],[704,8,656,8],[704,9,656,9,"app"],[704,12,656,12],[704,14,656,14],[705,6,657,8],[705,12,657,14,"ERROR_FACTORY"],[705,25,657,27],[705,26,657,28,"create"],[705,32,657,34],[705,33,657,35],[705,41,657,43],[705,42,657,44],[705,65,657,67],[706,8,657,69,"appName"],[706,15,657,76],[706,17,657,78,"name"],[707,6,657,83],[707,7,657,84],[707,8,657,85],[708,4,658,4],[709,4,659,4],[709,11,659,11,"app"],[709,14,659,14],[710,2,660,0],[711,2,661,0],[712,0,662,0],[713,0,663,0],[714,0,664,0],[715,2,665,0],[715,11,665,9,"getApps"],[715,18,665,16,"getApps"],[715,19,665,16],[715,21,665,19],[716,4,666,4],[716,11,666,11,"Array"],[716,16,666,16],[716,17,666,17,"from"],[716,21,666,21],[716,22,666,22,"_apps"],[716,27,666,27],[716,28,666,28,"values"],[716,34,666,34],[716,35,666,35],[716,36,666,36],[716,37,666,37],[717,2,667,0],[718,2,668,0],[719,0,669,0],[720,0,670,0],[721,0,671,0],[722,0,672,0],[723,0,673,0],[724,0,674,0],[725,0,675,0],[726,0,676,0],[727,0,677,0],[728,0,678,0],[729,0,679,0],[730,0,680,0],[731,0,681,0],[732,0,682,0],[733,0,683,0],[734,0,684,0],[735,2,668,0],[735,11,685,15,"deleteApp"],[735,20,685,24,"deleteApp"],[735,21,685,24,"_x"],[735,23,685,24],[736,4,685,24],[736,11,685,24,"_deleteApp"],[736,21,685,24],[736,22,685,24,"apply"],[736,27,685,24],[736,34,685,24,"arguments"],[736,43,685,24],[737,2,685,24],[738,2,706,0],[739,0,707,0],[740,0,708,0],[741,0,709,0],[742,0,710,0],[743,0,711,0],[744,0,712,0],[745,0,713,0],[746,2,706,0],[746,11,706,0,"_deleteApp"],[746,22,706,0],[747,4,706,0,"_deleteApp"],[747,14,706,0],[747,21,706,0,"_asyncToGenerator2"],[747,39,706,0],[747,40,706,0,"default"],[747,47,706,0],[747,49,685,0],[747,60,685,25,"app"],[747,63,685,28],[747,65,685,30],[748,6,686,4],[748,10,686,8,"cleanupProviders"],[748,26,686,24],[748,29,686,27],[748,34,686,32],[749,6,687,4],[749,10,687,10,"name"],[749,14,687,14],[749,17,687,17,"app"],[749,20,687,20],[749,21,687,21,"name"],[749,25,687,25],[750,6,688,4],[750,10,688,8,"_apps"],[750,15,688,13],[750,16,688,14,"has"],[750,19,688,17],[750,20,688,18,"name"],[750,24,688,22],[750,25,688,23],[750,27,688,25],[751,8,689,8,"cleanupProviders"],[751,24,689,24],[751,27,689,27],[751,31,689,31],[752,8,690,8,"_apps"],[752,13,690,13],[752,14,690,14,"delete"],[752,20,690,20],[752,21,690,21,"name"],[752,25,690,25],[752,26,690,26],[753,6,691,4],[753,7,691,5],[753,13,692,9],[753,17,692,13,"_serverApps"],[753,28,692,24],[753,29,692,25,"has"],[753,32,692,28],[753,33,692,29,"name"],[753,37,692,33],[753,38,692,34],[753,40,692,36],[754,8,693,8],[754,12,693,14,"firebaseServerApp"],[754,29,693,31],[754,32,693,34,"app"],[754,35,693,37],[755,8,694,8],[755,12,694,12,"firebaseServerApp"],[755,29,694,29],[755,30,694,30,"decRefCount"],[755,41,694,41],[755,42,694,42],[755,43,694,43],[755,47,694,47],[755,48,694,48],[755,50,694,50],[756,10,695,12,"_serverApps"],[756,21,695,23],[756,22,695,24,"delete"],[756,28,695,30],[756,29,695,31,"name"],[756,33,695,35],[756,34,695,36],[757,10,696,12,"cleanupProviders"],[757,26,696,28],[757,29,696,31],[757,33,696,35],[758,8,697,8],[759,6,698,4],[760,6,699,4],[760,10,699,8,"cleanupProviders"],[760,26,699,24],[760,28,699,26],[761,8,700,8],[761,14,700,14,"Promise"],[761,21,700,21],[761,22,700,22,"all"],[761,25,700,25],[761,26,700,26,"app"],[761,29,700,29],[761,30,700,30,"container"],[761,39,700,39],[761,40,701,13,"getProviders"],[761,52,701,25],[761,53,701,26],[761,54,701,27],[761,55,702,13,"map"],[761,58,702,16],[761,59,702,17,"provider"],[761,67,702,25],[761,71,702,29,"provider"],[761,79,702,37],[761,80,702,38,"delete"],[761,86,702,44],[761,87,702,45],[761,88,702,46],[761,89,702,47],[761,90,702,48],[762,8,703,8,"app"],[762,11,703,11],[762,12,703,12,"isDeleted"],[762,21,703,21],[762,24,703,24],[762,28,703,28],[763,6,704,4],[764,4,705,0],[764,5,705,1],[765,4,705,1],[765,11,705,1,"_deleteApp"],[765,21,705,1],[765,22,705,1,"apply"],[765,27,705,1],[765,34,705,1,"arguments"],[765,43,705,1],[766,2,705,1],[767,2,714,0],[767,11,714,9,"registerVersion"],[767,26,714,24,"registerVersion"],[767,27,714,25,"libraryKeyOrName"],[767,43,714,41],[767,45,714,43,"version"],[767,52,714,50],[767,54,714,52,"variant"],[767,61,714,59],[767,63,714,61],[768,4,715,4],[768,8,715,8,"_a"],[768,10,715,10],[769,4,716,4],[770,4,717,4],[771,4,718,4],[771,8,718,8,"library"],[771,15,718,15],[771,18,718,18],[771,19,718,19,"_a"],[771,21,718,21],[771,24,718,24,"PLATFORM_LOG_STRING"],[771,43,718,43],[771,44,718,44,"libraryKeyOrName"],[771,60,718,60],[771,61,718,61],[771,67,718,67],[771,71,718,71],[771,75,718,75,"_a"],[771,77,718,77],[771,82,718,77,"undefined"],[771,91,718,88],[771,94,718,91,"_a"],[771,96,718,93],[771,99,718,96,"libraryKeyOrName"],[771,115,718,112],[772,4,719,4],[772,8,719,8,"variant"],[772,15,719,15],[772,17,719,17],[773,6,720,8,"library"],[773,13,720,15],[773,17,720,19],[773,21,720,23,"variant"],[773,28,720,30],[773,30,720,32],[774,4,721,4],[775,4,722,4],[775,8,722,10,"libraryMismatch"],[775,23,722,25],[775,26,722,28,"library"],[775,33,722,35],[775,34,722,36,"match"],[775,39,722,41],[775,40,722,42],[775,47,722,49],[775,48,722,50],[776,4,723,4],[776,8,723,10,"versionMismatch"],[776,23,723,25],[776,26,723,28,"version"],[776,33,723,35],[776,34,723,36,"match"],[776,39,723,41],[776,40,723,42],[776,47,723,49],[776,48,723,50],[777,4,724,4],[777,8,724,8,"libraryMismatch"],[777,23,724,23],[777,27,724,27,"versionMismatch"],[777,42,724,42],[777,44,724,44],[778,6,725,8],[778,10,725,14,"warning"],[778,17,725,21],[778,20,725,24],[778,21,726,12],[778,52,726,43,"library"],[778,59,726,50],[778,78,726,69,"version"],[778,85,726,76],[778,89,726,80],[778,90,727,9],[779,6,728,8],[779,10,728,12,"libraryMismatch"],[779,25,728,27],[779,27,728,29],[780,8,729,12,"warning"],[780,15,729,19],[780,16,729,20,"push"],[780,20,729,24],[780,21,729,25],[780,38,729,42,"library"],[780,45,729,49],[780,96,729,100],[780,97,729,101],[781,6,730,8],[782,6,731,8],[782,10,731,12,"libraryMismatch"],[782,25,731,27],[782,29,731,31,"versionMismatch"],[782,44,731,46],[782,46,731,48],[783,8,732,12,"warning"],[783,15,732,19],[783,16,732,20,"push"],[783,20,732,24],[783,21,732,25],[783,26,732,30],[783,27,732,31],[784,6,733,8],[785,6,734,8],[785,10,734,12,"versionMismatch"],[785,25,734,27],[785,27,734,29],[786,8,735,12,"warning"],[786,15,735,19],[786,16,735,20,"push"],[786,20,735,24],[786,21,735,25],[786,38,735,42,"version"],[786,45,735,49],[786,96,735,100],[786,97,735,101],[787,6,736,8],[788,6,737,8,"logger"],[788,12,737,14],[788,13,737,15,"warn"],[788,17,737,19],[788,18,737,20,"warning"],[788,25,737,27],[788,26,737,28,"join"],[788,30,737,32],[788,31,737,33],[788,34,737,36],[788,35,737,37],[788,36,737,38],[789,6,738,8],[790,4,739,4],[791,4,740,4,"_registerComponent"],[791,22,740,22],[791,23,740,23],[791,27,740,27,"Component"],[791,47,740,36],[791,48,740,37],[791,51,740,40,"library"],[791,58,740,47],[791,68,740,57],[791,70,740,59],[791,77,740,66],[792,6,740,68,"library"],[792,13,740,75],[793,6,740,77,"version"],[794,4,740,85],[794,5,740,86],[794,6,740,87],[794,8,740,89],[794,17,740,98],[794,18,740,99],[794,45,740,126],[794,46,740,127],[794,47,740,128],[795,2,741,0],[796,2,742,0],[797,0,743,0],[798,0,744,0],[799,0,745,0],[800,0,746,0],[801,0,747,0],[802,0,748,0],[803,2,749,0],[803,11,749,9,"onLog"],[803,16,749,14,"onLog"],[803,17,749,15,"logCallback"],[803,28,749,26],[803,30,749,28,"options"],[803,37,749,35],[803,39,749,37],[804,4,750,4],[804,8,750,8,"logCallback"],[804,19,750,19],[804,24,750,24],[804,28,750,28],[804,32,750,32],[804,39,750,39,"logCallback"],[804,50,750,50],[804,55,750,55],[804,65,750,65],[804,67,750,67],[805,6,751,8],[805,12,751,14,"ERROR_FACTORY"],[805,25,751,27],[805,26,751,28,"create"],[805,32,751,34],[805,33,751,35],[805,55,751,57],[805,56,751,58],[805,91,751,93],[805,92,751,94],[806,4,752,4],[807,4,753,4],[807,8,753,4,"setUserLogHandler"],[807,33,753,21],[807,35,753,22,"logCallback"],[807,46,753,33],[807,48,753,35,"options"],[807,55,753,42],[807,56,753,43],[808,2,754,0],[809,2,755,0],[810,0,756,0],[811,0,757,0],[812,0,758,0],[813,0,759,0],[814,0,760,0],[815,0,761,0],[816,0,762,0],[817,0,763,0],[818,2,764,0],[818,11,764,9,"setLogLevel"],[818,22,764,20,"setLogLevel"],[818,23,764,21,"logLevel"],[818,31,764,29],[818,33,764,31],[819,4,765,4],[819,8,765,4,"setLogLevel$1"],[819,27,765,17],[819,29,765,18,"logLevel"],[819,37,765,26],[819,38,765,27],[820,2,766,0],[822,2,768,0],[823,0,769,0],[824,0,770,0],[825,0,771,0],[826,0,772,0],[827,0,773,0],[828,0,774,0],[829,0,775,0],[830,0,776,0],[831,0,777,0],[832,0,778,0],[833,0,779,0],[834,0,780,0],[835,0,781,0],[836,0,782,0],[837,0,783,0],[838,2,784,0],[838,6,784,6,"DB_NAME"],[838,13,784,13],[838,16,784,16],[838,45,784,45],[839,2,785,0],[839,6,785,6,"DB_VERSION"],[839,16,785,16],[839,19,785,19],[839,20,785,20],[840,2,786,0],[840,6,786,6,"STORE_NAME"],[840,16,786,16],[840,19,786,19],[840,45,786,45],[841,2,787,0],[841,6,787,4,"dbPromise"],[841,15,787,13],[841,18,787,16],[841,22,787,20],[842,2,788,0],[842,11,788,9,"getDbPromise"],[842,23,788,21,"getDbPromise"],[842,24,788,21],[842,26,788,24],[843,4,789,4],[843,8,789,8],[843,9,789,9,"dbPromise"],[843,18,789,18],[843,20,789,20],[844,6,790,8,"dbPromise"],[844,15,790,17],[844,18,790,20],[844,22,790,20,"openDB"],[844,33,790,26],[844,35,790,27,"DB_NAME"],[844,42,790,34],[844,44,790,36,"DB_VERSION"],[844,54,790,46],[844,56,790,48],[845,8,791,12,"upgrade"],[845,15,791,19],[845,17,791,21,"upgrade"],[845,18,791,22,"db"],[845,20,791,24],[845,22,791,26,"oldVersion"],[845,32,791,36],[845,37,791,41],[846,10,792,16],[847,10,793,16],[848,10,794,16],[849,10,795,16],[850,10,796,16],[851,10,797,16],[851,18,797,24,"oldVersion"],[851,28,797,34],[852,12,798,20],[852,17,798,25],[852,18,798,26],[853,14,799,24],[853,18,799,28],[854,16,800,28,"db"],[854,18,800,30],[854,19,800,31,"createObjectStore"],[854,36,800,48],[854,37,800,49,"STORE_NAME"],[854,47,800,59],[854,48,800,60],[855,14,801,24],[855,15,801,25],[855,16,802,24],[855,23,802,31,"e"],[855,24,802,32],[855,26,802,34],[856,16,803,28],[857,16,804,28],[858,16,805,28],[859,16,806,28,"console"],[859,23,806,35],[859,24,806,36,"warn"],[859,28,806,40],[859,29,806,41,"e"],[859,30,806,42],[859,31,806,43],[860,14,807,24],[861,10,808,16],[862,8,809,12],[863,6,810,8],[863,7,810,9],[863,8,810,10],[863,9,810,11,"catch"],[863,14,810,16],[863,15,810,17,"e"],[863,16,810,18],[863,20,810,22],[864,8,811,12],[864,14,811,18,"ERROR_FACTORY"],[864,27,811,31],[864,28,811,32,"create"],[864,34,811,38],[864,35,811,39],[864,45,811,49],[864,46,811,50],[864,71,811,75],[865,10,812,16,"originalErrorMessage"],[865,30,812,36],[865,32,812,38,"e"],[865,33,812,39],[865,34,812,40,"message"],[866,8,813,12],[866,9,813,13],[866,10,813,14],[867,6,814,8],[867,7,814,9],[867,8,814,10],[868,4,815,4],[869,4,816,4],[869,11,816,11,"dbPromise"],[869,20,816,20],[870,2,817,0],[871,2,817,1],[871,11,818,15,"readHeartbeatsFromIndexedDB"],[871,38,818,42,"readHeartbeatsFromIndexedDB"],[871,39,818,42,"_x2"],[871,42,818,42],[872,4,818,42],[872,11,818,42,"_readHeartbeatsFromIndexedDB"],[872,39,818,42],[872,40,818,42,"apply"],[872,45,818,42],[872,52,818,42,"arguments"],[872,61,818,42],[873,2,818,42],[874,2,818,42],[874,11,818,42,"_readHeartbeatsFromIndexedDB"],[874,40,818,42],[875,4,818,42,"_readHeartbeatsFromIndexedDB"],[875,32,818,42],[875,39,818,42,"_asyncToGenerator2"],[875,57,818,42],[875,58,818,42,"default"],[875,65,818,42],[875,67,818,0],[875,78,818,43,"app"],[875,81,818,46],[875,83,818,48],[876,6,819,4],[876,10,819,8],[877,8,820,8],[877,12,820,14,"db"],[877,14,820,16],[877,23,820,25,"getDbPromise"],[877,35,820,37],[877,36,820,38],[877,37,820,39],[878,8,821,8],[878,12,821,14,"tx"],[878,14,821,16],[878,17,821,19,"db"],[878,19,821,21],[878,20,821,22,"transaction"],[878,31,821,33],[878,32,821,34,"STORE_NAME"],[878,42,821,44],[878,43,821,45],[879,8,822,8],[879,12,822,14,"result"],[879,18,822,20],[879,27,822,29,"tx"],[879,29,822,31],[879,30,822,32,"objectStore"],[879,41,822,43],[879,42,822,44,"STORE_NAME"],[879,52,822,54],[879,53,822,55],[879,54,822,56,"get"],[879,57,822,59],[879,58,822,60,"computeKey"],[879,68,822,70],[879,69,822,71,"app"],[879,72,822,74],[879,73,822,75],[879,74,822,76],[880,8,823,8],[881,8,824,8],[882,8,825,8],[882,14,825,14,"tx"],[882,16,825,16],[882,17,825,17,"done"],[882,21,825,21],[883,8,826,8],[883,15,826,15,"result"],[883,21,826,21],[884,6,827,4],[884,7,827,5],[884,8,828,4],[884,15,828,11,"e"],[884,16,828,12],[884,18,828,14],[885,8,829,8],[885,12,829,12,"e"],[885,13,829,13],[885,25,829,25,"FirebaseError"],[885,44,829,38],[885,46,829,40],[886,10,830,12,"logger"],[886,16,830,18],[886,17,830,19,"warn"],[886,21,830,23],[886,22,830,24,"e"],[886,23,830,25],[886,24,830,26,"message"],[886,31,830,33],[886,32,830,34],[887,8,831,8],[887,9,831,9],[887,15,832,13],[888,10,833,12],[888,14,833,18,"idbGetError"],[888,25,833,29],[888,28,833,32,"ERROR_FACTORY"],[888,41,833,45],[888,42,833,46,"create"],[888,48,833,52],[888,49,833,53],[888,58,833,62],[888,59,833,63],[888,83,833,87],[889,12,834,16,"originalErrorMessage"],[889,32,834,36],[889,34,834,38,"e"],[889,35,834,39],[889,40,834,44],[889,44,834,48],[889,48,834,52,"e"],[889,49,834,53],[889,54,834,53,"undefined"],[889,63,834,64],[889,66,834,64,"undefined"],[889,75,834,64],[889,78,834,76,"e"],[889,79,834,77],[889,80,834,78,"message"],[890,10,835,12],[890,11,835,13],[890,12,835,14],[891,10,836,12,"logger"],[891,16,836,18],[891,17,836,19,"warn"],[891,21,836,23],[891,22,836,24,"idbGetError"],[891,33,836,35],[891,34,836,36,"message"],[891,41,836,43],[891,42,836,44],[892,8,837,8],[893,6,838,4],[894,4,839,0],[894,5,839,1],[895,4,839,1],[895,11,839,1,"_readHeartbeatsFromIndexedDB"],[895,39,839,1],[895,40,839,1,"apply"],[895,45,839,1],[895,52,839,1,"arguments"],[895,61,839,1],[896,2,839,1],[897,2,839,1],[897,11,840,15,"writeHeartbeatsToIndexedDB"],[897,37,840,41,"writeHeartbeatsToIndexedDB"],[897,38,840,41,"_x3"],[897,41,840,41],[897,43,840,41,"_x4"],[897,46,840,41],[898,4,840,41],[898,11,840,41,"_writeHeartbeatsToIndexedDB"],[898,38,840,41],[898,39,840,41,"apply"],[898,44,840,41],[898,51,840,41,"arguments"],[898,60,840,41],[899,2,840,41],[900,2,840,41],[900,11,840,41,"_writeHeartbeatsToIndexedDB"],[900,39,840,41],[901,4,840,41,"_writeHeartbeatsToIndexedDB"],[901,31,840,41],[901,38,840,41,"_asyncToGenerator2"],[901,56,840,41],[901,57,840,41,"default"],[901,64,840,41],[901,66,840,0],[901,77,840,42,"app"],[901,80,840,45],[901,82,840,47,"heartbeatObject"],[901,97,840,62],[901,99,840,64],[902,6,841,4],[902,10,841,8],[903,8,842,8],[903,12,842,14,"db"],[903,14,842,16],[903,23,842,25,"getDbPromise"],[903,35,842,37],[903,36,842,38],[903,37,842,39],[904,8,843,8],[904,12,843,14,"tx"],[904,14,843,16],[904,17,843,19,"db"],[904,19,843,21],[904,20,843,22,"transaction"],[904,31,843,33],[904,32,843,34,"STORE_NAME"],[904,42,843,44],[904,44,843,46],[904,55,843,57],[904,56,843,58],[905,8,844,8],[905,12,844,14,"objectStore"],[905,23,844,25],[905,26,844,28,"tx"],[905,28,844,30],[905,29,844,31,"objectStore"],[905,40,844,42],[905,41,844,43,"STORE_NAME"],[905,51,844,53],[905,52,844,54],[906,8,845,8],[906,14,845,14,"objectStore"],[906,25,845,25],[906,26,845,26,"put"],[906,29,845,29],[906,30,845,30,"heartbeatObject"],[906,45,845,45],[906,47,845,47,"computeKey"],[906,57,845,57],[906,58,845,58,"app"],[906,61,845,61],[906,62,845,62],[906,63,845,63],[907,8,846,8],[907,14,846,14,"tx"],[907,16,846,16],[907,17,846,17,"done"],[907,21,846,21],[908,6,847,4],[908,7,847,5],[908,8,848,4],[908,15,848,11,"e"],[908,16,848,12],[908,18,848,14],[909,8,849,8],[909,12,849,12,"e"],[909,13,849,13],[909,25,849,25,"FirebaseError"],[909,44,849,38],[909,46,849,40],[910,10,850,12,"logger"],[910,16,850,18],[910,17,850,19,"warn"],[910,21,850,23],[910,22,850,24,"e"],[910,23,850,25],[910,24,850,26,"message"],[910,31,850,33],[910,32,850,34],[911,8,851,8],[911,9,851,9],[911,15,852,13],[912,10,853,12],[912,14,853,18,"idbGetError"],[912,25,853,29],[912,28,853,32,"ERROR_FACTORY"],[912,41,853,45],[912,42,853,46,"create"],[912,48,853,52],[912,49,853,53],[912,58,853,62],[912,59,853,63],[912,85,853,89],[913,12,854,16,"originalErrorMessage"],[913,32,854,36],[913,34,854,38,"e"],[913,35,854,39],[913,40,854,44],[913,44,854,48],[913,48,854,52,"e"],[913,49,854,53],[913,54,854,53,"undefined"],[913,63,854,64],[913,66,854,64,"undefined"],[913,75,854,64],[913,78,854,76,"e"],[913,79,854,77],[913,80,854,78,"message"],[914,10,855,12],[914,11,855,13],[914,12,855,14],[915,10,856,12,"logger"],[915,16,856,18],[915,17,856,19,"warn"],[915,21,856,23],[915,22,856,24,"idbGetError"],[915,33,856,35],[915,34,856,36,"message"],[915,41,856,43],[915,42,856,44],[916,8,857,8],[917,6,858,4],[918,4,859,0],[918,5,859,1],[919,4,859,1],[919,11,859,1,"_writeHeartbeatsToIndexedDB"],[919,38,859,1],[919,39,859,1,"apply"],[919,44,859,1],[919,51,859,1,"arguments"],[919,60,859,1],[920,2,859,1],[921,2,860,0],[921,11,860,9,"computeKey"],[921,21,860,19,"computeKey"],[921,22,860,20,"app"],[921,25,860,23],[921,27,860,25],[922,4,861,4],[922,11,861,11],[922,14,861,14,"app"],[922,17,861,17],[922,18,861,18,"name"],[922,22,861,22],[922,26,861,26,"app"],[922,29,861,29],[922,30,861,30,"options"],[922,37,861,37],[922,38,861,38,"appId"],[922,43,861,43],[922,45,861,45],[923,2,862,0],[925,2,864,0],[926,0,865,0],[927,0,866,0],[928,0,867,0],[929,0,868,0],[930,0,869,0],[931,0,870,0],[932,0,871,0],[933,0,872,0],[934,0,873,0],[935,0,874,0],[936,0,875,0],[937,0,876,0],[938,0,877,0],[939,0,878,0],[940,0,879,0],[941,2,880,0],[941,6,880,6,"MAX_HEADER_BYTES"],[941,22,880,22],[941,25,880,25],[941,29,880,29],[942,2,881,0],[943,2,882,0],[943,6,882,6,"STORED_HEARTBEAT_RETENTION_MAX_MILLIS"],[943,43,882,43],[943,56,882,70],[944,2,882,71],[944,6,883,6,"HeartbeatServiceImpl"],[944,26,883,26],[945,4,884,4],[945,13,884,4,"HeartbeatServiceImpl"],[945,34,884,16,"container"],[945,43,884,25],[945,45,884,27],[946,6,884,27],[946,10,884,27,"_classCallCheck2"],[946,26,884,27],[946,27,884,27,"default"],[946,34,884,27],[946,42,884,27,"HeartbeatServiceImpl"],[946,62,884,27],[947,6,885,8],[947,10,885,12],[947,11,885,13,"container"],[947,20,885,22],[947,23,885,25,"container"],[947,32,885,34],[948,6,886,8],[949,0,887,0],[950,0,888,0],[951,0,889,0],[952,0,890,0],[953,0,891,0],[954,0,892,0],[955,0,893,0],[956,0,894,0],[957,6,895,8],[957,10,895,12],[957,11,895,13,"_heartbeatsCache"],[957,27,895,29],[957,30,895,32],[957,34,895,36],[958,6,896,8],[958,10,896,14,"app"],[958,13,896,17],[958,16,896,20],[958,20,896,24],[958,21,896,25,"container"],[958,30,896,34],[958,31,896,35,"getProvider"],[958,42,896,46],[958,43,896,47],[958,48,896,52],[958,49,896,53],[958,50,896,54,"getImmediate"],[958,62,896,66],[958,63,896,67],[958,64,896,68],[959,6,897,8],[959,10,897,12],[959,11,897,13,"_storage"],[959,19,897,21],[959,22,897,24],[959,26,897,28,"HeartbeatStorageImpl"],[959,46,897,48],[959,47,897,49,"app"],[959,50,897,52],[959,51,897,53],[960,6,898,8],[960,10,898,12],[960,11,898,13,"_heartbeatsCachePromise"],[960,34,898,36],[960,37,898,39],[960,41,898,43],[960,42,898,44,"_storage"],[960,50,898,52],[960,51,898,53,"read"],[960,55,898,57],[960,56,898,58],[960,57,898,59],[960,58,898,60,"then"],[960,62,898,64],[960,63,898,65,"result"],[960,69,898,71],[960,73,898,75],[961,8,899,12],[961,12,899,16],[961,13,899,17,"_heartbeatsCache"],[961,29,899,33],[961,32,899,36,"result"],[961,38,899,42],[962,8,900,12],[962,15,900,19,"result"],[962,21,900,25],[963,6,901,8],[963,7,901,9],[963,8,901,10],[964,4,902,4],[965,4,903,4],[966,0,904,0],[967,0,905,0],[968,0,906,0],[969,0,907,0],[970,0,908,0],[971,0,909,0],[972,4,903,4],[972,15,903,4,"_createClass2"],[972,28,903,4],[972,29,903,4,"default"],[972,36,903,4],[972,38,903,4,"HeartbeatServiceImpl"],[972,58,903,4],[973,6,903,4,"key"],[973,9,903,4],[974,6,903,4,"value"],[974,11,903,4],[975,8,903,4],[975,12,903,4,"_triggerHeartbeat"],[975,29,903,4],[975,36,903,4,"_asyncToGenerator2"],[975,54,903,4],[975,55,903,4,"default"],[975,62,903,4],[975,64,910,4],[975,77,910,29],[976,10,911,8],[976,14,911,12,"_a"],[976,16,911,14],[976,18,911,16,"_b"],[976,20,911,18],[977,10,912,8],[977,14,912,12],[978,12,913,12],[978,16,913,18,"platformLogger"],[978,30,913,32],[978,33,913,35],[978,37,913,39],[978,38,913,40,"container"],[978,47,913,49],[978,48,914,17,"getProvider"],[978,59,914,28],[978,60,914,29],[978,77,914,46],[978,78,914,47],[978,79,915,17,"getImmediate"],[978,91,915,29],[978,92,915,30],[978,93,915,31],[979,12,916,12],[980,12,917,12],[981,12,918,12],[981,16,918,18,"agent"],[981,21,918,23],[981,24,918,26,"platformLogger"],[981,38,918,40],[981,39,918,41,"getPlatformInfoString"],[981,60,918,62],[981,61,918,63],[981,62,918,64],[982,12,919,12],[982,16,919,18,"date"],[982,20,919,22],[982,23,919,25,"getUTCDateString"],[982,39,919,41],[982,40,919,42],[982,41,919,43],[983,12,920,12],[983,16,920,16],[983,17,920,17],[983,18,920,18,"_a"],[983,20,920,20],[983,23,920,23],[983,27,920,27],[983,28,920,28,"_heartbeatsCache"],[983,44,920,44],[983,50,920,50],[983,54,920,54],[983,58,920,58,"_a"],[983,60,920,60],[983,65,920,60,"undefined"],[983,74,920,71],[983,77,920,71,"undefined"],[983,86,920,71],[983,89,920,83,"_a"],[983,91,920,85],[983,92,920,86,"heartbeats"],[983,102,920,96],[983,107,920,101],[983,111,920,105],[983,113,920,107],[984,14,921,16],[984,18,921,20],[984,19,921,21,"_heartbeatsCache"],[984,35,921,37],[984,44,921,46],[984,48,921,50],[984,49,921,51,"_heartbeatsCachePromise"],[984,72,921,74],[985,14,922,16],[986,14,923,16],[986,18,923,20],[986,19,923,21],[986,20,923,22,"_b"],[986,22,923,24],[986,25,923,27],[986,29,923,31],[986,30,923,32,"_heartbeatsCache"],[986,46,923,48],[986,52,923,54],[986,56,923,58],[986,60,923,62,"_b"],[986,62,923,64],[986,67,923,64,"undefined"],[986,76,923,75],[986,79,923,75,"undefined"],[986,88,923,75],[986,91,923,87,"_b"],[986,93,923,89],[986,94,923,90,"heartbeats"],[986,104,923,100],[986,109,923,105],[986,113,923,109],[986,115,923,111],[987,16,924,20],[988,14,925,16],[989,12,926,12],[990,12,927,12],[991,12,928,12],[992,12,929,12],[992,16,929,16],[992,20,929,20],[992,21,929,21,"_heartbeatsCache"],[992,37,929,37],[992,38,929,38,"lastSentHeartbeatDate"],[992,59,929,59],[992,64,929,64,"date"],[992,68,929,68],[992,72,930,16],[992,76,930,20],[992,77,930,21,"_heartbeatsCache"],[992,93,930,37],[992,94,930,38,"heartbeats"],[992,104,930,48],[992,105,930,49,"some"],[992,109,930,53],[992,110,930,54,"singleDateHeartbeat"],[992,129,930,73],[992,133,930,77,"singleDateHeartbeat"],[992,152,930,96],[992,153,930,97,"date"],[992,157,930,101],[992,162,930,106,"date"],[992,166,930,110],[992,167,930,111],[992,169,930,113],[993,14,931,16],[994,12,932,12],[994,13,932,13],[994,19,933,17],[995,14,934,16],[996,14,935,16],[996,18,935,20],[996,19,935,21,"_heartbeatsCache"],[996,35,935,37],[996,36,935,38,"heartbeats"],[996,46,935,48],[996,47,935,49,"push"],[996,51,935,53],[996,52,935,54],[997,16,935,56,"date"],[997,20,935,60],[998,16,935,62,"agent"],[999,14,935,68],[999,15,935,69],[999,16,935,70],[1000,12,936,12],[1001,12,937,12],[1002,12,938,12],[1002,16,938,16],[1002,17,938,17,"_heartbeatsCache"],[1002,33,938,33],[1002,34,938,34,"heartbeats"],[1002,44,938,44],[1002,47,939,16],[1002,51,939,20],[1002,52,939,21,"_heartbeatsCache"],[1002,68,939,37],[1002,69,939,38,"heartbeats"],[1002,79,939,48],[1002,80,939,49,"filter"],[1002,86,939,55],[1002,87,939,56,"singleDateHeartbeat"],[1002,106,939,75],[1002,110,939,79],[1003,14,940,20],[1003,18,940,26,"hbTimestamp"],[1003,29,940,37],[1003,32,940,40],[1003,36,940,44,"Date"],[1003,40,940,48],[1003,41,940,49,"singleDateHeartbeat"],[1003,60,940,68],[1003,61,940,69,"date"],[1003,65,940,73],[1003,66,940,74],[1003,67,940,75,"valueOf"],[1003,74,940,82],[1003,75,940,83],[1003,76,940,84],[1004,14,941,20],[1004,18,941,26,"now"],[1004,21,941,29],[1004,24,941,32,"Date"],[1004,28,941,36],[1004,29,941,37,"now"],[1004,32,941,40],[1004,33,941,41],[1004,34,941,42],[1005,14,942,20],[1005,21,942,27,"now"],[1005,24,942,30],[1005,27,942,33,"hbTimestamp"],[1005,38,942,44],[1005,42,942,48,"STORED_HEARTBEAT_RETENTION_MAX_MILLIS"],[1005,79,942,85],[1006,12,943,16],[1006,13,943,17],[1006,14,943,18],[1007,12,944,12],[1007,19,944,19],[1007,23,944,23],[1007,24,944,24,"_storage"],[1007,32,944,32],[1007,33,944,33,"overwrite"],[1007,42,944,42],[1007,43,944,43],[1007,47,944,47],[1007,48,944,48,"_heartbeatsCache"],[1007,64,944,64],[1007,65,944,65],[1008,10,945,8],[1008,11,945,9],[1008,12,946,8],[1008,19,946,15,"e"],[1008,20,946,16],[1008,22,946,18],[1009,12,947,12,"logger"],[1009,18,947,18],[1009,19,947,19,"warn"],[1009,23,947,23],[1009,24,947,24,"e"],[1009,25,947,25],[1009,26,947,26],[1010,10,948,8],[1011,8,949,4],[1011,9,949,5],[1012,8,949,5],[1012,17,910,10,"triggerHeartbeat"],[1012,33,910,26,"triggerHeartbeat"],[1012,34,910,26],[1013,10,910,26],[1013,17,910,26,"_triggerHeartbeat"],[1013,34,910,26],[1013,35,910,26,"apply"],[1013,40,910,26],[1013,47,910,26,"arguments"],[1013,56,910,26],[1014,8,910,26],[1015,8,910,26],[1015,15,910,10,"triggerHeartbeat"],[1015,31,910,26],[1016,6,910,26],[1017,6,950,4],[1018,0,951,0],[1019,0,952,0],[1020,0,953,0],[1021,0,954,0],[1022,0,955,0],[1023,0,956,0],[1024,6,950,4],[1025,4,950,4],[1026,6,950,4,"key"],[1026,9,950,4],[1027,6,950,4,"value"],[1027,11,950,4],[1028,8,950,4],[1028,12,950,4,"_getHeartbeatsHeader"],[1028,32,950,4],[1028,39,950,4,"_asyncToGenerator2"],[1028,57,950,4],[1028,58,950,4,"default"],[1028,65,950,4],[1028,67,957,4],[1028,80,957,32],[1029,10,958,8],[1029,14,958,12,"_a"],[1029,16,958,14],[1030,10,959,8],[1030,14,959,12],[1031,12,960,12],[1031,16,960,16],[1031,20,960,20],[1031,21,960,21,"_heartbeatsCache"],[1031,37,960,37],[1031,42,960,42],[1031,46,960,46],[1031,48,960,48],[1032,14,961,16],[1032,20,961,22],[1032,24,961,26],[1032,25,961,27,"_heartbeatsCachePromise"],[1032,48,961,50],[1033,12,962,12],[1034,12,963,12],[1035,12,964,12],[1035,16,964,16],[1035,17,964,17],[1035,18,964,18,"_a"],[1035,20,964,20],[1035,23,964,23],[1035,27,964,27],[1035,28,964,28,"_heartbeatsCache"],[1035,44,964,44],[1035,50,964,50],[1035,54,964,54],[1035,58,964,58,"_a"],[1035,60,964,60],[1035,65,964,60,"undefined"],[1035,74,964,71],[1035,77,964,71,"undefined"],[1035,86,964,71],[1035,89,964,83,"_a"],[1035,91,964,85],[1035,92,964,86,"heartbeats"],[1035,102,964,96],[1035,107,964,101],[1035,111,964,105],[1035,115,965,16],[1035,119,965,20],[1035,120,965,21,"_heartbeatsCache"],[1035,136,965,37],[1035,137,965,38,"heartbeats"],[1035,147,965,48],[1035,148,965,49,"length"],[1035,154,965,55],[1035,159,965,60],[1035,160,965,61],[1035,162,965,63],[1036,14,966,16],[1036,21,966,23],[1036,23,966,25],[1037,12,967,12],[1038,12,968,12],[1038,16,968,18,"date"],[1038,20,968,22],[1038,23,968,25,"getUTCDateString"],[1038,39,968,41],[1038,40,968,42],[1038,41,968,43],[1039,12,969,12],[1040,12,970,12],[1040,16,970,12,"_extractHeartbeatsFor"],[1040,37,970,12],[1040,40,970,56,"extractHeartbeatsForHeader"],[1040,66,970,82],[1040,67,970,83],[1040,71,970,87],[1040,72,970,88,"_heartbeatsCache"],[1040,88,970,104],[1040,89,970,105,"heartbeats"],[1040,99,970,115],[1040,100,970,116],[1041,14,970,20,"heartbeatsToSend"],[1041,30,970,36],[1041,33,970,36,"_extractHeartbeatsFor"],[1041,54,970,36],[1041,55,970,20,"heartbeatsToSend"],[1041,71,970,36],[1042,14,970,38,"unsentEntries"],[1042,27,970,51],[1042,30,970,51,"_extractHeartbeatsFor"],[1042,51,970,51],[1042,52,970,38,"unsentEntries"],[1042,65,970,51],[1043,12,971,12],[1043,16,971,18,"headerString"],[1043,28,971,30],[1043,31,971,33],[1043,35,971,33,"base64urlEncodeWithoutPadding"],[1043,70,971,62],[1043,72,971,63,"JSON"],[1043,76,971,67],[1043,77,971,68,"stringify"],[1043,86,971,77],[1043,87,971,78],[1044,14,971,80,"version"],[1044,21,971,87],[1044,23,971,89],[1044,24,971,90],[1045,14,971,92,"heartbeats"],[1045,24,971,102],[1045,26,971,104,"heartbeatsToSend"],[1046,12,971,121],[1046,13,971,122],[1046,14,971,123],[1046,15,971,124],[1047,12,972,12],[1048,12,973,12],[1048,16,973,16],[1048,17,973,17,"_heartbeatsCache"],[1048,33,973,33],[1048,34,973,34,"lastSentHeartbeatDate"],[1048,55,973,55],[1048,58,973,58,"date"],[1048,62,973,62],[1049,12,974,12],[1049,16,974,16,"unsentEntries"],[1049,29,974,29],[1049,30,974,30,"length"],[1049,36,974,36],[1049,39,974,39],[1049,40,974,40],[1049,42,974,42],[1050,14,975,16],[1051,14,976,16],[1051,18,976,20],[1051,19,976,21,"_heartbeatsCache"],[1051,35,976,37],[1051,36,976,38,"heartbeats"],[1051,46,976,48],[1051,49,976,51,"unsentEntries"],[1051,62,976,64],[1052,14,977,16],[1053,14,978,16],[1054,14,979,16],[1055,14,980,16],[1055,20,980,22],[1055,24,980,26],[1055,25,980,27,"_storage"],[1055,33,980,35],[1055,34,980,36,"overwrite"],[1055,43,980,45],[1055,44,980,46],[1055,48,980,50],[1055,49,980,51,"_heartbeatsCache"],[1055,65,980,67],[1055,66,980,68],[1056,12,981,12],[1056,13,981,13],[1056,19,982,17],[1057,14,983,16],[1057,18,983,20],[1057,19,983,21,"_heartbeatsCache"],[1057,35,983,37],[1057,36,983,38,"heartbeats"],[1057,46,983,48],[1057,49,983,51],[1057,51,983,53],[1058,14,984,16],[1059,14,985,16],[1059,19,985,21],[1059,23,985,25],[1059,24,985,26,"_storage"],[1059,32,985,34],[1059,33,985,35,"overwrite"],[1059,42,985,44],[1059,43,985,45],[1059,47,985,49],[1059,48,985,50,"_heartbeatsCache"],[1059,64,985,66],[1059,65,985,67],[1060,12,986,12],[1061,12,987,12],[1061,19,987,19,"headerString"],[1061,31,987,31],[1062,10,988,8],[1062,11,988,9],[1062,12,989,8],[1062,19,989,15,"e"],[1062,20,989,16],[1062,22,989,18],[1063,12,990,12,"logger"],[1063,18,990,18],[1063,19,990,19,"warn"],[1063,23,990,23],[1063,24,990,24,"e"],[1063,25,990,25],[1063,26,990,26],[1064,12,991,12],[1064,19,991,19],[1064,21,991,21],[1065,10,992,8],[1066,8,993,4],[1066,9,993,5],[1067,8,993,5],[1067,17,957,10,"getHeartbeatsHeader"],[1067,36,957,29,"getHeartbeatsHeader"],[1067,37,957,29],[1068,10,957,29],[1068,17,957,29,"_getHeartbeatsHeader"],[1068,37,957,29],[1068,38,957,29,"apply"],[1068,43,957,29],[1068,50,957,29,"arguments"],[1068,59,957,29],[1069,8,957,29],[1070,8,957,29],[1070,15,957,10,"getHeartbeatsHeader"],[1070,34,957,29],[1071,6,957,29],[1072,4,957,29],[1073,2,957,29],[1074,2,995,0],[1074,11,995,9,"getUTCDateString"],[1074,27,995,25,"getUTCDateString"],[1074,28,995,25],[1074,30,995,28],[1075,4,996,4],[1075,8,996,10,"today"],[1075,13,996,15],[1075,16,996,18],[1075,20,996,22,"Date"],[1075,24,996,26],[1075,25,996,27],[1075,26,996,28],[1076,4,997,4],[1077,4,998,4],[1077,11,998,11,"today"],[1077,16,998,16],[1077,17,998,17,"toISOString"],[1077,28,998,28],[1077,29,998,29],[1077,30,998,30],[1077,31,998,31,"substring"],[1077,40,998,40],[1077,41,998,41],[1077,42,998,42],[1077,44,998,44],[1077,46,998,46],[1077,47,998,47],[1078,2,999,0],[1079,2,1000,0],[1079,11,1000,9,"extractHeartbeatsForHeader"],[1079,37,1000,35,"extractHeartbeatsForHeader"],[1079,38,1000,36,"heartbeatsCache"],[1079,53,1000,51],[1079,55,1000,81],[1080,4,1000,81],[1080,8,1000,53,"maxSize"],[1080,15,1000,60],[1080,18,1000,60,"arguments"],[1080,27,1000,60],[1080,28,1000,60,"length"],[1080,34,1000,60],[1080,42,1000,60,"arguments"],[1080,51,1000,60],[1080,59,1000,60,"undefined"],[1080,68,1000,60],[1080,71,1000,60,"arguments"],[1080,80,1000,60],[1080,86,1000,63,"MAX_HEADER_BYTES"],[1080,102,1000,79],[1081,4,1001,4],[1082,4,1002,4],[1083,4,1003,4],[1083,8,1003,10,"heartbeatsToSend"],[1083,24,1003,26],[1083,27,1003,29],[1083,29,1003,31],[1084,4,1004,4],[1085,4,1005,4],[1085,8,1005,8,"unsentEntries"],[1085,21,1005,21],[1085,24,1005,24,"heartbeatsCache"],[1085,39,1005,39],[1085,40,1005,40,"slice"],[1085,45,1005,45],[1085,46,1005,46],[1085,47,1005,47],[1086,4,1005,48],[1086,8,1005,48,"_loop"],[1086,13,1005,48],[1086,25,1005,48,"_loop"],[1086,26,1005,48,"singleDateHeartbeat"],[1086,45,1005,48],[1086,47,1006,55],[1087,8,1007,8],[1088,8,1008,8],[1088,12,1008,14,"heartbeatEntry"],[1088,26,1008,28],[1088,29,1008,31,"heartbeatsToSend"],[1088,45,1008,47],[1088,46,1008,48,"find"],[1088,50,1008,52],[1088,51,1008,53,"hb"],[1088,53,1008,55],[1088,57,1008,59,"hb"],[1088,59,1008,61],[1088,60,1008,62,"agent"],[1088,65,1008,67],[1088,70,1008,72,"singleDateHeartbeat"],[1088,89,1008,91],[1088,90,1008,92,"agent"],[1088,95,1008,97],[1088,96,1008,98],[1089,8,1009,8],[1089,12,1009,12],[1089,13,1009,13,"heartbeatEntry"],[1089,27,1009,27],[1089,29,1009,29],[1090,10,1010,12],[1091,10,1011,12,"heartbeatsToSend"],[1091,26,1011,28],[1091,27,1011,29,"push"],[1091,31,1011,33],[1091,32,1011,34],[1092,12,1012,16,"agent"],[1092,17,1012,21],[1092,19,1012,23,"singleDateHeartbeat"],[1092,38,1012,42],[1092,39,1012,43,"agent"],[1092,44,1012,48],[1093,12,1013,16,"dates"],[1093,17,1013,21],[1093,19,1013,23],[1093,20,1013,24,"singleDateHeartbeat"],[1093,39,1013,43],[1093,40,1013,44,"date"],[1093,44,1013,48],[1094,10,1014,12],[1094,11,1014,13],[1094,12,1014,14],[1095,10,1015,12],[1095,14,1015,16,"countBytes"],[1095,24,1015,26],[1095,25,1015,27,"heartbeatsToSend"],[1095,41,1015,43],[1095,42,1015,44],[1095,45,1015,47,"maxSize"],[1095,52,1015,54],[1095,54,1015,56],[1096,12,1016,16],[1097,12,1017,16],[1098,12,1018,16,"heartbeatsToSend"],[1098,28,1018,32],[1098,29,1018,33,"pop"],[1098,32,1018,36],[1098,33,1018,37],[1098,34,1018,38],[1099,12,1018,39],[1100,10,1020,12],[1101,8,1021,8],[1101,9,1021,9],[1101,15,1022,13],[1102,10,1023,12,"heartbeatEntry"],[1102,24,1023,26],[1102,25,1023,27,"dates"],[1102,30,1023,32],[1102,31,1023,33,"push"],[1102,35,1023,37],[1102,36,1023,38,"singleDateHeartbeat"],[1102,55,1023,57],[1102,56,1023,58,"date"],[1102,60,1023,62],[1102,61,1023,63],[1103,10,1024,12],[1104,10,1025,12],[1105,10,1026,12],[1105,14,1026,16,"countBytes"],[1105,24,1026,26],[1105,25,1026,27,"heartbeatsToSend"],[1105,41,1026,43],[1105,42,1026,44],[1105,45,1026,47,"maxSize"],[1105,52,1026,54],[1105,54,1026,56],[1106,12,1027,16,"heartbeatEntry"],[1106,26,1027,30],[1106,27,1027,31,"dates"],[1106,32,1027,36],[1106,33,1027,37,"pop"],[1106,36,1027,40],[1106,37,1027,41],[1106,38,1027,42],[1107,12,1027,43],[1108,10,1029,12],[1109,8,1030,8],[1110,8,1031,8],[1111,8,1032,8],[1112,8,1033,8,"unsentEntries"],[1112,21,1033,21],[1112,24,1033,24,"unsentEntries"],[1112,37,1033,37],[1112,38,1033,38,"slice"],[1112,43,1033,43],[1112,44,1033,44],[1112,45,1033,45],[1112,46,1033,46],[1113,6,1034,4],[1113,7,1034,5],[1114,6,1034,5,"_ret"],[1114,10,1034,5],[1115,4,1006,4],[1115,9,1006,9],[1115,13,1006,15,"singleDateHeartbeat"],[1115,32,1006,34],[1115,36,1006,38,"heartbeatsCache"],[1115,51,1006,53],[1116,6,1006,53,"_ret"],[1116,10,1006,53],[1116,13,1006,53,"_loop"],[1116,18,1006,53],[1116,19,1006,53,"singleDateHeartbeat"],[1116,38,1006,53],[1117,6,1006,53],[1117,10,1006,53,"_ret"],[1117,14,1006,53],[1117,22,1019,16],[1118,4,1019,22],[1119,4,1035,4],[1119,11,1035,11],[1120,6,1036,8,"heartbeatsToSend"],[1120,22,1036,24],[1121,6,1037,8,"unsentEntries"],[1122,4,1038,4],[1122,5,1038,5],[1123,2,1039,0],[1124,2,1039,1],[1124,6,1040,6,"HeartbeatStorageImpl"],[1124,26,1040,26],[1125,4,1041,4],[1125,13,1041,4,"HeartbeatStorageImpl"],[1125,34,1041,16,"app"],[1125,37,1041,19],[1125,39,1041,21],[1126,6,1041,21],[1126,10,1041,21,"_classCallCheck2"],[1126,26,1041,21],[1126,27,1041,21,"default"],[1126,34,1041,21],[1126,42,1041,21,"HeartbeatStorageImpl"],[1126,62,1041,21],[1127,6,1042,8],[1127,10,1042,12],[1127,11,1042,13,"app"],[1127,14,1042,16],[1127,17,1042,19,"app"],[1127,20,1042,22],[1128,6,1043,8],[1128,10,1043,12],[1128,11,1043,13,"_canUseIndexedDBPromise"],[1128,34,1043,36],[1128,37,1043,39],[1128,41,1043,43],[1128,42,1043,44,"runIndexedDBEnvironmentCheck"],[1128,70,1043,72],[1128,71,1043,73],[1128,72,1043,74],[1129,4,1044,4],[1130,4,1044,5],[1130,15,1044,5,"_createClass2"],[1130,28,1044,5],[1130,29,1044,5,"default"],[1130,36,1044,5],[1130,38,1044,5,"HeartbeatStorageImpl"],[1130,58,1044,5],[1131,6,1044,5,"key"],[1131,9,1044,5],[1132,6,1044,5,"value"],[1132,11,1044,5],[1133,8,1044,5],[1133,12,1044,5,"_runIndexedDBEnvironmentCheck"],[1133,41,1044,5],[1133,48,1044,5,"_asyncToGenerator2"],[1133,66,1044,5],[1133,67,1044,5,"default"],[1133,74,1044,5],[1133,76,1045,4],[1133,89,1045,41],[1134,10,1046,8],[1134,14,1046,12],[1134,15,1046,13],[1134,19,1046,13,"isIndexedDBAvailable"],[1134,45,1046,33],[1134,47,1046,34],[1134,48,1046,35],[1134,50,1046,37],[1135,12,1047,12],[1135,19,1047,19],[1135,24,1047,24],[1136,10,1048,8],[1136,11,1048,9],[1136,17,1049,13],[1137,12,1050,12],[1137,19,1050,19],[1137,23,1050,19,"validateIndexedDBOpenable"],[1137,54,1050,44],[1137,56,1050,45],[1137,57,1050,46],[1137,58,1051,17,"then"],[1137,62,1051,21],[1137,63,1051,22],[1137,69,1051,28],[1137,73,1051,32],[1137,74,1051,33],[1137,75,1052,17,"catch"],[1137,80,1052,22],[1137,81,1052,23],[1137,87,1052,29],[1137,92,1052,34],[1137,93,1052,35],[1138,10,1053,8],[1139,8,1054,4],[1139,9,1054,5],[1140,8,1054,5],[1140,17,1045,10,"runIndexedDBEnvironmentCheck"],[1140,45,1045,38,"runIndexedDBEnvironmentCheck"],[1140,46,1045,38],[1141,10,1045,38],[1141,17,1045,38,"_runIndexedDBEnvironmentCheck"],[1141,46,1045,38],[1141,47,1045,38,"apply"],[1141,52,1045,38],[1141,59,1045,38,"arguments"],[1141,68,1045,38],[1142,8,1045,38],[1143,8,1045,38],[1143,15,1045,10,"runIndexedDBEnvironmentCheck"],[1143,43,1045,38],[1144,6,1045,38],[1145,6,1055,4],[1146,0,1056,0],[1147,0,1057,0],[1148,4,1055,4],[1149,6,1055,4,"key"],[1149,9,1055,4],[1150,6,1055,4,"value"],[1150,11,1055,4],[1151,8,1055,4],[1151,12,1055,4,"_read"],[1151,17,1055,4],[1151,24,1055,4,"_asyncToGenerator2"],[1151,42,1055,4],[1151,43,1055,4,"default"],[1151,50,1055,4],[1151,52,1058,4],[1151,65,1058,17],[1152,10,1059,8],[1152,14,1059,14,"canUseIndexedDB"],[1152,29,1059,29],[1152,38,1059,38],[1152,42,1059,42],[1152,43,1059,43,"_canUseIndexedDBPromise"],[1152,66,1059,66],[1153,10,1060,8],[1153,14,1060,12],[1153,15,1060,13,"canUseIndexedDB"],[1153,30,1060,28],[1153,32,1060,30],[1154,12,1061,12],[1154,19,1061,19],[1155,14,1061,21,"heartbeats"],[1155,24,1061,31],[1155,26,1061,33],[1156,12,1061,36],[1156,13,1061,37],[1157,10,1062,8],[1157,11,1062,9],[1157,17,1063,13],[1158,12,1064,12],[1158,16,1064,18,"idbHeartbeatObject"],[1158,34,1064,36],[1158,43,1064,45,"readHeartbeatsFromIndexedDB"],[1158,70,1064,72],[1158,71,1064,73],[1158,75,1064,77],[1158,76,1064,78,"app"],[1158,79,1064,81],[1158,80,1064,82],[1159,12,1065,12],[1159,16,1065,16,"idbHeartbeatObject"],[1159,34,1065,34],[1159,39,1065,39],[1159,43,1065,43],[1159,47,1065,47,"idbHeartbeatObject"],[1159,65,1065,65],[1159,70,1065,65,"undefined"],[1159,79,1065,76],[1159,82,1065,76,"undefined"],[1159,91,1065,76],[1159,94,1065,88,"idbHeartbeatObject"],[1159,112,1065,106],[1159,113,1065,107,"heartbeats"],[1159,123,1065,117],[1159,125,1065,119],[1160,14,1066,16],[1160,21,1066,23,"idbHeartbeatObject"],[1160,39,1066,41],[1161,12,1067,12],[1161,13,1067,13],[1161,19,1068,17],[1162,14,1069,16],[1162,21,1069,23],[1163,16,1069,25,"heartbeats"],[1163,26,1069,35],[1163,28,1069,37],[1164,14,1069,40],[1164,15,1069,41],[1165,12,1070,12],[1166,10,1071,8],[1167,8,1072,4],[1167,9,1072,5],[1168,8,1072,5],[1168,17,1058,10,"read"],[1168,21,1058,14,"read"],[1168,22,1058,14],[1169,10,1058,14],[1169,17,1058,14,"_read"],[1169,22,1058,14],[1169,23,1058,14,"apply"],[1169,28,1058,14],[1169,35,1058,14,"arguments"],[1169,44,1058,14],[1170,8,1058,14],[1171,8,1058,14],[1171,15,1058,10,"read"],[1171,19,1058,14],[1172,6,1058,14],[1172,10,1073,4],[1173,6,1073,4],[1174,4,1073,4],[1175,6,1073,4,"key"],[1175,9,1073,4],[1176,6,1073,4,"value"],[1176,11,1073,4],[1177,8,1073,4],[1177,12,1073,4,"_overwrite"],[1177,22,1073,4],[1177,29,1073,4,"_asyncToGenerator2"],[1177,47,1073,4],[1177,48,1073,4,"default"],[1177,55,1073,4],[1177,57,1074,4],[1177,68,1074,20,"heartbeatsObject"],[1177,84,1074,36],[1177,86,1074,38],[1178,10,1075,8],[1178,14,1075,12,"_a"],[1178,16,1075,14],[1179,10,1076,8],[1179,14,1076,14,"canUseIndexedDB"],[1179,29,1076,29],[1179,38,1076,38],[1179,42,1076,42],[1179,43,1076,43,"_canUseIndexedDBPromise"],[1179,66,1076,66],[1180,10,1077,8],[1180,14,1077,12],[1180,15,1077,13,"canUseIndexedDB"],[1180,30,1077,28],[1180,32,1077,30],[1181,12,1078,12],[1182,10,1079,8],[1182,11,1079,9],[1182,17,1080,13],[1183,12,1081,12],[1183,16,1081,18,"existingHeartbeatsObject"],[1183,40,1081,42],[1183,49,1081,51],[1183,53,1081,55],[1183,54,1081,56,"read"],[1183,58,1081,60],[1183,59,1081,61],[1183,60,1081,62],[1184,12,1082,12],[1184,19,1082,19,"writeHeartbeatsToIndexedDB"],[1184,45,1082,45],[1184,46,1082,46],[1184,50,1082,50],[1184,51,1082,51,"app"],[1184,54,1082,54],[1184,56,1082,56],[1185,14,1083,16,"lastSentHeartbeatDate"],[1185,35,1083,37],[1185,37,1083,39],[1185,38,1083,40,"_a"],[1185,40,1083,42],[1185,43,1083,45,"heartbeatsObject"],[1185,59,1083,61],[1185,60,1083,62,"lastSentHeartbeatDate"],[1185,81,1083,83],[1185,87,1083,89],[1185,91,1083,93],[1185,95,1083,97,"_a"],[1185,97,1083,99],[1185,102,1083,99,"undefined"],[1185,111,1083,110],[1185,114,1083,113,"_a"],[1185,116,1083,115],[1185,119,1083,118,"existingHeartbeatsObject"],[1185,143,1083,142],[1185,144,1083,143,"lastSentHeartbeatDate"],[1185,165,1083,164],[1186,14,1084,16,"heartbeats"],[1186,24,1084,26],[1186,26,1084,28,"heartbeatsObject"],[1186,42,1084,44],[1186,43,1084,45,"heartbeats"],[1187,12,1085,12],[1187,13,1085,13],[1187,14,1085,14],[1188,10,1086,8],[1189,8,1087,4],[1189,9,1087,5],[1190,8,1087,5],[1190,17,1074,10,"overwrite"],[1190,26,1074,19,"overwrite"],[1190,27,1074,19,"_x5"],[1190,30,1074,19],[1191,10,1074,19],[1191,17,1074,19,"_overwrite"],[1191,27,1074,19],[1191,28,1074,19,"apply"],[1191,33,1074,19],[1191,40,1074,19,"arguments"],[1191,49,1074,19],[1192,8,1074,19],[1193,8,1074,19],[1193,15,1074,10,"overwrite"],[1193,24,1074,19],[1194,6,1074,19],[1194,10,1088,4],[1195,4,1088,4],[1196,6,1088,4,"key"],[1196,9,1088,4],[1197,6,1088,4,"value"],[1197,11,1088,4],[1198,8,1088,4],[1198,12,1088,4,"_add"],[1198,16,1088,4],[1198,23,1088,4,"_asyncToGenerator2"],[1198,41,1088,4],[1198,42,1088,4,"default"],[1198,49,1088,4],[1198,51,1089,4],[1198,62,1089,14,"heartbeatsObject"],[1198,78,1089,30],[1198,80,1089,32],[1199,10,1090,8],[1199,14,1090,12,"_a"],[1199,16,1090,14],[1200,10,1091,8],[1200,14,1091,14,"canUseIndexedDB"],[1200,29,1091,29],[1200,38,1091,38],[1200,42,1091,42],[1200,43,1091,43,"_canUseIndexedDBPromise"],[1200,66,1091,66],[1201,10,1092,8],[1201,14,1092,12],[1201,15,1092,13,"canUseIndexedDB"],[1201,30,1092,28],[1201,32,1092,30],[1202,12,1093,12],[1203,10,1094,8],[1203,11,1094,9],[1203,17,1095,13],[1204,12,1096,12],[1204,16,1096,18,"existingHeartbeatsObject"],[1204,40,1096,42],[1204,49,1096,51],[1204,53,1096,55],[1204,54,1096,56,"read"],[1204,58,1096,60],[1204,59,1096,61],[1204,60,1096,62],[1205,12,1097,12],[1205,19,1097,19,"writeHeartbeatsToIndexedDB"],[1205,45,1097,45],[1205,46,1097,46],[1205,50,1097,50],[1205,51,1097,51,"app"],[1205,54,1097,54],[1205,56,1097,56],[1206,14,1098,16,"lastSentHeartbeatDate"],[1206,35,1098,37],[1206,37,1098,39],[1206,38,1098,40,"_a"],[1206,40,1098,42],[1206,43,1098,45,"heartbeatsObject"],[1206,59,1098,61],[1206,60,1098,62,"lastSentHeartbeatDate"],[1206,81,1098,83],[1206,87,1098,89],[1206,91,1098,93],[1206,95,1098,97,"_a"],[1206,97,1098,99],[1206,102,1098,99,"undefined"],[1206,111,1098,110],[1206,114,1098,113,"_a"],[1206,116,1098,115],[1206,119,1098,118,"existingHeartbeatsObject"],[1206,143,1098,142],[1206,144,1098,143,"lastSentHeartbeatDate"],[1206,165,1098,164],[1207,14,1099,16,"heartbeats"],[1207,24,1099,26],[1207,26,1099,28],[1207,27,1100,20],[1207,30,1100,23,"existingHeartbeatsObject"],[1207,54,1100,47],[1207,55,1100,48,"heartbeats"],[1207,65,1100,58],[1207,67,1101,20],[1207,70,1101,23,"heartbeatsObject"],[1207,86,1101,39],[1207,87,1101,40,"heartbeats"],[1207,97,1101,50],[1208,12,1103,12],[1208,13,1103,13],[1208,14,1103,14],[1209,10,1104,8],[1210,8,1105,4],[1210,9,1105,5],[1211,8,1105,5],[1211,17,1089,10,"add"],[1211,20,1089,13,"add"],[1211,21,1089,13,"_x6"],[1211,24,1089,13],[1212,10,1089,13],[1212,17,1089,13,"_add"],[1212,21,1089,13],[1212,22,1089,13,"apply"],[1212,27,1089,13],[1212,34,1089,13,"arguments"],[1212,43,1089,13],[1213,8,1089,13],[1214,8,1089,13],[1214,15,1089,10,"add"],[1214,18,1089,13],[1215,6,1089,13],[1216,4,1089,13],[1217,2,1089,13],[1218,2,1107,0],[1219,0,1108,0],[1220,0,1109,0],[1221,0,1110,0],[1222,0,1111,0],[1223,2,1112,0],[1223,11,1112,9,"countBytes"],[1223,21,1112,19,"countBytes"],[1223,22,1112,20,"heartbeatsCache"],[1223,37,1112,35],[1223,39,1112,37],[1224,4,1113,4],[1225,4,1114,4],[1225,11,1114,11],[1225,15,1114,11,"base64urlEncodeWithoutPadding"],[1225,50,1114,40],[1226,4,1115,4],[1227,4,1116,4,"JSON"],[1227,8,1116,8],[1227,9,1116,9,"stringify"],[1227,18,1116,18],[1227,19,1116,19],[1228,6,1116,21,"version"],[1228,13,1116,28],[1228,15,1116,30],[1228,16,1116,31],[1229,6,1116,33,"heartbeats"],[1229,16,1116,43],[1229,18,1116,45,"heartbeatsCache"],[1230,4,1116,61],[1230,5,1116,62],[1230,6,1116,63],[1230,7,1116,64],[1230,8,1116,65,"length"],[1230,14,1116,71],[1231,2,1117,0],[1233,2,1119,0],[1234,0,1120,0],[1235,0,1121,0],[1236,0,1122,0],[1237,0,1123,0],[1238,0,1124,0],[1239,0,1125,0],[1240,0,1126,0],[1241,0,1127,0],[1242,0,1128,0],[1243,0,1129,0],[1244,0,1130,0],[1245,0,1131,0],[1246,0,1132,0],[1247,0,1133,0],[1248,0,1134,0],[1249,2,1135,0],[1249,11,1135,9,"registerCoreComponents"],[1249,33,1135,31,"registerCoreComponents"],[1249,34,1135,32,"variant"],[1249,41,1135,39],[1249,43,1135,41],[1250,4,1136,4,"_registerComponent"],[1250,22,1136,22],[1250,23,1136,23],[1250,27,1136,27,"Component"],[1250,47,1136,36],[1250,48,1136,37],[1250,65,1136,54],[1250,67,1136,56,"container"],[1250,76,1136,65],[1250,80,1136,69],[1250,84,1136,73,"PlatformLoggerServiceImpl"],[1250,109,1136,98],[1250,110,1136,99,"container"],[1250,119,1136,108],[1250,120,1136,109],[1250,122,1136,111],[1250,131,1136,120],[1250,132,1136,121],[1250,159,1136,148],[1250,160,1136,149],[1250,161,1136,150],[1251,4,1137,4,"_registerComponent"],[1251,22,1137,22],[1251,23,1137,23],[1251,27,1137,27,"Component"],[1251,47,1137,36],[1251,48,1137,37],[1251,59,1137,48],[1251,61,1137,50,"container"],[1251,70,1137,59],[1251,74,1137,63],[1251,78,1137,67,"HeartbeatServiceImpl"],[1251,98,1137,87],[1251,99,1137,88,"container"],[1251,108,1137,97],[1251,109,1137,98],[1251,111,1137,100],[1251,120,1137,109],[1251,121,1137,110],[1251,148,1137,137],[1251,149,1137,138],[1251,150,1137,139],[1252,4,1138,4],[1253,4,1139,4,"registerVersion"],[1253,19,1139,19],[1253,20,1139,20,"name$q"],[1253,26,1139,26],[1253,28,1139,28,"version$1"],[1253,37,1139,37],[1253,39,1139,39,"variant"],[1253,46,1139,46],[1253,47,1139,47],[1254,4,1140,4],[1255,4,1141,4,"registerVersion"],[1255,19,1141,19],[1255,20,1141,20,"name$q"],[1255,26,1141,26],[1255,28,1141,28,"version$1"],[1255,37,1141,37],[1255,39,1141,39],[1255,48,1141,48],[1255,49,1141,49],[1256,4,1142,4],[1257,4,1143,4,"registerVersion"],[1257,19,1143,19],[1257,20,1143,20],[1257,29,1143,29],[1257,31,1143,31],[1257,33,1143,33],[1257,34,1143,34],[1258,2,1144,0],[1260,2,1146,0],[1261,0,1147,0],[1262,0,1148,0],[1263,0,1149,0],[1264,0,1150,0],[1265,0,1151,0],[1266,2,1152,0,"registerCoreComponents"],[1266,24,1152,22],[1266,25,1152,23],[1266,27,1152,25],[1266,28,1152,26],[1267,0,1152,27],[1267,3]],"functionMap":{"names":["<global>","PlatformLoggerServiceImpl","PlatformLoggerServiceImpl#constructor","PlatformLoggerServiceImpl#getPlatformInfoString","providers.map$argument_0","providers.map.filter$argument_0","isVersionServiceProvider","_addComponent","_addOrOverwriteComponent","_registerComponent","_getProvider","_removeServiceInstance","_isFirebaseApp","_isFirebaseServerApp","_clearComponents","FirebaseAppImpl","FirebaseAppImpl#constructor","Component$argument_1","FirebaseAppImpl#get__automaticDataCollectionEnabled","FirebaseAppImpl#set__automaticDataCollectionEnabled","FirebaseAppImpl#get__name","FirebaseAppImpl#get__options","FirebaseAppImpl#get__config","FirebaseAppImpl#get__container","FirebaseAppImpl#get__isDeleted","FirebaseAppImpl#set__isDeleted","FirebaseAppImpl#checkDestroyed","FirebaseServerAppImpl","FirebaseServerAppImpl#constructor","FinalizationRegistry$argument_0","FirebaseServerAppImpl#toJSON","FirebaseServerAppImpl#get__refCount","FirebaseServerAppImpl#incRefCount","FirebaseServerAppImpl#decRefCount","FirebaseServerAppImpl#automaticCleanup","FirebaseServerAppImpl#get__settings","FirebaseServerAppImpl#checkDestroyed","initializeApp","initializeServerApp","hashCode","reduce$argument_0","getApp","getApps","deleteApp","app.container.getProviders.map$argument_0","registerVersion","onLog","setLogLevel","getDbPromise","openDB$argument_2.upgrade","openDB._catch$argument_0","readHeartbeatsFromIndexedDB","writeHeartbeatsToIndexedDB","computeKey","HeartbeatServiceImpl","HeartbeatServiceImpl#constructor","_storage.read.then$argument_0","HeartbeatServiceImpl#triggerHeartbeat","_heartbeatsCache.heartbeats.some$argument_0","_heartbeatsCache.heartbeats.filter$argument_0","HeartbeatServiceImpl#getHeartbeatsHeader","getUTCDateString","extractHeartbeatsForHeader","heartbeatsToSend.find$argument_0","HeartbeatStorageImpl","HeartbeatStorageImpl#constructor","HeartbeatStorageImpl#runIndexedDBEnvironmentCheck","validateIndexedDBOpenable.then$argument_0","validateIndexedDBOpenable.then._catch$argument_0","HeartbeatStorageImpl#read","HeartbeatStorageImpl#overwrite","HeartbeatStorageImpl#add","countBytes","registerCoreComponents"],"mappings":"AAA;ACsB;ICC;KDE;IEG;iBCK;SDQ;oBEC,sBF;KFE;CDC;AMS;CNG;AOqK;CPO;AQK;CRE;ASQ;CTe;AUU;CVQ;AWS;CXE;AYS;CZE;AaS;CbE;AcM;CdE;AesD;ICC;yDCQ,UD;KDC;IGC;KHG;IIC;KJG;IKC;KLG;IMC;KNG;IOC;KPG;IQC;KRE;ISC;KTE;IUC;KVE;IWK;KXI;CfC;A2BkB;ICC;kECsB;aDE;KDS;IGC;KHE;IIC;KJE;IKG;KLQ;IME;KNK;IOI;KPE;IQC;KRG;ISK;KTI;C3BC;AqCwB;CrCmC;AsCC;qBCsB;6BCC,wDD;KDC;CtCmB;AyC8B;CzCS;A0CK;C1CE;A2CkB;iBCiB,6BD;C3CG;A6CS;2D5B0B,4B4B;C7CC;A8CQ;C9CK;A+CU;C/CE;AgDsB;qBCG;aDkB;iBEC;SFI;ChDG;AmDC;CnDqB;AoDC;CpDmB;AqDC;CrDE;AsDqB;ICC;iECc;SDG;KDC;IGQ;sDCoB,wDD;wDES;iBFI;KHM;IMQ;KNoC;CtDC;A6DC;C7DI;A8DC;qDCQ,4CD;C9D+B;AgEC;ICC;KDG;IEC;sBCM,UD;uBEC,WF;KFE;IKI;KLc;IME;KNa;IOE;KPgB;ChEC;AwEM;CxEK;AyEkB;wDxDC,qDwD;kDxDC,gDwD;CzEO"}},"type":"js/module"}]}